unit Word_TLB;

{$IFDEF FPC}
  {$MODE Delphi}
{$ENDIF}

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 17244 $
// File generated on 8/1/2014 8:41:59 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Program Files (x86)\Microsoft Office\Office14\MSWORD.OLB (1)
// LIBID: {00020905-0000-0000-C000-000000000046}
// LCID: 0
// Helpfile: C:\Program Files (x86)\Microsoft Office\Office14\VBAWD10.CHM
// HelpString: Microsoft Word 14.0 Object Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
//   (2) v2.5 Office, (C:\Program Files (x86)\Common Files\Microsoft Shared\OFFICE14\MSO.DLL)
//   (3) v5.3 VBIDE, (C:\Program Files (x86)\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB)
// Errors:
//   Hint: Symbol 'Range' renamed to 'WordRange'
//   Hint: Symbol 'Selection' renamed to 'WordSelection'
//   Hint: Symbol 'Global' renamed to 'WordGlobal'
//   Hint: Symbol 'Application' renamed to 'WordApplication'
//   Hint: Symbol 'Document' renamed to 'WordDocument'
//   Hint: Symbol 'Font' renamed to 'WordFont'
//   Hint: Symbol 'ParagraphFormat' renamed to 'WordParagraphFormat'
//   Hint: Symbol 'OLEControl' renamed to 'WordOLEControl'
//   Hint: Symbol 'LetterContent' renamed to 'WordLetterContent'
//   Hint: Enum Member 'emptyenum' of 'WdCharacterCaseHID' changed to 'emptyenum_'
//   Hint: Enum Member 'emptyenum' of 'WdParagraphAlignmentHID' changed to 'emptyenum__'
//   Hint: Enum Member 'emptyenum' of 'WdListNumberStyleHID' changed to 'emptyenum___'
//   Hint: Enum Member 'emptyenum' of 'WdNoteNumberStyleHID' changed to 'emptyenum____'
//   Hint: Enum Member 'emptyenum' of 'WdCaptionNumberStyleHID' changed to 'emptyenum_____'
//   Hint: Enum Member 'emptyenum' of 'WdPageNumberStyleHID' changed to 'emptyenum______'
//   Hint: Enum Member 'emptyenum' of 'WdStatisticHID' changed to 'emptyenum_______'
//   Hint: Enum Member 'emptyenum' of 'WdTabLeaderHID' changed to 'emptyenum________'
//   Hint: Enum Member 'emptyenum' of 'WdMeasurementUnitsHID' changed to 'emptyenum_________'
//   Hint: Enum Member 'emptyenum' of 'WdSortFieldTypeHID' changed to 'emptyenum__________'
//   Hint: Enum Member 'emptyenum' of 'WdWordDialogHID' changed to 'emptyenum___________'
//   Hint: Enum Member 'emptyenum' of 'WdHelpTypeHID' changed to 'emptyenum____________'
//   Hint: Enum Member 'emptyenum' of 'WdDictionaryTypeHID' changed to 'emptyenum_____________'
//   Hint: Enum Member 'emptyenum' of 'WdTextOrientationHID' changed to 'emptyenum______________'
//   Hint: Symbol 'System' renamed to 'System_'
//   Hint: Parameter 'Object' of _Application.IsObjectValid changed to 'Object_'
//   Hint: Parameter 'To' of _Application.PrintOutOld changed to 'To_'
//   Hint: Member 'Repeat' of '_Application' changed to 'Repeat_'
//   Hint: Parameter 'Object' of _Application.OrganizerCopy changed to 'Object_'
//   Hint: Parameter 'Object' of _Application.OrganizerDelete changed to 'Object_'
//   Hint: Parameter 'Object' of _Application.OrganizerRename changed to 'Object_'
//   Hint: Parameter 'String' of _Application.CheckGrammar changed to 'String_'
//   Hint: Parameter 'String' of _Application.CleanString changed to 'String_'
//   Hint: Parameter 'To' of _Application.PrintOut2000 changed to 'To_'
//   Hint: Parameter 'To' of _Application.PrintOut changed to 'To_'
//   Hint: Symbol 'System' renamed to 'System_'
//   Hint: Parameter 'Object' of _Global.IsObjectValid changed to 'Object_'
//   Hint: Member 'Repeat' of '_Global' changed to 'Repeat_'
//   Hint: Parameter 'String' of _Global.CleanString changed to 'String_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of _Document.Compatibility changed to 'Type_'
//   Hint: Parameter 'Type' of _Document.Compatibility changed to 'Type_'
//   Hint: Parameter 'To' of _Document.PrintOutOld changed to 'To_'
//   Hint: Parameter 'End' of _Document.Range changed to 'End_'
//   Hint: Member 'GoTo' of '_Document' changed to 'GoTo_'
//   Hint: Parameter 'Type' of _Document.Protect2002 changed to 'Type_'
//   Hint: Parameter 'Type' of _Document.EditionOptions changed to 'Type_'
//   Hint: Parameter 'To' of _Document.PrintOut2000 changed to 'To_'
//   Hint: Parameter 'To' of _Document.PrintOut changed to 'To_'
//   Hint: Parameter 'Type' of _Document.Protect changed to 'Type_'
//   Hint: Parameter 'To' of _Document.ExportAsFixedFormat changed to 'To_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'Bookmark' changed to 'End_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'To' of Window.PrintOutOld changed to 'To_'
//   Hint: Parameter 'To' of Window.PrintOut2000 changed to 'To_'
//   Hint: Parameter 'To' of Window.PrintOut changed to 'To_'
//   Hint: Member 'End' of 'Range' changed to 'End_'
//   Hint: Member 'Case' of 'Range' changed to 'Case_'
//   Hint: Parameter 'Type' of Range.Information changed to 'Type_'
//   Hint: Parameter 'End' of Range.SetRange changed to 'End_'
//   Hint: Parameter 'Unit' of Range.Next changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.Previous changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.StartOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.EndOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.Move changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.MoveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.MoveEnd changed to 'Unit_'
//   Hint: Parameter 'Type' of Range.InsertBreak changed to 'Type_'
//   Hint: Parameter 'Unit' of Range.Delete changed to 'Unit_'
//   Hint: Parameter 'Unit' of Range.Expand changed to 'Unit_'
//   Hint: Parameter 'Label' of Range.InsertCaptionXP changed to 'Label_'
//   Hint: Member 'GoTo' of 'Range' changed to 'GoTo_'
//   Hint: Parameter 'To' of Range.InsertDatabase changed to 'To_'
//   Hint: Parameter 'Raise' of Range.PhoneticGuide changed to 'Raise_'
//   Hint: Parameter 'Type' of Range.PasteAndFormat changed to 'Type_'
//   Hint: Parameter 'Label' of Range.InsertCaption changed to 'Label_'
//   Hint: Member 'Label' of 'OLEFormat' changed to 'Label_'
//   Hint: Member 'Object' of 'OLEFormat' changed to 'Object_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Fields.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Styles.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of FormFields.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of TextInput.EditType changed to 'Type_'
//   Hint: Parameter 'Type' of MailMerge.UseAddressBook changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'Selection' changed to 'End_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Selection.Information changed to 'Type_'
//   Hint: Parameter 'End' of Selection.SetRange changed to 'End_'
//   Hint: Parameter 'Unit' of Selection.Next changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.Previous changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.StartOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.EndOf changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.Move changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveEnd changed to 'Unit_'
//   Hint: Parameter 'Type' of Selection.InsertBreak changed to 'Type_'
//   Hint: Parameter 'Unit' of Selection.Delete changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.Expand changed to 'Unit_'
//   Hint: Parameter 'Label' of Selection.InsertCaptionXP changed to 'Label_'
//   Hint: Member 'GoTo' of 'Selection' changed to 'GoTo_'
//   Hint: Parameter 'Unit' of Selection.MoveLeft changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveRight changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveUp changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.MoveDown changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.HomeKey changed to 'Unit_'
//   Hint: Parameter 'Unit' of Selection.EndKey changed to 'Unit_'
//   Hint: Parameter 'Type' of Selection.PasteAndFormat changed to 'Type_'
//   Hint: Parameter 'Label' of Selection.InsertCaption changed to 'Label_'
//   Hint: Parameter 'Type' of Indexes.AddOld changed to 'Type_'
//   Hint: Parameter 'Type' of Indexes.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Protected' of 'KeyBinding' changed to 'Protected_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Shapes.AddCallout changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddConnector changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddShape changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddDiagram changed to 'Type_'
//   Hint: Parameter 'Type' of Shapes.AddChart changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of InlineShapes.AddChart changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Diagram.Convert changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of CanvasShapes.AddCallout changed to 'Type_'
//   Hint: Parameter 'Type' of CanvasShapes.AddConnector changed to 'Type_'
//   Hint: Parameter 'Type' of CanvasShapes.AddShape changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of OMathFunctions.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of ContentControls.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of BuildingBlockEntries.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Chart.ApplyDataLabels changed to 'Type_'
//   Hint: Parameter 'Type' of Chart.Axes changed to 'Type_'
//   Hint: Parameter 'Type' of Chart.Paste changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Series.ErrorBar changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Series.ApplyDataLabels changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Trendlines.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of Point.ApplyDataLabels changed to 'Type_'
//   Hint: Parameter 'Type' of Axes.Item changed to 'Type_'
//   Hint: Parameter 'Type' of Axes._Default changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'String' of ChartCharacters.Insert changed to 'String_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of CoAuthLocks.Add changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}
interface

uses
{$IFnDEF FPC}
  Windows,
{$ELSE}
  LCLIntf, LCLType, LMessages,
{$ENDIF}
  ActiveX, Classes, Graphics, Office_TLB, OleServer, StdVCL, Variants,
VBIDE_TLB;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  WordMajorVersion = 8;
  WordMinorVersion = 5;

  LIBID_Word: TGUID = '{00020905-0000-0000-C000-000000000046}';

  IID__Application: TGUID = '{00020970-0000-0000-C000-000000000046}';
  IID__Global: TGUID = '{000209B9-0000-0000-C000-000000000046}';
  IID_FontNames: TGUID = '{0002096F-0000-0000-C000-000000000046}';
  IID_Languages: TGUID = '{0002096E-0000-0000-C000-000000000046}';
  IID_Language: TGUID = '{0002096D-0000-0000-C000-000000000046}';
  IID_Documents: TGUID = '{0002096C-0000-0000-C000-000000000046}';
  IID__Document: TGUID = '{0002096B-0000-0000-C000-000000000046}';
  IID_Template: TGUID = '{0002096A-0000-0000-C000-000000000046}';
  IID_Templates: TGUID = '{000209A2-0000-0000-C000-000000000046}';
  IID_RoutingSlip: TGUID = '{00020969-0000-0000-C000-000000000046}';
  IID_Bookmark: TGUID = '{00020968-0000-0000-C000-000000000046}';
  IID_Bookmarks: TGUID = '{00020967-0000-0000-C000-000000000046}';
  IID_Variable: TGUID = '{00020966-0000-0000-C000-000000000046}';
  IID_Variables: TGUID = '{00020965-0000-0000-C000-000000000046}';
  IID_RecentFile: TGUID = '{00020964-0000-0000-C000-000000000046}';
  IID_RecentFiles: TGUID = '{00020963-0000-0000-C000-000000000046}';
  IID_Window: TGUID = '{00020962-0000-0000-C000-000000000046}';
  IID_Windows: TGUID = '{00020961-0000-0000-C000-000000000046}';
  IID_Pane: TGUID = '{00020960-0000-0000-C000-000000000046}';
  IID_Panes: TGUID = '{0002095F-0000-0000-C000-000000000046}';
  IID_WordRange: TGUID = '{0002095E-0000-0000-C000-000000000046}';
  IID_ListFormat: TGUID = '{000209C0-0000-0000-C000-000000000046}';
  IID_Find: TGUID = '{000209B0-0000-0000-C000-000000000046}';
  IID_Replacement: TGUID = '{000209B1-0000-0000-C000-000000000046}';
  IID_Characters: TGUID = '{0002095D-0000-0000-C000-000000000046}';
  IID_Words: TGUID = '{0002095C-0000-0000-C000-000000000046}';
  IID_Sentences: TGUID = '{0002095B-0000-0000-C000-000000000046}';
  IID_Sections: TGUID = '{0002095A-0000-0000-C000-000000000046}';
  IID_Section: TGUID = '{00020959-0000-0000-C000-000000000046}';
  IID_Paragraphs: TGUID = '{00020958-0000-0000-C000-000000000046}';
  IID_Paragraph: TGUID = '{00020957-0000-0000-C000-000000000046}';
  IID_DropCap: TGUID = '{00020956-0000-0000-C000-000000000046}';
  IID_TabStops: TGUID = '{00020955-0000-0000-C000-000000000046}';
  IID_TabStop: TGUID = '{00020954-0000-0000-C000-000000000046}';
  IID__ParagraphFormat: TGUID = '{00020953-0000-0000-C000-000000000046}';
  IID__Font: TGUID = '{00020952-0000-0000-C000-000000000046}';
  IID_Table: TGUID = '{00020951-0000-0000-C000-000000000046}';
  IID_Row: TGUID = '{00020950-0000-0000-C000-000000000046}';
  IID_Column: TGUID = '{0002094F-0000-0000-C000-000000000046}';
  IID_Cell: TGUID = '{0002094E-0000-0000-C000-000000000046}';
  IID_Tables: TGUID = '{0002094D-0000-0000-C000-000000000046}';
  IID_Rows: TGUID = '{0002094C-0000-0000-C000-000000000046}';
  IID_Columns: TGUID = '{0002094B-0000-0000-C000-000000000046}';
  IID_Cells: TGUID = '{0002094A-0000-0000-C000-000000000046}';
  IID_AutoCorrect: TGUID = '{00020949-0000-0000-C000-000000000046}';
  IID_AutoCorrectEntries: TGUID = '{00020948-0000-0000-C000-000000000046}';
  IID_AutoCorrectEntry: TGUID = '{00020947-0000-0000-C000-000000000046}';
  IID_FirstLetterExceptions: TGUID = '{00020946-0000-0000-C000-000000000046}';
  IID_FirstLetterException: TGUID = '{00020945-0000-0000-C000-000000000046}';
  IID_TwoInitialCapsExceptions: TGUID = '{00020944-0000-0000-C000-000000000046}';
  IID_TwoInitialCapsException: TGUID = '{00020943-0000-0000-C000-000000000046}';
  IID_Footnotes: TGUID = '{00020942-0000-0000-C000-000000000046}';
  IID_Endnotes: TGUID = '{00020941-0000-0000-C000-000000000046}';
  IID_Comments: TGUID = '{00020940-0000-0000-C000-000000000046}';
  IID_Footnote: TGUID = '{0002093F-0000-0000-C000-000000000046}';
  IID_Endnote: TGUID = '{0002093E-0000-0000-C000-000000000046}';
  IID_Comment: TGUID = '{0002093D-0000-0000-C000-000000000046}';
  IID_Borders: TGUID = '{0002093C-0000-0000-C000-000000000046}';
  IID_Border: TGUID = '{0002093B-0000-0000-C000-000000000046}';
  IID_Shading: TGUID = '{0002093A-0000-0000-C000-000000000046}';
  IID_TextRetrievalMode: TGUID = '{00020939-0000-0000-C000-000000000046}';
  IID_AutoTextEntries: TGUID = '{00020937-0000-0000-C000-000000000046}';
  IID_AutoTextEntry: TGUID = '{00020936-0000-0000-C000-000000000046}';
  IID_System: TGUID = '{00020935-0000-0000-C000-000000000046}';
  IID_OLEFormat: TGUID = '{00020933-0000-0000-C000-000000000046}';
  IID_LinkFormat: TGUID = '{00020931-0000-0000-C000-000000000046}';
  IID__OLEControl: TGUID = '{000209A4-0000-0000-C000-000000000046}';
  IID_Fields: TGUID = '{00020930-0000-0000-C000-000000000046}';
  IID_Field: TGUID = '{0002092F-0000-0000-C000-000000000046}';
  IID_Browser: TGUID = '{0002092E-0000-0000-C000-000000000046}';
  IID_Styles: TGUID = '{0002092D-0000-0000-C000-000000000046}';
  IID_Style: TGUID = '{0002092C-0000-0000-C000-000000000046}';
  IID_Frames: TGUID = '{0002092B-0000-0000-C000-000000000046}';
  IID_Frame: TGUID = '{0002092A-0000-0000-C000-000000000046}';
  IID_FormFields: TGUID = '{00020929-0000-0000-C000-000000000046}';
  IID_FormField: TGUID = '{00020928-0000-0000-C000-000000000046}';
  IID_TextInput: TGUID = '{00020927-0000-0000-C000-000000000046}';
  IID_CheckBox: TGUID = '{00020926-0000-0000-C000-000000000046}';
  IID_DropDown: TGUID = '{00020925-0000-0000-C000-000000000046}';
  IID_ListEntries: TGUID = '{00020924-0000-0000-C000-000000000046}';
  IID_ListEntry: TGUID = '{00020923-0000-0000-C000-000000000046}';
  IID_TablesOfFigures: TGUID = '{00020922-0000-0000-C000-000000000046}';
  IID_TableOfFigures: TGUID = '{00020921-0000-0000-C000-000000000046}';
  IID_MailMerge: TGUID = '{00020920-0000-0000-C000-000000000046}';
  IID_MailMergeFields: TGUID = '{0002091F-0000-0000-C000-000000000046}';
  IID_MailMergeField: TGUID = '{0002091E-0000-0000-C000-000000000046}';
  IID_MailMergeDataSource: TGUID = '{0002091D-0000-0000-C000-000000000046}';
  IID_MailMergeFieldNames: TGUID = '{0002091C-0000-0000-C000-000000000046}';
  IID_MailMergeFieldName: TGUID = '{0002091B-0000-0000-C000-000000000046}';
  IID_MailMergeDataFields: TGUID = '{0002091A-0000-0000-C000-000000000046}';
  IID_MailMergeDataField: TGUID = '{00020919-0000-0000-C000-000000000046}';
  IID_Envelope: TGUID = '{00020918-0000-0000-C000-000000000046}';
  IID_MailingLabel: TGUID = '{00020917-0000-0000-C000-000000000046}';
  IID_CustomLabels: TGUID = '{00020916-0000-0000-C000-000000000046}';
  IID_CustomLabel: TGUID = '{00020915-0000-0000-C000-000000000046}';
  IID_TablesOfContents: TGUID = '{00020914-0000-0000-C000-000000000046}';
  IID_TableOfContents: TGUID = '{00020913-0000-0000-C000-000000000046}';
  IID_TablesOfAuthorities: TGUID = '{00020912-0000-0000-C000-000000000046}';
  IID_TableOfAuthorities: TGUID = '{00020911-0000-0000-C000-000000000046}';
  IID_Dialogs: TGUID = '{00020910-0000-0000-C000-000000000046}';
  IID_Dialog: TGUID = '{000209B8-0000-0000-C000-000000000046}';
  IID_PageSetup: TGUID = '{00020971-0000-0000-C000-000000000046}';
  IID_LineNumbering: TGUID = '{00020972-0000-0000-C000-000000000046}';
  IID_TextColumns: TGUID = '{00020973-0000-0000-C000-000000000046}';
  IID_TextColumn: TGUID = '{00020974-0000-0000-C000-000000000046}';
  IID_WordSelection: TGUID = '{00020975-0000-0000-C000-000000000046}';
  IID_TablesOfAuthoritiesCategories: TGUID = '{00020976-0000-0000-C000-000000000046}';
  IID_TableOfAuthoritiesCategory: TGUID = '{00020977-0000-0000-C000-000000000046}';
  IID_CaptionLabels: TGUID = '{00020978-0000-0000-C000-000000000046}';
  IID_CaptionLabel: TGUID = '{00020979-0000-0000-C000-000000000046}';
  IID_AutoCaptions: TGUID = '{0002097A-0000-0000-C000-000000000046}';
  IID_AutoCaption: TGUID = '{0002097B-0000-0000-C000-000000000046}';
  IID_Indexes: TGUID = '{0002097C-0000-0000-C000-000000000046}';
  IID_Index: TGUID = '{0002097D-0000-0000-C000-000000000046}';
  IID_AddIn: TGUID = '{0002097E-0000-0000-C000-000000000046}';
  IID_AddIns: TGUID = '{0002097F-0000-0000-C000-000000000046}';
  IID_Revisions: TGUID = '{00020980-0000-0000-C000-000000000046}';
  IID_Revision: TGUID = '{00020981-0000-0000-C000-000000000046}';
  IID_Task: TGUID = '{00020982-0000-0000-C000-000000000046}';
  IID_Tasks: TGUID = '{00020983-0000-0000-C000-000000000046}';
  IID_HeadersFooters: TGUID = '{00020984-0000-0000-C000-000000000046}';
  IID_HeaderFooter: TGUID = '{00020985-0000-0000-C000-000000000046}';
  IID_PageNumbers: TGUID = '{00020986-0000-0000-C000-000000000046}';
  IID_PageNumber: TGUID = '{00020987-0000-0000-C000-000000000046}';
  IID_Subdocuments: TGUID = '{00020988-0000-0000-C000-000000000046}';
  IID_Subdocument: TGUID = '{00020989-0000-0000-C000-000000000046}';
  IID_HeadingStyles: TGUID = '{0002098A-0000-0000-C000-000000000046}';
  IID_HeadingStyle: TGUID = '{0002098B-0000-0000-C000-000000000046}';
  IID_StoryRanges: TGUID = '{0002098C-0000-0000-C000-000000000046}';
  IID_ListLevel: TGUID = '{0002098D-0000-0000-C000-000000000046}';
  IID_ListLevels: TGUID = '{0002098E-0000-0000-C000-000000000046}';
  IID_ListTemplate: TGUID = '{0002098F-0000-0000-C000-000000000046}';
  IID_ListTemplates: TGUID = '{00020990-0000-0000-C000-000000000046}';
  IID_ListParagraphs: TGUID = '{00020991-0000-0000-C000-000000000046}';
  IID_List: TGUID = '{00020992-0000-0000-C000-000000000046}';
  IID_Lists: TGUID = '{00020993-0000-0000-C000-000000000046}';
  IID_ListGallery: TGUID = '{00020994-0000-0000-C000-000000000046}';
  IID_ListGalleries: TGUID = '{00020995-0000-0000-C000-000000000046}';
  IID_KeyBindings: TGUID = '{00020996-0000-0000-C000-000000000046}';
  IID_KeysBoundTo: TGUID = '{00020997-0000-0000-C000-000000000046}';
  IID_KeyBinding: TGUID = '{00020998-0000-0000-C000-000000000046}';
  IID_FileConverter: TGUID = '{00020999-0000-0000-C000-000000000046}';
  IID_FileConverters: TGUID = '{0002099A-0000-0000-C000-000000000046}';
  IID_SynonymInfo: TGUID = '{0002099B-0000-0000-C000-000000000046}';
  IID_Hyperlinks: TGUID = '{0002099C-0000-0000-C000-000000000046}';
  IID_Hyperlink: TGUID = '{0002099D-0000-0000-C000-000000000046}';
  IID_Shapes: TGUID = '{0002099F-0000-0000-C000-000000000046}';
  IID_ShapeRange: TGUID = '{000209B5-0000-0000-C000-000000000046}';
  IID_GroupShapes: TGUID = '{000209B6-0000-0000-C000-000000000046}';
  IID_Shape: TGUID = '{000209A0-0000-0000-C000-000000000046}';
  IID_TextFrame: TGUID = '{000209B2-0000-0000-C000-000000000046}';
  IID__LetterContent: TGUID = '{000209A1-0000-0000-C000-000000000046}';
  IID_View: TGUID = '{000209A5-0000-0000-C000-000000000046}';
  IID_Zoom: TGUID = '{000209A6-0000-0000-C000-000000000046}';
  IID_Zooms: TGUID = '{000209A7-0000-0000-C000-000000000046}';
  IID_InlineShape: TGUID = '{000209A8-0000-0000-C000-000000000046}';
  IID_InlineShapes: TGUID = '{000209A9-0000-0000-C000-000000000046}';
  IID_SpellingSuggestions: TGUID = '{000209AA-0000-0000-C000-000000000046}';
  IID_SpellingSuggestion: TGUID = '{000209AB-0000-0000-C000-000000000046}';
  IID_Dictionaries: TGUID = '{000209AC-0000-0000-C000-000000000046}';
  IID_HangulHanjaConversionDictionaries: TGUID = '{000209E0-0000-0000-C000-000000000046}';
  IID_Dictionary: TGUID = '{000209AD-0000-0000-C000-000000000046}';
  IID_ReadabilityStatistics: TGUID = '{000209AE-0000-0000-C000-000000000046}';
  IID_ReadabilityStatistic: TGUID = '{000209AF-0000-0000-C000-000000000046}';
  IID_Versions: TGUID = '{000209B3-0000-0000-C000-000000000046}';
  IID_Version: TGUID = '{000209B4-0000-0000-C000-000000000046}';
  IID_Options: TGUID = '{000209B7-0000-0000-C000-000000000046}';
  IID_MailMessage: TGUID = '{000209BA-0000-0000-C000-000000000046}';
  IID_ProofreadingErrors: TGUID = '{000209BB-0000-0000-C000-000000000046}';
  IID_Mailer: TGUID = '{000209BD-0000-0000-C000-000000000046}';
  IID_WrapFormat: TGUID = '{000209C3-0000-0000-C000-000000000046}';
  IID_HangulAndAlphabetExceptions: TGUID = '{000209D1-0000-0000-C000-000000000046}';
  IID_HangulAndAlphabetException: TGUID = '{000209D2-0000-0000-C000-000000000046}';
  IID_Adjustments: TGUID = '{000209C4-0000-0000-C000-000000000046}';
  IID_CalloutFormat: TGUID = '{000209C5-0000-0000-C000-000000000046}';
  IID_ColorFormat: TGUID = '{000209C6-0000-0000-C000-000000000046}';
  IID_ConnectorFormat: TGUID = '{000209C7-0000-0000-C000-000000000046}';
  IID_FillFormat: TGUID = '{000209C8-0000-0000-C000-000000000046}';
  IID_FreeformBuilder: TGUID = '{000209C9-0000-0000-C000-000000000046}';
  IID_LineFormat: TGUID = '{000209CA-0000-0000-C000-000000000046}';
  IID_PictureFormat: TGUID = '{000209CB-0000-0000-C000-000000000046}';
  IID_ShadowFormat: TGUID = '{000209CC-0000-0000-C000-000000000046}';
  IID_ShapeNode: TGUID = '{000209CD-0000-0000-C000-000000000046}';
  IID_ShapeNodes: TGUID = '{000209CE-0000-0000-C000-000000000046}';
  IID_TextEffectFormat: TGUID = '{000209CF-0000-0000-C000-000000000046}';
  IID_ThreeDFormat: TGUID = '{000209D0-0000-0000-C000-000000000046}';
  DIID_ApplicationEvents: TGUID = '{000209F7-0000-0000-C000-000000000046}';
  CLASS_WordGlobal: TGUID = '{000209F0-0000-0000-C000-000000000046}';
  DIID_ApplicationEvents2: TGUID = '{000209FE-0000-0000-C000-000000000046}';
  DIID_DocumentEvents: TGUID = '{000209F6-0000-0000-C000-000000000046}';
  DIID_DocumentEvents2: TGUID = '{00020A02-0000-0000-C000-000000000046}';
  CLASS_WordFont: TGUID = '{000209F5-0000-0000-C000-000000000046}';
  CLASS_WordParagraphFormat: TGUID = '{000209F4-0000-0000-C000-000000000046}';
  DIID_OCXEvents: TGUID = '{000209F3-0000-0000-C000-000000000046}';
  CLASS_WordOLEControl: TGUID = '{000209F2-0000-0000-C000-000000000046}';
  CLASS_WordLetterContent: TGUID = '{000209F1-0000-0000-C000-000000000046}';
  IID_IApplicationEvents: TGUID = '{000209F7-0001-0000-C000-000000000046}';
  IID_IApplicationEvents2: TGUID = '{000209FE-0001-0000-C000-000000000046}';
  DIID_ApplicationEvents3: TGUID = '{00020A00-0000-0000-C000-000000000046}';
  IID_EmailAuthor: TGUID = '{000209D7-0000-0000-C000-000000000046}';
  IID_EmailOptions: TGUID = '{000209DB-0000-0000-C000-000000000046}';
  IID_EmailSignature: TGUID = '{000209DC-0000-0000-C000-000000000046}';
  IID_Email: TGUID = '{000209DD-0000-0000-C000-000000000046}';
  IID_HorizontalLineFormat: TGUID = '{000209DE-0000-0000-C000-000000000046}';
  IID_Frameset: TGUID = '{000209E2-0000-0000-C000-000000000046}';
  IID_DefaultWebOptions: TGUID = '{000209E3-0000-0000-C000-000000000046}';
  IID_WebOptions: TGUID = '{000209E4-0000-0000-C000-000000000046}';
  IID_OtherCorrectionsExceptions: TGUID = '{000209DF-0000-0000-C000-000000000046}';
  IID_OtherCorrectionsException: TGUID = '{000209E1-0000-0000-C000-000000000046}';
  IID_EmailSignatureEntries: TGUID = '{000209E5-0000-0000-C000-000000000046}';
  IID_EmailSignatureEntry: TGUID = '{000209E6-0000-0000-C000-000000000046}';
  IID_HTMLDivision: TGUID = '{000209E7-0000-0000-C000-000000000046}';
  IID_HTMLDivisions: TGUID = '{000209E8-0000-0000-C000-000000000046}';
  IID_DiagramNode: TGUID = '{000209E9-0000-0000-C000-000000000046}';
  IID_DiagramNodeChildren: TGUID = '{000209EA-0000-0000-C000-000000000046}';
  IID_DiagramNodes: TGUID = '{000209EB-0000-0000-C000-000000000046}';
  IID_Diagram: TGUID = '{000209EC-0000-0000-C000-000000000046}';
  IID_CustomProperty: TGUID = '{B923FDE0-F08C-11D3-91B0-00105A0A19FD}';
  IID_CustomProperties: TGUID = '{B923FDE1-F08C-11D3-91B0-00105A0A19FD}';
  IID_SmartTag: TGUID = '{000209ED-0000-0000-C000-000000000046}';
  IID_SmartTags: TGUID = '{000209EE-0000-0000-C000-000000000046}';
  IID_StyleSheet: TGUID = '{000209EF-0000-0000-C000-000000000046}';
  IID_StyleSheets: TGUID = '{07B7CC7E-E66C-11D3-9454-00105AA31A08}';
  IID_MappedDataField: TGUID = '{5D311669-EA51-11D3-87CC-00105AA31A34}';
  IID_MappedDataFields: TGUID = '{799A6814-EA41-11D3-87CC-00105AA31A34}';
  IID_CanvasShapes: TGUID = '{396F9073-F9FD-11D3-8EA0-0050049A1A01}';
  IID_TableStyle: TGUID = '{B7564E97-0519-4C68-B400-3803E7C63242}';
  IID_ConditionalStyle: TGUID = '{1498F56D-ED33-41F9-B37B-EF30E50B08AC}';
  IID_FootnoteOptions: TGUID = '{BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}';
  IID_EndnoteOptions: TGUID = '{BF043168-F4DE-4E7C-B206-741A8B3EF71A}';
  IID_Reviewers: TGUID = '{12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}';
  IID_Reviewer: TGUID = '{47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}';
  IID_TaskPane: TGUID = '{B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}';
  IID_TaskPanes: TGUID = '{E6AAEC05-E543-4085-BA92-9BF7D2474F5C}';
  IID_IApplicationEvents3: TGUID = '{00020A00-0001-0000-C000-000000000046}';
  DIID_ApplicationEvents4: TGUID = '{00020A01-0000-0000-C000-000000000046}';
  IID_SmartTagAction: TGUID = '{DFB6AA6C-1068-420F-969D-01280FCC1630}';
  IID_SmartTagActions: TGUID = '{CDE12CD8-767B-4757-8A31-13029A086305}';
  IID_SmartTagRecognizer: TGUID = '{15EBE471-0182-4CCE-98D0-B6614D1C32A1}';
  IID_SmartTagRecognizers: TGUID = '{F2B60A10-DED5-46FB-A914-3C6F4EBB6451}';
  IID_SmartTagType: TGUID = '{5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}';
  IID_SmartTagTypes: TGUID = '{DB8E3072-E106-4453-8E7C-53056F1D30DC}';
  IID_Line: TGUID = '{AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}';
  IID_Lines: TGUID = '{E2E8A400-0615-427D-ADCC-CAD39FFEBD42}';
  IID_Rectangle: TGUID = '{ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}';
  IID_Rectangles: TGUID = '{7D0F7985-68D9-4D93-91CB-8109280E76CC}';
  IID_Break: TGUID = '{79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}';
  IID_Breaks: TGUID = '{16BE9309-D708-4322-BB1A-B056F58D17EA}';
  IID_Page: TGUID = '{352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}';
  IID_Pages: TGUID = '{91807402-6C6F-47CD-B8FA-C42FEE8EE924}';
  IID_XMLNode: TGUID = '{09760240-0B89-49F7-A79D-479F24723F56}';
  IID_XMLNodes: TGUID = '{D36C1F42-7044-4B9E-9CA3-85919454DB04}';
  IID_XMLSchemaReference: TGUID = '{FE0971F0-5E60-4985-BCDA-95CB0B8E0308}';
  IID_XMLSchemaReferences: TGUID = '{356B06EC-4908-42A4-81FC-4B5A51F3483B}';
  IID_XMLChildNodeSuggestion: TGUID = '{A87E00E9-3AC3-4B53-ABE3-7379653D0E82}';
  IID_XMLChildNodeSuggestions: TGUID = '{DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}';
  IID_XMLNamespace: TGUID = '{B140A023-4850-4DA6-BC5F-CC459C4507BC}';
  IID_XMLNamespaces: TGUID = '{656BBED7-E82D-4B0A-8F97-EC742BA11FFA}';
  IID_XSLTransform: TGUID = '{E3124493-7D6A-410F-9A48-CC822C033CEC}';
  IID_XSLTransforms: TGUID = '{C774F5EA-A539-4284-A1BE-30AEC052D899}';
  IID_Editors: TGUID = '{AED7E08C-14F0-4F33-921D-4C5353137BF6}';
  IID_Editor: TGUID = '{DD947D72-F33C-4198-9BDF-F86181D05E41}';
  IID_IApplicationEvents4: TGUID = '{00020A01-0001-0000-C000-000000000046}';
  CLASS_WordApplication: TGUID = '{000209FF-0000-0000-C000-000000000046}';
  CLASS_WordDocument: TGUID = '{00020906-0000-0000-C000-000000000046}';
  IID_Source: TGUID = '{4A6AE865-199D-4EA3-9F6B-125BD9C40EDF}';
  IID_Sources: TGUID = '{FA02A26B-6550-45C5-B6F0-80E757CD3482}';
  IID_Bibliography: TGUID = '{3834F60F-EE8C-455D-A441-D766675D6D3B}';
  IID_OMaths: TGUID = '{873E774B-926A-4CB1-878D-635A45187595}';
  IID_OMath: TGUID = '{E4442A83-F623-459C-8E95-8BFB44DCF23A}';
  IID_OMathFunctions: TGUID = '{497142A4-16FD-42C6-BC58-15D89345FC21}';
  IID_OMathArgs: TGUID = '{8245795B-9AED-4943-A16D-E586ED8180D1}';
  IID_OMathFunction: TGUID = '{F1F37152-1DB1-4901-AD9A-C740F99464B4}';
  IID_OMathAcc: TGUID = '{F258DE05-C41B-4C33-A778-F0D3F98CEEB3}';
  IID_OMathBar: TGUID = '{F08B45F1-8F23-4156-9D63-1820C0ED229A}';
  IID_OMathBox: TGUID = '{842C37FE-C76F-4B2B-9B60-C408CB5E838E}';
  IID_OMathBorderBox: TGUID = '{2503B6EE-0889-44DF-B920-6D6F9659DEA3}';
  IID_OMathDelim: TGUID = '{C94688A6-A2A7-4133-A26D-726CD569D5F3}';
  IID_OMathEqArray: TGUID = '{1F998A61-71C6-44C2-A0F2-1D66169B47CB}';
  IID_OMathFrac: TGUID = '{50209974-BA32-4A03-8FA6-BAC56CC056FD}';
  IID_OMathFunc: TGUID = '{0D951ADF-10A6-4C9B-BCD9-0FB8CBAD9A87}';
  IID_OMathGroupChar: TGUID = '{02B17CB4-7D55-4B34-B38B-10381433441F}';
  IID_OMathLimLow: TGUID = '{74DE9576-8E99-4E28-912B-CB30747C60CE}';
  IID_OMathLimUpp: TGUID = '{FC9086C6-0287-4997-B2E1-816C334A22F8}';
  IID_OMathMat: TGUID = '{3E061A7E-67AD-4EAA-BC1E-55057D5E596F}';
  IID_OMathMatRows: TGUID = '{1B426348-607D-433C-9216-C5D2BF0EF31F}';
  IID_OMathMatCols: TGUID = '{EFC71F9C-7F42-4CD4-A7A7-970D7A48CD27}';
  IID_OMathMatRow: TGUID = '{5DAA8BB6-054E-48F6-BEAC-EAAD02BE0CC7}';
  IID_OMathMatCol: TGUID = '{CAE36175-3818-4C60-BCBF-0645D51EB33B}';
  IID_OMathNary: TGUID = '{CEBD4184-4E6D-4FC6-A42D-2142B1B76AF5}';
  IID_OMathPhantom: TGUID = '{DB77D541-85C3-42E8-8649-AFBD7CF87866}';
  IID_OMathScrPre: TGUID = '{AFAF0C0E-8603-40F6-8FD1-42726CAC21E3}';
  IID_OMathRad: TGUID = '{67A7EEC5-285D-4024-B071-BD6B33B88547}';
  IID_OMathScrSub: TGUID = '{98DFBD12-96CB-4F07-90EA-749FF1D6B89D}';
  IID_OMathScrSubSup: TGUID = '{DC489AD4-23C4-4F4B-990F-45A51C7C0C4F}';
  IID_OMathScrSup: TGUID = '{D0A95726-678A-4B9D-8103-1E2B86735AE7}';
  IID_OMathAutoCorrect: TGUID = '{6F9D1F68-06F7-49EF-8902-185E54EB5E87}';
  IID_OMathAutoCorrectEntries: TGUID = '{18CD5EC8-8B7B-42C8-992A-2A407468642C}';
  IID_OMathAutoCorrectEntry: TGUID = '{D8779F01-4869-4403-B334-D60C5F9C9175}';
  IID_OMathRecognizedFunctions: TGUID = '{44FEE887-6600-41AB-95A5-DE33C605116C}';
  IID_OMathRecognizedFunction: TGUID = '{5C04BD93-2F3F-4668-918D-9738EC901039}';
  IID_ContentControls: TGUID = '{804CD967-F83B-432D-9446-C61A45CFEFF0}';
  IID_ContentControl: TGUID = '{EE95AFE3-3026-4172-B078-0E79DAB5CC3D}';
  IID_XMLMapping: TGUID = '{0C1FABE7-F737-406F-9CA3-B07661F9D1A2}';
  IID_ContentControlListEntries: TGUID = '{54F46DC4-F6A6-48CC-BD66-46C1DDEADD22}';
  IID_ContentControlListEntry: TGUID = '{0C6FA8CA-E65F-4FC7-AB8F-20729EECBB14}';
  IID_BuildingBlockTypes: TGUID = '{B5828B50-0E3D-448A-962D-A40702A5868D}';
  IID_BuildingBlockType: TGUID = '{817F99FA-CCC4-4971-8E9D-1238F735AAFF}';
  IID_Categories: TGUID = '{6E47678B-A879-4E56-8698-3B7CF169FAD4}';
  IID_Category: TGUID = '{ECFBDB5E-ACD2-4530-AD79-4560B7FF055C}';
  IID_BuildingBlocks: TGUID = '{C6D50987-25D7-408A-BFF2-90BF86A24E93}';
  IID_BuildingBlock: TGUID = '{BFD3FC23-F763-4FF8-826E-1AFBF598A4E7}';
  IID_BuildingBlockEntries: TGUID = '{39709229-56A0-4E29-9112-B31DD067EBFD}';
  IID_OMathBreaks: TGUID = '{E2E0F3A7-204C-40C5-BAA5-290F374FDF5A}';
  IID_OMathBreak: TGUID = '{65E515D5-F50B-4951-8F38-FA6AC8707387}';
  IID_Research: TGUID = '{E6AAEC05-E543-4085-BA92-9BF7D2474F51}';
  IID_SoftEdgeFormat: TGUID = '{D040DAF9-6CE4-4BE8-839D-F4538A4301CF}';
  IID_GlowFormat: TGUID = '{F1B14F40-5C32-4C8C-B5B2-DE537BB6B89D}';
  IID_ReflectionFormat: TGUID = '{F01943FF-1985-445E-8602-8FB8F39CCA75}';
  IID_ChartData: TGUID = '{4A304B59-31FF-42DD-B436-7FC9C5DB7559}';
  IID_Chart: TGUID = '{6FFA84BB-A350-4442-BB53-A43653459A84}';
  IID_Corners: TGUID = '{AE6D45E5-981E-4547-8752-674BB55420A5}';
  IID_Legend: TGUID = '{B3A1E8C6-E1CE-4A46-8D12-E017157B03D7}';
  IID_ChartBorder: TGUID = '{AB0D33A3-C9EA-485B-9443-4C1BB3656CEA}';
  IID_Walls: TGUID = '{A2E94180-7564-4D97-806B-BBC0D0A1350C}';
  IID_Floor: TGUID = '{7E64D2BE-2818-48CB-8F8A-CC7B61D9E860}';
  IID_PlotArea: TGUID = '{56AFD330-440C-4F4C-A39C-ED306D084D5F}';
  IID_ChartArea: TGUID = '{C75AD98A-74E9-49FE-8BF1-544839CC08A5}';
  IID_SeriesLines: TGUID = '{5D7F6C15-36CE-44CC-9692-5A1F8B8C906D}';
  IID_LeaderLines: TGUID = '{36162C62-B59A-4278-AF3D-F2AC1EB999D9}';
  IID_Gridlines: TGUID = '{FC9090AF-0DDB-4EC1-86E8-8751F2199F2C}';
  IID_UpBars: TGUID = '{86905AC9-33F3-4A88-96C8-B289B0390BCA}';
  IID_DownBars: TGUID = '{84A6A663-AEF4-4FCD-83FD-9BB707F157CA}';
  IID_Interior: TGUID = '{B184502B-587A-4C6A-8DC4-ECE4354883C6}';
  IID_ChartFillFormat: TGUID = '{F152D349-7D20-4C01-A42B-2D6DE4F3891C}';
  IID_LegendEntries: TGUID = '{B6511068-70BF-4751-A741-55C1D41AD96F}';
  IID_ChartFont: TGUID = '{CDB0FF41-E862-47BB-AE77-3FA7B1AE3189}';
  IID_ChartColorFormat: TGUID = '{DD8F80B8-9B80-4E89-9BEC-F12DF35E43B3}';
  IID_LegendEntry: TGUID = '{C4A02049-024C-4273-8934-E48CC21479A9}';
  IID_LegendKey: TGUID = '{DF076FDE-8781-4051-A5BC-99F6B7DC04D4}';
  IID_SeriesCollection: TGUID = '{8FEB78F7-35C6-4871-918C-193C3CDD886D}';
  IID_Series: TGUID = '{40810760-068A-4486-BEC9-8EA58C7029F5}';
  IID_ErrorBars: TGUID = '{194F8476-B79D-4572-A609-294207DE77C1}';
  IID_Trendline: TGUID = '{91C46192-3124-4346-A815-10B8873F5A06}';
  IID_Trendlines: TGUID = '{54B7061A-D56C-40E5-B85B-58146446C782}';
  IID_DataLabels: TGUID = '{D8252C5E-EB9F-4D74-AA72-C178B128FAC4}';
  IID_DataLabel: TGUID = '{1FD94DF1-3569-4465-94FF-E8B22D28EEB0}';
  IID_Points: TGUID = '{C1A870A0-850E-4D38-98A7-741CB8C3BCA4}';
  IID_Point: TGUID = '{8A342FA0-5831-4B5E-82E1-003D0A0C635D}';
  IID_Axes: TGUID = '{354AB591-A217-48B4-99E4-14F58F15667D}';
  IID_Axis: TGUID = '{7EBC66BD-F788-42C3-91F4-E8C841A69005}';
  IID_DataTable: TGUID = '{DCE9F2C4-4C02-43BA-840E-B4276550EF79}';
  IID_ChartTitle: TGUID = '{C1AD33E4-F088-40A9-9D2F-D94017D115C4}';
  IID_AxisTitle: TGUID = '{8B0E45DB-3A7B-42EE-9D17-A92AF69B79C1}';
  IID_DisplayUnitLabel: TGUID = '{C04865A3-9F8A-486C-BB58-B4C3E6563136}';
  IID_TickLabels: TGUID = '{935D59F5-E365-4F92-B7F5-1C499A63ECA8}';
  IID_DropLines: TGUID = '{9F1DF642-3CCE-4D83-A770-D2634A05D278}';
  IID_HiLoLines: TGUID = '{7A1BCE11-5783-4C7D-BD02-F3D84AB40E7F}';
  IID_ChartGroup: TGUID = '{86488FB4-9633-4C93-8057-FC1FA7A847AE}';
  IID_ChartGroups: TGUID = '{F8DDB497-CA6C-4711-9BA4-2718FA3BB6FE}';
  IID_ChartCharacters: TGUID = '{FF06FEF2-DA89-41C0-A0A8-5CD434E210AD}';
  IID_ChartFormat: TGUID = '{B66D3C1A-4541-4961-B35B-A353C03F6A99}';
  IID_UndoRecord: TGUID = '{E598E358-2852-42D4-8775-160BD91B7244}';
  IID_CoAuthLock: TGUID = '{99755F80-FE96-4F7D-B636-B8E800E54F44}';
  IID_CoAuthLocks: TGUID = '{DFF99AC2-CD2A-43AD-91B1-A2BE40BC7146}';
  IID_CoAuthUpdate: TGUID = '{9E6B5EC5-E8E4-40AF-9540-6203F71E2823}';
  IID_CoAuthUpdates: TGUID = '{30225CFC-5A71-4FE6-B527-90A52C54AE77}';
  IID_CoAuthor: TGUID = '{E59544D5-C299-46A0-84C1-C51AB38F9759}';
  IID_CoAuthors: TGUID = '{256B6ABA-6A38-4D39-971C-91FDA9922814}';
  IID_CoAuthoring: TGUID = '{65DF9F31-B1E3-4651-87E8-51D55F302161}';
  IID_Conflicts: TGUID = '{C2B83A65-B061-4469-83B6-8877437CB8A0}';
  IID_Conflict: TGUID = '{6215E4B1-545A-406E-9824-0A5B5AC8AD21}';
  IID_ProtectedViewWindows: TGUID = '{FD0A74E8-C719-49F6-BA1B-F6D9839D1AB9}';
  IID_ProtectedViewWindow: TGUID = '{F743EDD0-9B97-4B09-89CC-77BE19B51481}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum WdMailSystem
type
  WdMailSystem = TOleEnum;
const
  wdNoMailSystem = $00000000;
  wdMAPI = $00000001;
  wdPowerTalk = $00000002;
  wdMAPIandPowerTalk = $00000003;

// Constants for enum WdTemplateType
type
  WdTemplateType = TOleEnum;
const
  wdNormalTemplate = $00000000;
  wdGlobalTemplate = $00000001;
  wdAttachedTemplate = $00000002;

// Constants for enum WdContinue
type
  WdContinue = TOleEnum;
const
  wdContinueDisabled = $00000000;
  wdResetList = $00000001;
  wdContinueList = $00000002;

// Constants for enum WdIMEMode
type
  WdIMEMode = TOleEnum;
const
  wdIMEModeNoControl = $00000000;
  wdIMEModeOn = $00000001;
  wdIMEModeOff = $00000002;
  wdIMEModeHiragana = $00000004;
  wdIMEModeKatakana = $00000005;
  wdIMEModeKatakanaHalf = $00000006;
  wdIMEModeAlphaFull = $00000007;
  wdIMEModeAlpha = $00000008;
  wdIMEModeHangulFull = $00000009;
  wdIMEModeHangul = $0000000A;

// Constants for enum WdBaselineAlignment
type
  WdBaselineAlignment = TOleEnum;
const
  wdBaselineAlignTop = $00000000;
  wdBaselineAlignCenter = $00000001;
  wdBaselineAlignBaseline = $00000002;
  wdBaselineAlignFarEast50 = $00000003;
  wdBaselineAlignAuto = $00000004;

// Constants for enum WdIndexFilter
type
  WdIndexFilter = TOleEnum;
const
  wdIndexFilterNone = $00000000;
  wdIndexFilterAiueo = $00000001;
  wdIndexFilterAkasatana = $00000002;
  wdIndexFilterChosung = $00000003;
  wdIndexFilterLow = $00000004;
  wdIndexFilterMedium = $00000005;
  wdIndexFilterFull = $00000006;

// Constants for enum WdIndexSortBy
type
  WdIndexSortBy = TOleEnum;
const
  wdIndexSortByStroke = $00000000;
  wdIndexSortBySyllable = $00000001;

// Constants for enum WdJustificationMode
type
  WdJustificationMode = TOleEnum;
const
  wdJustificationModeExpand = $00000000;
  wdJustificationModeCompress = $00000001;
  wdJustificationModeCompressKana = $00000002;

// Constants for enum WdFarEastLineBreakLevel
type
  WdFarEastLineBreakLevel = TOleEnum;
const
  wdFarEastLineBreakLevelNormal = $00000000;
  wdFarEastLineBreakLevelStrict = $00000001;
  wdFarEastLineBreakLevelCustom = $00000002;

// Constants for enum WdMultipleWordConversionsMode
type
  WdMultipleWordConversionsMode = TOleEnum;
const
  wdHangulToHanja = $00000000;
  wdHanjaToHangul = $00000001;

// Constants for enum WdColorIndex
type
  WdColorIndex = TOleEnum;
const
  wdAuto = $00000000;
  wdBlack = $00000001;
  wdBlue = $00000002;
  wdTurquoise = $00000003;
  wdBrightGreen = $00000004;
  wdPink = $00000005;
  wdRed = $00000006;
  wdYellow = $00000007;
  wdWhite = $00000008;
  wdDarkBlue = $00000009;
  wdTeal = $0000000A;
  wdGreen = $0000000B;
  wdViolet = $0000000C;
  wdDarkRed = $0000000D;
  wdDarkYellow = $0000000E;
  wdGray50 = $0000000F;
  wdGray25 = $00000010;
  wdByAuthor = $FFFFFFFF;
  wdNoHighlight = $00000000;

// Constants for enum WdTextureIndex
type
  WdTextureIndex = TOleEnum;
const
  wdTextureNone = $00000000;
  wdTexture2Pt5Percent = $00000019;
  wdTexture5Percent = $00000032;
  wdTexture7Pt5Percent = $0000004B;
  wdTexture10Percent = $00000064;
  wdTexture12Pt5Percent = $0000007D;
  wdTexture15Percent = $00000096;
  wdTexture17Pt5Percent = $000000AF;
  wdTexture20Percent = $000000C8;
  wdTexture22Pt5Percent = $000000E1;
  wdTexture25Percent = $000000FA;
  wdTexture27Pt5Percent = $00000113;
  wdTexture30Percent = $0000012C;
  wdTexture32Pt5Percent = $00000145;
  wdTexture35Percent = $0000015E;
  wdTexture37Pt5Percent = $00000177;
  wdTexture40Percent = $00000190;
  wdTexture42Pt5Percent = $000001A9;
  wdTexture45Percent = $000001C2;
  wdTexture47Pt5Percent = $000001DB;
  wdTexture50Percent = $000001F4;
  wdTexture52Pt5Percent = $0000020D;
  wdTexture55Percent = $00000226;
  wdTexture57Pt5Percent = $0000023F;
  wdTexture60Percent = $00000258;
  wdTexture62Pt5Percent = $00000271;
  wdTexture65Percent = $0000028A;
  wdTexture67Pt5Percent = $000002A3;
  wdTexture70Percent = $000002BC;
  wdTexture72Pt5Percent = $000002D5;
  wdTexture75Percent = $000002EE;
  wdTexture77Pt5Percent = $00000307;
  wdTexture80Percent = $00000320;
  wdTexture82Pt5Percent = $00000339;
  wdTexture85Percent = $00000352;
  wdTexture87Pt5Percent = $0000036B;
  wdTexture90Percent = $00000384;
  wdTexture92Pt5Percent = $0000039D;
  wdTexture95Percent = $000003B6;
  wdTexture97Pt5Percent = $000003CF;
  wdTextureSolid = $000003E8;
  wdTextureDarkHorizontal = $FFFFFFFF;
  wdTextureDarkVertical = $FFFFFFFE;
  wdTextureDarkDiagonalDown = $FFFFFFFD;
  wdTextureDarkDiagonalUp = $FFFFFFFC;
  wdTextureDarkCross = $FFFFFFFB;
  wdTextureDarkDiagonalCross = $FFFFFFFA;
  wdTextureHorizontal = $FFFFFFF9;
  wdTextureVertical = $FFFFFFF8;
  wdTextureDiagonalDown = $FFFFFFF7;
  wdTextureDiagonalUp = $FFFFFFF6;
  wdTextureCross = $FFFFFFF5;
  wdTextureDiagonalCross = $FFFFFFF4;

// Constants for enum WdUnderline
type
  WdUnderline = TOleEnum;
const
  wdUnderlineNone = $00000000;
  wdUnderlineSingle = $00000001;
  wdUnderlineWords = $00000002;
  wdUnderlineDouble = $00000003;
  wdUnderlineDotted = $00000004;
  wdUnderlineThick = $00000006;
  wdUnderlineDash = $00000007;
  wdUnderlineDotDash = $00000009;
  wdUnderlineDotDotDash = $0000000A;
  wdUnderlineWavy = $0000000B;
  wdUnderlineWavyHeavy = $0000001B;
  wdUnderlineDottedHeavy = $00000014;
  wdUnderlineDashHeavy = $00000017;
  wdUnderlineDotDashHeavy = $00000019;
  wdUnderlineDotDotDashHeavy = $0000001A;
  wdUnderlineDashLong = $00000027;
  wdUnderlineDashLongHeavy = $00000037;
  wdUnderlineWavyDouble = $0000002B;

// Constants for enum WdEmphasisMark
type
  WdEmphasisMark = TOleEnum;
const
  wdEmphasisMarkNone = $00000000;
  wdEmphasisMarkOverSolidCircle = $00000001;
  wdEmphasisMarkOverComma = $00000002;
  wdEmphasisMarkOverWhiteCircle = $00000003;
  wdEmphasisMarkUnderSolidCircle = $00000004;

// Constants for enum WdInternationalIndex
type
  WdInternationalIndex = TOleEnum;
const
  wdListSeparator = $00000011;
  wdDecimalSeparator = $00000012;
  wdThousandsSeparator = $00000013;
  wdCurrencyCode = $00000014;
  wd24HourClock = $00000015;
  wdInternationalAM = $00000016;
  wdInternationalPM = $00000017;
  wdTimeSeparator = $00000018;
  wdDateSeparator = $00000019;
  wdProductLanguageID = $0000001A;

// Constants for enum WdAutoMacros
type
  WdAutoMacros = TOleEnum;
const
  wdAutoExec = $00000000;
  wdAutoNew = $00000001;
  wdAutoOpen = $00000002;
  wdAutoClose = $00000003;
  wdAutoExit = $00000004;
  wdAutoSync = $00000005;

// Constants for enum WdCaptionPosition
type
  WdCaptionPosition = TOleEnum;
const
  wdCaptionPositionAbove = $00000000;
  wdCaptionPositionBelow = $00000001;

// Constants for enum WdCountry
type
  WdCountry = TOleEnum;
const
  wdUS = $00000001;
  wdCanada = $00000002;
  wdLatinAmerica = $00000003;
  wdNetherlands = $0000001F;
  wdFrance = $00000021;
  wdSpain = $00000022;
  wdItaly = $00000027;
  wdUK = $0000002C;
  wdDenmark = $0000002D;
  wdSweden = $0000002E;
  wdNorway = $0000002F;
  wdGermany = $00000031;
  wdPeru = $00000033;
  wdMexico = $00000034;
  wdArgentina = $00000036;
  wdBrazil = $00000037;
  wdChile = $00000038;
  wdVenezuela = $0000003A;
  wdJapan = $00000051;
  wdTaiwan = $00000376;
  wdChina = $00000056;
  wdKorea = $00000052;
  wdFinland = $00000166;
  wdIceland = $00000162;

// Constants for enum WdHeadingSeparator
type
  WdHeadingSeparator = TOleEnum;
const
  wdHeadingSeparatorNone = $00000000;
  wdHeadingSeparatorBlankLine = $00000001;
  wdHeadingSeparatorLetter = $00000002;
  wdHeadingSeparatorLetterLow = $00000003;
  wdHeadingSeparatorLetterFull = $00000004;

// Constants for enum WdSeparatorType
type
  WdSeparatorType = TOleEnum;
const
  wdSeparatorHyphen = $00000000;
  wdSeparatorPeriod = $00000001;
  wdSeparatorColon = $00000002;
  wdSeparatorEmDash = $00000003;
  wdSeparatorEnDash = $00000004;

// Constants for enum WdPageNumberAlignment
type
  WdPageNumberAlignment = TOleEnum;
const
  wdAlignPageNumberLeft = $00000000;
  wdAlignPageNumberCenter = $00000001;
  wdAlignPageNumberRight = $00000002;
  wdAlignPageNumberInside = $00000003;
  wdAlignPageNumberOutside = $00000004;

// Constants for enum WdBorderType
type
  WdBorderType = TOleEnum;
const
  wdBorderTop = $FFFFFFFF;
  wdBorderLeft = $FFFFFFFE;
  wdBorderBottom = $FFFFFFFD;
  wdBorderRight = $FFFFFFFC;
  wdBorderHorizontal = $FFFFFFFB;
  wdBorderVertical = $FFFFFFFA;
  wdBorderDiagonalDown = $FFFFFFF9;
  wdBorderDiagonalUp = $FFFFFFF8;

// Constants for enum WdBorderTypeHID
type
  WdBorderTypeHID = TOleEnum;
const
  emptyenum = $00000000;

// Constants for enum WdFramePosition
type
  WdFramePosition = TOleEnum;
const
  wdFrameTop = $FFF0BDC1;
  wdFrameLeft = $FFF0BDC2;
  wdFrameBottom = $FFF0BDC3;
  wdFrameRight = $FFF0BDC4;
  wdFrameCenter = $FFF0BDC5;
  wdFrameInside = $FFF0BDC6;
  wdFrameOutside = $FFF0BDC7;

// Constants for enum WdAnimation
type
  WdAnimation = TOleEnum;
const
  wdAnimationNone = $00000000;
  wdAnimationLasVegasLights = $00000001;
  wdAnimationBlinkingBackground = $00000002;
  wdAnimationSparkleText = $00000003;
  wdAnimationMarchingBlackAnts = $00000004;
  wdAnimationMarchingRedAnts = $00000005;
  wdAnimationShimmer = $00000006;

// Constants for enum WdCharacterCase
type
  WdCharacterCase = TOleEnum;
const
  wdNextCase = $FFFFFFFF;
  wdLowerCase = $00000000;
  wdUpperCase = $00000001;
  wdTitleWord = $00000002;
  wdTitleSentence = $00000004;
  wdToggleCase = $00000005;
  wdHalfWidth = $00000006;
  wdFullWidth = $00000007;
  wdKatakana = $00000008;
  wdHiragana = $00000009;

// Constants for enum WdCharacterCaseHID
type
  WdCharacterCaseHID = TOleEnum;
const
  emptyenum_ = $00000000;

// Constants for enum WdSummaryMode
type
  WdSummaryMode = TOleEnum;
const
  wdSummaryModeHighlight = $00000000;
  wdSummaryModeHideAllButSummary = $00000001;
  wdSummaryModeInsert = $00000002;
  wdSummaryModeCreateNew = $00000003;

// Constants for enum WdSummaryLength
type
  WdSummaryLength = TOleEnum;
const
  wd10Sentences = $FFFFFFFE;
  wd20Sentences = $FFFFFFFD;
  wd100Words = $FFFFFFFC;
  wd500Words = $FFFFFFFB;
  wd10Percent = $FFFFFFFA;
  wd25Percent = $FFFFFFF9;
  wd50Percent = $FFFFFFF8;
  wd75Percent = $FFFFFFF7;

// Constants for enum WdStyleType
type
  WdStyleType = TOleEnum;
const
  wdStyleTypeParagraph = $00000001;
  wdStyleTypeCharacter = $00000002;
  wdStyleTypeTable = $00000003;
  wdStyleTypeList = $00000004;
  wdStyleTypeParagraphOnly = $00000005;
  wdStyleTypeLinked = $00000006;

// Constants for enum WdUnits
type
  WdUnits = TOleEnum;
const
  wdCharacter = $00000001;
  wdWord = $00000002;
  wdSentence = $00000003;
  wdParagraph = $00000004;
  wdLine = $00000005;
  wdStory = $00000006;
  wdScreen = $00000007;
  wdSection = $00000008;
  wdColumn = $00000009;
  wdRow = $0000000A;
  wdWindow = $0000000B;
  wdCell = $0000000C;
  wdCharacterFormatting = $0000000D;
  wdParagraphFormatting = $0000000E;
  wdTable = $0000000F;
  wdItem = $00000010;

// Constants for enum WdGoToItem
type
  WdGoToItem = TOleEnum;
const
  wdGoToBookmark = $FFFFFFFF;
  wdGoToSection = $00000000;
  wdGoToPage = $00000001;
  wdGoToTable = $00000002;
  wdGoToLine = $00000003;
  wdGoToFootnote = $00000004;
  wdGoToEndnote = $00000005;
  wdGoToComment = $00000006;
  wdGoToField = $00000007;
  wdGoToGraphic = $00000008;
  wdGoToObject = $00000009;
  wdGoToEquation = $0000000A;
  wdGoToHeading = $0000000B;
  wdGoToPercent = $0000000C;
  wdGoToSpellingError = $0000000D;
  wdGoToGrammaticalError = $0000000E;
  wdGoToProofreadingError = $0000000F;

// Constants for enum WdGoToDirection
type
  WdGoToDirection = TOleEnum;
const
  wdGoToFirst = $00000001;
  wdGoToLast = $FFFFFFFF;
  wdGoToNext = $00000002;
  wdGoToRelative = $00000002;
  wdGoToPrevious = $00000003;
  wdGoToAbsolute = $00000001;

// Constants for enum WdCollapseDirection
type
  WdCollapseDirection = TOleEnum;
const
  wdCollapseStart = $00000001;
  wdCollapseEnd = $00000000;

// Constants for enum WdRowHeightRule
type
  WdRowHeightRule = TOleEnum;
const
  wdRowHeightAuto = $00000000;
  wdRowHeightAtLeast = $00000001;
  wdRowHeightExactly = $00000002;

// Constants for enum WdFrameSizeRule
type
  WdFrameSizeRule = TOleEnum;
const
  wdFrameAuto = $00000000;
  wdFrameAtLeast = $00000001;
  wdFrameExact = $00000002;

// Constants for enum WdInsertCells
type
  WdInsertCells = TOleEnum;
const
  wdInsertCellsShiftRight = $00000000;
  wdInsertCellsShiftDown = $00000001;
  wdInsertCellsEntireRow = $00000002;
  wdInsertCellsEntireColumn = $00000003;

// Constants for enum WdDeleteCells
type
  WdDeleteCells = TOleEnum;
const
  wdDeleteCellsShiftLeft = $00000000;
  wdDeleteCellsShiftUp = $00000001;
  wdDeleteCellsEntireRow = $00000002;
  wdDeleteCellsEntireColumn = $00000003;

// Constants for enum WdListApplyTo
type
  WdListApplyTo = TOleEnum;
const
  wdListApplyToWholeList = $00000000;
  wdListApplyToThisPointForward = $00000001;
  wdListApplyToSelection = $00000002;

// Constants for enum WdAlertLevel
type
  WdAlertLevel = TOleEnum;
const
  wdAlertsNone = $00000000;
  wdAlertsMessageBox = $FFFFFFFE;
  wdAlertsAll = $FFFFFFFF;

// Constants for enum WdCursorType
type
  WdCursorType = TOleEnum;
const
  wdCursorWait = $00000000;
  wdCursorIBeam = $00000001;
  wdCursorNormal = $00000002;
  wdCursorNorthwestArrow = $00000003;

// Constants for enum WdEnableCancelKey
type
  WdEnableCancelKey = TOleEnum;
const
  wdCancelDisabled = $00000000;
  wdCancelInterrupt = $00000001;

// Constants for enum WdRulerStyle
type
  WdRulerStyle = TOleEnum;
const
  wdAdjustNone = $00000000;
  wdAdjustProportional = $00000001;
  wdAdjustFirstColumn = $00000002;
  wdAdjustSameWidth = $00000003;

// Constants for enum WdParagraphAlignment
type
  WdParagraphAlignment = TOleEnum;
const
  wdAlignParagraphLeft = $00000000;
  wdAlignParagraphCenter = $00000001;
  wdAlignParagraphRight = $00000002;
  wdAlignParagraphJustify = $00000003;
  wdAlignParagraphDistribute = $00000004;
  wdAlignParagraphJustifyMed = $00000005;
  wdAlignParagraphJustifyHi = $00000007;
  wdAlignParagraphJustifyLow = $00000008;
  wdAlignParagraphThaiJustify = $00000009;

// Constants for enum WdParagraphAlignmentHID
type
  WdParagraphAlignmentHID = TOleEnum;
const
  emptyenum__ = $00000000;

// Constants for enum WdListLevelAlignment
type
  WdListLevelAlignment = TOleEnum;
const
  wdListLevelAlignLeft = $00000000;
  wdListLevelAlignCenter = $00000001;
  wdListLevelAlignRight = $00000002;

// Constants for enum WdRowAlignment
type
  WdRowAlignment = TOleEnum;
const
  wdAlignRowLeft = $00000000;
  wdAlignRowCenter = $00000001;
  wdAlignRowRight = $00000002;

// Constants for enum WdTabAlignment
type
  WdTabAlignment = TOleEnum;
const
  wdAlignTabLeft = $00000000;
  wdAlignTabCenter = $00000001;
  wdAlignTabRight = $00000002;
  wdAlignTabDecimal = $00000003;
  wdAlignTabBar = $00000004;
  wdAlignTabList = $00000006;

// Constants for enum WdVerticalAlignment
type
  WdVerticalAlignment = TOleEnum;
const
  wdAlignVerticalTop = $00000000;
  wdAlignVerticalCenter = $00000001;
  wdAlignVerticalJustify = $00000002;
  wdAlignVerticalBottom = $00000003;

// Constants for enum WdCellVerticalAlignment
type
  WdCellVerticalAlignment = TOleEnum;
const
  wdCellAlignVerticalTop = $00000000;
  wdCellAlignVerticalCenter = $00000001;
  wdCellAlignVerticalBottom = $00000003;

// Constants for enum WdTrailingCharacter
type
  WdTrailingCharacter = TOleEnum;
const
  wdTrailingTab = $00000000;
  wdTrailingSpace = $00000001;
  wdTrailingNone = $00000002;

// Constants for enum WdListGalleryType
type
  WdListGalleryType = TOleEnum;
const
  wdBulletGallery = $00000001;
  wdNumberGallery = $00000002;
  wdOutlineNumberGallery = $00000003;

// Constants for enum WdListNumberStyle
type
  WdListNumberStyle = TOleEnum;
const
  wdListNumberStyleArabic = $00000000;
  wdListNumberStyleUppercaseRoman = $00000001;
  wdListNumberStyleLowercaseRoman = $00000002;
  wdListNumberStyleUppercaseLetter = $00000003;
  wdListNumberStyleLowercaseLetter = $00000004;
  wdListNumberStyleOrdinal = $00000005;
  wdListNumberStyleCardinalText = $00000006;
  wdListNumberStyleOrdinalText = $00000007;
  wdListNumberStyleKanji = $0000000A;
  wdListNumberStyleKanjiDigit = $0000000B;
  wdListNumberStyleAiueoHalfWidth = $0000000C;
  wdListNumberStyleIrohaHalfWidth = $0000000D;
  wdListNumberStyleArabicFullWidth = $0000000E;
  wdListNumberStyleKanjiTraditional = $00000010;
  wdListNumberStyleKanjiTraditional2 = $00000011;
  wdListNumberStyleNumberInCircle = $00000012;
  wdListNumberStyleAiueo = $00000014;
  wdListNumberStyleIroha = $00000015;
  wdListNumberStyleArabicLZ = $00000016;
  wdListNumberStyleBullet = $00000017;
  wdListNumberStyleGanada = $00000018;
  wdListNumberStyleChosung = $00000019;
  wdListNumberStyleGBNum1 = $0000001A;
  wdListNumberStyleGBNum2 = $0000001B;
  wdListNumberStyleGBNum3 = $0000001C;
  wdListNumberStyleGBNum4 = $0000001D;
  wdListNumberStyleZodiac1 = $0000001E;
  wdListNumberStyleZodiac2 = $0000001F;
  wdListNumberStyleZodiac3 = $00000020;
  wdListNumberStyleTradChinNum1 = $00000021;
  wdListNumberStyleTradChinNum2 = $00000022;
  wdListNumberStyleTradChinNum3 = $00000023;
  wdListNumberStyleTradChinNum4 = $00000024;
  wdListNumberStyleSimpChinNum1 = $00000025;
  wdListNumberStyleSimpChinNum2 = $00000026;
  wdListNumberStyleSimpChinNum3 = $00000027;
  wdListNumberStyleSimpChinNum4 = $00000028;
  wdListNumberStyleHanjaRead = $00000029;
  wdListNumberStyleHanjaReadDigit = $0000002A;
  wdListNumberStyleHangul = $0000002B;
  wdListNumberStyleHanja = $0000002C;
  wdListNumberStyleHebrew1 = $0000002D;
  wdListNumberStyleArabic1 = $0000002E;
  wdListNumberStyleHebrew2 = $0000002F;
  wdListNumberStyleArabic2 = $00000030;
  wdListNumberStyleHindiLetter1 = $00000031;
  wdListNumberStyleHindiLetter2 = $00000032;
  wdListNumberStyleHindiArabic = $00000033;
  wdListNumberStyleHindiCardinalText = $00000034;
  wdListNumberStyleThaiLetter = $00000035;
  wdListNumberStyleThaiArabic = $00000036;
  wdListNumberStyleThaiCardinalText = $00000037;
  wdListNumberStyleVietCardinalText = $00000038;
  wdListNumberStyleLowercaseRussian = $0000003A;
  wdListNumberStyleUppercaseRussian = $0000003B;
  wdListNumberStyleLowercaseGreek = $0000003C;
  wdListNumberStyleUppercaseGreek = $0000003D;
  wdListNumberStyleArabicLZ2 = $0000003E;
  wdListNumberStyleArabicLZ3 = $0000003F;
  wdListNumberStyleArabicLZ4 = $00000040;
  wdListNumberStyleLowercaseTurkish = $00000041;
  wdListNumberStyleUppercaseTurkish = $00000042;
  wdListNumberStyleLowercaseBulgarian = $00000043;
  wdListNumberStyleUppercaseBulgarian = $00000044;
  wdListNumberStylePictureBullet = $000000F9;
  wdListNumberStyleLegal = $000000FD;
  wdListNumberStyleLegalLZ = $000000FE;
  wdListNumberStyleNone = $000000FF;

// Constants for enum WdListNumberStyleHID
type
  WdListNumberStyleHID = TOleEnum;
const
  emptyenum___ = $00000000;

// Constants for enum WdNoteNumberStyle
type
  WdNoteNumberStyle = TOleEnum;
const
  wdNoteNumberStyleArabic = $00000000;
  wdNoteNumberStyleUppercaseRoman = $00000001;
  wdNoteNumberStyleLowercaseRoman = $00000002;
  wdNoteNumberStyleUppercaseLetter = $00000003;
  wdNoteNumberStyleLowercaseLetter = $00000004;
  wdNoteNumberStyleSymbol = $00000009;
  wdNoteNumberStyleArabicFullWidth = $0000000E;
  wdNoteNumberStyleKanji = $0000000A;
  wdNoteNumberStyleKanjiDigit = $0000000B;
  wdNoteNumberStyleKanjiTraditional = $00000010;
  wdNoteNumberStyleNumberInCircle = $00000012;
  wdNoteNumberStyleHanjaRead = $00000029;
  wdNoteNumberStyleHanjaReadDigit = $0000002A;
  wdNoteNumberStyleTradChinNum1 = $00000021;
  wdNoteNumberStyleTradChinNum2 = $00000022;
  wdNoteNumberStyleSimpChinNum1 = $00000025;
  wdNoteNumberStyleSimpChinNum2 = $00000026;
  wdNoteNumberStyleHebrewLetter1 = $0000002D;
  wdNoteNumberStyleArabicLetter1 = $0000002E;
  wdNoteNumberStyleHebrewLetter2 = $0000002F;
  wdNoteNumberStyleArabicLetter2 = $00000030;
  wdNoteNumberStyleHindiLetter1 = $00000031;
  wdNoteNumberStyleHindiLetter2 = $00000032;
  wdNoteNumberStyleHindiArabic = $00000033;
  wdNoteNumberStyleHindiCardinalText = $00000034;
  wdNoteNumberStyleThaiLetter = $00000035;
  wdNoteNumberStyleThaiArabic = $00000036;
  wdNoteNumberStyleThaiCardinalText = $00000037;
  wdNoteNumberStyleVietCardinalText = $00000038;

// Constants for enum WdNoteNumberStyleHID
type
  WdNoteNumberStyleHID = TOleEnum;
const
  emptyenum____ = $00000000;

// Constants for enum WdCaptionNumberStyle
type
  WdCaptionNumberStyle = TOleEnum;
const
  wdCaptionNumberStyleArabic = $00000000;
  wdCaptionNumberStyleUppercaseRoman = $00000001;
  wdCaptionNumberStyleLowercaseRoman = $00000002;
  wdCaptionNumberStyleUppercaseLetter = $00000003;
  wdCaptionNumberStyleLowercaseLetter = $00000004;
  wdCaptionNumberStyleArabicFullWidth = $0000000E;
  wdCaptionNumberStyleKanji = $0000000A;
  wdCaptionNumberStyleKanjiDigit = $0000000B;
  wdCaptionNumberStyleKanjiTraditional = $00000010;
  wdCaptionNumberStyleNumberInCircle = $00000012;
  wdCaptionNumberStyleGanada = $00000018;
  wdCaptionNumberStyleChosung = $00000019;
  wdCaptionNumberStyleZodiac1 = $0000001E;
  wdCaptionNumberStyleZodiac2 = $0000001F;
  wdCaptionNumberStyleHanjaRead = $00000029;
  wdCaptionNumberStyleHanjaReadDigit = $0000002A;
  wdCaptionNumberStyleTradChinNum2 = $00000022;
  wdCaptionNumberStyleTradChinNum3 = $00000023;
  wdCaptionNumberStyleSimpChinNum2 = $00000026;
  wdCaptionNumberStyleSimpChinNum3 = $00000027;
  wdCaptionNumberStyleHebrewLetter1 = $0000002D;
  wdCaptionNumberStyleArabicLetter1 = $0000002E;
  wdCaptionNumberStyleHebrewLetter2 = $0000002F;
  wdCaptionNumberStyleArabicLetter2 = $00000030;
  wdCaptionNumberStyleHindiLetter1 = $00000031;
  wdCaptionNumberStyleHindiLetter2 = $00000032;
  wdCaptionNumberStyleHindiArabic = $00000033;
  wdCaptionNumberStyleHindiCardinalText = $00000034;
  wdCaptionNumberStyleThaiLetter = $00000035;
  wdCaptionNumberStyleThaiArabic = $00000036;
  wdCaptionNumberStyleThaiCardinalText = $00000037;
  wdCaptionNumberStyleVietCardinalText = $00000038;

// Constants for enum WdCaptionNumberStyleHID
type
  WdCaptionNumberStyleHID = TOleEnum;
const
  emptyenum_____ = $00000000;

// Constants for enum WdPageNumberStyle
type
  WdPageNumberStyle = TOleEnum;
const
  wdPageNumberStyleArabic = $00000000;
  wdPageNumberStyleUppercaseRoman = $00000001;
  wdPageNumberStyleLowercaseRoman = $00000002;
  wdPageNumberStyleUppercaseLetter = $00000003;
  wdPageNumberStyleLowercaseLetter = $00000004;
  wdPageNumberStyleArabicFullWidth = $0000000E;
  wdPageNumberStyleKanji = $0000000A;
  wdPageNumberStyleKanjiDigit = $0000000B;
  wdPageNumberStyleKanjiTraditional = $00000010;
  wdPageNumberStyleNumberInCircle = $00000012;
  wdPageNumberStyleHanjaRead = $00000029;
  wdPageNumberStyleHanjaReadDigit = $0000002A;
  wdPageNumberStyleTradChinNum1 = $00000021;
  wdPageNumberStyleTradChinNum2 = $00000022;
  wdPageNumberStyleSimpChinNum1 = $00000025;
  wdPageNumberStyleSimpChinNum2 = $00000026;
  wdPageNumberStyleHebrewLetter1 = $0000002D;
  wdPageNumberStyleArabicLetter1 = $0000002E;
  wdPageNumberStyleHebrewLetter2 = $0000002F;
  wdPageNumberStyleArabicLetter2 = $00000030;
  wdPageNumberStyleHindiLetter1 = $00000031;
  wdPageNumberStyleHindiLetter2 = $00000032;
  wdPageNumberStyleHindiArabic = $00000033;
  wdPageNumberStyleHindiCardinalText = $00000034;
  wdPageNumberStyleThaiLetter = $00000035;
  wdPageNumberStyleThaiArabic = $00000036;
  wdPageNumberStyleThaiCardinalText = $00000037;
  wdPageNumberStyleVietCardinalText = $00000038;
  wdPageNumberStyleNumberInDash = $00000039;

// Constants for enum WdPageNumberStyleHID
type
  WdPageNumberStyleHID = TOleEnum;
const
  emptyenum______ = $00000000;

// Constants for enum WdStatistic
type
  WdStatistic = TOleEnum;
const
  wdStatisticWords = $00000000;
  wdStatisticLines = $00000001;
  wdStatisticPages = $00000002;
  wdStatisticCharacters = $00000003;
  wdStatisticParagraphs = $00000004;
  wdStatisticCharactersWithSpaces = $00000005;
  wdStatisticFarEastCharacters = $00000006;

// Constants for enum WdStatisticHID
type
  WdStatisticHID = TOleEnum;
const
  emptyenum_______ = $00000000;

// Constants for enum WdBuiltInProperty
type
  WdBuiltInProperty = TOleEnum;
const
  wdPropertyTitle = $00000001;
  wdPropertySubject = $00000002;
  wdPropertyAuthor = $00000003;
  wdPropertyKeywords = $00000004;
  wdPropertyComments = $00000005;
  wdPropertyTemplate = $00000006;
  wdPropertyLastAuthor = $00000007;
  wdPropertyRevision = $00000008;
  wdPropertyAppName = $00000009;
  wdPropertyTimeLastPrinted = $0000000A;
  wdPropertyTimeCreated = $0000000B;
  wdPropertyTimeLastSaved = $0000000C;
  wdPropertyVBATotalEdit = $0000000D;
  wdPropertyPages = $0000000E;
  wdPropertyWords = $0000000F;
  wdPropertyCharacters = $00000010;
  wdPropertySecurity = $00000011;
  wdPropertyCategory = $00000012;
  wdPropertyFormat = $00000013;
  wdPropertyManager = $00000014;
  wdPropertyCompany = $00000015;
  wdPropertyBytes = $00000016;
  wdPropertyLines = $00000017;
  wdPropertyParas = $00000018;
  wdPropertySlides = $00000019;
  wdPropertyNotes = $0000001A;
  wdPropertyHiddenSlides = $0000001B;
  wdPropertyMMClips = $0000001C;
  wdPropertyHyperlinkBase = $0000001D;
  wdPropertyCharsWSpaces = $0000001E;

// Constants for enum WdLineSpacing
type
  WdLineSpacing = TOleEnum;
const
  wdLineSpaceSingle = $00000000;
  wdLineSpace1pt5 = $00000001;
  wdLineSpaceDouble = $00000002;
  wdLineSpaceAtLeast = $00000003;
  wdLineSpaceExactly = $00000004;
  wdLineSpaceMultiple = $00000005;

// Constants for enum WdNumberType
type
  WdNumberType = TOleEnum;
const
  wdNumberParagraph = $00000001;
  wdNumberListNum = $00000002;
  wdNumberAllNumbers = $00000003;

// Constants for enum WdListType
type
  WdListType = TOleEnum;
const
  wdListNoNumbering = $00000000;
  wdListListNumOnly = $00000001;
  wdListBullet = $00000002;
  wdListSimpleNumbering = $00000003;
  wdListOutlineNumbering = $00000004;
  wdListMixedNumbering = $00000005;
  wdListPictureBullet = $00000006;

// Constants for enum WdStoryType
type
  WdStoryType = TOleEnum;
const
  wdMainTextStory = $00000001;
  wdFootnotesStory = $00000002;
  wdEndnotesStory = $00000003;
  wdCommentsStory = $00000004;
  wdTextFrameStory = $00000005;
  wdEvenPagesHeaderStory = $00000006;
  wdPrimaryHeaderStory = $00000007;
  wdEvenPagesFooterStory = $00000008;
  wdPrimaryFooterStory = $00000009;
  wdFirstPageHeaderStory = $0000000A;
  wdFirstPageFooterStory = $0000000B;
  wdFootnoteSeparatorStory = $0000000C;
  wdFootnoteContinuationSeparatorStory = $0000000D;
  wdFootnoteContinuationNoticeStory = $0000000E;
  wdEndnoteSeparatorStory = $0000000F;
  wdEndnoteContinuationSeparatorStory = $00000010;
  wdEndnoteContinuationNoticeStory = $00000011;

// Constants for enum WdSaveFormat
type
  WdSaveFormat = TOleEnum;
const
  wdFormatDocument = $00000000;
  wdFormatDocument97 = $00000000;
  wdFormatTemplate = $00000001;
  wdFormatTemplate97 = $00000001;
  wdFormatText = $00000002;
  wdFormatTextLineBreaks = $00000003;
  wdFormatDOSText = $00000004;
  wdFormatDOSTextLineBreaks = $00000005;
  wdFormatRTF = $00000006;
  wdFormatUnicodeText = $00000007;
  wdFormatEncodedText = $00000007;
  wdFormatHTML = $00000008;
  wdFormatWebArchive = $00000009;
  wdFormatFilteredHTML = $0000000A;
  wdFormatXML = $0000000B;
  wdFormatXMLDocument = $0000000C;
  wdFormatXMLDocumentMacroEnabled = $0000000D;
  wdFormatXMLTemplate = $0000000E;
  wdFormatXMLTemplateMacroEnabled = $0000000F;
  wdFormatDocumentDefault = $00000010;
  wdFormatPDF = $00000011;
  wdFormatXPS = $00000012;
  wdFormatFlatXML = $00000013;
  wdFormatFlatXMLMacroEnabled = $00000014;
  wdFormatFlatXMLTemplate = $00000015;
  wdFormatFlatXMLTemplateMacroEnabled = $00000016;
  wdFormatOpenDocumentText = $00000017;

// Constants for enum WdOpenFormat
type
  WdOpenFormat = TOleEnum;
const
  wdOpenFormatAuto = $00000000;
  wdOpenFormatDocument = $00000001;
  wdOpenFormatTemplate = $00000002;
  wdOpenFormatRTF = $00000003;
  wdOpenFormatText = $00000004;
  wdOpenFormatUnicodeText = $00000005;
  wdOpenFormatEncodedText = $00000005;
  wdOpenFormatAllWord = $00000006;
  wdOpenFormatWebPages = $00000007;
  wdOpenFormatXML = $00000008;
  wdOpenFormatXMLDocument = $00000009;
  wdOpenFormatXMLDocumentMacroEnabled = $0000000A;
  wdOpenFormatXMLTemplate = $0000000B;
  wdOpenFormatXMLTemplateMacroEnabled = $0000000C;
  wdOpenFormatDocument97 = $00000001;
  wdOpenFormatTemplate97 = $00000002;
  wdOpenFormatAllWordTemplates = $0000000D;
  wdOpenFormatXMLDocumentSerialized = $0000000E;
  wdOpenFormatXMLDocumentMacroEnabledSerialized = $0000000F;
  wdOpenFormatXMLTemplateSerialized = $00000010;
  wdOpenFormatXMLTemplateMacroEnabledSerialized = $00000011;
  wdOpenFormatOpenDocumentText = $00000012;

// Constants for enum WdHeaderFooterIndex
type
  WdHeaderFooterIndex = TOleEnum;
const
  wdHeaderFooterPrimary = $00000001;
  wdHeaderFooterFirstPage = $00000002;
  wdHeaderFooterEvenPages = $00000003;

// Constants for enum WdTocFormat
type
  WdTocFormat = TOleEnum;
const
  wdTOCTemplate = $00000000;
  wdTOCClassic = $00000001;
  wdTOCDistinctive = $00000002;
  wdTOCFancy = $00000003;
  wdTOCModern = $00000004;
  wdTOCFormal = $00000005;
  wdTOCSimple = $00000006;

// Constants for enum WdTofFormat
type
  WdTofFormat = TOleEnum;
const
  wdTOFTemplate = $00000000;
  wdTOFClassic = $00000001;
  wdTOFDistinctive = $00000002;
  wdTOFCentered = $00000003;
  wdTOFFormal = $00000004;
  wdTOFSimple = $00000005;

// Constants for enum WdToaFormat
type
  WdToaFormat = TOleEnum;
const
  wdTOATemplate = $00000000;
  wdTOAClassic = $00000001;
  wdTOADistinctive = $00000002;
  wdTOAFormal = $00000003;
  wdTOASimple = $00000004;

// Constants for enum WdLineStyle
type
  WdLineStyle = TOleEnum;
const
  wdLineStyleNone = $00000000;
  wdLineStyleSingle = $00000001;
  wdLineStyleDot = $00000002;
  wdLineStyleDashSmallGap = $00000003;
  wdLineStyleDashLargeGap = $00000004;
  wdLineStyleDashDot = $00000005;
  wdLineStyleDashDotDot = $00000006;
  wdLineStyleDouble = $00000007;
  wdLineStyleTriple = $00000008;
  wdLineStyleThinThickSmallGap = $00000009;
  wdLineStyleThickThinSmallGap = $0000000A;
  wdLineStyleThinThickThinSmallGap = $0000000B;
  wdLineStyleThinThickMedGap = $0000000C;
  wdLineStyleThickThinMedGap = $0000000D;
  wdLineStyleThinThickThinMedGap = $0000000E;
  wdLineStyleThinThickLargeGap = $0000000F;
  wdLineStyleThickThinLargeGap = $00000010;
  wdLineStyleThinThickThinLargeGap = $00000011;
  wdLineStyleSingleWavy = $00000012;
  wdLineStyleDoubleWavy = $00000013;
  wdLineStyleDashDotStroked = $00000014;
  wdLineStyleEmboss3D = $00000015;
  wdLineStyleEngrave3D = $00000016;
  wdLineStyleOutset = $00000017;
  wdLineStyleInset = $00000018;

// Constants for enum WdLineWidth
type
  WdLineWidth = TOleEnum;
const
  wdLineWidth025pt = $00000002;
  wdLineWidth050pt = $00000004;
  wdLineWidth075pt = $00000006;
  wdLineWidth100pt = $00000008;
  wdLineWidth150pt = $0000000C;
  wdLineWidth225pt = $00000012;
  wdLineWidth300pt = $00000018;
  wdLineWidth450pt = $00000024;
  wdLineWidth600pt = $00000030;

// Constants for enum WdBreakType
type
  WdBreakType = TOleEnum;
const
  wdSectionBreakNextPage = $00000002;
  wdSectionBreakContinuous = $00000003;
  wdSectionBreakEvenPage = $00000004;
  wdSectionBreakOddPage = $00000005;
  wdLineBreak = $00000006;
  wdPageBreak = $00000007;
  wdColumnBreak = $00000008;
  wdLineBreakClearLeft = $00000009;
  wdLineBreakClearRight = $0000000A;
  wdTextWrappingBreak = $0000000B;

// Constants for enum WdTabLeader
type
  WdTabLeader = TOleEnum;
const
  wdTabLeaderSpaces = $00000000;
  wdTabLeaderDots = $00000001;
  wdTabLeaderDashes = $00000002;
  wdTabLeaderLines = $00000003;
  wdTabLeaderHeavy = $00000004;
  wdTabLeaderMiddleDot = $00000005;

// Constants for enum WdTabLeaderHID
type
  WdTabLeaderHID = TOleEnum;
const
  emptyenum________ = $00000000;

// Constants for enum WdMeasurementUnits
type
  WdMeasurementUnits = TOleEnum;
const
  wdInches = $00000000;
  wdCentimeters = $00000001;
  wdMillimeters = $00000002;
  wdPoints = $00000003;
  wdPicas = $00000004;

// Constants for enum WdMeasurementUnitsHID
type
  WdMeasurementUnitsHID = TOleEnum;
const
  emptyenum_________ = $00000000;

// Constants for enum WdDropPosition
type
  WdDropPosition = TOleEnum;
const
  wdDropNone = $00000000;
  wdDropNormal = $00000001;
  wdDropMargin = $00000002;

// Constants for enum WdNumberingRule
type
  WdNumberingRule = TOleEnum;
const
  wdRestartContinuous = $00000000;
  wdRestartSection = $00000001;
  wdRestartPage = $00000002;

// Constants for enum WdFootnoteLocation
type
  WdFootnoteLocation = TOleEnum;
const
  wdBottomOfPage = $00000000;
  wdBeneathText = $00000001;

// Constants for enum WdEndnoteLocation
type
  WdEndnoteLocation = TOleEnum;
const
  wdEndOfSection = $00000000;
  wdEndOfDocument = $00000001;

// Constants for enum WdSortSeparator
type
  WdSortSeparator = TOleEnum;
const
  wdSortSeparateByTabs = $00000000;
  wdSortSeparateByCommas = $00000001;
  wdSortSeparateByDefaultTableSeparator = $00000002;

// Constants for enum WdTableFieldSeparator
type
  WdTableFieldSeparator = TOleEnum;
const
  wdSeparateByParagraphs = $00000000;
  wdSeparateByTabs = $00000001;
  wdSeparateByCommas = $00000002;
  wdSeparateByDefaultListSeparator = $00000003;

// Constants for enum WdSortFieldType
type
  WdSortFieldType = TOleEnum;
const
  wdSortFieldAlphanumeric = $00000000;
  wdSortFieldNumeric = $00000001;
  wdSortFieldDate = $00000002;
  wdSortFieldSyllable = $00000003;
  wdSortFieldJapanJIS = $00000004;
  wdSortFieldStroke = $00000005;
  wdSortFieldKoreaKS = $00000006;

// Constants for enum WdSortFieldTypeHID
type
  WdSortFieldTypeHID = TOleEnum;
const
  emptyenum__________ = $00000000;

// Constants for enum WdSortOrder
type
  WdSortOrder = TOleEnum;
const
  wdSortOrderAscending = $00000000;
  wdSortOrderDescending = $00000001;

// Constants for enum WdTableFormat
type
  WdTableFormat = TOleEnum;
const
  wdTableFormatNone = $00000000;
  wdTableFormatSimple1 = $00000001;
  wdTableFormatSimple2 = $00000002;
  wdTableFormatSimple3 = $00000003;
  wdTableFormatClassic1 = $00000004;
  wdTableFormatClassic2 = $00000005;
  wdTableFormatClassic3 = $00000006;
  wdTableFormatClassic4 = $00000007;
  wdTableFormatColorful1 = $00000008;
  wdTableFormatColorful2 = $00000009;
  wdTableFormatColorful3 = $0000000A;
  wdTableFormatColumns1 = $0000000B;
  wdTableFormatColumns2 = $0000000C;
  wdTableFormatColumns3 = $0000000D;
  wdTableFormatColumns4 = $0000000E;
  wdTableFormatColumns5 = $0000000F;
  wdTableFormatGrid1 = $00000010;
  wdTableFormatGrid2 = $00000011;
  wdTableFormatGrid3 = $00000012;
  wdTableFormatGrid4 = $00000013;
  wdTableFormatGrid5 = $00000014;
  wdTableFormatGrid6 = $00000015;
  wdTableFormatGrid7 = $00000016;
  wdTableFormatGrid8 = $00000017;
  wdTableFormatList1 = $00000018;
  wdTableFormatList2 = $00000019;
  wdTableFormatList3 = $0000001A;
  wdTableFormatList4 = $0000001B;
  wdTableFormatList5 = $0000001C;
  wdTableFormatList6 = $0000001D;
  wdTableFormatList7 = $0000001E;
  wdTableFormatList8 = $0000001F;
  wdTableFormat3DEffects1 = $00000020;
  wdTableFormat3DEffects2 = $00000021;
  wdTableFormat3DEffects3 = $00000022;
  wdTableFormatContemporary = $00000023;
  wdTableFormatElegant = $00000024;
  wdTableFormatProfessional = $00000025;
  wdTableFormatSubtle1 = $00000026;
  wdTableFormatSubtle2 = $00000027;
  wdTableFormatWeb1 = $00000028;
  wdTableFormatWeb2 = $00000029;
  wdTableFormatWeb3 = $0000002A;

// Constants for enum WdTableFormatApply
type
  WdTableFormatApply = TOleEnum;
const
  wdTableFormatApplyBorders = $00000001;
  wdTableFormatApplyShading = $00000002;
  wdTableFormatApplyFont = $00000004;
  wdTableFormatApplyColor = $00000008;
  wdTableFormatApplyAutoFit = $00000010;
  wdTableFormatApplyHeadingRows = $00000020;
  wdTableFormatApplyLastRow = $00000040;
  wdTableFormatApplyFirstColumn = $00000080;
  wdTableFormatApplyLastColumn = $00000100;

// Constants for enum WdLanguageID
type
  WdLanguageID = TOleEnum;
const
  wdLanguageNone = $00000000;
  wdNoProofing = $00000400;
  wdAfrikaans = $00000436;
  wdAlbanian = $0000041C;
  wdAmharic = $0000045E;
  wdArabicAlgeria = $00001401;
  wdArabicBahrain = $00003C01;
  wdArabicEgypt = $00000C01;
  wdArabicIraq = $00000801;
  wdArabicJordan = $00002C01;
  wdArabicKuwait = $00003401;
  wdArabicLebanon = $00003001;
  wdArabicLibya = $00001001;
  wdArabicMorocco = $00001801;
  wdArabicOman = $00002001;
  wdArabicQatar = $00004001;
  wdArabic = $00000401;
  wdArabicSyria = $00002801;
  wdArabicTunisia = $00001C01;
  wdArabicUAE = $00003801;
  wdArabicYemen = $00002401;
  wdArmenian = $0000042B;
  wdAssamese = $0000044D;
  wdAzeriCyrillic = $0000082C;
  wdAzeriLatin = $0000042C;
  wdBasque = $0000042D;
  wdByelorussian = $00000423;
  wdBengali = $00000445;
  wdBulgarian = $00000402;
  wdBurmese = $00000455;
  wdCatalan = $00000403;
  wdCherokee = $0000045C;
  wdChineseHongKongSAR = $00000C04;
  wdChineseMacaoSAR = $00001404;
  wdSimplifiedChinese = $00000804;
  wdChineseSingapore = $00001004;
  wdTraditionalChinese = $00000404;
  wdCroatian = $0000041A;
  wdCzech = $00000405;
  wdDanish = $00000406;
  wdDivehi = $00000465;
  wdBelgianDutch = $00000813;
  wdDutch = $00000413;
  wdEdo = $00000466;
  wdEnglishAUS = $00000C09;
  wdEnglishBelize = $00002809;
  wdEnglishCanadian = $00001009;
  wdEnglishCaribbean = $00002409;
  wdEnglishIreland = $00001809;
  wdEnglishJamaica = $00002009;
  wdEnglishNewZealand = $00001409;
  wdEnglishPhilippines = $00003409;
  wdEnglishSouthAfrica = $00001C09;
  wdEnglishTrinidadTobago = $00002C09;
  wdEnglishUK = $00000809;
  wdEnglishUS = $00000409;
  wdEnglishZimbabwe = $00003009;
  wdEnglishIndonesia = $00003809;
  wdEstonian = $00000425;
  wdFaeroese = $00000438;
  wdPersian = $00000429;
  wdFilipino = $00000464;
  wdFinnish = $0000040B;
  wdFulfulde = $00000467;
  wdBelgianFrench = $0000080C;
  wdFrenchCameroon = $00002C0C;
  wdFrenchCanadian = $00000C0C;
  wdFrenchCotedIvoire = $0000300C;
  wdFrench = $0000040C;
  wdFrenchLuxembourg = $0000140C;
  wdFrenchMali = $0000340C;
  wdFrenchMonaco = $0000180C;
  wdFrenchReunion = $0000200C;
  wdFrenchSenegal = $0000280C;
  wdFrenchMorocco = $0000380C;
  wdFrenchHaiti = $00003C0C;
  wdSwissFrench = $0000100C;
  wdFrenchWestIndies = $00001C0C;
  wdFrenchCongoDRC = $0000240C;
  wdFrisianNetherlands = $00000462;
  wdGaelicIreland = $0000083C;
  wdGaelicScotland = $0000043C;
  wdGalician = $00000456;
  wdGeorgian = $00000437;
  wdGermanAustria = $00000C07;
  wdGerman = $00000407;
  wdGermanLiechtenstein = $00001407;
  wdGermanLuxembourg = $00001007;
  wdSwissGerman = $00000807;
  wdGreek = $00000408;
  wdGuarani = $00000474;
  wdGujarati = $00000447;
  wdHausa = $00000468;
  wdHawaiian = $00000475;
  wdHebrew = $0000040D;
  wdHindi = $00000439;
  wdHungarian = $0000040E;
  wdIbibio = $00000469;
  wdIcelandic = $0000040F;
  wdIgbo = $00000470;
  wdIndonesian = $00000421;
  wdInuktitut = $0000045D;
  wdItalian = $00000410;
  wdSwissItalian = $00000810;
  wdJapanese = $00000411;
  wdKannada = $0000044B;
  wdKanuri = $00000471;
  wdKashmiri = $00000460;
  wdKazakh = $0000043F;
  wdKhmer = $00000453;
  wdKirghiz = $00000440;
  wdKonkani = $00000457;
  wdKorean = $00000412;
  wdKyrgyz = $00000440;
  wdLao = $00000454;
  wdLatin = $00000476;
  wdLatvian = $00000426;
  wdLithuanian = $00000427;
  wdMacedonianFYROM = $0000042F;
  wdMalaysian = $0000043E;
  wdMalayBruneiDarussalam = $0000083E;
  wdMalayalam = $0000044C;
  wdMaltese = $0000043A;
  wdManipuri = $00000458;
  wdMarathi = $0000044E;
  wdMongolian = $00000450;
  wdNepali = $00000461;
  wdNorwegianBokmol = $00000414;
  wdNorwegianNynorsk = $00000814;
  wdOriya = $00000448;
  wdOromo = $00000472;
  wdPashto = $00000463;
  wdPolish = $00000415;
  wdPortugueseBrazil = $00000416;
  wdPortuguese = $00000816;
  wdPunjabi = $00000446;
  wdRhaetoRomanic = $00000417;
  wdRomanianMoldova = $00000818;
  wdRomanian = $00000418;
  wdRussianMoldova = $00000819;
  wdRussian = $00000419;
  wdSamiLappish = $0000043B;
  wdSanskrit = $0000044F;
  wdSerbianCyrillic = $00000C1A;
  wdSerbianLatin = $0000081A;
  wdSinhalese = $0000045B;
  wdSindhi = $00000459;
  wdSindhiPakistan = $00000859;
  wdSlovak = $0000041B;
  wdSlovenian = $00000424;
  wdSomali = $00000477;
  wdSorbian = $0000042E;
  wdSpanishArgentina = $00002C0A;
  wdSpanishBolivia = $0000400A;
  wdSpanishChile = $0000340A;
  wdSpanishColombia = $0000240A;
  wdSpanishCostaRica = $0000140A;
  wdSpanishDominicanRepublic = $00001C0A;
  wdSpanishEcuador = $0000300A;
  wdSpanishElSalvador = $0000440A;
  wdSpanishGuatemala = $0000100A;
  wdSpanishHonduras = $0000480A;
  wdMexicanSpanish = $0000080A;
  wdSpanishNicaragua = $00004C0A;
  wdSpanishPanama = $0000180A;
  wdSpanishParaguay = $00003C0A;
  wdSpanishPeru = $0000280A;
  wdSpanishPuertoRico = $0000500A;
  wdSpanishModernSort = $00000C0A;
  wdSpanish = $0000040A;
  wdSpanishUruguay = $0000380A;
  wdSpanishVenezuela = $0000200A;
  wdSesotho = $00000430;
  wdSutu = $00000430;
  wdSwahili = $00000441;
  wdSwedishFinland = $0000081D;
  wdSwedish = $0000041D;
  wdSyriac = $0000045A;
  wdTajik = $00000428;
  wdTamazight = $0000045F;
  wdTamazightLatin = $0000085F;
  wdTamil = $00000449;
  wdTatar = $00000444;
  wdTelugu = $0000044A;
  wdThai = $0000041E;
  wdTibetan = $00000451;
  wdTigrignaEthiopic = $00000473;
  wdTigrignaEritrea = $00000873;
  wdTsonga = $00000431;
  wdTswana = $00000432;
  wdTurkish = $0000041F;
  wdTurkmen = $00000442;
  wdUkrainian = $00000422;
  wdUrdu = $00000420;
  wdUzbekCyrillic = $00000843;
  wdUzbekLatin = $00000443;
  wdVenda = $00000433;
  wdVietnamese = $0000042A;
  wdWelsh = $00000452;
  wdXhosa = $00000434;
  wdYi = $00000478;
  wdYiddish = $0000043D;
  wdYoruba = $0000046A;
  wdZulu = $00000435;

// Constants for enum WdFieldType
type
  WdFieldType = TOleEnum;
const
  wdFieldEmpty = $FFFFFFFF;
  wdFieldRef = $00000003;
  wdFieldIndexEntry = $00000004;
  wdFieldFootnoteRef = $00000005;
  wdFieldSet = $00000006;
  wdFieldIf = $00000007;
  wdFieldIndex = $00000008;
  wdFieldTOCEntry = $00000009;
  wdFieldStyleRef = $0000000A;
  wdFieldRefDoc = $0000000B;
  wdFieldSequence = $0000000C;
  wdFieldTOC = $0000000D;
  wdFieldInfo = $0000000E;
  wdFieldTitle = $0000000F;
  wdFieldSubject = $00000010;
  wdFieldAuthor = $00000011;
  wdFieldKeyWord = $00000012;
  wdFieldComments = $00000013;
  wdFieldLastSavedBy = $00000014;
  wdFieldCreateDate = $00000015;
  wdFieldSaveDate = $00000016;
  wdFieldPrintDate = $00000017;
  wdFieldRevisionNum = $00000018;
  wdFieldEditTime = $00000019;
  wdFieldNumPages = $0000001A;
  wdFieldNumWords = $0000001B;
  wdFieldNumChars = $0000001C;
  wdFieldFileName = $0000001D;
  wdFieldTemplate = $0000001E;
  wdFieldDate = $0000001F;
  wdFieldTime = $00000020;
  wdFieldPage = $00000021;
  wdFieldExpression = $00000022;
  wdFieldQuote = $00000023;
  wdFieldInclude = $00000024;
  wdFieldPageRef = $00000025;
  wdFieldAsk = $00000026;
  wdFieldFillIn = $00000027;
  wdFieldData = $00000028;
  wdFieldNext = $00000029;
  wdFieldNextIf = $0000002A;
  wdFieldSkipIf = $0000002B;
  wdFieldMergeRec = $0000002C;
  wdFieldDDE = $0000002D;
  wdFieldDDEAuto = $0000002E;
  wdFieldGlossary = $0000002F;
  wdFieldPrint = $00000030;
  wdFieldFormula = $00000031;
  wdFieldGoToButton = $00000032;
  wdFieldMacroButton = $00000033;
  wdFieldAutoNumOutline = $00000034;
  wdFieldAutoNumLegal = $00000035;
  wdFieldAutoNum = $00000036;
  wdFieldImport = $00000037;
  wdFieldLink = $00000038;
  wdFieldSymbol = $00000039;
  wdFieldEmbed = $0000003A;
  wdFieldMergeField = $0000003B;
  wdFieldUserName = $0000003C;
  wdFieldUserInitials = $0000003D;
  wdFieldUserAddress = $0000003E;
  wdFieldBarCode = $0000003F;
  wdFieldDocVariable = $00000040;
  wdFieldSection = $00000041;
  wdFieldSectionPages = $00000042;
  wdFieldIncludePicture = $00000043;
  wdFieldIncludeText = $00000044;
  wdFieldFileSize = $00000045;
  wdFieldFormTextInput = $00000046;
  wdFieldFormCheckBox = $00000047;
  wdFieldNoteRef = $00000048;
  wdFieldTOA = $00000049;
  wdFieldTOAEntry = $0000004A;
  wdFieldMergeSeq = $0000004B;
  wdFieldPrivate = $0000004D;
  wdFieldDatabase = $0000004E;
  wdFieldAutoText = $0000004F;
  wdFieldCompare = $00000050;
  wdFieldAddin = $00000051;
  wdFieldSubscriber = $00000052;
  wdFieldFormDropDown = $00000053;
  wdFieldAdvance = $00000054;
  wdFieldDocProperty = $00000055;
  wdFieldOCX = $00000057;
  wdFieldHyperlink = $00000058;
  wdFieldAutoTextList = $00000059;
  wdFieldListNum = $0000005A;
  wdFieldHTMLActiveX = $0000005B;
  wdFieldBidiOutline = $0000005C;
  wdFieldAddressBlock = $0000005D;
  wdFieldGreetingLine = $0000005E;
  wdFieldShape = $0000005F;
  wdFieldCitation = $00000060;
  wdFieldBibliography = $00000061;

// Constants for enum WdBuiltinStyle
type
  WdBuiltinStyle = TOleEnum;
const
  wdStyleNormal = $FFFFFFFF;
  wdStyleEnvelopeAddress = $FFFFFFDB;
  wdStyleEnvelopeReturn = $FFFFFFDA;
  wdStyleBodyText = $FFFFFFBD;
  wdStyleHeading1 = $FFFFFFFE;
  wdStyleHeading2 = $FFFFFFFD;
  wdStyleHeading3 = $FFFFFFFC;
  wdStyleHeading4 = $FFFFFFFB;
  wdStyleHeading5 = $FFFFFFFA;
  wdStyleHeading6 = $FFFFFFF9;
  wdStyleHeading7 = $FFFFFFF8;
  wdStyleHeading8 = $FFFFFFF7;
  wdStyleHeading9 = $FFFFFFF6;
  wdStyleIndex1 = $FFFFFFF5;
  wdStyleIndex2 = $FFFFFFF4;
  wdStyleIndex3 = $FFFFFFF3;
  wdStyleIndex4 = $FFFFFFF2;
  wdStyleIndex5 = $FFFFFFF1;
  wdStyleIndex6 = $FFFFFFF0;
  wdStyleIndex7 = $FFFFFFEF;
  wdStyleIndex8 = $FFFFFFEE;
  wdStyleIndex9 = $FFFFFFED;
  wdStyleTOC1 = $FFFFFFEC;
  wdStyleTOC2 = $FFFFFFEB;
  wdStyleTOC3 = $FFFFFFEA;
  wdStyleTOC4 = $FFFFFFE9;
  wdStyleTOC5 = $FFFFFFE8;
  wdStyleTOC6 = $FFFFFFE7;
  wdStyleTOC7 = $FFFFFFE6;
  wdStyleTOC8 = $FFFFFFE5;
  wdStyleTOC9 = $FFFFFFE4;
  wdStyleNormalIndent = $FFFFFFE3;
  wdStyleFootnoteText = $FFFFFFE2;
  wdStyleCommentText = $FFFFFFE1;
  wdStyleHeader = $FFFFFFE0;
  wdStyleFooter = $FFFFFFDF;
  wdStyleIndexHeading = $FFFFFFDE;
  wdStyleCaption = $FFFFFFDD;
  wdStyleTableOfFigures = $FFFFFFDC;
  wdStyleFootnoteReference = $FFFFFFD9;
  wdStyleCommentReference = $FFFFFFD8;
  wdStyleLineNumber = $FFFFFFD7;
  wdStylePageNumber = $FFFFFFD6;
  wdStyleEndnoteReference = $FFFFFFD5;
  wdStyleEndnoteText = $FFFFFFD4;
  wdStyleTableOfAuthorities = $FFFFFFD3;
  wdStyleMacroText = $FFFFFFD2;
  wdStyleTOAHeading = $FFFFFFD1;
  wdStyleList = $FFFFFFD0;
  wdStyleListBullet = $FFFFFFCF;
  wdStyleListNumber = $FFFFFFCE;
  wdStyleList2 = $FFFFFFCD;
  wdStyleList3 = $FFFFFFCC;
  wdStyleList4 = $FFFFFFCB;
  wdStyleList5 = $FFFFFFCA;
  wdStyleListBullet2 = $FFFFFFC9;
  wdStyleListBullet3 = $FFFFFFC8;
  wdStyleListBullet4 = $FFFFFFC7;
  wdStyleListBullet5 = $FFFFFFC6;
  wdStyleListNumber2 = $FFFFFFC5;
  wdStyleListNumber3 = $FFFFFFC4;
  wdStyleListNumber4 = $FFFFFFC3;
  wdStyleListNumber5 = $FFFFFFC2;
  wdStyleTitle = $FFFFFFC1;
  wdStyleClosing = $FFFFFFC0;
  wdStyleSignature = $FFFFFFBF;
  wdStyleDefaultParagraphFont = $FFFFFFBE;
  wdStyleBodyTextIndent = $FFFFFFBC;
  wdStyleListContinue = $FFFFFFBB;
  wdStyleListContinue2 = $FFFFFFBA;
  wdStyleListContinue3 = $FFFFFFB9;
  wdStyleListContinue4 = $FFFFFFB8;
  wdStyleListContinue5 = $FFFFFFB7;
  wdStyleMessageHeader = $FFFFFFB6;
  wdStyleSubtitle = $FFFFFFB5;
  wdStyleSalutation = $FFFFFFB4;
  wdStyleDate = $FFFFFFB3;
  wdStyleBodyTextFirstIndent = $FFFFFFB2;
  wdStyleBodyTextFirstIndent2 = $FFFFFFB1;
  wdStyleNoteHeading = $FFFFFFB0;
  wdStyleBodyText2 = $FFFFFFAF;
  wdStyleBodyText3 = $FFFFFFAE;
  wdStyleBodyTextIndent2 = $FFFFFFAD;
  wdStyleBodyTextIndent3 = $FFFFFFAC;
  wdStyleBlockQuotation = $FFFFFFAB;
  wdStyleHyperlink = $FFFFFFAA;
  wdStyleHyperlinkFollowed = $FFFFFFA9;
  wdStyleStrong = $FFFFFFA8;
  wdStyleEmphasis = $FFFFFFA7;
  wdStyleNavPane = $FFFFFFA6;
  wdStylePlainText = $FFFFFFA5;
  wdStyleHtmlNormal = $FFFFFFA1;
  wdStyleHtmlAcronym = $FFFFFFA0;
  wdStyleHtmlAddress = $FFFFFF9F;
  wdStyleHtmlCite = $FFFFFF9E;
  wdStyleHtmlCode = $FFFFFF9D;
  wdStyleHtmlDfn = $FFFFFF9C;
  wdStyleHtmlKbd = $FFFFFF9B;
  wdStyleHtmlPre = $FFFFFF9A;
  wdStyleHtmlSamp = $FFFFFF99;
  wdStyleHtmlTt = $FFFFFF98;
  wdStyleHtmlVar = $FFFFFF97;
  wdStyleNormalTable = $FFFFFF96;
  wdStyleNormalObject = $FFFFFF62;
  wdStyleTableLightShading = $FFFFFF61;
  wdStyleTableLightList = $FFFFFF60;
  wdStyleTableLightGrid = $FFFFFF5F;
  wdStyleTableMediumShading1 = $FFFFFF5E;
  wdStyleTableMediumShading2 = $FFFFFF5D;
  wdStyleTableMediumList1 = $FFFFFF5C;
  wdStyleTableMediumList2 = $FFFFFF5B;
  wdStyleTableMediumGrid1 = $FFFFFF5A;
  wdStyleTableMediumGrid2 = $FFFFFF59;
  wdStyleTableMediumGrid3 = $FFFFFF58;
  wdStyleTableDarkList = $FFFFFF57;
  wdStyleTableColorfulShading = $FFFFFF56;
  wdStyleTableColorfulList = $FFFFFF55;
  wdStyleTableColorfulGrid = $FFFFFF54;
  wdStyleTableLightShadingAccent1 = $FFFFFF53;
  wdStyleTableLightListAccent1 = $FFFFFF52;
  wdStyleTableLightGridAccent1 = $FFFFFF51;
  wdStyleTableMediumShading1Accent1 = $FFFFFF50;
  wdStyleTableMediumShading2Accent1 = $FFFFFF4F;
  wdStyleTableMediumList1Accent1 = $FFFFFF4E;
  wdStyleListParagraph = $FFFFFF4C;
  wdStyleQuote = $FFFFFF4B;
  wdStyleIntenseQuote = $FFFFFF4A;
  wdStyleSubtleEmphasis = $FFFFFEFB;
  wdStyleIntenseEmphasis = $FFFFFEFA;
  wdStyleSubtleReference = $FFFFFEF9;
  wdStyleIntenseReference = $FFFFFEF8;
  wdStyleBookTitle = $FFFFFEF7;
  wdStyleBibliography = $FFFFFEF6;
  wdStyleTocHeading = $FFFFFEF5;

// Constants for enum WdWordDialogTab
type
  WdWordDialogTab = TOleEnum;
const
  wdDialogToolsOptionsTabView = $000000CC;
  wdDialogToolsOptionsTabGeneral = $000000CB;
  wdDialogToolsOptionsTabEdit = $000000E0;
  wdDialogToolsOptionsTabPrint = $000000D0;
  wdDialogToolsOptionsTabSave = $000000D1;
  wdDialogToolsOptionsTabProofread = $000000D3;
  wdDialogToolsOptionsTabTrackChanges = $00000182;
  wdDialogToolsOptionsTabUserInfo = $000000D5;
  wdDialogToolsOptionsTabCompatibility = $0000020D;
  wdDialogToolsOptionsTabTypography = $000002E3;
  wdDialogToolsOptionsTabFileLocations = $000000E1;
  wdDialogToolsOptionsTabFuzzy = $00000316;
  wdDialogToolsOptionsTabHangulHanjaConversion = $00000312;
  wdDialogToolsOptionsTabBidi = $00000405;
  wdDialogToolsOptionsTabSecurity = $00000551;
  wdDialogFilePageSetupTabMargins = $000249F0;
  wdDialogFilePageSetupTabPaper = $000249F1;
  wdDialogFilePageSetupTabLayout = $000249F3;
  wdDialogFilePageSetupTabCharsLines = $000249F4;
  wdDialogInsertSymbolTabSymbols = $00030D40;
  wdDialogInsertSymbolTabSpecialCharacters = $00030D41;
  wdDialogNoteOptionsTabAllFootnotes = $000493E0;
  wdDialogNoteOptionsTabAllEndnotes = $000493E1;
  wdDialogInsertIndexAndTablesTabIndex = $00061A80;
  wdDialogInsertIndexAndTablesTabTableOfContents = $00061A81;
  wdDialogInsertIndexAndTablesTabTableOfFigures = $00061A82;
  wdDialogInsertIndexAndTablesTabTableOfAuthorities = $00061A83;
  wdDialogOrganizerTabStyles = $0007A120;
  wdDialogOrganizerTabAutoText = $0007A121;
  wdDialogOrganizerTabCommandBars = $0007A122;
  wdDialogOrganizerTabMacros = $0007A123;
  wdDialogFormatFontTabFont = $000927C0;
  wdDialogFormatFontTabCharacterSpacing = $000927C1;
  wdDialogFormatFontTabAnimation = $000927C2;
  wdDialogFormatBordersAndShadingTabBorders = $000AAE60;
  wdDialogFormatBordersAndShadingTabPageBorder = $000AAE61;
  wdDialogFormatBordersAndShadingTabShading = $000AAE62;
  wdDialogToolsEnvelopesAndLabelsTabEnvelopes = $000C3500;
  wdDialogToolsEnvelopesAndLabelsTabLabels = $000C3501;
  wdDialogFormatParagraphTabIndentsAndSpacing = $000F4240;
  wdDialogFormatParagraphTabTextFlow = $000F4241;
  wdDialogFormatParagraphTabTeisai = $000F4242;
  wdDialogFormatDrawingObjectTabColorsAndLines = $00124F80;
  wdDialogFormatDrawingObjectTabSize = $00124F81;
  wdDialogFormatDrawingObjectTabPosition = $00124F82;
  wdDialogFormatDrawingObjectTabWrapping = $00124F83;
  wdDialogFormatDrawingObjectTabPicture = $00124F84;
  wdDialogFormatDrawingObjectTabTextbox = $00124F85;
  wdDialogFormatDrawingObjectTabWeb = $00124F86;
  wdDialogFormatDrawingObjectTabHR = $00124F87;
  wdDialogToolsAutoCorrectExceptionsTabFirstLetter = $00155CC0;
  wdDialogToolsAutoCorrectExceptionsTabInitialCaps = $00155CC1;
  wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = $00155CC2;
  wdDialogToolsAutoCorrectExceptionsTabIac = $00155CC3;
  wdDialogFormatBulletsAndNumberingTabBulleted = $0016E360;
  wdDialogFormatBulletsAndNumberingTabNumbered = $0016E361;
  wdDialogFormatBulletsAndNumberingTabOutlineNumbered = $0016E362;
  wdDialogLetterWizardTabLetterFormat = $00186A00;
  wdDialogLetterWizardTabRecipientInfo = $00186A01;
  wdDialogLetterWizardTabOtherElements = $00186A02;
  wdDialogLetterWizardTabSenderInfo = $00186A03;
  wdDialogToolsAutoManagerTabAutoCorrect = $0019F0A0;
  wdDialogToolsAutoManagerTabAutoFormatAsYouType = $0019F0A1;
  wdDialogToolsAutoManagerTabAutoText = $0019F0A2;
  wdDialogToolsAutoManagerTabAutoFormat = $0019F0A3;
  wdDialogToolsAutoManagerTabSmartTags = $0019F0A4;
  wdDialogTablePropertiesTabTable = $001B7740;
  wdDialogTablePropertiesTabRow = $001B7741;
  wdDialogTablePropertiesTabColumn = $001B7742;
  wdDialogTablePropertiesTabCell = $001B7743;
  wdDialogEmailOptionsTabSignature = $001CFDE0;
  wdDialogEmailOptionsTabStationary = $001CFDE1;
  wdDialogEmailOptionsTabQuoting = $001CFDE2;
  wdDialogWebOptionsBrowsers = $001E8480;
  wdDialogWebOptionsGeneral = $001E8480;
  wdDialogWebOptionsFiles = $001E8481;
  wdDialogWebOptionsPictures = $001E8482;
  wdDialogWebOptionsEncoding = $001E8483;
  wdDialogWebOptionsFonts = $001E8484;
  wdDialogToolsOptionsTabAcetate = $000004F2;
  wdDialogTemplates = $00200B20;
  wdDialogTemplatesXMLSchema = $00200B21;
  wdDialogTemplatesXMLExpansionPacks = $00200B22;
  wdDialogTemplatesLinkedCSS = $00200B23;
  wdDialogStyleManagementTabEdit = $002191C0;
  wdDialogStyleManagementTabRecommend = $002191C1;
  wdDialogStyleManagementTabRestrict = $002191C2;

// Constants for enum WdWordDialogTabHID
type
  WdWordDialogTabHID = TOleEnum;
const
  wdDialogFilePageSetupTabPaperSize = $000249F1;
  wdDialogFilePageSetupTabPaperSource = $000249F2;

// Constants for enum WdWordDialog
type
  WdWordDialog = TOleEnum;
const
  wdDialogHelpAbout = $00000009;
  wdDialogHelpWordPerfectHelp = $0000000A;
  wdDialogDocumentStatistics = $0000004E;
  wdDialogFileNew = $0000004F;
  wdDialogFileOpen = $00000050;
  wdDialogMailMergeOpenDataSource = $00000051;
  wdDialogMailMergeOpenHeaderSource = $00000052;
  wdDialogFileSaveAs = $00000054;
  wdDialogFileSummaryInfo = $00000056;
  wdDialogToolsTemplates = $00000057;
  wdDialogFilePrint = $00000058;
  wdDialogFilePrintSetup = $00000061;
  wdDialogFileFind = $00000063;
  wdDialogFormatAddrFonts = $00000067;
  wdDialogEditPasteSpecial = $0000006F;
  wdDialogEditFind = $00000070;
  wdDialogEditReplace = $00000075;
  wdDialogEditStyle = $00000078;
  wdDialogEditLinks = $0000007C;
  wdDialogEditObject = $0000007D;
  wdDialogTableToText = $00000080;
  wdDialogTextToTable = $0000007F;
  wdDialogTableInsertTable = $00000081;
  wdDialogTableInsertCells = $00000082;
  wdDialogTableInsertRow = $00000083;
  wdDialogTableDeleteCells = $00000085;
  wdDialogTableSplitCells = $00000089;
  wdDialogTableRowHeight = $0000008E;
  wdDialogTableColumnWidth = $0000008F;
  wdDialogToolsCustomize = $00000098;
  wdDialogInsertBreak = $0000009F;
  wdDialogInsertSymbol = $000000A2;
  wdDialogInsertPicture = $000000A3;
  wdDialogInsertFile = $000000A4;
  wdDialogInsertDateTime = $000000A5;
  wdDialogInsertField = $000000A6;
  wdDialogInsertMergeField = $000000A7;
  wdDialogInsertBookmark = $000000A8;
  wdDialogMarkIndexEntry = $000000A9;
  wdDialogInsertIndex = $000000AA;
  wdDialogInsertTableOfContents = $000000AB;
  wdDialogInsertObject = $000000AC;
  wdDialogToolsCreateEnvelope = $000000AD;
  wdDialogFormatFont = $000000AE;
  wdDialogFormatParagraph = $000000AF;
  wdDialogFormatSectionLayout = $000000B0;
  wdDialogFormatColumns = $000000B1;
  wdDialogFileDocumentLayout = $000000B2;
  wdDialogFilePageSetup = $000000B2;
  wdDialogFormatTabs = $000000B3;
  wdDialogFormatStyle = $000000B4;
  wdDialogFormatDefineStyleFont = $000000B5;
  wdDialogFormatDefineStylePara = $000000B6;
  wdDialogFormatDefineStyleTabs = $000000B7;
  wdDialogFormatDefineStyleFrame = $000000B8;
  wdDialogFormatDefineStyleBorders = $000000B9;
  wdDialogFormatDefineStyleLang = $000000BA;
  wdDialogFormatPicture = $000000BB;
  wdDialogToolsLanguage = $000000BC;
  wdDialogFormatBordersAndShading = $000000BD;
  wdDialogFormatFrame = $000000BE;
  wdDialogToolsThesaurus = $000000C2;
  wdDialogToolsHyphenation = $000000C3;
  wdDialogToolsBulletsNumbers = $000000C4;
  wdDialogToolsHighlightChanges = $000000C5;
  wdDialogToolsRevisions = $000000C5;
  wdDialogToolsCompareDocuments = $000000C6;
  wdDialogTableSort = $000000C7;
  wdDialogToolsOptionsGeneral = $000000CB;
  wdDialogToolsOptionsView = $000000CC;
  wdDialogToolsAdvancedSettings = $000000CE;
  wdDialogToolsOptionsPrint = $000000D0;
  wdDialogToolsOptionsSave = $000000D1;
  wdDialogToolsOptionsSpellingAndGrammar = $000000D3;
  wdDialogToolsOptionsUserInfo = $000000D5;
  wdDialogToolsMacroRecord = $000000D6;
  wdDialogToolsMacro = $000000D7;
  wdDialogWindowActivate = $000000DC;
  wdDialogFormatRetAddrFonts = $000000DD;
  wdDialogOrganizer = $000000DE;
  wdDialogToolsOptionsEdit = $000000E0;
  wdDialogToolsOptionsFileLocations = $000000E1;
  wdDialogToolsWordCount = $000000E4;
  wdDialogControlRun = $000000EB;
  wdDialogInsertPageNumbers = $00000126;
  wdDialogFormatPageNumber = $0000012A;
  wdDialogCopyFile = $0000012C;
  wdDialogFormatChangeCase = $00000142;
  wdDialogUpdateTOC = $0000014B;
  wdDialogInsertDatabase = $00000155;
  wdDialogTableFormula = $0000015C;
  wdDialogFormFieldOptions = $00000161;
  wdDialogInsertCaption = $00000165;
  wdDialogInsertCaptionNumbering = $00000166;
  wdDialogInsertAutoCaption = $00000167;
  wdDialogFormFieldHelp = $00000169;
  wdDialogInsertCrossReference = $0000016F;
  wdDialogInsertFootnote = $00000172;
  wdDialogNoteOptions = $00000175;
  wdDialogToolsAutoCorrect = $0000017A;
  wdDialogToolsOptionsTrackChanges = $00000182;
  wdDialogConvertObject = $00000188;
  wdDialogInsertAddCaption = $00000192;
  wdDialogConnect = $000001A4;
  wdDialogToolsCustomizeKeyboard = $000001B0;
  wdDialogToolsCustomizeMenus = $000001B1;
  wdDialogToolsMergeDocuments = $000001B3;
  wdDialogMarkTableOfContentsEntry = $000001BA;
  wdDialogFileMacPageSetupGX = $000001BC;
  wdDialogFilePrintOneCopy = $000001BD;
  wdDialogEditFrame = $000001CA;
  wdDialogMarkCitation = $000001CF;
  wdDialogTableOfContentsOptions = $000001D6;
  wdDialogInsertTableOfAuthorities = $000001D7;
  wdDialogInsertTableOfFigures = $000001D8;
  wdDialogInsertIndexAndTables = $000001D9;
  wdDialogInsertFormField = $000001E3;
  wdDialogFormatDropCap = $000001E8;
  wdDialogToolsCreateLabels = $000001E9;
  wdDialogToolsProtectDocument = $000001F7;
  wdDialogFormatStyleGallery = $000001F9;
  wdDialogToolsAcceptRejectChanges = $000001FA;
  wdDialogHelpWordPerfectHelpOptions = $000001FF;
  wdDialogToolsUnprotectDocument = $00000209;
  wdDialogToolsOptionsCompatibility = $0000020D;
  wdDialogTableOfCaptionsOptions = $00000227;
  wdDialogTableAutoFormat = $00000233;
  wdDialogMailMergeFindRecord = $00000239;
  wdDialogReviewAfmtRevisions = $0000023A;
  wdDialogViewZoom = $00000241;
  wdDialogToolsProtectSection = $00000242;
  wdDialogFontSubstitution = $00000245;
  wdDialogInsertSubdocument = $00000247;
  wdDialogNewToolbar = $0000024A;
  wdDialogToolsEnvelopesAndLabels = $0000025F;
  wdDialogFormatCallout = $00000262;
  wdDialogTableFormatCell = $00000264;
  wdDialogToolsCustomizeMenuBar = $00000267;
  wdDialogFileRoutingSlip = $00000270;
  wdDialogEditTOACategory = $00000271;
  wdDialogToolsManageFields = $00000277;
  wdDialogDrawSnapToGrid = $00000279;
  wdDialogDrawAlign = $0000027A;
  wdDialogMailMergeCreateDataSource = $00000282;
  wdDialogMailMergeCreateHeaderSource = $00000283;
  wdDialogMailMerge = $000002A4;
  wdDialogMailMergeCheck = $000002A5;
  wdDialogMailMergeHelper = $000002A8;
  wdDialogMailMergeQueryOptions = $000002A9;
  wdDialogFileMacPageSetup = $000002AD;
  wdDialogListCommands = $000002D3;
  wdDialogEditCreatePublisher = $000002DC;
  wdDialogEditSubscribeTo = $000002DD;
  wdDialogEditPublishOptions = $000002DF;
  wdDialogEditSubscribeOptions = $000002E0;
  wdDialogFileMacCustomPageSetupGX = $000002E1;
  wdDialogToolsOptionsTypography = $000002E3;
  wdDialogToolsAutoCorrectExceptions = $000002FA;
  wdDialogToolsOptionsAutoFormatAsYouType = $0000030A;
  wdDialogMailMergeUseAddressBook = $0000030B;
  wdDialogToolsHangulHanjaConversion = $00000310;
  wdDialogToolsOptionsFuzzy = $00000316;
  wdDialogEditGoToOld = $0000032B;
  wdDialogInsertNumber = $0000032C;
  wdDialogLetterWizard = $00000335;
  wdDialogFormatBulletsAndNumbering = $00000338;
  wdDialogToolsSpellingAndGrammar = $0000033C;
  wdDialogToolsCreateDirectory = $00000341;
  wdDialogTableWrapping = $00000356;
  wdDialogFormatTheme = $00000357;
  wdDialogTableProperties = $0000035D;
  wdDialogEmailOptions = $0000035F;
  wdDialogCreateAutoText = $00000368;
  wdDialogToolsAutoSummarize = $0000036A;
  wdDialogToolsGrammarSettings = $00000375;
  wdDialogEditGoTo = $00000380;
  wdDialogWebOptions = $00000382;
  wdDialogInsertHyperlink = $0000039D;
  wdDialogToolsAutoManager = $00000393;
  wdDialogFileVersions = $000003B1;
  wdDialogToolsOptionsAutoFormat = $000003BF;
  wdDialogFormatDrawingObject = $000003C0;
  wdDialogToolsOptions = $000003CE;
  wdDialogFitText = $000003D7;
  wdDialogEditAutoText = $000003D9;
  wdDialogPhoneticGuide = $000003DA;
  wdDialogToolsDictionary = $000003DD;
  wdDialogFileSaveVersion = $000003EF;
  wdDialogToolsOptionsBidi = $00000405;
  wdDialogFrameSetProperties = $00000432;
  wdDialogTableTableOptions = $00000438;
  wdDialogTableCellOptions = $00000439;
  wdDialogIMESetDefault = $00000446;
  wdDialogTCSCTranslator = $00000484;
  wdDialogHorizontalInVertical = $00000488;
  wdDialogTwoLinesInOne = $00000489;
  wdDialogFormatEncloseCharacters = $0000048A;
  wdDialogConsistencyChecker = $00000461;
  wdDialogToolsOptionsSmartTag = $00000573;
  wdDialogFormatStylesCustom = $000004E0;
  wdDialogCSSLinks = $000004ED;
  wdDialogInsertWebComponent = $0000052C;
  wdDialogToolsOptionsEditCopyPaste = $0000054C;
  wdDialogToolsOptionsSecurity = $00000551;
  wdDialogSearch = $00000553;
  wdDialogShowRepairs = $00000565;
  wdDialogMailMergeInsertAsk = $00000FCF;
  wdDialogMailMergeInsertFillIn = $00000FD0;
  wdDialogMailMergeInsertIf = $00000FD1;
  wdDialogMailMergeInsertNextIf = $00000FD5;
  wdDialogMailMergeInsertSet = $00000FD6;
  wdDialogMailMergeInsertSkipIf = $00000FD7;
  wdDialogMailMergeFieldMapping = $00000518;
  wdDialogMailMergeInsertAddressBlock = $00000519;
  wdDialogMailMergeInsertGreetingLine = $0000051A;
  wdDialogMailMergeInsertFields = $0000051B;
  wdDialogMailMergeRecipients = $0000051C;
  wdDialogMailMergeFindRecipient = $0000052E;
  wdDialogMailMergeSetDocumentType = $0000053B;
  wdDialogLabelOptions = $00000557;
  wdDialogXMLElementAttributes = $000005B4;
  wdDialogSchemaLibrary = $00000589;
  wdDialogPermission = $000005BD;
  wdDialogMyPermission = $0000059D;
  wdDialogXMLOptions = $00000591;
  wdDialogFormattingRestrictions = $00000593;
  wdDialogSourceManager = $00000780;
  wdDialogCreateSource = $00000782;
  wdDialogDocumentInspector = $000005CA;
  wdDialogStyleManagement = $0000079C;
  wdDialogInsertSource = $00000848;
  wdDialogOMathRecognizedFunctions = $00000875;
  wdDialogInsertPlaceholder = $0000092C;
  wdDialogBuildingBlockOrganizer = $00000813;
  wdDialogContentControlProperties = $0000095A;
  wdDialogCompatibilityChecker = $00000987;
  wdDialogExportAsFixedFormat = $0000092D;
  wdDialogFileNew2007 = $0000045C;

// Constants for enum WdWordDialogHID
type
  WdWordDialogHID = TOleEnum;
const
  emptyenum___________ = $00000000;

// Constants for enum WdFieldKind
type
  WdFieldKind = TOleEnum;
const
  wdFieldKindNone = $00000000;
  wdFieldKindHot = $00000001;
  wdFieldKindWarm = $00000002;
  wdFieldKindCold = $00000003;

// Constants for enum WdTextFormFieldType
type
  WdTextFormFieldType = TOleEnum;
const
  wdRegularText = $00000000;
  wdNumberText = $00000001;
  wdDateText = $00000002;
  wdCurrentDateText = $00000003;
  wdCurrentTimeText = $00000004;
  wdCalculationText = $00000005;

// Constants for enum WdChevronConvertRule
type
  WdChevronConvertRule = TOleEnum;
const
  wdNeverConvert = $00000000;
  wdAlwaysConvert = $00000001;
  wdAskToNotConvert = $00000002;
  wdAskToConvert = $00000003;

// Constants for enum WdMailMergeMainDocType
type
  WdMailMergeMainDocType = TOleEnum;
const
  wdNotAMergeDocument = $FFFFFFFF;
  wdFormLetters = $00000000;
  wdMailingLabels = $00000001;
  wdEnvelopes = $00000002;
  wdCatalog = $00000003;
  wdEMail = $00000004;
  wdFax = $00000005;
  wdDirectory = $00000003;

// Constants for enum WdMailMergeState
type
  WdMailMergeState = TOleEnum;
const
  wdNormalDocument = $00000000;
  wdMainDocumentOnly = $00000001;
  wdMainAndDataSource = $00000002;
  wdMainAndHeader = $00000003;
  wdMainAndSourceAndHeader = $00000004;
  wdDataSource = $00000005;

// Constants for enum WdMailMergeDestination
type
  WdMailMergeDestination = TOleEnum;
const
  wdSendToNewDocument = $00000000;
  wdSendToPrinter = $00000001;
  wdSendToEmail = $00000002;
  wdSendToFax = $00000003;

// Constants for enum WdMailMergeActiveRecord
type
  WdMailMergeActiveRecord = TOleEnum;
const
  wdNoActiveRecord = $FFFFFFFF;
  wdNextRecord = $FFFFFFFE;
  wdPreviousRecord = $FFFFFFFD;
  wdFirstRecord = $FFFFFFFC;
  wdLastRecord = $FFFFFFFB;
  wdFirstDataSourceRecord = $FFFFFFFA;
  wdLastDataSourceRecord = $FFFFFFF9;
  wdNextDataSourceRecord = $FFFFFFF8;
  wdPreviousDataSourceRecord = $FFFFFFF7;

// Constants for enum WdMailMergeDefaultRecord
type
  WdMailMergeDefaultRecord = TOleEnum;
const
  wdDefaultFirstRecord = $00000001;
  wdDefaultLastRecord = $FFFFFFF0;

// Constants for enum WdMailMergeDataSource
type
  WdMailMergeDataSource = TOleEnum;
const
  wdNoMergeInfo = $FFFFFFFF;
  wdMergeInfoFromWord = $00000000;
  wdMergeInfoFromAccessDDE = $00000001;
  wdMergeInfoFromExcelDDE = $00000002;
  wdMergeInfoFromMSQueryDDE = $00000003;
  wdMergeInfoFromODBC = $00000004;
  wdMergeInfoFromODSO = $00000005;

// Constants for enum WdMailMergeComparison
type
  WdMailMergeComparison = TOleEnum;
const
  wdMergeIfEqual = $00000000;
  wdMergeIfNotEqual = $00000001;
  wdMergeIfLessThan = $00000002;
  wdMergeIfGreaterThan = $00000003;
  wdMergeIfLessThanOrEqual = $00000004;
  wdMergeIfGreaterThanOrEqual = $00000005;
  wdMergeIfIsBlank = $00000006;
  wdMergeIfIsNotBlank = $00000007;

// Constants for enum WdBookmarkSortBy
type
  WdBookmarkSortBy = TOleEnum;
const
  wdSortByName = $00000000;
  wdSortByLocation = $00000001;

// Constants for enum WdWindowState
type
  WdWindowState = TOleEnum;
const
  wdWindowStateNormal = $00000000;
  wdWindowStateMaximize = $00000001;
  wdWindowStateMinimize = $00000002;

// Constants for enum WdPictureLinkType
type
  WdPictureLinkType = TOleEnum;
const
  wdLinkNone = $00000000;
  wdLinkDataInDoc = $00000001;
  wdLinkDataOnDisk = $00000002;

// Constants for enum WdLinkType
type
  WdLinkType = TOleEnum;
const
  wdLinkTypeOLE = $00000000;
  wdLinkTypePicture = $00000001;
  wdLinkTypeText = $00000002;
  wdLinkTypeReference = $00000003;
  wdLinkTypeInclude = $00000004;
  wdLinkTypeImport = $00000005;
  wdLinkTypeDDE = $00000006;
  wdLinkTypeDDEAuto = $00000007;
  wdLinkTypeChart = $00000008;

// Constants for enum WdWindowType
type
  WdWindowType = TOleEnum;
const
  wdWindowDocument = $00000000;
  wdWindowTemplate = $00000001;

// Constants for enum WdViewType
type
  WdViewType = TOleEnum;
const
  wdNormalView = $00000001;
  wdOutlineView = $00000002;
  wdPrintView = $00000003;
  wdPrintPreview = $00000004;
  wdMasterView = $00000005;
  wdWebView = $00000006;
  wdReadingView = $00000007;
  wdConflictView = $00000008;

// Constants for enum WdSeekView
type
  WdSeekView = TOleEnum;
const
  wdSeekMainDocument = $00000000;
  wdSeekPrimaryHeader = $00000001;
  wdSeekFirstPageHeader = $00000002;
  wdSeekEvenPagesHeader = $00000003;
  wdSeekPrimaryFooter = $00000004;
  wdSeekFirstPageFooter = $00000005;
  wdSeekEvenPagesFooter = $00000006;
  wdSeekFootnotes = $00000007;
  wdSeekEndnotes = $00000008;
  wdSeekCurrentPageHeader = $00000009;
  wdSeekCurrentPageFooter = $0000000A;

// Constants for enum WdSpecialPane
type
  WdSpecialPane = TOleEnum;
const
  wdPaneNone = $00000000;
  wdPanePrimaryHeader = $00000001;
  wdPaneFirstPageHeader = $00000002;
  wdPaneEvenPagesHeader = $00000003;
  wdPanePrimaryFooter = $00000004;
  wdPaneFirstPageFooter = $00000005;
  wdPaneEvenPagesFooter = $00000006;
  wdPaneFootnotes = $00000007;
  wdPaneEndnotes = $00000008;
  wdPaneFootnoteContinuationNotice = $00000009;
  wdPaneFootnoteContinuationSeparator = $0000000A;
  wdPaneFootnoteSeparator = $0000000B;
  wdPaneEndnoteContinuationNotice = $0000000C;
  wdPaneEndnoteContinuationSeparator = $0000000D;
  wdPaneEndnoteSeparator = $0000000E;
  wdPaneComments = $0000000F;
  wdPaneCurrentPageHeader = $00000010;
  wdPaneCurrentPageFooter = $00000011;
  wdPaneRevisions = $00000012;
  wdPaneRevisionsHoriz = $00000013;
  wdPaneRevisionsVert = $00000014;

// Constants for enum WdPageFit
type
  WdPageFit = TOleEnum;
const
  wdPageFitNone = $00000000;
  wdPageFitFullPage = $00000001;
  wdPageFitBestFit = $00000002;
  wdPageFitTextFit = $00000003;

// Constants for enum WdBrowseTarget
type
  WdBrowseTarget = TOleEnum;
const
  wdBrowsePage = $00000001;
  wdBrowseSection = $00000002;
  wdBrowseComment = $00000003;
  wdBrowseFootnote = $00000004;
  wdBrowseEndnote = $00000005;
  wdBrowseField = $00000006;
  wdBrowseTable = $00000007;
  wdBrowseGraphic = $00000008;
  wdBrowseHeading = $00000009;
  wdBrowseEdit = $0000000A;
  wdBrowseFind = $0000000B;
  wdBrowseGoTo = $0000000C;

// Constants for enum WdPaperTray
type
  WdPaperTray = TOleEnum;
const
  wdPrinterDefaultBin = $00000000;
  wdPrinterUpperBin = $00000001;
  wdPrinterOnlyBin = $00000001;
  wdPrinterLowerBin = $00000002;
  wdPrinterMiddleBin = $00000003;
  wdPrinterManualFeed = $00000004;
  wdPrinterEnvelopeFeed = $00000005;
  wdPrinterManualEnvelopeFeed = $00000006;
  wdPrinterAutomaticSheetFeed = $00000007;
  wdPrinterTractorFeed = $00000008;
  wdPrinterSmallFormatBin = $00000009;
  wdPrinterLargeFormatBin = $0000000A;
  wdPrinterLargeCapacityBin = $0000000B;
  wdPrinterPaperCassette = $0000000E;
  wdPrinterFormSource = $0000000F;

// Constants for enum WdOrientation
type
  WdOrientation = TOleEnum;
const
  wdOrientPortrait = $00000000;
  wdOrientLandscape = $00000001;

// Constants for enum WdSelectionType
type
  WdSelectionType = TOleEnum;
const
  wdNoSelection = $00000000;
  wdSelectionIP = $00000001;
  wdSelectionNormal = $00000002;
  wdSelectionFrame = $00000003;
  wdSelectionColumn = $00000004;
  wdSelectionRow = $00000005;
  wdSelectionBlock = $00000006;
  wdSelectionInlineShape = $00000007;
  wdSelectionShape = $00000008;

// Constants for enum WdCaptionLabelID
type
  WdCaptionLabelID = TOleEnum;
const
  wdCaptionFigure = $FFFFFFFF;
  wdCaptionTable = $FFFFFFFE;
  wdCaptionEquation = $FFFFFFFD;

// Constants for enum WdReferenceType
type
  WdReferenceType = TOleEnum;
const
  wdRefTypeNumberedItem = $00000000;
  wdRefTypeHeading = $00000001;
  wdRefTypeBookmark = $00000002;
  wdRefTypeFootnote = $00000003;
  wdRefTypeEndnote = $00000004;

// Constants for enum WdReferenceKind
type
  WdReferenceKind = TOleEnum;
const
  wdContentText = $FFFFFFFF;
  wdNumberRelativeContext = $FFFFFFFE;
  wdNumberNoContext = $FFFFFFFD;
  wdNumberFullContext = $FFFFFFFC;
  wdEntireCaption = $00000002;
  wdOnlyLabelAndNumber = $00000003;
  wdOnlyCaptionText = $00000004;
  wdFootnoteNumber = $00000005;
  wdEndnoteNumber = $00000006;
  wdPageNumber = $00000007;
  wdPosition = $0000000F;
  wdFootnoteNumberFormatted = $00000010;
  wdEndnoteNumberFormatted = $00000011;

// Constants for enum WdIndexFormat
type
  WdIndexFormat = TOleEnum;
const
  wdIndexTemplate = $00000000;
  wdIndexClassic = $00000001;
  wdIndexFancy = $00000002;
  wdIndexModern = $00000003;
  wdIndexBulleted = $00000004;
  wdIndexFormal = $00000005;
  wdIndexSimple = $00000006;

// Constants for enum WdIndexType
type
  WdIndexType = TOleEnum;
const
  wdIndexIndent = $00000000;
  wdIndexRunin = $00000001;

// Constants for enum WdRevisionsWrap
type
  WdRevisionsWrap = TOleEnum;
const
  wdWrapNever = $00000000;
  wdWrapAlways = $00000001;
  wdWrapAsk = $00000002;

// Constants for enum WdRevisionType
type
  WdRevisionType = TOleEnum;
const
  wdNoRevision = $00000000;
  wdRevisionInsert = $00000001;
  wdRevisionDelete = $00000002;
  wdRevisionProperty = $00000003;
  wdRevisionParagraphNumber = $00000004;
  wdRevisionDisplayField = $00000005;
  wdRevisionReconcile = $00000006;
  wdRevisionConflict = $00000007;
  wdRevisionStyle = $00000008;
  wdRevisionReplace = $00000009;
  wdRevisionParagraphProperty = $0000000A;
  wdRevisionTableProperty = $0000000B;
  wdRevisionSectionProperty = $0000000C;
  wdRevisionStyleDefinition = $0000000D;
  wdRevisionMovedFrom = $0000000E;
  wdRevisionMovedTo = $0000000F;
  wdRevisionCellInsertion = $00000010;
  wdRevisionCellDeletion = $00000011;
  wdRevisionCellMerge = $00000012;
  wdRevisionCellSplit = $00000013;
  wdRevisionConflictInsert = $00000014;
  wdRevisionConflictDelete = $00000015;

// Constants for enum WdRoutingSlipDelivery
type
  WdRoutingSlipDelivery = TOleEnum;
const
  wdOneAfterAnother = $00000000;
  wdAllAtOnce = $00000001;

// Constants for enum WdRoutingSlipStatus
type
  WdRoutingSlipStatus = TOleEnum;
const
  wdNotYetRouted = $00000000;
  wdRouteInProgress = $00000001;
  wdRouteComplete = $00000002;

// Constants for enum WdSectionStart
type
  WdSectionStart = TOleEnum;
const
  wdSectionContinuous = $00000000;
  wdSectionNewColumn = $00000001;
  wdSectionNewPage = $00000002;
  wdSectionEvenPage = $00000003;
  wdSectionOddPage = $00000004;

// Constants for enum WdSaveOptions
type
  WdSaveOptions = TOleEnum;
const
  wdDoNotSaveChanges = $00000000;
  wdSaveChanges = $FFFFFFFF;
  wdPromptToSaveChanges = $FFFFFFFE;

// Constants for enum WdDocumentKind
type
  WdDocumentKind = TOleEnum;
const
  wdDocumentNotSpecified = $00000000;
  wdDocumentLetter = $00000001;
  wdDocumentEmail = $00000002;

// Constants for enum WdDocumentType
type
  WdDocumentType = TOleEnum;
const
  wdTypeDocument = $00000000;
  wdTypeTemplate = $00000001;
  wdTypeFrameset = $00000002;

// Constants for enum WdOriginalFormat
type
  WdOriginalFormat = TOleEnum;
const
  wdWordDocument = $00000000;
  wdOriginalDocumentFormat = $00000001;
  wdPromptUser = $00000002;

// Constants for enum WdRelocate
type
  WdRelocate = TOleEnum;
const
  wdRelocateUp = $00000000;
  wdRelocateDown = $00000001;

// Constants for enum WdInsertedTextMark
type
  WdInsertedTextMark = TOleEnum;
const
  wdInsertedTextMarkNone = $00000000;
  wdInsertedTextMarkBold = $00000001;
  wdInsertedTextMarkItalic = $00000002;
  wdInsertedTextMarkUnderline = $00000003;
  wdInsertedTextMarkDoubleUnderline = $00000004;
  wdInsertedTextMarkColorOnly = $00000005;
  wdInsertedTextMarkStrikeThrough = $00000006;
  wdInsertedTextMarkDoubleStrikeThrough = $00000007;

// Constants for enum WdRevisedLinesMark
type
  WdRevisedLinesMark = TOleEnum;
const
  wdRevisedLinesMarkNone = $00000000;
  wdRevisedLinesMarkLeftBorder = $00000001;
  wdRevisedLinesMarkRightBorder = $00000002;
  wdRevisedLinesMarkOutsideBorder = $00000003;

// Constants for enum WdDeletedTextMark
type
  WdDeletedTextMark = TOleEnum;
const
  wdDeletedTextMarkHidden = $00000000;
  wdDeletedTextMarkStrikeThrough = $00000001;
  wdDeletedTextMarkCaret = $00000002;
  wdDeletedTextMarkPound = $00000003;
  wdDeletedTextMarkNone = $00000004;
  wdDeletedTextMarkBold = $00000005;
  wdDeletedTextMarkItalic = $00000006;
  wdDeletedTextMarkUnderline = $00000007;
  wdDeletedTextMarkDoubleUnderline = $00000008;
  wdDeletedTextMarkColorOnly = $00000009;
  wdDeletedTextMarkDoubleStrikeThrough = $0000000A;

// Constants for enum WdRevisedPropertiesMark
type
  WdRevisedPropertiesMark = TOleEnum;
const
  wdRevisedPropertiesMarkNone = $00000000;
  wdRevisedPropertiesMarkBold = $00000001;
  wdRevisedPropertiesMarkItalic = $00000002;
  wdRevisedPropertiesMarkUnderline = $00000003;
  wdRevisedPropertiesMarkDoubleUnderline = $00000004;
  wdRevisedPropertiesMarkColorOnly = $00000005;
  wdRevisedPropertiesMarkStrikeThrough = $00000006;
  wdRevisedPropertiesMarkDoubleStrikeThrough = $00000007;

// Constants for enum WdFieldShading
type
  WdFieldShading = TOleEnum;
const
  wdFieldShadingNever = $00000000;
  wdFieldShadingAlways = $00000001;
  wdFieldShadingWhenSelected = $00000002;

// Constants for enum WdDefaultFilePath
type
  WdDefaultFilePath = TOleEnum;
const
  wdDocumentsPath = $00000000;
  wdPicturesPath = $00000001;
  wdUserTemplatesPath = $00000002;
  wdWorkgroupTemplatesPath = $00000003;
  wdUserOptionsPath = $00000004;
  wdAutoRecoverPath = $00000005;
  wdToolsPath = $00000006;
  wdTutorialPath = $00000007;
  wdStartupPath = $00000008;
  wdProgramPath = $00000009;
  wdGraphicsFiltersPath = $0000000A;
  wdTextConvertersPath = $0000000B;
  wdProofingToolsPath = $0000000C;
  wdTempFilePath = $0000000D;
  wdCurrentFolderPath = $0000000E;
  wdStyleGalleryPath = $0000000F;
  wdBorderArtPath = $00000013;

// Constants for enum WdCompatibility
type
  WdCompatibility = TOleEnum;
const
  wdNoTabHangIndent = $00000001;
  wdNoSpaceRaiseLower = $00000002;
  wdPrintColBlack = $00000003;
  wdWrapTrailSpaces = $00000004;
  wdNoColumnBalance = $00000005;
  wdConvMailMergeEsc = $00000006;
  wdSuppressSpBfAfterPgBrk = $00000007;
  wdSuppressTopSpacing = $00000008;
  wdOrigWordTableRules = $00000009;
  wdTransparentMetafiles = $0000000A;
  wdShowBreaksInFrames = $0000000B;
  wdSwapBordersFacingPages = $0000000C;
  wdLeaveBackslashAlone = $0000000D;
  wdExpandShiftReturn = $0000000E;
  wdDontULTrailSpace = $0000000F;
  wdDontBalanceSingleByteDoubleByteWidth = $00000010;
  wdSuppressTopSpacingMac5 = $00000011;
  wdSpacingInWholePoints = $00000012;
  wdPrintBodyTextBeforeHeader = $00000013;
  wdNoLeading = $00000014;
  wdNoSpaceForUL = $00000015;
  wdMWSmallCaps = $00000016;
  wdNoExtraLineSpacing = $00000017;
  wdTruncateFontHeight = $00000018;
  wdSubFontBySize = $00000019;
  wdUsePrinterMetrics = $0000001A;
  wdWW6BorderRules = $0000001B;
  wdExactOnTop = $0000001C;
  wdSuppressBottomSpacing = $0000001D;
  wdWPSpaceWidth = $0000001E;
  wdWPJustification = $0000001F;
  wdLineWrapLikeWord6 = $00000020;
  wdShapeLayoutLikeWW8 = $00000021;
  wdFootnoteLayoutLikeWW8 = $00000022;
  wdDontUseHTMLParagraphAutoSpacing = $00000023;
  wdDontAdjustLineHeightInTable = $00000024;
  wdForgetLastTabAlignment = $00000025;
  wdAutospaceLikeWW7 = $00000026;
  wdAlignTablesRowByRow = $00000027;
  wdLayoutRawTableWidth = $00000028;
  wdLayoutTableRowsApart = $00000029;
  wdUseWord97LineBreakingRules = $0000002A;
  wdDontBreakWrappedTables = $0000002B;
  wdDontSnapTextToGridInTableWithObjects = $0000002C;
  wdSelectFieldWithFirstOrLastCharacter = $0000002D;
  wdApplyBreakingRules = $0000002E;
  wdDontWrapTextWithPunctuation = $0000002F;
  wdDontUseAsianBreakRulesInGrid = $00000030;
  wdUseWord2002TableStyleRules = $00000031;
  wdGrowAutofit = $00000032;
  wdUseNormalStyleForList = $00000033;
  wdDontUseIndentAsNumberingTabStop = $00000034;
  wdFELineBreak11 = $00000035;
  wdAllowSpaceOfSameStyleInTable = $00000036;
  wdWW11IndentRules = $00000037;
  wdDontAutofitConstrainedTables = $00000038;
  wdAutofitLikeWW11 = $00000039;
  wdUnderlineTabInNumList = $0000003A;
  wdHangulWidthLikeWW11 = $0000003B;
  wdSplitPgBreakAndParaMark = $0000003C;
  wdDontVertAlignCellWithShape = $0000003D;
  wdDontBreakConstrainedForcedTables = $0000003E;
  wdDontVertAlignInTextbox = $0000003F;
  wdWord11KerningPairs = $00000040;
  wdCachedColBalance = $00000041;
  wdDisableOTKerning = $00000042;
  wdFlipMirrorIndents = $00000043;
  wdDontOverrideTableStyleFontSzAndJustification = $00000044;

// Constants for enum WdPaperSize
type
  WdPaperSize = TOleEnum;
const
  wdPaper10x14 = $00000000;
  wdPaper11x17 = $00000001;
  wdPaperLetter = $00000002;
  wdPaperLetterSmall = $00000003;
  wdPaperLegal = $00000004;
  wdPaperExecutive = $00000005;
  wdPaperA3 = $00000006;
  wdPaperA4 = $00000007;
  wdPaperA4Small = $00000008;
  wdPaperA5 = $00000009;
  wdPaperB4 = $0000000A;
  wdPaperB5 = $0000000B;
  wdPaperCSheet = $0000000C;
  wdPaperDSheet = $0000000D;
  wdPaperESheet = $0000000E;
  wdPaperFanfoldLegalGerman = $0000000F;
  wdPaperFanfoldStdGerman = $00000010;
  wdPaperFanfoldUS = $00000011;
  wdPaperFolio = $00000012;
  wdPaperLedger = $00000013;
  wdPaperNote = $00000014;
  wdPaperQuarto = $00000015;
  wdPaperStatement = $00000016;
  wdPaperTabloid = $00000017;
  wdPaperEnvelope9 = $00000018;
  wdPaperEnvelope10 = $00000019;
  wdPaperEnvelope11 = $0000001A;
  wdPaperEnvelope12 = $0000001B;
  wdPaperEnvelope14 = $0000001C;
  wdPaperEnvelopeB4 = $0000001D;
  wdPaperEnvelopeB5 = $0000001E;
  wdPaperEnvelopeB6 = $0000001F;
  wdPaperEnvelopeC3 = $00000020;
  wdPaperEnvelopeC4 = $00000021;
  wdPaperEnvelopeC5 = $00000022;
  wdPaperEnvelopeC6 = $00000023;
  wdPaperEnvelopeC65 = $00000024;
  wdPaperEnvelopeDL = $00000025;
  wdPaperEnvelopeItaly = $00000026;
  wdPaperEnvelopeMonarch = $00000027;
  wdPaperEnvelopePersonal = $00000028;
  wdPaperCustom = $00000029;

// Constants for enum WdCustomLabelPageSize
type
  WdCustomLabelPageSize = TOleEnum;
const
  wdCustomLabelLetter = $00000000;
  wdCustomLabelLetterLS = $00000001;
  wdCustomLabelA4 = $00000002;
  wdCustomLabelA4LS = $00000003;
  wdCustomLabelA5 = $00000004;
  wdCustomLabelA5LS = $00000005;
  wdCustomLabelB5 = $00000006;
  wdCustomLabelMini = $00000007;
  wdCustomLabelFanfold = $00000008;
  wdCustomLabelVertHalfSheet = $00000009;
  wdCustomLabelVertHalfSheetLS = $0000000A;
  wdCustomLabelHigaki = $0000000B;
  wdCustomLabelHigakiLS = $0000000C;
  wdCustomLabelB4JIS = $0000000D;

// Constants for enum WdProtectionType
type
  WdProtectionType = TOleEnum;
const
  wdNoProtection = $FFFFFFFF;
  wdAllowOnlyRevisions = $00000000;
  wdAllowOnlyComments = $00000001;
  wdAllowOnlyFormFields = $00000002;
  wdAllowOnlyReading = $00000003;

// Constants for enum WdPartOfSpeech
type
  WdPartOfSpeech = TOleEnum;
const
  wdAdjective = $00000000;
  wdNoun = $00000001;
  wdAdverb = $00000002;
  wdVerb = $00000003;
  wdPronoun = $00000004;
  wdConjunction = $00000005;
  wdPreposition = $00000006;
  wdInterjection = $00000007;
  wdIdiom = $00000008;
  wdOther = $00000009;

// Constants for enum WdSubscriberFormats
type
  WdSubscriberFormats = TOleEnum;
const
  wdSubscriberBestFormat = $00000000;
  wdSubscriberRTF = $00000001;
  wdSubscriberText = $00000002;
  wdSubscriberPict = $00000004;

// Constants for enum WdEditionType
type
  WdEditionType = TOleEnum;
const
  wdPublisher = $00000000;
  wdSubscriber = $00000001;

// Constants for enum WdEditionOption
type
  WdEditionOption = TOleEnum;
const
  wdCancelPublisher = $00000000;
  wdSendPublisher = $00000001;
  wdSelectPublisher = $00000002;
  wdAutomaticUpdate = $00000003;
  wdManualUpdate = $00000004;
  wdChangeAttributes = $00000005;
  wdUpdateSubscriber = $00000006;
  wdOpenSource = $00000007;

// Constants for enum WdRelativeHorizontalPosition
type
  WdRelativeHorizontalPosition = TOleEnum;
const
  wdRelativeHorizontalPositionMargin = $00000000;
  wdRelativeHorizontalPositionPage = $00000001;
  wdRelativeHorizontalPositionColumn = $00000002;
  wdRelativeHorizontalPositionCharacter = $00000003;
  wdRelativeHorizontalPositionLeftMarginArea = $00000004;
  wdRelativeHorizontalPositionRightMarginArea = $00000005;
  wdRelativeHorizontalPositionInnerMarginArea = $00000006;
  wdRelativeHorizontalPositionOuterMarginArea = $00000007;

// Constants for enum WdRelativeVerticalPosition
type
  WdRelativeVerticalPosition = TOleEnum;
const
  wdRelativeVerticalPositionMargin = $00000000;
  wdRelativeVerticalPositionPage = $00000001;
  wdRelativeVerticalPositionParagraph = $00000002;
  wdRelativeVerticalPositionLine = $00000003;
  wdRelativeVerticalPositionTopMarginArea = $00000004;
  wdRelativeVerticalPositionBottomMarginArea = $00000005;
  wdRelativeVerticalPositionInnerMarginArea = $00000006;
  wdRelativeVerticalPositionOuterMarginArea = $00000007;

// Constants for enum WdHelpType
type
  WdHelpType = TOleEnum;
const
  wdHelp = $00000000;
  wdHelpAbout = $00000001;
  wdHelpActiveWindow = $00000002;
  wdHelpContents = $00000003;
  wdHelpExamplesAndDemos = $00000004;
  wdHelpIndex = $00000005;
  wdHelpKeyboard = $00000006;
  wdHelpPSSHelp = $00000007;
  wdHelpQuickPreview = $00000008;
  wdHelpSearch = $00000009;
  wdHelpUsingHelp = $0000000A;
  wdHelpIchitaro = $0000000B;
  wdHelpPE2 = $0000000C;
  wdHelpHWP = $0000000D;

// Constants for enum WdHelpTypeHID
type
  WdHelpTypeHID = TOleEnum;
const
  emptyenum____________ = $00000000;

// Constants for enum WdKeyCategory
type
  WdKeyCategory = TOleEnum;
const
  wdKeyCategoryNil = $FFFFFFFF;
  wdKeyCategoryDisable = $00000000;
  wdKeyCategoryCommand = $00000001;
  wdKeyCategoryMacro = $00000002;
  wdKeyCategoryFont = $00000003;
  wdKeyCategoryAutoText = $00000004;
  wdKeyCategoryStyle = $00000005;
  wdKeyCategorySymbol = $00000006;
  wdKeyCategoryPrefix = $00000007;

// Constants for enum WdKey
type
  WdKey = TOleEnum;
const
  wdNoKey = $000000FF;
  wdKeyShift = $00000100;
  wdKeyControl = $00000200;
  wdKeyCommand = $00000200;
  wdKeyAlt = $00000400;
  wdKeyOption = $00000400;
  wdKeyA = $00000041;
  wdKeyB = $00000042;
  wdKeyC = $00000043;
  wdKeyD = $00000044;
  wdKeyE = $00000045;
  wdKeyF = $00000046;
  wdKeyG = $00000047;
  wdKeyH = $00000048;
  wdKeyI = $00000049;
  wdKeyJ = $0000004A;
  wdKeyK = $0000004B;
  wdKeyL = $0000004C;
  wdKeyM = $0000004D;
  wdKeyN = $0000004E;
  wdKeyO = $0000004F;
  wdKeyP = $00000050;
  wdKeyQ = $00000051;
  wdKeyR = $00000052;
  wdKeyS = $00000053;
  wdKeyT = $00000054;
  wdKeyU = $00000055;
  wdKeyV = $00000056;
  wdKeyW = $00000057;
  wdKeyX = $00000058;
  wdKeyY = $00000059;
  wdKeyZ = $0000005A;
  wdKey0 = $00000030;
  wdKey1 = $00000031;
  wdKey2 = $00000032;
  wdKey3 = $00000033;
  wdKey4 = $00000034;
  wdKey5 = $00000035;
  wdKey6 = $00000036;
  wdKey7 = $00000037;
  wdKey8 = $00000038;
  wdKey9 = $00000039;
  wdKeyBackspace = $00000008;
  wdKeyTab = $00000009;
  wdKeyNumeric5Special = $0000000C;
  wdKeyReturn = $0000000D;
  wdKeyPause = $00000013;
  wdKeyEsc = $0000001B;
  wdKeySpacebar = $00000020;
  wdKeyPageUp = $00000021;
  wdKeyPageDown = $00000022;
  wdKeyEnd = $00000023;
  wdKeyHome = $00000024;
  wdKeyInsert = $0000002D;
  wdKeyDelete = $0000002E;
  wdKeyNumeric0 = $00000060;
  wdKeyNumeric1 = $00000061;
  wdKeyNumeric2 = $00000062;
  wdKeyNumeric3 = $00000063;
  wdKeyNumeric4 = $00000064;
  wdKeyNumeric5 = $00000065;
  wdKeyNumeric6 = $00000066;
  wdKeyNumeric7 = $00000067;
  wdKeyNumeric8 = $00000068;
  wdKeyNumeric9 = $00000069;
  wdKeyNumericMultiply = $0000006A;
  wdKeyNumericAdd = $0000006B;
  wdKeyNumericSubtract = $0000006D;
  wdKeyNumericDecimal = $0000006E;
  wdKeyNumericDivide = $0000006F;
  wdKeyF1 = $00000070;
  wdKeyF2 = $00000071;
  wdKeyF3 = $00000072;
  wdKeyF4 = $00000073;
  wdKeyF5 = $00000074;
  wdKeyF6 = $00000075;
  wdKeyF7 = $00000076;
  wdKeyF8 = $00000077;
  wdKeyF9 = $00000078;
  wdKeyF10 = $00000079;
  wdKeyF11 = $0000007A;
  wdKeyF12 = $0000007B;
  wdKeyF13 = $0000007C;
  wdKeyF14 = $0000007D;
  wdKeyF15 = $0000007E;
  wdKeyF16 = $0000007F;
  wdKeyScrollLock = $00000091;
  wdKeySemiColon = $000000BA;
  wdKeyEquals = $000000BB;
  wdKeyComma = $000000BC;
  wdKeyHyphen = $000000BD;
  wdKeyPeriod = $000000BE;
  wdKeySlash = $000000BF;
  wdKeyBackSingleQuote = $000000C0;
  wdKeyOpenSquareBrace = $000000DB;
  wdKeyBackSlash = $000000DC;
  wdKeyCloseSquareBrace = $000000DD;
  wdKeySingleQuote = $000000DE;

// Constants for enum WdOLEType
type
  WdOLEType = TOleEnum;
const
  wdOLELink = $00000000;
  wdOLEEmbed = $00000001;
  wdOLEControl = $00000002;

// Constants for enum WdOLEVerb
type
  WdOLEVerb = TOleEnum;
const
  wdOLEVerbPrimary = $00000000;
  wdOLEVerbShow = $FFFFFFFF;
  wdOLEVerbOpen = $FFFFFFFE;
  wdOLEVerbHide = $FFFFFFFD;
  wdOLEVerbUIActivate = $FFFFFFFC;
  wdOLEVerbInPlaceActivate = $FFFFFFFB;
  wdOLEVerbDiscardUndoState = $FFFFFFFA;

// Constants for enum WdOLEPlacement
type
  WdOLEPlacement = TOleEnum;
const
  wdInLine = $00000000;
  wdFloatOverText = $00000001;

// Constants for enum WdEnvelopeOrientation
type
  WdEnvelopeOrientation = TOleEnum;
const
  wdLeftPortrait = $00000000;
  wdCenterPortrait = $00000001;
  wdRightPortrait = $00000002;
  wdLeftLandscape = $00000003;
  wdCenterLandscape = $00000004;
  wdRightLandscape = $00000005;
  wdLeftClockwise = $00000006;
  wdCenterClockwise = $00000007;
  wdRightClockwise = $00000008;

// Constants for enum WdLetterStyle
type
  WdLetterStyle = TOleEnum;
const
  wdFullBlock = $00000000;
  wdModifiedBlock = $00000001;
  wdSemiBlock = $00000002;

// Constants for enum WdLetterheadLocation
type
  WdLetterheadLocation = TOleEnum;
const
  wdLetterTop = $00000000;
  wdLetterBottom = $00000001;
  wdLetterLeft = $00000002;
  wdLetterRight = $00000003;

// Constants for enum WdSalutationType
type
  WdSalutationType = TOleEnum;
const
  wdSalutationInformal = $00000000;
  wdSalutationFormal = $00000001;
  wdSalutationBusiness = $00000002;
  wdSalutationOther = $00000003;

// Constants for enum WdSalutationGender
type
  WdSalutationGender = TOleEnum;
const
  wdGenderFemale = $00000000;
  wdGenderMale = $00000001;
  wdGenderNeutral = $00000002;
  wdGenderUnknown = $00000003;

// Constants for enum WdMovementType
type
  WdMovementType = TOleEnum;
const
  wdMove = $00000000;
  wdExtend = $00000001;

// Constants for enum WdConstants
type
  WdConstants = TOleEnum;
const
  wdUndefined = $0098967F;
  wdToggle = $0098967E;
  wdForward = $3FFFFFFF;
  wdBackward = $C0000001;
  wdAutoPosition = $00000000;
  wdFirst = $00000001;
  wdCreatorCode = $4D535744;

// Constants for enum WdPasteDataType
type
  WdPasteDataType = TOleEnum;
const
  wdPasteOLEObject = $00000000;
  wdPasteRTF = $00000001;
  wdPasteText = $00000002;
  wdPasteMetafilePicture = $00000003;
  wdPasteBitmap = $00000004;
  wdPasteDeviceIndependentBitmap = $00000005;
  wdPasteHyperlink = $00000007;
  wdPasteShape = $00000008;
  wdPasteEnhancedMetafile = $00000009;
  wdPasteHTML = $0000000A;

// Constants for enum WdPrintOutItem
type
  WdPrintOutItem = TOleEnum;
const
  wdPrintDocumentContent = $00000000;
  wdPrintProperties = $00000001;
  wdPrintComments = $00000002;
  wdPrintMarkup = $00000002;
  wdPrintStyles = $00000003;
  wdPrintAutoTextEntries = $00000004;
  wdPrintKeyAssignments = $00000005;
  wdPrintEnvelope = $00000006;
  wdPrintDocumentWithMarkup = $00000007;

// Constants for enum WdPrintOutPages
type
  WdPrintOutPages = TOleEnum;
const
  wdPrintAllPages = $00000000;
  wdPrintOddPagesOnly = $00000001;
  wdPrintEvenPagesOnly = $00000002;

// Constants for enum WdPrintOutRange
type
  WdPrintOutRange = TOleEnum;
const
  wdPrintAllDocument = $00000000;
  wdPrintSelection = $00000001;
  wdPrintCurrentPage = $00000002;
  wdPrintFromTo = $00000003;
  wdPrintRangeOfPages = $00000004;

// Constants for enum WdDictionaryType
type
  WdDictionaryType = TOleEnum;
const
  wdSpelling = $00000000;
  wdGrammar = $00000001;
  wdThesaurus = $00000002;
  wdHyphenation = $00000003;
  wdSpellingComplete = $00000004;
  wdSpellingCustom = $00000005;
  wdSpellingLegal = $00000006;
  wdSpellingMedical = $00000007;
  wdHangulHanjaConversion = $00000008;
  wdHangulHanjaConversionCustom = $00000009;

// Constants for enum WdDictionaryTypeHID
type
  WdDictionaryTypeHID = TOleEnum;
const
  emptyenum_____________ = $00000000;

// Constants for enum WdSpellingWordType
type
  WdSpellingWordType = TOleEnum;
const
  wdSpellword = $00000000;
  wdWildcard = $00000001;
  wdAnagram = $00000002;

// Constants for enum WdSpellingErrorType
type
  WdSpellingErrorType = TOleEnum;
const
  wdSpellingCorrect = $00000000;
  wdSpellingNotInDictionary = $00000001;
  wdSpellingCapitalization = $00000002;

// Constants for enum WdProofreadingErrorType
type
  WdProofreadingErrorType = TOleEnum;
const
  wdSpellingError = $00000000;
  wdGrammaticalError = $00000001;

// Constants for enum WdInlineShapeType
type
  WdInlineShapeType = TOleEnum;
const
  wdInlineShapeEmbeddedOLEObject = $00000001;
  wdInlineShapeLinkedOLEObject = $00000002;
  wdInlineShapePicture = $00000003;
  wdInlineShapeLinkedPicture = $00000004;
  wdInlineShapeOLEControlObject = $00000005;
  wdInlineShapeHorizontalLine = $00000006;
  wdInlineShapePictureHorizontalLine = $00000007;
  wdInlineShapeLinkedPictureHorizontalLine = $00000008;
  wdInlineShapePictureBullet = $00000009;
  wdInlineShapeScriptAnchor = $0000000A;
  wdInlineShapeOWSAnchor = $0000000B;
  wdInlineShapeChart = $0000000C;
  wdInlineShapeDiagram = $0000000D;
  wdInlineShapeLockedCanvas = $0000000E;
  wdInlineShapeSmartArt = $0000000F;

// Constants for enum WdArrangeStyle
type
  WdArrangeStyle = TOleEnum;
const
  wdTiled = $00000000;
  wdIcons = $00000001;

// Constants for enum WdSelectionFlags
type
  WdSelectionFlags = TOleEnum;
const
  wdSelStartActive = $00000001;
  wdSelAtEOL = $00000002;
  wdSelOvertype = $00000004;
  wdSelActive = $00000008;
  wdSelReplace = $00000010;

// Constants for enum WdAutoVersions
type
  WdAutoVersions = TOleEnum;
const
  wdAutoVersionOff = $00000000;
  wdAutoVersionOnClose = $00000001;

// Constants for enum WdOrganizerObject
type
  WdOrganizerObject = TOleEnum;
const
  wdOrganizerObjectStyles = $00000000;
  wdOrganizerObjectAutoText = $00000001;
  wdOrganizerObjectCommandBars = $00000002;
  wdOrganizerObjectProjectItems = $00000003;

// Constants for enum WdFindMatch
type
  WdFindMatch = TOleEnum;
const
  wdMatchParagraphMark = $0001000F;
  wdMatchTabCharacter = $00000009;
  wdMatchCommentMark = $00000005;
  wdMatchAnyCharacter = $0001003F;
  wdMatchAnyDigit = $0001001F;
  wdMatchAnyLetter = $0001002F;
  wdMatchCaretCharacter = $0000000B;
  wdMatchColumnBreak = $0000000E;
  wdMatchEmDash = $00002014;
  wdMatchEnDash = $00002013;
  wdMatchEndnoteMark = $00010013;
  wdMatchField = $00000013;
  wdMatchFootnoteMark = $00010012;
  wdMatchGraphic = $00000001;
  wdMatchManualLineBreak = $0001000F;
  wdMatchManualPageBreak = $0001001C;
  wdMatchNonbreakingHyphen = $0000001E;
  wdMatchNonbreakingSpace = $000000A0;
  wdMatchOptionalHyphen = $0000001F;
  wdMatchSectionBreak = $0001002C;
  wdMatchWhiteSpace = $00010077;

// Constants for enum WdFindWrap
type
  WdFindWrap = TOleEnum;
const
  wdFindStop = $00000000;
  wdFindContinue = $00000001;
  wdFindAsk = $00000002;

// Constants for enum WdInformation
type
  WdInformation = TOleEnum;
const
  wdActiveEndAdjustedPageNumber = $00000001;
  wdActiveEndSectionNumber = $00000002;
  wdActiveEndPageNumber = $00000003;
  wdNumberOfPagesInDocument = $00000004;
  wdHorizontalPositionRelativeToPage = $00000005;
  wdVerticalPositionRelativeToPage = $00000006;
  wdHorizontalPositionRelativeToTextBoundary = $00000007;
  wdVerticalPositionRelativeToTextBoundary = $00000008;
  wdFirstCharacterColumnNumber = $00000009;
  wdFirstCharacterLineNumber = $0000000A;
  wdFrameIsSelected = $0000000B;
  wdWithInTable = $0000000C;
  wdStartOfRangeRowNumber = $0000000D;
  wdEndOfRangeRowNumber = $0000000E;
  wdMaximumNumberOfRows = $0000000F;
  wdStartOfRangeColumnNumber = $00000010;
  wdEndOfRangeColumnNumber = $00000011;
  wdMaximumNumberOfColumns = $00000012;
  wdZoomPercentage = $00000013;
  wdSelectionMode = $00000014;
  wdCapsLock = $00000015;
  wdNumLock = $00000016;
  wdOverType = $00000017;
  wdRevisionMarking = $00000018;
  wdInFootnoteEndnotePane = $00000019;
  wdInCommentPane = $0000001A;
  wdInHeaderFooter = $0000001C;
  wdAtEndOfRowMarker = $0000001F;
  wdReferenceOfType = $00000020;
  wdHeaderFooterType = $00000021;
  wdInMasterDocument = $00000022;
  wdInFootnote = $00000023;
  wdInEndnote = $00000024;
  wdInWordMail = $00000025;
  wdInClipboard = $00000026;

// Constants for enum WdWrapType
type
  WdWrapType = TOleEnum;
const
  wdWrapSquare = $00000000;
  wdWrapTight = $00000001;
  wdWrapThrough = $00000002;
  wdWrapNone = $00000003;
  wdWrapTopBottom = $00000004;
  wdWrapBehind = $00000005;
  wdWrapFront = $00000003;
  wdWrapInline = $00000007;

// Constants for enum WdWrapSideType
type
  WdWrapSideType = TOleEnum;
const
  wdWrapBoth = $00000000;
  wdWrapLeft = $00000001;
  wdWrapRight = $00000002;
  wdWrapLargest = $00000003;

// Constants for enum WdOutlineLevel
type
  WdOutlineLevel = TOleEnum;
const
  wdOutlineLevel1 = $00000001;
  wdOutlineLevel2 = $00000002;
  wdOutlineLevel3 = $00000003;
  wdOutlineLevel4 = $00000004;
  wdOutlineLevel5 = $00000005;
  wdOutlineLevel6 = $00000006;
  wdOutlineLevel7 = $00000007;
  wdOutlineLevel8 = $00000008;
  wdOutlineLevel9 = $00000009;
  wdOutlineLevelBodyText = $0000000A;

// Constants for enum WdTextOrientation
type
  WdTextOrientation = TOleEnum;
const
  wdTextOrientationHorizontal = $00000000;
  wdTextOrientationUpward = $00000002;
  wdTextOrientationDownward = $00000003;
  wdTextOrientationVerticalFarEast = $00000001;
  wdTextOrientationHorizontalRotatedFarEast = $00000004;
  wdTextOrientationVertical = $00000005;

// Constants for enum WdTextOrientationHID
type
  WdTextOrientationHID = TOleEnum;
const
  emptyenum______________ = $00000000;

// Constants for enum WdPageBorderArt
type
  WdPageBorderArt = TOleEnum;
const
  wdArtApples = $00000001;
  wdArtMapleMuffins = $00000002;
  wdArtCakeSlice = $00000003;
  wdArtCandyCorn = $00000004;
  wdArtIceCreamCones = $00000005;
  wdArtChampagneBottle = $00000006;
  wdArtPartyGlass = $00000007;
  wdArtChristmasTree = $00000008;
  wdArtTrees = $00000009;
  wdArtPalmsColor = $0000000A;
  wdArtBalloons3Colors = $0000000B;
  wdArtBalloonsHotAir = $0000000C;
  wdArtPartyFavor = $0000000D;
  wdArtConfettiStreamers = $0000000E;
  wdArtHearts = $0000000F;
  wdArtHeartBalloon = $00000010;
  wdArtStars3D = $00000011;
  wdArtStarsShadowed = $00000012;
  wdArtStars = $00000013;
  wdArtSun = $00000014;
  wdArtEarth2 = $00000015;
  wdArtEarth1 = $00000016;
  wdArtPeopleHats = $00000017;
  wdArtSombrero = $00000018;
  wdArtPencils = $00000019;
  wdArtPackages = $0000001A;
  wdArtClocks = $0000001B;
  wdArtFirecrackers = $0000001C;
  wdArtRings = $0000001D;
  wdArtMapPins = $0000001E;
  wdArtConfetti = $0000001F;
  wdArtCreaturesButterfly = $00000020;
  wdArtCreaturesLadyBug = $00000021;
  wdArtCreaturesFish = $00000022;
  wdArtBirdsFlight = $00000023;
  wdArtScaredCat = $00000024;
  wdArtBats = $00000025;
  wdArtFlowersRoses = $00000026;
  wdArtFlowersRedRose = $00000027;
  wdArtPoinsettias = $00000028;
  wdArtHolly = $00000029;
  wdArtFlowersTiny = $0000002A;
  wdArtFlowersPansy = $0000002B;
  wdArtFlowersModern2 = $0000002C;
  wdArtFlowersModern1 = $0000002D;
  wdArtWhiteFlowers = $0000002E;
  wdArtVine = $0000002F;
  wdArtFlowersDaisies = $00000030;
  wdArtFlowersBlockPrint = $00000031;
  wdArtDecoArchColor = $00000032;
  wdArtFans = $00000033;
  wdArtFilm = $00000034;
  wdArtLightning1 = $00000035;
  wdArtCompass = $00000036;
  wdArtDoubleD = $00000037;
  wdArtClassicalWave = $00000038;
  wdArtShadowedSquares = $00000039;
  wdArtTwistedLines1 = $0000003A;
  wdArtWaveline = $0000003B;
  wdArtQuadrants = $0000003C;
  wdArtCheckedBarColor = $0000003D;
  wdArtSwirligig = $0000003E;
  wdArtPushPinNote1 = $0000003F;
  wdArtPushPinNote2 = $00000040;
  wdArtPumpkin1 = $00000041;
  wdArtEggsBlack = $00000042;
  wdArtCup = $00000043;
  wdArtHeartGray = $00000044;
  wdArtGingerbreadMan = $00000045;
  wdArtBabyPacifier = $00000046;
  wdArtBabyRattle = $00000047;
  wdArtCabins = $00000048;
  wdArtHouseFunky = $00000049;
  wdArtStarsBlack = $0000004A;
  wdArtSnowflakes = $0000004B;
  wdArtSnowflakeFancy = $0000004C;
  wdArtSkyrocket = $0000004D;
  wdArtSeattle = $0000004E;
  wdArtMusicNotes = $0000004F;
  wdArtPalmsBlack = $00000050;
  wdArtMapleLeaf = $00000051;
  wdArtPaperClips = $00000052;
  wdArtShorebirdTracks = $00000053;
  wdArtPeople = $00000054;
  wdArtPeopleWaving = $00000055;
  wdArtEclipsingSquares2 = $00000056;
  wdArtHypnotic = $00000057;
  wdArtDiamondsGray = $00000058;
  wdArtDecoArch = $00000059;
  wdArtDecoBlocks = $0000005A;
  wdArtCirclesLines = $0000005B;
  wdArtPapyrus = $0000005C;
  wdArtWoodwork = $0000005D;
  wdArtWeavingBraid = $0000005E;
  wdArtWeavingRibbon = $0000005F;
  wdArtWeavingAngles = $00000060;
  wdArtArchedScallops = $00000061;
  wdArtSafari = $00000062;
  wdArtCelticKnotwork = $00000063;
  wdArtCrazyMaze = $00000064;
  wdArtEclipsingSquares1 = $00000065;
  wdArtBirds = $00000066;
  wdArtFlowersTeacup = $00000067;
  wdArtNorthwest = $00000068;
  wdArtSouthwest = $00000069;
  wdArtTribal6 = $0000006A;
  wdArtTribal4 = $0000006B;
  wdArtTribal3 = $0000006C;
  wdArtTribal2 = $0000006D;
  wdArtTribal5 = $0000006E;
  wdArtXIllusions = $0000006F;
  wdArtZanyTriangles = $00000070;
  wdArtPyramids = $00000071;
  wdArtPyramidsAbove = $00000072;
  wdArtConfettiGrays = $00000073;
  wdArtConfettiOutline = $00000074;
  wdArtConfettiWhite = $00000075;
  wdArtMosaic = $00000076;
  wdArtLightning2 = $00000077;
  wdArtHeebieJeebies = $00000078;
  wdArtLightBulb = $00000079;
  wdArtGradient = $0000007A;
  wdArtTriangleParty = $0000007B;
  wdArtTwistedLines2 = $0000007C;
  wdArtMoons = $0000007D;
  wdArtOvals = $0000007E;
  wdArtDoubleDiamonds = $0000007F;
  wdArtChainLink = $00000080;
  wdArtTriangles = $00000081;
  wdArtTribal1 = $00000082;
  wdArtMarqueeToothed = $00000083;
  wdArtSharksTeeth = $00000084;
  wdArtSawtooth = $00000085;
  wdArtSawtoothGray = $00000086;
  wdArtPostageStamp = $00000087;
  wdArtWeavingStrips = $00000088;
  wdArtZigZag = $00000089;
  wdArtCrossStitch = $0000008A;
  wdArtGems = $0000008B;
  wdArtCirclesRectangles = $0000008C;
  wdArtCornerTriangles = $0000008D;
  wdArtCreaturesInsects = $0000008E;
  wdArtZigZagStitch = $0000008F;
  wdArtCheckered = $00000090;
  wdArtCheckedBarBlack = $00000091;
  wdArtMarquee = $00000092;
  wdArtBasicWhiteDots = $00000093;
  wdArtBasicWideMidline = $00000094;
  wdArtBasicWideOutline = $00000095;
  wdArtBasicWideInline = $00000096;
  wdArtBasicThinLines = $00000097;
  wdArtBasicWhiteDashes = $00000098;
  wdArtBasicWhiteSquares = $00000099;
  wdArtBasicBlackSquares = $0000009A;
  wdArtBasicBlackDashes = $0000009B;
  wdArtBasicBlackDots = $0000009C;
  wdArtStarsTop = $0000009D;
  wdArtCertificateBanner = $0000009E;
  wdArtHandmade1 = $0000009F;
  wdArtHandmade2 = $000000A0;
  wdArtTornPaper = $000000A1;
  wdArtTornPaperBlack = $000000A2;
  wdArtCouponCutoutDashes = $000000A3;
  wdArtCouponCutoutDots = $000000A4;

// Constants for enum WdBorderDistanceFrom
type
  WdBorderDistanceFrom = TOleEnum;
const
  wdBorderDistanceFromText = $00000000;
  wdBorderDistanceFromPageEdge = $00000001;

// Constants for enum WdReplace
type
  WdReplace = TOleEnum;
const
  wdReplaceNone = $00000000;
  wdReplaceOne = $00000001;
  wdReplaceAll = $00000002;

// Constants for enum WdFontBias
type
  WdFontBias = TOleEnum;
const
  wdFontBiasDontCare = $000000FF;
  wdFontBiasDefault = $00000000;
  wdFontBiasFareast = $00000001;

// Constants for enum WdBrowserLevel
type
  WdBrowserLevel = TOleEnum;
const
  wdBrowserLevelV4 = $00000000;
  wdBrowserLevelMicrosoftInternetExplorer5 = $00000001;
  wdBrowserLevelMicrosoftInternetExplorer6 = $00000002;

// Constants for enum WdEnclosureType
type
  WdEnclosureType = TOleEnum;
const
  wdEnclosureCircle = $00000000;
  wdEnclosureSquare = $00000001;
  wdEnclosureTriangle = $00000002;
  wdEnclosureDiamond = $00000003;

// Constants for enum WdEncloseStyle
type
  WdEncloseStyle = TOleEnum;
const
  wdEncloseStyleNone = $00000000;
  wdEncloseStyleSmall = $00000001;
  wdEncloseStyleLarge = $00000002;

// Constants for enum WdHighAnsiText
type
  WdHighAnsiText = TOleEnum;
const
  wdHighAnsiIsFarEast = $00000000;
  wdHighAnsiIsHighAnsi = $00000001;
  wdAutoDetectHighAnsiFarEast = $00000002;

// Constants for enum WdLayoutMode
type
  WdLayoutMode = TOleEnum;
const
  wdLayoutModeDefault = $00000000;
  wdLayoutModeGrid = $00000001;
  wdLayoutModeLineGrid = $00000002;
  wdLayoutModeGenko = $00000003;

// Constants for enum WdDocumentMedium
type
  WdDocumentMedium = TOleEnum;
const
  wdEmailMessage = $00000000;
  wdDocument = $00000001;
  wdWebPage = $00000002;

// Constants for enum WdMailerPriority
type
  WdMailerPriority = TOleEnum;
const
  wdPriorityNormal = $00000001;
  wdPriorityLow = $00000002;
  wdPriorityHigh = $00000003;

// Constants for enum WdDocumentViewDirection
type
  WdDocumentViewDirection = TOleEnum;
const
  wdDocumentViewRtl = $00000000;
  wdDocumentViewLtr = $00000001;

// Constants for enum WdArabicNumeral
type
  WdArabicNumeral = TOleEnum;
const
  wdNumeralArabic = $00000000;
  wdNumeralHindi = $00000001;
  wdNumeralContext = $00000002;
  wdNumeralSystem = $00000003;

// Constants for enum WdMonthNames
type
  WdMonthNames = TOleEnum;
const
  wdMonthNamesArabic = $00000000;
  wdMonthNamesEnglish = $00000001;
  wdMonthNamesFrench = $00000002;

// Constants for enum WdCursorMovement
type
  WdCursorMovement = TOleEnum;
const
  wdCursorMovementLogical = $00000000;
  wdCursorMovementVisual = $00000001;

// Constants for enum WdVisualSelection
type
  WdVisualSelection = TOleEnum;
const
  wdVisualSelectionBlock = $00000000;
  wdVisualSelectionContinuous = $00000001;

// Constants for enum WdTableDirection
type
  WdTableDirection = TOleEnum;
const
  wdTableDirectionRtl = $00000000;
  wdTableDirectionLtr = $00000001;

// Constants for enum WdFlowDirection
type
  WdFlowDirection = TOleEnum;
const
  wdFlowLtr = $00000000;
  wdFlowRtl = $00000001;

// Constants for enum WdDiacriticColor
type
  WdDiacriticColor = TOleEnum;
const
  wdDiacriticColorBidi = $00000000;
  wdDiacriticColorLatin = $00000001;

// Constants for enum WdGutterStyle
type
  WdGutterStyle = TOleEnum;
const
  wdGutterPosLeft = $00000000;
  wdGutterPosTop = $00000001;
  wdGutterPosRight = $00000002;

// Constants for enum WdGutterStyleOld
type
  WdGutterStyleOld = TOleEnum;
const
  wdGutterStyleLatin = $FFFFFFF6;
  wdGutterStyleBidi = $00000002;

// Constants for enum WdSectionDirection
type
  WdSectionDirection = TOleEnum;
const
  wdSectionDirectionRtl = $00000000;
  wdSectionDirectionLtr = $00000001;

// Constants for enum WdDateLanguage
type
  WdDateLanguage = TOleEnum;
const
  wdDateLanguageBidi = $0000000A;
  wdDateLanguageLatin = $00000409;

// Constants for enum WdCalendarTypeBi
type
  WdCalendarTypeBi = TOleEnum;
const
  wdCalendarTypeBidi = $00000063;
  wdCalendarTypeGregorian = $00000064;

// Constants for enum WdCalendarType
type
  WdCalendarType = TOleEnum;
const
  wdCalendarWestern = $00000000;
  wdCalendarArabic = $00000001;
  wdCalendarHebrew = $00000002;
  wdCalendarTaiwan = $00000003;
  wdCalendarJapan = $00000004;
  wdCalendarThai = $00000005;
  wdCalendarKorean = $00000006;
  wdCalendarSakaEra = $00000007;
  wdCalendarTranslitEnglish = $00000008;
  wdCalendarTranslitFrench = $00000009;
  wdCalendarUmalqura = $0000000D;

// Constants for enum WdReadingOrder
type
  WdReadingOrder = TOleEnum;
const
  wdReadingOrderRtl = $00000000;
  wdReadingOrderLtr = $00000001;

// Constants for enum WdHebSpellStart
type
  WdHebSpellStart = TOleEnum;
const
  wdFullScript = $00000000;
  wdPartialScript = $00000001;
  wdMixedScript = $00000002;
  wdMixedAuthorizedScript = $00000003;

// Constants for enum WdAraSpeller
type
  WdAraSpeller = TOleEnum;
const
  wdNone = $00000000;
  wdInitialAlef = $00000001;
  wdFinalYaa = $00000002;
  wdBoth = $00000003;

// Constants for enum WdColor
type
  WdColor = TOleEnum;
const
  wdColorAutomatic = $FF000000;
  wdColorBlack = $00000000;
  wdColorBlue = $00FF0000;
  wdColorTurquoise = $00FFFF00;
  wdColorBrightGreen = $0000FF00;
  wdColorPink = $00FF00FF;
  wdColorRed = $000000FF;
  wdColorYellow = $0000FFFF;
  wdColorWhite = $00FFFFFF;
  wdColorDarkBlue = $00800000;
  wdColorTeal = $00808000;
  wdColorGreen = $00008000;
  wdColorViolet = $00800080;
  wdColorDarkRed = $00000080;
  wdColorDarkYellow = $00008080;
  wdColorBrown = $00003399;
  wdColorOliveGreen = $00003333;
  wdColorDarkGreen = $00003300;
  wdColorDarkTeal = $00663300;
  wdColorIndigo = $00993333;
  wdColorOrange = $000066FF;
  wdColorBlueGray = $00996666;
  wdColorLightOrange = $000099FF;
  wdColorLime = $0000CC99;
  wdColorSeaGreen = $00669933;
  wdColorAqua = $00CCCC33;
  wdColorLightBlue = $00FF6633;
  wdColorGold = $0000CCFF;
  wdColorSkyBlue = $00FFCC00;
  wdColorPlum = $00663399;
  wdColorRose = $00CC99FF;
  wdColorTan = $0099CCFF;
  wdColorLightYellow = $0099FFFF;
  wdColorLightGreen = $00CCFFCC;
  wdColorLightTurquoise = $00FFFFCC;
  wdColorPaleBlue = $00FFCC99;
  wdColorLavender = $00FF99CC;
  wdColorGray05 = $00F3F3F3;
  wdColorGray10 = $00E6E6E6;
  wdColorGray125 = $00E0E0E0;
  wdColorGray15 = $00D9D9D9;
  wdColorGray20 = $00CCCCCC;
  wdColorGray25 = $00C0C0C0;
  wdColorGray30 = $00B3B3B3;
  wdColorGray35 = $00A6A6A6;
  wdColorGray375 = $00A0A0A0;
  wdColorGray40 = $00999999;
  wdColorGray45 = $008C8C8C;
  wdColorGray50 = $00808080;
  wdColorGray55 = $00737373;
  wdColorGray60 = $00666666;
  wdColorGray625 = $00606060;
  wdColorGray65 = $00595959;
  wdColorGray70 = $004C4C4C;
  wdColorGray75 = $00404040;
  wdColorGray80 = $00333333;
  wdColorGray85 = $00262626;
  wdColorGray875 = $00202020;
  wdColorGray90 = $00191919;
  wdColorGray95 = $000C0C0C;

// Constants for enum WdShapePosition
type
  WdShapePosition = TOleEnum;
const
  wdShapeTop = $FFF0BDC1;
  wdShapeLeft = $FFF0BDC2;
  wdShapeBottom = $FFF0BDC3;
  wdShapeRight = $FFF0BDC4;
  wdShapeCenter = $FFF0BDC5;
  wdShapeInside = $FFF0BDC6;
  wdShapeOutside = $FFF0BDC7;

// Constants for enum WdTablePosition
type
  WdTablePosition = TOleEnum;
const
  wdTableTop = $FFF0BDC1;
  wdTableLeft = $FFF0BDC2;
  wdTableBottom = $FFF0BDC3;
  wdTableRight = $FFF0BDC4;
  wdTableCenter = $FFF0BDC5;
  wdTableInside = $FFF0BDC6;
  wdTableOutside = $FFF0BDC7;

// Constants for enum WdDefaultListBehavior
type
  WdDefaultListBehavior = TOleEnum;
const
  wdWord8ListBehavior = $00000000;
  wdWord9ListBehavior = $00000001;
  wdWord10ListBehavior = $00000002;

// Constants for enum WdDefaultTableBehavior
type
  WdDefaultTableBehavior = TOleEnum;
const
  wdWord8TableBehavior = $00000000;
  wdWord9TableBehavior = $00000001;

// Constants for enum WdAutoFitBehavior
type
  WdAutoFitBehavior = TOleEnum;
const
  wdAutoFitFixed = $00000000;
  wdAutoFitContent = $00000001;
  wdAutoFitWindow = $00000002;

// Constants for enum WdPreferredWidthType
type
  WdPreferredWidthType = TOleEnum;
const
  wdPreferredWidthAuto = $00000001;
  wdPreferredWidthPercent = $00000002;
  wdPreferredWidthPoints = $00000003;

// Constants for enum WdFarEastLineBreakLanguageID
type
  WdFarEastLineBreakLanguageID = TOleEnum;
const
  wdLineBreakJapanese = $00000411;
  wdLineBreakKorean = $00000412;
  wdLineBreakSimplifiedChinese = $00000804;
  wdLineBreakTraditionalChinese = $00000404;

// Constants for enum WdViewTypeOld
type
  WdViewTypeOld = TOleEnum;
const
  wdPageView = $00000003;
  wdOnlineView = $00000006;

// Constants for enum WdFramesetType
type
  WdFramesetType = TOleEnum;
const
  wdFramesetTypeFrameset = $00000000;
  wdFramesetTypeFrame = $00000001;

// Constants for enum WdFramesetSizeType
type
  WdFramesetSizeType = TOleEnum;
const
  wdFramesetSizeTypePercent = $00000000;
  wdFramesetSizeTypeFixed = $00000001;
  wdFramesetSizeTypeRelative = $00000002;

// Constants for enum WdFramesetNewFrameLocation
type
  WdFramesetNewFrameLocation = TOleEnum;
const
  wdFramesetNewFrameAbove = $00000000;
  wdFramesetNewFrameBelow = $00000001;
  wdFramesetNewFrameRight = $00000002;
  wdFramesetNewFrameLeft = $00000003;

// Constants for enum WdScrollbarType
type
  WdScrollbarType = TOleEnum;
const
  wdScrollbarTypeAuto = $00000000;
  wdScrollbarTypeYes = $00000001;
  wdScrollbarTypeNo = $00000002;

// Constants for enum WdTwoLinesInOneType
type
  WdTwoLinesInOneType = TOleEnum;
const
  wdTwoLinesInOneNone = $00000000;
  wdTwoLinesInOneNoBrackets = $00000001;
  wdTwoLinesInOneParentheses = $00000002;
  wdTwoLinesInOneSquareBrackets = $00000003;
  wdTwoLinesInOneAngleBrackets = $00000004;
  wdTwoLinesInOneCurlyBrackets = $00000005;

// Constants for enum WdHorizontalInVerticalType
type
  WdHorizontalInVerticalType = TOleEnum;
const
  wdHorizontalInVerticalNone = $00000000;
  wdHorizontalInVerticalFitInLine = $00000001;
  wdHorizontalInVerticalResizeLine = $00000002;

// Constants for enum WdHorizontalLineAlignment
type
  WdHorizontalLineAlignment = TOleEnum;
const
  wdHorizontalLineAlignLeft = $00000000;
  wdHorizontalLineAlignCenter = $00000001;
  wdHorizontalLineAlignRight = $00000002;

// Constants for enum WdHorizontalLineWidthType
type
  WdHorizontalLineWidthType = TOleEnum;
const
  wdHorizontalLinePercentWidth = $FFFFFFFF;
  wdHorizontalLineFixedWidth = $FFFFFFFE;

// Constants for enum WdPhoneticGuideAlignmentType
type
  WdPhoneticGuideAlignmentType = TOleEnum;
const
  wdPhoneticGuideAlignmentCenter = $00000000;
  wdPhoneticGuideAlignmentZeroOneZero = $00000001;
  wdPhoneticGuideAlignmentOneTwoOne = $00000002;
  wdPhoneticGuideAlignmentLeft = $00000003;
  wdPhoneticGuideAlignmentRight = $00000004;
  wdPhoneticGuideAlignmentRightVertical = $00000005;

// Constants for enum WdNewDocumentType
type
  WdNewDocumentType = TOleEnum;
const
  wdNewBlankDocument = $00000000;
  wdNewWebPage = $00000001;
  wdNewEmailMessage = $00000002;
  wdNewFrameset = $00000003;
  wdNewXMLDocument = $00000004;

// Constants for enum WdKana
type
  WdKana = TOleEnum;
const
  wdKanaKatakana = $00000008;
  wdKanaHiragana = $00000009;

// Constants for enum WdCharacterWidth
type
  WdCharacterWidth = TOleEnum;
const
  wdWidthHalfWidth = $00000006;
  wdWidthFullWidth = $00000007;

// Constants for enum WdNumberStyleWordBasicBiDi
type
  WdNumberStyleWordBasicBiDi = TOleEnum;
const
  wdListNumberStyleBidi1 = $00000031;
  wdListNumberStyleBidi2 = $00000032;
  wdCaptionNumberStyleBidiLetter1 = $00000031;
  wdCaptionNumberStyleBidiLetter2 = $00000032;
  wdNoteNumberStyleBidiLetter1 = $00000031;
  wdNoteNumberStyleBidiLetter2 = $00000032;
  wdPageNumberStyleBidiLetter1 = $00000031;
  wdPageNumberStyleBidiLetter2 = $00000032;

// Constants for enum WdTCSCConverterDirection
type
  WdTCSCConverterDirection = TOleEnum;
const
  wdTCSCConverterDirectionSCTC = $00000000;
  wdTCSCConverterDirectionTCSC = $00000001;
  wdTCSCConverterDirectionAuto = $00000002;

// Constants for enum WdDisableFeaturesIntroducedAfter
type
  WdDisableFeaturesIntroducedAfter = TOleEnum;
const
  wd70 = $00000000;
  wd70FE = $00000001;
  wd80 = $00000002;

// Constants for enum WdWrapTypeMerged
type
  WdWrapTypeMerged = TOleEnum;
const
  wdWrapMergeInline = $00000000;
  wdWrapMergeSquare = $00000001;
  wdWrapMergeTight = $00000002;
  wdWrapMergeBehind = $00000003;
  wdWrapMergeFront = $00000004;
  wdWrapMergeThrough = $00000005;
  wdWrapMergeTopBottom = $00000006;

// Constants for enum WdRecoveryType
type
  WdRecoveryType = TOleEnum;
const
  wdPasteDefault = $00000000;
  wdSingleCellText = $00000005;
  wdSingleCellTable = $00000006;
  wdListContinueNumbering = $00000007;
  wdListRestartNumbering = $00000008;
  wdTableInsertAsRows = $0000000B;
  wdTableAppendTable = $0000000A;
  wdTableOriginalFormatting = $0000000C;
  wdChartPicture = $0000000D;
  wdChart = $0000000E;
  wdChartLinked = $0000000F;
  wdFormatOriginalFormatting = $00000010;
  wdFormatSurroundingFormattingWithEmphasis = $00000014;
  wdFormatPlainText = $00000016;
  wdTableOverwriteCells = $00000017;
  wdListCombineWithExistingList = $00000018;
  wdListDontMerge = $00000019;
  wdUseDestinationStylesRecovery = $00000013;

// Constants for enum WdLineEndingType
type
  WdLineEndingType = TOleEnum;
const
  wdCRLF = $00000000;
  wdCROnly = $00000001;
  wdLFOnly = $00000002;
  wdLFCR = $00000003;
  wdLSPS = $00000004;

// Constants for enum WdStyleSheetLinkType
type
  WdStyleSheetLinkType = TOleEnum;
const
  wdStyleSheetLinkTypeLinked = $00000000;
  wdStyleSheetLinkTypeImported = $00000001;

// Constants for enum WdStyleSheetPrecedence
type
  WdStyleSheetPrecedence = TOleEnum;
const
  wdStyleSheetPrecedenceHigher = $FFFFFFFF;
  wdStyleSheetPrecedenceLower = $FFFFFFFE;
  wdStyleSheetPrecedenceHighest = $00000001;
  wdStyleSheetPrecedenceLowest = $00000000;

// Constants for enum WdEmailHTMLFidelity
type
  WdEmailHTMLFidelity = TOleEnum;
const
  wdEmailHTMLFidelityLow = $00000001;
  wdEmailHTMLFidelityMedium = $00000002;
  wdEmailHTMLFidelityHigh = $00000003;

// Constants for enum WdMailMergeMailFormat
type
  WdMailMergeMailFormat = TOleEnum;
const
  wdMailFormatPlainText = $00000000;
  wdMailFormatHTML = $00000001;

// Constants for enum WdMappedDataFields
type
  WdMappedDataFields = TOleEnum;
const
  wdUniqueIdentifier = $00000001;
  wdCourtesyTitle = $00000002;
  wdFirstName = $00000003;
  wdMiddleName = $00000004;
  wdLastName = $00000005;
  wdSuffix = $00000006;
  wdNickname = $00000007;
  wdJobTitle = $00000008;
  wdCompany = $00000009;
  wdAddress1 = $0000000A;
  wdAddress2 = $0000000B;
  wdCity = $0000000C;
  wdState = $0000000D;
  wdPostalCode = $0000000E;
  wdCountryRegion = $0000000F;
  wdBusinessPhone = $00000010;
  wdBusinessFax = $00000011;
  wdHomePhone = $00000012;
  wdHomeFax = $00000013;
  wdEmailAddress = $00000014;
  wdWebPageURL = $00000015;
  wdSpouseCourtesyTitle = $00000016;
  wdSpouseFirstName = $00000017;
  wdSpouseMiddleName = $00000018;
  wdSpouseLastName = $00000019;
  wdSpouseNickname = $0000001A;
  wdRubyFirstName = $0000001B;
  wdRubyLastName = $0000001C;
  wdAddress3 = $0000001D;
  wdDepartment = $0000001E;

// Constants for enum WdConditionCode
type
  WdConditionCode = TOleEnum;
const
  wdFirstRow = $00000000;
  wdLastRow = $00000001;
  wdOddRowBanding = $00000002;
  wdEvenRowBanding = $00000003;
  wdFirstColumn = $00000004;
  wdLastColumn = $00000005;
  wdOddColumnBanding = $00000006;
  wdEvenColumnBanding = $00000007;
  wdNECell = $00000008;
  wdNWCell = $00000009;
  wdSECell = $0000000A;
  wdSWCell = $0000000B;

// Constants for enum WdCompareTarget
type
  WdCompareTarget = TOleEnum;
const
  wdCompareTargetSelected = $00000000;
  wdCompareTargetCurrent = $00000001;
  wdCompareTargetNew = $00000002;

// Constants for enum WdMergeTarget
type
  WdMergeTarget = TOleEnum;
const
  wdMergeTargetSelected = $00000000;
  wdMergeTargetCurrent = $00000001;
  wdMergeTargetNew = $00000002;

// Constants for enum WdUseFormattingFrom
type
  WdUseFormattingFrom = TOleEnum;
const
  wdFormattingFromCurrent = $00000000;
  wdFormattingFromSelected = $00000001;
  wdFormattingFromPrompt = $00000002;

// Constants for enum WdRevisionsView
type
  WdRevisionsView = TOleEnum;
const
  wdRevisionsViewFinal = $00000000;
  wdRevisionsViewOriginal = $00000001;

// Constants for enum WdRevisionsMode
type
  WdRevisionsMode = TOleEnum;
const
  wdBalloonRevisions = $00000000;
  wdInLineRevisions = $00000001;
  wdMixedRevisions = $00000002;

// Constants for enum WdRevisionsBalloonWidthType
type
  WdRevisionsBalloonWidthType = TOleEnum;
const
  wdBalloonWidthPercent = $00000000;
  wdBalloonWidthPoints = $00000001;

// Constants for enum WdRevisionsBalloonPrintOrientation
type
  WdRevisionsBalloonPrintOrientation = TOleEnum;
const
  wdBalloonPrintOrientationAuto = $00000000;
  wdBalloonPrintOrientationPreserve = $00000001;
  wdBalloonPrintOrientationForceLandscape = $00000002;

// Constants for enum WdRevisionsBalloonMargin
type
  WdRevisionsBalloonMargin = TOleEnum;
const
  wdLeftMargin = $00000000;
  wdRightMargin = $00000001;

// Constants for enum WdTaskPanes
type
  WdTaskPanes = TOleEnum;
const
  wdTaskPaneFormatting = $00000000;
  wdTaskPaneRevealFormatting = $00000001;
  wdTaskPaneMailMerge = $00000002;
  wdTaskPaneTranslate = $00000003;
  wdTaskPaneSearch = $00000004;
  wdTaskPaneXMLStructure = $00000005;
  wdTaskPaneDocumentProtection = $00000006;
  wdTaskPaneDocumentActions = $00000007;
  wdTaskPaneSharedWorkspace = $00000008;
  wdTaskPaneHelp = $00000009;
  wdTaskPaneResearch = $0000000A;
  wdTaskPaneFaxService = $0000000B;
  wdTaskPaneXMLDocument = $0000000C;
  wdTaskPaneDocumentUpdates = $0000000D;
  wdTaskPaneSignature = $0000000E;
  wdTaskPaneStyleInspector = $0000000F;
  wdTaskPaneDocumentManagement = $00000010;
  wdTaskPaneApplyStyles = $00000011;
  wdTaskPaneNav = $00000012;
  wdTaskPaneSelection = $00000013;

// Constants for enum WdShowFilter
type
  WdShowFilter = TOleEnum;
const
  wdShowFilterStylesAvailable = $00000000;
  wdShowFilterStylesInUse = $00000001;
  wdShowFilterStylesAll = $00000002;
  wdShowFilterFormattingInUse = $00000003;
  wdShowFilterFormattingAvailable = $00000004;
  wdShowFilterFormattingRecommended = $00000005;

// Constants for enum WdMergeSubType
type
  WdMergeSubType = TOleEnum;
const
  wdMergeSubTypeOther = $00000000;
  wdMergeSubTypeAccess = $00000001;
  wdMergeSubTypeOAL = $00000002;
  wdMergeSubTypeOLEDBWord = $00000003;
  wdMergeSubTypeWorks = $00000004;
  wdMergeSubTypeOLEDBText = $00000005;
  wdMergeSubTypeOutlook = $00000006;
  wdMergeSubTypeWord = $00000007;
  wdMergeSubTypeWord2000 = $00000008;

// Constants for enum WdDocumentDirection
type
  WdDocumentDirection = TOleEnum;
const
  wdLeftToRight = $00000000;
  wdRightToLeft = $00000001;

// Constants for enum WdLanguageID2000
type
  WdLanguageID2000 = TOleEnum;
const
  wdChineseHongKong = $00000C04;
  wdChineseMacao = $00001404;
  wdEnglishTrinidad = $00002C09;

// Constants for enum WdRectangleType
type
  WdRectangleType = TOleEnum;
const
  wdTextRectangle = $00000000;
  wdShapeRectangle = $00000001;
  wdMarkupRectangle = $00000002;
  wdMarkupRectangleButton = $00000003;
  wdPageBorderRectangle = $00000004;
  wdLineBetweenColumnRectangle = $00000005;
  wdSelection = $00000006;
  wdSystem = $00000007;
  wdMarkupRectangleArea = $00000008;
  wdReadingModeNavigation = $00000009;
  wdMarkupRectangleMoveMatch = $0000000A;
  wdReadingModePanningArea = $0000000B;
  wdMailNavArea = $0000000C;
  wdDocumentControlRectangle = $0000000D;

// Constants for enum WdLineType
type
  WdLineType = TOleEnum;
const
  wdTextLine = $00000000;
  wdTableRow = $00000001;

// Constants for enum WdXMLNodeType
type
  WdXMLNodeType = TOleEnum;
const
  wdXMLNodeElement = $00000001;
  wdXMLNodeAttribute = $00000002;

// Constants for enum WdXMLSelectionChangeReason
type
  WdXMLSelectionChangeReason = TOleEnum;
const
  wdXMLSelectionChangeReasonMove = $00000000;
  wdXMLSelectionChangeReasonInsert = $00000001;
  wdXMLSelectionChangeReasonDelete = $00000002;

// Constants for enum WdXMLNodeLevel
type
  WdXMLNodeLevel = TOleEnum;
const
  wdXMLNodeLevelInline = $00000000;
  wdXMLNodeLevelParagraph = $00000001;
  wdXMLNodeLevelRow = $00000002;
  wdXMLNodeLevelCell = $00000003;

// Constants for enum WdSmartTagControlType
type
  WdSmartTagControlType = TOleEnum;
const
  wdControlSmartTag = $00000001;
  wdControlLink = $00000002;
  wdControlHelp = $00000003;
  wdControlHelpURL = $00000004;
  wdControlSeparator = $00000005;
  wdControlButton = $00000006;
  wdControlLabel = $00000007;
  wdControlImage = $00000008;
  wdControlCheckbox = $00000009;
  wdControlTextbox = $0000000A;
  wdControlListbox = $0000000B;
  wdControlCombo = $0000000C;
  wdControlActiveX = $0000000D;
  wdControlDocumentFragment = $0000000E;
  wdControlDocumentFragmentURL = $0000000F;
  wdControlRadioGroup = $00000010;

// Constants for enum WdEditorType
type
  WdEditorType = TOleEnum;
const
  wdEditorEveryone = $FFFFFFFF;
  wdEditorOwners = $FFFFFFFC;
  wdEditorEditors = $FFFFFFFB;
  wdEditorCurrent = $FFFFFFFA;

// Constants for enum WdXMLValidationStatus
type
  WdXMLValidationStatus = TOleEnum;
const
  wdXMLValidationStatusOK = $00000000;
  wdXMLValidationStatusCustom = $C00CE000;

// Constants for enum WdStyleSort
type
  WdStyleSort = TOleEnum;
const
  wdStyleSortByName = $00000000;
  wdStyleSortRecommended = $00000001;
  wdStyleSortByFont = $00000002;
  wdStyleSortByBasedOn = $00000003;
  wdStyleSortByType = $00000004;

// Constants for enum WdRemoveDocInfoType
type
  WdRemoveDocInfoType = TOleEnum;
const
  wdRDIComments = $00000001;
  wdRDIRevisions = $00000002;
  wdRDIVersions = $00000003;
  wdRDIRemovePersonalInformation = $00000004;
  wdRDIEmailHeader = $00000005;
  wdRDIRoutingSlip = $00000006;
  wdRDISendForReview = $00000007;
  wdRDIDocumentProperties = $00000008;
  wdRDITemplate = $00000009;
  wdRDIDocumentWorkspace = $0000000A;
  wdRDIInkAnnotations = $0000000B;
  wdRDIDocumentServerProperties = $0000000E;
  wdRDIDocumentManagementPolicy = $0000000F;
  wdRDIContentType = $00000010;
  wdRDIAll = $00000063;

// Constants for enum WdCheckInVersionType
type
  WdCheckInVersionType = TOleEnum;
const
  wdCheckInMinorVersion = $00000000;
  wdCheckInMajorVersion = $00000001;
  wdCheckInOverwriteVersion = $00000002;

// Constants for enum WdMoveToTextMark
type
  WdMoveToTextMark = TOleEnum;
const
  wdMoveToTextMarkNone = $00000000;
  wdMoveToTextMarkBold = $00000001;
  wdMoveToTextMarkItalic = $00000002;
  wdMoveToTextMarkUnderline = $00000003;
  wdMoveToTextMarkDoubleUnderline = $00000004;
  wdMoveToTextMarkColorOnly = $00000005;
  wdMoveToTextMarkStrikeThrough = $00000006;
  wdMoveToTextMarkDoubleStrikeThrough = $00000007;

// Constants for enum WdMoveFromTextMark
type
  WdMoveFromTextMark = TOleEnum;
const
  wdMoveFromTextMarkHidden = $00000000;
  wdMoveFromTextMarkDoubleStrikeThrough = $00000001;
  wdMoveFromTextMarkStrikeThrough = $00000002;
  wdMoveFromTextMarkCaret = $00000003;
  wdMoveFromTextMarkPound = $00000004;
  wdMoveFromTextMarkNone = $00000005;
  wdMoveFromTextMarkBold = $00000006;
  wdMoveFromTextMarkItalic = $00000007;
  wdMoveFromTextMarkUnderline = $00000008;
  wdMoveFromTextMarkDoubleUnderline = $00000009;
  wdMoveFromTextMarkColorOnly = $0000000A;

// Constants for enum WdOMathFunctionType
type
  WdOMathFunctionType = TOleEnum;
const
  wdOMathFunctionAcc = $00000001;
  wdOMathFunctionBar = $00000002;
  wdOMathFunctionBox = $00000003;
  wdOMathFunctionBorderBox = $00000004;
  wdOMathFunctionDelim = $00000005;
  wdOMathFunctionEqArray = $00000006;
  wdOMathFunctionFrac = $00000007;
  wdOMathFunctionFunc = $00000008;
  wdOMathFunctionGroupChar = $00000009;
  wdOMathFunctionLimLow = $0000000A;
  wdOMathFunctionLimUpp = $0000000B;
  wdOMathFunctionMat = $0000000C;
  wdOMathFunctionNary = $0000000D;
  wdOMathFunctionPhantom = $0000000E;
  wdOMathFunctionScrPre = $0000000F;
  wdOMathFunctionRad = $00000010;
  wdOMathFunctionScrSub = $00000011;
  wdOMathFunctionScrSubSup = $00000012;
  wdOMathFunctionScrSup = $00000013;
  wdOMathFunctionText = $00000014;
  wdOMathFunctionNormalText = $00000015;
  wdOMathFunctionLiteralText = $00000016;

// Constants for enum WdOMathHorizAlignType
type
  WdOMathHorizAlignType = TOleEnum;
const
  wdOMathHorizAlignCenter = $00000000;
  wdOMathHorizAlignLeft = $00000001;
  wdOMathHorizAlignRight = $00000002;

// Constants for enum WdOMathVertAlignType
type
  WdOMathVertAlignType = TOleEnum;
const
  wdOMathVertAlignCenter = $00000000;
  wdOMathVertAlignTop = $00000001;
  wdOMathVertAlignBottom = $00000002;

// Constants for enum WdOMathFracType
type
  WdOMathFracType = TOleEnum;
const
  wdOMathFracBar = $00000000;
  wdOMathFracNoBar = $00000001;
  wdOMathFracSkw = $00000002;
  wdOMathFracLin = $00000003;

// Constants for enum WdOMathSpacingRule
type
  WdOMathSpacingRule = TOleEnum;
const
  wdOMathSpacingSingle = $00000000;
  wdOMathSpacing1pt5 = $00000001;
  wdOMathSpacingDouble = $00000002;
  wdOMathSpacingExactly = $00000003;
  wdOMathSpacingMultiple = $00000004;

// Constants for enum WdOMathType
type
  WdOMathType = TOleEnum;
const
  wdOMathDisplay = $00000000;
  wdOMathInline = $00000001;

// Constants for enum WdOMathShapeType
type
  WdOMathShapeType = TOleEnum;
const
  wdOMathShapeCentered = $00000000;
  wdOMathShapeMatch = $00000001;

// Constants for enum WdOMathJc
type
  WdOMathJc = TOleEnum;
const
  wdOMathJcCenterGroup = $00000001;
  wdOMathJcCenter = $00000002;
  wdOMathJcLeft = $00000003;
  wdOMathJcRight = $00000004;
  wdOMathJcInline = $00000007;

// Constants for enum WdOMathBreakBin
type
  WdOMathBreakBin = TOleEnum;
const
  wdOMathBreakBinBefore = $00000000;
  wdOMathBreakBinAfter = $00000001;
  wdOMathBreakBinRepeat = $00000002;

// Constants for enum WdOMathBreakSub
type
  WdOMathBreakSub = TOleEnum;
const
  wdOMathBreakSubMinusMinus = $00000000;
  wdOMathBreakSubPlusMinus = $00000001;
  wdOMathBreakSubMinusPlus = $00000002;

// Constants for enum WdReadingLayoutMargin
type
  WdReadingLayoutMargin = TOleEnum;
const
  wdAutomaticMargin = $00000000;
  wdSuppressMargin = $00000001;
  wdFullMargin = $00000002;

// Constants for enum WdContentControlType
type
  WdContentControlType = TOleEnum;
const
  wdContentControlRichText = $00000000;
  wdContentControlText = $00000001;
  wdContentControlPicture = $00000002;
  wdContentControlComboBox = $00000003;
  wdContentControlDropdownList = $00000004;
  wdContentControlBuildingBlockGallery = $00000005;
  wdContentControlDate = $00000006;
  wdContentControlGroup = $00000007;
  wdContentControlCheckBox = $00000008;

// Constants for enum WdCompareDestination
type
  WdCompareDestination = TOleEnum;
const
  wdCompareDestinationOriginal = $00000000;
  wdCompareDestinationRevised = $00000001;
  wdCompareDestinationNew = $00000002;

// Constants for enum WdGranularity
type
  WdGranularity = TOleEnum;
const
  wdGranularityCharLevel = $00000000;
  wdGranularityWordLevel = $00000001;

// Constants for enum WdMergeFormatFrom
type
  WdMergeFormatFrom = TOleEnum;
const
  wdMergeFormatFromOriginal = $00000000;
  wdMergeFormatFromRevised = $00000001;
  wdMergeFormatFromPrompt = $00000002;

// Constants for enum WdShowSourceDocuments
type
  WdShowSourceDocuments = TOleEnum;
const
  wdShowSourceDocumentsNone = $00000000;
  wdShowSourceDocumentsOriginal = $00000001;
  wdShowSourceDocumentsRevised = $00000002;
  wdShowSourceDocumentsBoth = $00000003;

// Constants for enum WdPasteOptions
type
  WdPasteOptions = TOleEnum;
const
  wdKeepSourceFormatting = $00000000;
  wdMatchDestinationFormatting = $00000001;
  wdKeepTextOnly = $00000002;
  wdUseDestinationStyles = $00000003;

// Constants for enum WdBuildingBlockTypes
type
  WdBuildingBlockTypes = TOleEnum;
const
  wdTypeQuickParts = $00000001;
  wdTypeCoverPage = $00000002;
  wdTypeEquations = $00000003;
  wdTypeFooters = $00000004;
  wdTypeHeaders = $00000005;
  wdTypePageNumber = $00000006;
  wdTypeTables = $00000007;
  wdTypeWatermarks = $00000008;
  wdTypeAutoText = $00000009;
  wdTypeTextBox = $0000000A;
  wdTypePageNumberTop = $0000000B;
  wdTypePageNumberBottom = $0000000C;
  wdTypePageNumberPage = $0000000D;
  wdTypeTableOfContents = $0000000E;
  wdTypeCustomQuickParts = $0000000F;
  wdTypeCustomCoverPage = $00000010;
  wdTypeCustomEquations = $00000011;
  wdTypeCustomFooters = $00000012;
  wdTypeCustomHeaders = $00000013;
  wdTypeCustomPageNumber = $00000014;
  wdTypeCustomTables = $00000015;
  wdTypeCustomWatermarks = $00000016;
  wdTypeCustomAutoText = $00000017;
  wdTypeCustomTextBox = $00000018;
  wdTypeCustomPageNumberTop = $00000019;
  wdTypeCustomPageNumberBottom = $0000001A;
  wdTypeCustomPageNumberPage = $0000001B;
  wdTypeCustomTableOfContents = $0000001C;
  wdTypeCustom1 = $0000001D;
  wdTypeCustom2 = $0000001E;
  wdTypeCustom3 = $0000001F;
  wdTypeCustom4 = $00000020;
  wdTypeCustom5 = $00000021;
  wdTypeBibliography = $00000022;
  wdTypeCustomBibliography = $00000023;

// Constants for enum WdAlignmentTabRelative
type
  WdAlignmentTabRelative = TOleEnum;
const
  wdMargin = $00000000;
  wdIndent = $00000001;

// Constants for enum WdAlignmentTabAlignment
type
  WdAlignmentTabAlignment = TOleEnum;
const
  wdLeft = $00000000;
  wdCenter = $00000001;
  wdRight = $00000002;

// Constants for enum WdCellColor
type
  WdCellColor = TOleEnum;
const
  wdCellColorByAuthor = $FFFFFFFF;
  wdCellColorNoHighlight = $00000000;
  wdCellColorPink = $00000001;
  wdCellColorLightBlue = $00000002;
  wdCellColorLightYellow = $00000003;
  wdCellColorLightPurple = $00000004;
  wdCellColorLightOrange = $00000005;
  wdCellColorLightGreen = $00000006;
  wdCellColorLightGray = $00000007;

// Constants for enum WdTextboxTightWrap
type
  WdTextboxTightWrap = TOleEnum;
const
  wdTightNone = $00000000;
  wdTightAll = $00000001;
  wdTightFirstAndLastLines = $00000002;
  wdTightFirstLineOnly = $00000003;
  wdTightLastLineOnly = $00000004;

// Constants for enum WdShapePositionRelative
type
  WdShapePositionRelative = TOleEnum;
const
  wdShapePositionRelativeNone = $FFF0BDC1;

// Constants for enum WdShapeSizeRelative
type
  WdShapeSizeRelative = TOleEnum;
const
  wdShapeSizeRelativeNone = $FFF0BDC1;

// Constants for enum WdRelativeHorizontalSize
type
  WdRelativeHorizontalSize = TOleEnum;
const
  wdRelativeHorizontalSizeMargin = $00000000;
  wdRelativeHorizontalSizePage = $00000001;
  wdRelativeHorizontalSizeLeftMarginArea = $00000002;
  wdRelativeHorizontalSizeRightMarginArea = $00000003;
  wdRelativeHorizontalSizeInnerMarginArea = $00000004;
  wdRelativeHorizontalSizeOuterMarginArea = $00000005;

// Constants for enum WdRelativeVerticalSize
type
  WdRelativeVerticalSize = TOleEnum;
const
  wdRelativeVerticalSizeMargin = $00000000;
  wdRelativeVerticalSizePage = $00000001;
  wdRelativeVerticalSizeTopMarginArea = $00000002;
  wdRelativeVerticalSizeBottomMarginArea = $00000003;
  wdRelativeVerticalSizeInnerMarginArea = $00000004;
  wdRelativeVerticalSizeOuterMarginArea = $00000005;

// Constants for enum WdThemeColorIndex
type
  WdThemeColorIndex = TOleEnum;
const
  wdNotThemeColor = $FFFFFFFF;
  wdThemeColorMainDark1 = $00000000;
  wdThemeColorMainLight1 = $00000001;
  wdThemeColorMainDark2 = $00000002;
  wdThemeColorMainLight2 = $00000003;
  wdThemeColorAccent1 = $00000004;
  wdThemeColorAccent2 = $00000005;
  wdThemeColorAccent3 = $00000006;
  wdThemeColorAccent4 = $00000007;
  wdThemeColorAccent5 = $00000008;
  wdThemeColorAccent6 = $00000009;
  wdThemeColorHyperlink = $0000000A;
  wdThemeColorHyperlinkFollowed = $0000000B;
  wdThemeColorBackground1 = $0000000C;
  wdThemeColorText1 = $0000000D;
  wdThemeColorBackground2 = $0000000E;
  wdThemeColorText2 = $0000000F;

// Constants for enum WdExportFormat
type
  WdExportFormat = TOleEnum;
const
  wdExportFormatPDF = $00000011;
  wdExportFormatXPS = $00000012;

// Constants for enum WdExportOptimizeFor
type
  WdExportOptimizeFor = TOleEnum;
const
  wdExportOptimizeForPrint = $00000000;
  wdExportOptimizeForOnScreen = $00000001;

// Constants for enum WdExportCreateBookmarks
type
  WdExportCreateBookmarks = TOleEnum;
const
  wdExportCreateNoBookmarks = $00000000;
  wdExportCreateHeadingBookmarks = $00000001;
  wdExportCreateWordBookmarks = $00000002;

// Constants for enum WdExportItem
type
  WdExportItem = TOleEnum;
const
  wdExportDocumentContent = $00000000;
  wdExportDocumentWithMarkup = $00000007;

// Constants for enum WdExportRange
type
  WdExportRange = TOleEnum;
const
  wdExportAllDocument = $00000000;
  wdExportSelection = $00000001;
  wdExportCurrentPage = $00000002;
  wdExportFromTo = $00000003;

// Constants for enum WdFrenchSpeller
type
  WdFrenchSpeller = TOleEnum;
const
  wdFrenchBoth = $00000000;
  wdFrenchPreReform = $00000001;
  wdFrenchPostReform = $00000002;

// Constants for enum WdDocPartInsertOptions
type
  WdDocPartInsertOptions = TOleEnum;
const
  wdInsertContent = $00000000;
  wdInsertParagraph = $00000001;
  wdInsertPage = $00000002;

// Constants for enum WdContentControlDateStorageFormat
type
  WdContentControlDateStorageFormat = TOleEnum;
const
  wdContentControlDateStorageText = $00000000;
  wdContentControlDateStorageDate = $00000001;
  wdContentControlDateStorageDateTime = $00000002;

// Constants for enum XlChartSplitType
type
  XlChartSplitType = TOleEnum;
const
  xlSplitByPosition = $00000001;
  xlSplitByPercentValue = $00000003;
  xlSplitByCustomSplit = $00000004;
  xlSplitByValue = $00000002;

// Constants for enum XlSizeRepresents
type
  XlSizeRepresents = TOleEnum;
const
  xlSizeIsWidth = $00000002;
  xlSizeIsArea = $00000001;

// Constants for enum XlAxisGroup
type
  XlAxisGroup = TOleEnum;
const
  xlPrimary = $00000001;
  xlSecondary = $00000002;

// Constants for enum XlBackground
type
  XlBackground = TOleEnum;
const
  xlBackgroundAutomatic = $FFFFEFF7;
  xlBackgroundOpaque = $00000003;
  xlBackgroundTransparent = $00000002;

// Constants for enum XlChartGallery
type
  XlChartGallery = TOleEnum;
const
  xlBuiltIn = $00000015;
  xlUserDefined = $00000016;
  xlAnyGallery = $00000017;

// Constants for enum XlChartPicturePlacement
type
  XlChartPicturePlacement = TOleEnum;
const
  xlSides = $00000001;
  xlEnd = $00000002;
  xlEndSides = $00000003;
  xlFront = $00000004;
  xlFrontSides = $00000005;
  xlFrontEnd = $00000006;
  xlAllFaces = $00000007;

// Constants for enum XlDataLabelSeparator
type
  XlDataLabelSeparator = TOleEnum;
const
  xlDataLabelSeparatorDefault = $00000001;

// Constants for enum XlPattern
type
  XlPattern = TOleEnum;
const
  xlPatternAutomatic = $FFFFEFF7;
  xlPatternChecker = $00000009;
  xlPatternCrissCross = $00000010;
  xlPatternDown = $FFFFEFE7;
  xlPatternGray16 = $00000011;
  xlPatternGray25 = $FFFFEFE4;
  xlPatternGray50 = $FFFFEFE3;
  xlPatternGray75 = $FFFFEFE2;
  xlPatternGray8 = $00000012;
  xlPatternGrid = $0000000F;
  xlPatternHorizontal = $FFFFEFE0;
  xlPatternLightDown = $0000000D;
  xlPatternLightHorizontal = $0000000B;
  xlPatternLightUp = $0000000E;
  xlPatternLightVertical = $0000000C;
  xlPatternNone = $FFFFEFD2;
  xlPatternSemiGray75 = $0000000A;
  xlPatternSolid = $00000001;
  xlPatternUp = $FFFFEFBE;
  xlPatternVertical = $FFFFEFBA;
  xlPatternLinearGradient = $00000FA0;
  xlPatternRectangularGradient = $00000FA1;

// Constants for enum XlPictureAppearance
type
  XlPictureAppearance = TOleEnum;
const
  xlPrinter = $00000002;
  xlScreen = $00000001;

// Constants for enum XlCopyPictureFormat
type
  XlCopyPictureFormat = TOleEnum;
const
  xlBitmap = $00000002;
  xlPicture = $FFFFEFCD;

// Constants for enum XlRgbColor
type
  XlRgbColor = TOleEnum;
const
  xlAliceBlue = $00FFF8F0;
  xlAntiqueWhite = $00D7EBFA;
  xlAqua = $00FFFF00;
  xlAquamarine = $00D4FF7F;
  xlAzure = $00FFFFF0;
  xlBeige = $00DCF5F5;
  xlBisque = $00C4E4FF;
  xlBlack = $00000000;
  xlBlanchedAlmond = $00CDEBFF;
  xlBlue = $00FF0000;
  xlBlueViolet = $00E22B8A;
  xlBrown = $002A2AA5;
  xlBurlyWood = $0087B8DE;
  xlCadetBlue = $00A09E5F;
  xlChartreuse = $0000FF7F;
  xlCoral = $00507FFF;
  xlCornflowerBlue = $00ED9564;
  xlCornsilk = $00DCF8FF;
  xlCrimson = $003C14DC;
  xlDarkBlue = $008B0000;
  xlDarkCyan = $008B8B00;
  xlDarkGoldenrod = $000B86B8;
  xlDarkGreen = $00006400;
  xlDarkGray = $00A9A9A9;
  xlDarkGrey = $00A9A9A9;
  xlDarkKhaki = $006BB7BD;
  xlDarkMagenta = $008B008B;
  xlDarkOliveGreen = $002F6B55;
  xlDarkOrange = $00008CFF;
  xlDarkOrchid = $00CC3299;
  xlDarkRed = $0000008B;
  xlDarkSalmon = $007A96E9;
  xlDarkSeaGreen = $008FBC8F;
  xlDarkSlateBlue = $008B3D48;
  xlDarkSlateGray = $004F4F2F;
  xlDarkSlateGrey = $004F4F2F;
  xlDarkTurquoise = $00D1CE00;
  xlDarkViolet = $00D30094;
  xlDeepPink = $009314FF;
  xlDeepSkyBlue = $00FFBF00;
  xlDimGray = $00696969;
  xlDimGrey = $00696969;
  xlDodgerBlue = $00FF901E;
  xlFireBrick = $002222B2;
  xlFloralWhite = $00F0FAFF;
  xlForestGreen = $00228B22;
  xlFuchsia = $00FF00FF;
  xlGainsboro = $00DCDCDC;
  xlGhostWhite = $00FFF8F8;
  xlGold = $0000D7FF;
  xlGoldenrod = $0020A5DA;
  xlGray = $00808080;
  xlGreen = $00008000;
  xlGrey = $00808080;
  xlGreenYellow = $002FFFAD;
  xlHoneydew = $00F0FFF0;
  xlHotPink = $00B469FF;
  xlIndianRed = $005C5CCD;
  xlIndigo = $0082004B;
  xlIvory = $00F0FFFF;
  xlKhaki = $008CE6F0;
  xlLavender = $00FAE6E6;
  xlLavenderBlush = $00F5F0FF;
  xlLawnGreen = $0000FC7C;
  xlLemonChiffon = $00CDFAFF;
  xlLightBlue = $00E6D8AD;
  xlLightCoral = $008080F0;
  xlLightCyan = $008B8B00;
  xlLightGoldenrodYellow = $00D2FAFA;
  xlLightGray = $00D3D3D3;
  xlLightGreen = $0090EE90;
  xlLightGrey = $00D3D3D3;
  xlLightPink = $00C1B6FF;
  xlLightSalmon = $007AA0FF;
  xlLightSeaGreen = $00AAB220;
  xlLightSkyBlue = $00FACE87;
  xlLightSlateGray = $00998877;
  xlLightSlateGrey = $00998877;
  xlLightSteelBlue = $00DEC4B0;
  xlLightYellow = $00E0FFFF;
  xlLime = $0000FF00;
  xlLimeGreen = $0032CD32;
  xlLinen = $00E6F0FA;
  xlMaroon = $00000080;
  xlMediumAquamarine = $00AAFF66;
  xlMediumBlue = $00CD0000;
  xlMediumOrchid = $00D355BA;
  xlMediumPurple = $00DB7093;
  xlMediumSeaGreen = $0071B33C;
  xlMediumSlateBlue = $00EE687B;
  xlMediumSpringGreen = $009AFA00;
  xlMediumTurquoise = $00CCD148;
  xlMediumVioletRed = $008515C7;
  xlMidnightBlue = $00701919;
  xlMintCream = $00FAFFF5;
  xlMistyRose = $00E1E4FF;
  xlMoccasin = $00B5E4FF;
  xlNavajoWhite = $00ADDEFF;
  xlNavy = $00800000;
  xlNavyBlue = $00800000;
  xlOldLace = $00E6F5FD;
  xlOlive = $00008080;
  xlOliveDrab = $00238E6B;
  xlOrange = $0000A5FF;
  xlOrangeRed = $000045FF;
  xlOrchid = $00D670DA;
  xlPaleGoldenrod = $006BE8EE;
  xlPaleGreen = $0098FB98;
  xlPaleTurquoise = $00EEEEAF;
  xlPaleVioletRed = $009370DB;
  xlPapayaWhip = $00D5EFFF;
  xlPeachPuff = $00B9DAFF;
  xlPeru = $003F85CD;
  xlPink = $00CBC0FF;
  xlPlum = $00DDA0DD;
  xlPowderBlue = $00E6E0B0;
  xlPurple = $00800080;
  xlRed = $000000FF;
  xlRosyBrown = $008F8FBC;
  xlRoyalBlue = $00E16941;
  xlSalmon = $007280FA;
  xlSandyBrown = $0060A4F4;
  xlSeaGreen = $00578B2E;
  xlSeashell = $00EEF5FF;
  xlSienna = $002D52A0;
  xlSilver = $00C0C0C0;
  xlSkyBlue = $00EBCE87;
  xlSlateBlue = $00CD5A6A;
  xlSlateGray = $00908070;
  xlSlateGrey = $00908070;
  xlSnow = $00FAFAFF;
  xlSpringGreen = $007FFF00;
  xlSteelBlue = $00B48246;
  xlTan = $008CB4D2;
  xlTeal = $00808000;
  xlThistle = $00D8BFD8;
  xlTomato = $004763FF;
  xlTurquoise = $00D0E040;
  xlYellow = $0000FFFF;
  xlYellowGreen = $0032CD9A;
  xlViolet = $00EE82EE;
  xlWheat = $00B3DEF5;
  xlWhite = $00FFFFFF;
  xlWhiteSmoke = $00F5F5F5;

// Constants for enum XlConstants
type
  XlConstants = TOleEnum;
const
  xlAutomatic = $FFFFEFF7;
  xlCombination = $FFFFEFF1;
  xlCustom = $FFFFEFEE;
  xlBar = $00000002;
  xlColumn = $00000003;
  xl3DBar = $FFFFEFFD;
  xl3DSurface = $FFFFEFF9;
  xlDefaultAutoFormat = $FFFFFFFF;
  xlNone = $FFFFEFD2;
  xlAbove = $00000000;
  xlBelow = $00000001;
  xlBoth = $00000001;
  xlBottom = $FFFFEFF5;
  xlCenter = $FFFFEFF4;
  xlChecker = $00000009;
  xlCircle = $00000008;
  xlCorner = $00000002;
  xlCrissCross = $00000010;
  xlCross = $00000004;
  xlDiamond = $00000002;
  xlDistributed = $FFFFEFEB;
  xlFill = $00000005;
  xlFixedValue = $00000001;
  xlGeneral = $00000001;
  xlGray16 = $00000011;
  xlGray25 = $FFFFEFE4;
  xlGray50 = $FFFFEFE3;
  xlGray75 = $FFFFEFE2;
  xlGray8 = $00000012;
  xlGrid = $0000000F;
  xlHigh = $FFFFEFE1;
  xlInside = $00000002;
  xlJustify = $FFFFEFDE;
  xlLeft = $FFFFEFDD;
  xlLightDown = $0000000D;
  xlLightHorizontal = $0000000B;
  xlLightUp = $0000000E;
  xlLightVertical = $0000000C;
  xlLow = $FFFFEFDA;
  xlMaximum = $00000002;
  xlMinimum = $00000004;
  xlMinusValues = $00000003;
  xlNextToAxis = $00000004;
  xlOpaque = $00000003;
  xlOutside = $00000003;
  xlPercent = $00000002;
  xlPlus = $00000009;
  xlPlusValues = $00000002;
  xlRight = $FFFFEFC8;
  xlScale = $00000003;
  xlSemiGray75 = $0000000A;
  xlShowLabel = $00000004;
  xlShowLabelAndPercent = $00000005;
  xlShowPercent = $00000003;
  xlShowValue = $00000002;
  xlSingle = $00000002;
  xlSolid = $00000001;
  xlSquare = $00000001;
  xlStar = $00000005;
  xlStError = $00000004;
  xlTop = $FFFFEFC0;
  xlTransparent = $00000002;
  xlTriangle = $00000003;

// Constants for enum XlReadingOrder
type
  XlReadingOrder = TOleEnum;
const
  xlContext = $FFFFEC76;
  xlLTR = $FFFFEC75;
  xlRTL = $FFFFEC74;

// Constants for enum XlBorderWeight
type
  XlBorderWeight = TOleEnum;
const
  xlHairline = $00000001;
  xlMedium = $FFFFEFD6;
  xlThick = $00000004;
  xlThin = $00000002;

// Constants for enum XlLegendPosition
type
  XlLegendPosition = TOleEnum;
const
  xlLegendPositionBottom = $FFFFEFF5;
  xlLegendPositionCorner = $00000002;
  xlLegendPositionLeft = $FFFFEFDD;
  xlLegendPositionRight = $FFFFEFC8;
  xlLegendPositionTop = $FFFFEFC0;
  xlLegendPositionCustom = $FFFFEFBF;

// Constants for enum XlUnderlineStyle
type
  XlUnderlineStyle = TOleEnum;
const
  xlUnderlineStyleDouble = $FFFFEFE9;
  xlUnderlineStyleDoubleAccounting = $00000005;
  xlUnderlineStyleNone = $FFFFEFD2;
  xlUnderlineStyleSingle = $00000002;
  xlUnderlineStyleSingleAccounting = $00000004;

// Constants for enum XlColorIndex
type
  XlColorIndex = TOleEnum;
const
  xlColorIndexAutomatic = $FFFFEFF7;
  xlColorIndexNone = $FFFFEFD2;

// Constants for enum XlMarkerStyle
type
  XlMarkerStyle = TOleEnum;
const
  xlMarkerStyleAutomatic = $FFFFEFF7;
  xlMarkerStyleCircle = $00000008;
  xlMarkerStyleDash = $FFFFEFED;
  xlMarkerStyleDiamond = $00000002;
  xlMarkerStyleDot = $FFFFEFEA;
  xlMarkerStyleNone = $FFFFEFD2;
  xlMarkerStylePicture = $FFFFEFCD;
  xlMarkerStylePlus = $00000009;
  xlMarkerStyleSquare = $00000001;
  xlMarkerStyleStar = $00000005;
  xlMarkerStyleTriangle = $00000003;
  xlMarkerStyleX = $FFFFEFB8;

// Constants for enum XlRowCol
type
  XlRowCol = TOleEnum;
const
  xlColumns = $00000002;
  xlRows = $00000001;

// Constants for enum XlDataLabelsType
type
  XlDataLabelsType = TOleEnum;
const
  xlDataLabelsShowNone = $FFFFEFD2;
  xlDataLabelsShowValue = $00000002;
  xlDataLabelsShowPercent = $00000003;
  xlDataLabelsShowLabel = $00000004;
  xlDataLabelsShowLabelAndPercent = $00000005;
  xlDataLabelsShowBubbleSizes = $00000006;

// Constants for enum XlErrorBarInclude
type
  XlErrorBarInclude = TOleEnum;
const
  xlErrorBarIncludeBoth = $00000001;
  xlErrorBarIncludeMinusValues = $00000003;
  xlErrorBarIncludeNone = $FFFFEFD2;
  xlErrorBarIncludePlusValues = $00000002;

// Constants for enum XlErrorBarType
type
  XlErrorBarType = TOleEnum;
const
  xlErrorBarTypeCustom = $FFFFEFEE;
  xlErrorBarTypeFixedValue = $00000001;
  xlErrorBarTypePercent = $00000002;
  xlErrorBarTypeStDev = $FFFFEFC5;
  xlErrorBarTypeStError = $00000004;

// Constants for enum XlErrorBarDirection
type
  XlErrorBarDirection = TOleEnum;
const
  xlChartX = $FFFFEFB8;
  xlChartY = $00000001;

// Constants for enum XlChartPictureType
type
  XlChartPictureType = TOleEnum;
const
  xlStackScale = $00000003;
  xlStack = $00000002;
  xlStretch = $00000001;

// Constants for enum XlChartItem
type
  XlChartItem = TOleEnum;
const
  xlDataLabel = $00000000;
  xlChartArea = $00000002;
  xlSeries = $00000003;
  xlChartTitle = $00000004;
  xlWalls = $00000005;
  xlCorners = $00000006;
  xlDataTable = $00000007;
  xlTrendline = $00000008;
  xlErrorBars = $00000009;
  xlXErrorBars = $0000000A;
  xlYErrorBars = $0000000B;
  xlLegendEntry = $0000000C;
  xlLegendKey = $0000000D;
  xlShape = $0000000E;
  xlMajorGridlines = $0000000F;
  xlMinorGridlines = $00000010;
  xlAxisTitle = $00000011;
  xlUpBars = $00000012;
  xlPlotArea = $00000013;
  xlDownBars = $00000014;
  xlAxis = $00000015;
  xlSeriesLines = $00000016;
  xlFloor = $00000017;
  xlLegend = $00000018;
  xlHiLoLines = $00000019;
  xlDropLines = $0000001A;
  xlRadarAxisLabels = $0000001B;
  xlNothing = $0000001C;
  xlLeaderLines = $0000001D;
  xlDisplayUnitLabel = $0000001E;
  xlPivotChartFieldButton = $0000001F;
  xlPivotChartDropZone = $00000020;

// Constants for enum XlBarShape
type
  XlBarShape = TOleEnum;
const
  xlBox = $00000000;
  xlPyramidToPoint = $00000001;
  xlPyramidToMax = $00000002;
  xlCylinder = $00000003;
  xlConeToPoint = $00000004;
  xlConeToMax = $00000005;

// Constants for enum XlEndStyleCap
type
  XlEndStyleCap = TOleEnum;
const
  xlCap = $00000001;
  xlNoCap = $00000002;

// Constants for enum XlTrendlineType
type
  XlTrendlineType = TOleEnum;
const
  xlExponential = $00000005;
  xlLinear = $FFFFEFDC;
  xlLogarithmic = $FFFFEFDB;
  xlMovingAvg = $00000006;
  xlPolynomial = $00000003;
  xlPower = $00000004;

// Constants for enum XlAxisType
type
  XlAxisType = TOleEnum;
const
  xlCategory = $00000001;
  xlSeriesAxis = $00000003;
  xlValue = $00000002;

// Constants for enum XlAxisCrosses
type
  XlAxisCrosses = TOleEnum;
const
  xlAxisCrossesAutomatic = $FFFFEFF7;
  xlAxisCrossesCustom = $FFFFEFEE;
  xlAxisCrossesMaximum = $00000002;
  xlAxisCrossesMinimum = $00000004;

// Constants for enum XlTickMark
type
  XlTickMark = TOleEnum;
const
  xlTickMarkCross = $00000004;
  xlTickMarkInside = $00000002;
  xlTickMarkNone = $FFFFEFD2;
  xlTickMarkOutside = $00000003;

// Constants for enum XlScaleType
type
  XlScaleType = TOleEnum;
const
  xlScaleLinear = $FFFFEFDC;
  xlScaleLogarithmic = $FFFFEFDB;

// Constants for enum XlTickLabelPosition
type
  XlTickLabelPosition = TOleEnum;
const
  xlTickLabelPositionHigh = $FFFFEFE1;
  xlTickLabelPositionLow = $FFFFEFDA;
  xlTickLabelPositionNextToAxis = $00000004;
  xlTickLabelPositionNone = $FFFFEFD2;

// Constants for enum XlTimeUnit
type
  XlTimeUnit = TOleEnum;
const
  xlDays = $00000000;
  xlMonths = $00000001;
  xlYears = $00000002;

// Constants for enum XlCategoryType
type
  XlCategoryType = TOleEnum;
const
  xlCategoryScale = $00000002;
  xlTimeScale = $00000003;
  xlAutomaticScale = $FFFFEFF7;

// Constants for enum XlDisplayUnit
type
  XlDisplayUnit = TOleEnum;
const
  xlHundreds = $FFFFFFFE;
  xlThousands = $FFFFFFFD;
  xlTenThousands = $FFFFFFFC;
  xlHundredThousands = $FFFFFFFB;
  xlMillions = $FFFFFFFA;
  xlTenMillions = $FFFFFFF9;
  xlHundredMillions = $FFFFFFF8;
  xlThousandMillions = $FFFFFFF7;
  xlMillionMillions = $FFFFFFF6;

// Constants for enum XlOrientation
type
  XlOrientation = TOleEnum;
const
  xlDownward = $FFFFEFB6;
  xlHorizontal = $FFFFEFE0;
  xlUpward = $FFFFEFB5;
  xlVertical = $FFFFEFBA;

// Constants for enum XlTickLabelOrientation
type
  XlTickLabelOrientation = TOleEnum;
const
  xlTickLabelOrientationAutomatic = $FFFFEFF7;
  xlTickLabelOrientationDownward = $FFFFEFB6;
  xlTickLabelOrientationHorizontal = $FFFFEFE0;
  xlTickLabelOrientationUpward = $FFFFEFB5;
  xlTickLabelOrientationVertical = $FFFFEFBA;

// Constants for enum XlDisplayBlanksAs
type
  XlDisplayBlanksAs = TOleEnum;
const
  xlInterpolated = $00000003;
  xlNotPlotted = $00000001;
  xlZero = $00000002;

// Constants for enum XlDataLabelPosition
type
  XlDataLabelPosition = TOleEnum;
const
  xlLabelPositionCenter = $FFFFEFF4;
  xlLabelPositionAbove = $00000000;
  xlLabelPositionBelow = $00000001;
  xlLabelPositionLeft = $FFFFEFDD;
  xlLabelPositionRight = $FFFFEFC8;
  xlLabelPositionOutsideEnd = $00000002;
  xlLabelPositionInsideEnd = $00000003;
  xlLabelPositionInsideBase = $00000004;
  xlLabelPositionBestFit = $00000005;
  xlLabelPositionMixed = $00000006;
  xlLabelPositionCustom = $00000007;

// Constants for enum XlPivotFieldOrientation
type
  XlPivotFieldOrientation = TOleEnum;
const
  xlColumnField = $00000002;
  xlDataField = $00000004;
  xlHidden = $00000000;
  xlPageField = $00000003;
  xlRowField = $00000001;

// Constants for enum XlHAlign
type
  XlHAlign = TOleEnum;
const
  xlHAlignCenter = $FFFFEFF4;
  xlHAlignCenterAcrossSelection = $00000007;
  xlHAlignDistributed = $FFFFEFEB;
  xlHAlignFill = $00000005;
  xlHAlignGeneral = $00000001;
  xlHAlignJustify = $FFFFEFDE;
  xlHAlignLeft = $FFFFEFDD;
  xlHAlignRight = $FFFFEFC8;

// Constants for enum XlVAlign
type
  XlVAlign = TOleEnum;
const
  xlVAlignBottom = $FFFFEFF5;
  xlVAlignCenter = $FFFFEFF4;
  xlVAlignDistributed = $FFFFEFEB;
  xlVAlignJustify = $FFFFEFDE;
  xlVAlignTop = $FFFFEFC0;

// Constants for enum XlLineStyle
type
  XlLineStyle = TOleEnum;
const
  xlContinuous = $00000001;
  xlDash = $FFFFEFED;
  xlDashDot = $00000004;
  xlDashDotDot = $00000005;
  xlDot = $FFFFEFEA;
  xlDouble = $FFFFEFE9;
  xlSlantDashDot = $0000000D;
  xlLineStyleNone = $FFFFEFD2;

// Constants for enum XlChartElementPosition
type
  XlChartElementPosition = TOleEnum;
const
  xlChartElementPositionAutomatic = $FFFFEFF7;
  xlChartElementPositionCustom = $FFFFEFEE;

// Constants for enum WdUpdateStyleListBehavior
type
  WdUpdateStyleListBehavior = TOleEnum;
const
  wdListBehaviorKeepPreviousPattern = $00000000;
  wdListBehaviorAddBulletsNumbering = $00000001;

// Constants for enum WdApplyQuickStyleSets
type
  WdApplyQuickStyleSets = TOleEnum;
const
  wdSessionStartSet = $00000001;
  wdTemplateSet = $00000002;

// Constants for enum WdLigatures
type
  WdLigatures = TOleEnum;
const
  wdLigaturesNone = $00000000;
  wdLigaturesStandard = $00000001;
  wdLigaturesContextual = $00000002;
  wdLigaturesHistorical = $00000004;
  wdLigaturesDiscretional = $00000008;
  wdLigaturesStandardContextual = $00000003;
  wdLigaturesStandardHistorical = $00000005;
  wdLigaturesContextualHistorical = $00000006;
  wdLigaturesStandardDiscretional = $00000009;
  wdLigaturesContextualDiscretional = $0000000A;
  wdLigaturesHistoricalDiscretional = $0000000C;
  wdLigaturesStandardContextualHistorical = $00000007;
  wdLigaturesStandardContextualDiscretional = $0000000B;
  wdLigaturesStandardHistoricalDiscretional = $0000000D;
  wdLigaturesContextualHistoricalDiscretional = $0000000E;
  wdLigaturesAll = $0000000F;

// Constants for enum WdNumberForm
type
  WdNumberForm = TOleEnum;
const
  wdNumberFormDefault = $00000000;
  wdNumberFormLining = $00000001;
  wdNumberFormOldStyle = $00000002;

// Constants for enum WdNumberSpacing
type
  WdNumberSpacing = TOleEnum;
const
  wdNumberSpacingDefault = $00000000;
  wdNumberSpacingProportional = $00000001;
  wdNumberSpacingTabular = $00000002;

// Constants for enum WdStylisticSet
type
  WdStylisticSet = TOleEnum;
const
  wdStylisticSetDefault = $00000000;
  wdStylisticSet01 = $00000001;
  wdStylisticSet02 = $00000002;
  wdStylisticSet03 = $00000004;
  wdStylisticSet04 = $00000008;
  wdStylisticSet05 = $00000010;
  wdStylisticSet06 = $00000020;
  wdStylisticSet07 = $00000040;
  wdStylisticSet08 = $00000080;
  wdStylisticSet09 = $00000100;
  wdStylisticSet10 = $00000200;
  wdStylisticSet11 = $00000400;
  wdStylisticSet12 = $00000800;
  wdStylisticSet13 = $00001000;
  wdStylisticSet14 = $00002000;
  wdStylisticSet15 = $00004000;
  wdStylisticSet16 = $00008000;
  wdStylisticSet17 = $00010000;
  wdStylisticSet18 = $00020000;
  wdStylisticSet19 = $00040000;
  wdStylisticSet20 = $00080000;

// Constants for enum WdSpanishSpeller
type
  WdSpanishSpeller = TOleEnum;
const
  wdSpanishTuteoOnly = $00000000;
  wdSpanishTuteoAndVoseo = $00000001;
  wdSpanishVoseoOnly = $00000002;

// Constants for enum WdLockType
type
  WdLockType = TOleEnum;
const
  wdLockNone = $00000000;
  wdLockReservation = $00000001;
  wdLockEphemeral = $00000002;
  wdLockChanged = $00000003;

// Constants for enum XlPieSliceLocation
type
  XlPieSliceLocation = TOleEnum;
const
  xlHorizontalCoordinate = $00000001;
  xlVerticalCoordinate = $00000002;

// Constants for enum XlPieSliceIndex
type
  XlPieSliceIndex = TOleEnum;
const
  xlOuterCounterClockwisePoint = $00000001;
  xlOuterCenterPoint = $00000002;
  xlOuterClockwisePoint = $00000003;
  xlMidClockwiseRadiusPoint = $00000004;
  xlCenterPoint = $00000005;
  xlMidCounterClockwiseRadiusPoint = $00000006;
  xlInnerClockwisePoint = $00000007;
  xlInnerCenterPoint = $00000008;
  xlInnerCounterClockwisePoint = $00000009;

// Constants for enum WdCompatibilityMode
type
  WdCompatibilityMode = TOleEnum;
const
  wdWord2003 = $0000000B;
  wdWord2007 = $0000000C;
  wdWord2010 = $0000000E;
  wdCurrent = $0000FFFF;

// Constants for enum WdProtectedViewCloseReason
type
  WdProtectedViewCloseReason = TOleEnum;
const
  wdProtectedViewCloseNormal = $00000000;
  wdProtectedViewCloseEdit = $00000001;
  wdProtectedViewCloseForced = $00000002;

// Constants for enum WdPortugueseReform
type
  WdPortugueseReform = TOleEnum;
const
  wdPortuguesePreReform = $00000001;
  wdPortuguesePostReform = $00000002;
  wdPortugueseBoth = $00000003;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  _Application = interface;
  _ApplicationDisp = dispinterface;
  _Global = interface;
  _GlobalDisp = dispinterface;
  FontNames = interface;
  FontNamesDisp = dispinterface;
  Languages = interface;
  LanguagesDisp = dispinterface;
  Language = interface;
  LanguageDisp = dispinterface;
  Documents = interface;
  DocumentsDisp = dispinterface;
  _Document = interface;
  _DocumentDisp = dispinterface;
  Template = interface;
  TemplateDisp = dispinterface;
  Templates = interface;
  TemplatesDisp = dispinterface;
  RoutingSlip = interface;
  RoutingSlipDisp = dispinterface;
  Bookmark = interface;
  BookmarkDisp = dispinterface;
  Bookmarks = interface;
  BookmarksDisp = dispinterface;
  Variable = interface;
  VariableDisp = dispinterface;
  Variables = interface;
  VariablesDisp = dispinterface;
  RecentFile = interface;
  RecentFileDisp = dispinterface;
  RecentFiles = interface;
  RecentFilesDisp = dispinterface;
  Window = interface;
  WindowDisp = dispinterface;
  Windows = interface;
  WindowsDisp = dispinterface;
  Pane = interface;
  PaneDisp = dispinterface;
  Panes = interface;
  PanesDisp = dispinterface;
  WordRange = interface;
  WordRangeDisp = dispinterface;
  ListFormat = interface;
  ListFormatDisp = dispinterface;
  Find = interface;
  FindDisp = dispinterface;
  Replacement = interface;
  ReplacementDisp = dispinterface;
  Characters = interface;
  CharactersDisp = dispinterface;
  Words = interface;
  WordsDisp = dispinterface;
  Sentences = interface;
  SentencesDisp = dispinterface;
  Sections = interface;
  SectionsDisp = dispinterface;
  Section = interface;
  SectionDisp = dispinterface;
  Paragraphs = interface;
  ParagraphsDisp = dispinterface;
  Paragraph = interface;
  ParagraphDisp = dispinterface;
  DropCap = interface;
  DropCapDisp = dispinterface;
  TabStops = interface;
  TabStopsDisp = dispinterface;
  TabStop = interface;
  TabStopDisp = dispinterface;
  _ParagraphFormat = interface;
  _ParagraphFormatDisp = dispinterface;
  _Font = interface;
  _FontDisp = dispinterface;
  Table = interface;
  TableDisp = dispinterface;
  Row = interface;
  RowDisp = dispinterface;
  Column = interface;
  ColumnDisp = dispinterface;
  Cell = interface;
  CellDisp = dispinterface;
  Tables = interface;
  TablesDisp = dispinterface;
  Rows = interface;
  RowsDisp = dispinterface;
  Columns = interface;
  ColumnsDisp = dispinterface;
  Cells = interface;
  CellsDisp = dispinterface;
  AutoCorrect = interface;
  AutoCorrectDisp = dispinterface;
  AutoCorrectEntries = interface;
  AutoCorrectEntriesDisp = dispinterface;
  AutoCorrectEntry = interface;
  AutoCorrectEntryDisp = dispinterface;
  FirstLetterExceptions = interface;
  FirstLetterExceptionsDisp = dispinterface;
  FirstLetterException = interface;
  FirstLetterExceptionDisp = dispinterface;
  TwoInitialCapsExceptions = interface;
  TwoInitialCapsExceptionsDisp = dispinterface;
  TwoInitialCapsException = interface;
  TwoInitialCapsExceptionDisp = dispinterface;
  Footnotes = interface;
  FootnotesDisp = dispinterface;
  Endnotes = interface;
  EndnotesDisp = dispinterface;
  Comments = interface;
  CommentsDisp = dispinterface;
  Footnote = interface;
  FootnoteDisp = dispinterface;
  Endnote = interface;
  EndnoteDisp = dispinterface;
  Comment = interface;
  CommentDisp = dispinterface;
  Borders = interface;
  BordersDisp = dispinterface;
  Border = interface;
  BorderDisp = dispinterface;
  Shading = interface;
  ShadingDisp = dispinterface;
  TextRetrievalMode = interface;
  TextRetrievalModeDisp = dispinterface;
  AutoTextEntries = interface;
  AutoTextEntriesDisp = dispinterface;
  AutoTextEntry = interface;
  AutoTextEntryDisp = dispinterface;
  System = interface;
  SystemDisp = dispinterface;
  OLEFormat = interface;
  OLEFormatDisp = dispinterface;
  LinkFormat = interface;
  LinkFormatDisp = dispinterface;
  _OLEControl = interface;
  _OLEControlDisp = dispinterface;
  Fields = interface;
  FieldsDisp = dispinterface;
  Field = interface;
  FieldDisp = dispinterface;
  Browser = interface;
  BrowserDisp = dispinterface;
  Styles = interface;
  StylesDisp = dispinterface;
  Style = interface;
  StyleDisp = dispinterface;
  Frames = interface;
  FramesDisp = dispinterface;
  Frame = interface;
  FrameDisp = dispinterface;
  FormFields = interface;
  FormFieldsDisp = dispinterface;
  FormField = interface;
  FormFieldDisp = dispinterface;
  TextInput = interface;
  TextInputDisp = dispinterface;
  CheckBox = interface;
  CheckBoxDisp = dispinterface;
  DropDown = interface;
  DropDownDisp = dispinterface;
  ListEntries = interface;
  ListEntriesDisp = dispinterface;
  ListEntry = interface;
  ListEntryDisp = dispinterface;
  TablesOfFigures = interface;
  TablesOfFiguresDisp = dispinterface;
  TableOfFigures = interface;
  TableOfFiguresDisp = dispinterface;
  MailMerge = interface;
  MailMergeDisp = dispinterface;
  MailMergeFields = interface;
  MailMergeFieldsDisp = dispinterface;
  MailMergeField = interface;
  MailMergeFieldDisp = dispinterface;
  MailMergeDataSource = interface;
  MailMergeDataSourceDisp = dispinterface;
  MailMergeFieldNames = interface;
  MailMergeFieldNamesDisp = dispinterface;
  MailMergeFieldName = interface;
  MailMergeFieldNameDisp = dispinterface;
  MailMergeDataFields = interface;
  MailMergeDataFieldsDisp = dispinterface;
  MailMergeDataField = interface;
  MailMergeDataFieldDisp = dispinterface;
  Envelope = interface;
  EnvelopeDisp = dispinterface;
  MailingLabel = interface;
  MailingLabelDisp = dispinterface;
  CustomLabels = interface;
  CustomLabelsDisp = dispinterface;
  CustomLabel = interface;
  CustomLabelDisp = dispinterface;
  TablesOfContents = interface;
  TablesOfContentsDisp = dispinterface;
  TableOfContents = interface;
  TableOfContentsDisp = dispinterface;
  TablesOfAuthorities = interface;
  TablesOfAuthoritiesDisp = dispinterface;
  TableOfAuthorities = interface;
  TableOfAuthoritiesDisp = dispinterface;
  Dialogs = interface;
  DialogsDisp = dispinterface;
  Dialog = interface;
  DialogDisp = dispinterface;
  PageSetup = interface;
  PageSetupDisp = dispinterface;
  LineNumbering = interface;
  LineNumberingDisp = dispinterface;
  TextColumns = interface;
  TextColumnsDisp = dispinterface;
  TextColumn = interface;
  TextColumnDisp = dispinterface;
  WordSelection = interface;
  WordSelectionDisp = dispinterface;
  TablesOfAuthoritiesCategories = interface;
  TablesOfAuthoritiesCategoriesDisp = dispinterface;
  TableOfAuthoritiesCategory = interface;
  TableOfAuthoritiesCategoryDisp = dispinterface;
  CaptionLabels = interface;
  CaptionLabelsDisp = dispinterface;
  CaptionLabel = interface;
  CaptionLabelDisp = dispinterface;
  AutoCaptions = interface;
  AutoCaptionsDisp = dispinterface;
  AutoCaption = interface;
  AutoCaptionDisp = dispinterface;
  Indexes = interface;
  IndexesDisp = dispinterface;
  Index = interface;
  IndexDisp = dispinterface;
  AddIn = interface;
  AddInDisp = dispinterface;
  AddIns = interface;
  AddInsDisp = dispinterface;
  Revisions = interface;
  RevisionsDisp = dispinterface;
  Revision = interface;
  RevisionDisp = dispinterface;
  Task = interface;
  TaskDisp = dispinterface;
  Tasks = interface;
  TasksDisp = dispinterface;
  HeadersFooters = interface;
  HeadersFootersDisp = dispinterface;
  HeaderFooter = interface;
  HeaderFooterDisp = dispinterface;
  PageNumbers = interface;
  PageNumbersDisp = dispinterface;
  PageNumber = interface;
  PageNumberDisp = dispinterface;
  Subdocuments = interface;
  SubdocumentsDisp = dispinterface;
  Subdocument = interface;
  SubdocumentDisp = dispinterface;
  HeadingStyles = interface;
  HeadingStylesDisp = dispinterface;
  HeadingStyle = interface;
  HeadingStyleDisp = dispinterface;
  StoryRanges = interface;
  StoryRangesDisp = dispinterface;
  ListLevel = interface;
  ListLevelDisp = dispinterface;
  ListLevels = interface;
  ListLevelsDisp = dispinterface;
  ListTemplate = interface;
  ListTemplateDisp = dispinterface;
  ListTemplates = interface;
  ListTemplatesDisp = dispinterface;
  ListParagraphs = interface;
  ListParagraphsDisp = dispinterface;
  List = interface;
  ListDisp = dispinterface;
  Lists = interface;
  ListsDisp = dispinterface;
  ListGallery = interface;
  ListGalleryDisp = dispinterface;
  ListGalleries = interface;
  ListGalleriesDisp = dispinterface;
  KeyBindings = interface;
  KeyBindingsDisp = dispinterface;
  KeysBoundTo = interface;
  KeysBoundToDisp = dispinterface;
  KeyBinding = interface;
  KeyBindingDisp = dispinterface;
  FileConverter = interface;
  FileConverterDisp = dispinterface;
  FileConverters = interface;
  FileConvertersDisp = dispinterface;
  SynonymInfo = interface;
  SynonymInfoDisp = dispinterface;
  Hyperlinks = interface;
  HyperlinksDisp = dispinterface;
  Hyperlink = interface;
  HyperlinkDisp = dispinterface;
  Shapes = interface;
  ShapesDisp = dispinterface;
  ShapeRange = interface;
  ShapeRangeDisp = dispinterface;
  GroupShapes = interface;
  GroupShapesDisp = dispinterface;
  Shape = interface;
  ShapeDisp = dispinterface;
  TextFrame = interface;
  TextFrameDisp = dispinterface;
  _LetterContent = interface;
  _LetterContentDisp = dispinterface;
  View = interface;
  ViewDisp = dispinterface;
  Zoom = interface;
  ZoomDisp = dispinterface;
  Zooms = interface;
  ZoomsDisp = dispinterface;
  InlineShape = interface;
  InlineShapeDisp = dispinterface;
  InlineShapes = interface;
  InlineShapesDisp = dispinterface;
  SpellingSuggestions = interface;
  SpellingSuggestionsDisp = dispinterface;
  SpellingSuggestion = interface;
  SpellingSuggestionDisp = dispinterface;
  Dictionaries = interface;
  DictionariesDisp = dispinterface;
  HangulHanjaConversionDictionaries = interface;
  HangulHanjaConversionDictionariesDisp = dispinterface;
  Dictionary = interface;
  DictionaryDisp = dispinterface;
  ReadabilityStatistics = interface;
  ReadabilityStatisticsDisp = dispinterface;
  ReadabilityStatistic = interface;
  ReadabilityStatisticDisp = dispinterface;
  Versions = interface;
  VersionsDisp = dispinterface;
  Version = interface;
  VersionDisp = dispinterface;
  Options = interface;
  OptionsDisp = dispinterface;
  MailMessage = interface;
  MailMessageDisp = dispinterface;
  ProofreadingErrors = interface;
  ProofreadingErrorsDisp = dispinterface;
  Mailer = interface;
  MailerDisp = dispinterface;
  WrapFormat = interface;
  WrapFormatDisp = dispinterface;
  HangulAndAlphabetExceptions = interface;
  HangulAndAlphabetExceptionsDisp = dispinterface;
  HangulAndAlphabetException = interface;
  HangulAndAlphabetExceptionDisp = dispinterface;
  Adjustments = interface;
  AdjustmentsDisp = dispinterface;
  CalloutFormat = interface;
  CalloutFormatDisp = dispinterface;
  ColorFormat = interface;
  ColorFormatDisp = dispinterface;
  ConnectorFormat = interface;
  ConnectorFormatDisp = dispinterface;
  FillFormat = interface;
  FillFormatDisp = dispinterface;
  FreeformBuilder = interface;
  FreeformBuilderDisp = dispinterface;
  LineFormat = interface;
  LineFormatDisp = dispinterface;
  PictureFormat = interface;
  PictureFormatDisp = dispinterface;
  ShadowFormat = interface;
  ShadowFormatDisp = dispinterface;
  ShapeNode = interface;
  ShapeNodeDisp = dispinterface;
  ShapeNodes = interface;
  ShapeNodesDisp = dispinterface;
  TextEffectFormat = interface;
  TextEffectFormatDisp = dispinterface;
  ThreeDFormat = interface;
  ThreeDFormatDisp = dispinterface;
  ApplicationEvents = dispinterface;
  ApplicationEvents2 = dispinterface;
  DocumentEvents = dispinterface;
  DocumentEvents2 = dispinterface;
  OCXEvents = dispinterface;
  IApplicationEvents = interface;
  IApplicationEventsDisp = dispinterface;
  IApplicationEvents2 = interface;
  IApplicationEvents2Disp = dispinterface;
  ApplicationEvents3 = dispinterface;
  EmailAuthor = interface;
  EmailAuthorDisp = dispinterface;
  EmailOptions = interface;
  EmailOptionsDisp = dispinterface;
  EmailSignature = interface;
  EmailSignatureDisp = dispinterface;
  Email = interface;
  EmailDisp = dispinterface;
  HorizontalLineFormat = interface;
  HorizontalLineFormatDisp = dispinterface;
  Frameset = interface;
  FramesetDisp = dispinterface;
  DefaultWebOptions = interface;
  DefaultWebOptionsDisp = dispinterface;
  WebOptions = interface;
  WebOptionsDisp = dispinterface;
  OtherCorrectionsExceptions = interface;
  OtherCorrectionsExceptionsDisp = dispinterface;
  OtherCorrectionsException = interface;
  OtherCorrectionsExceptionDisp = dispinterface;
  EmailSignatureEntries = interface;
  EmailSignatureEntriesDisp = dispinterface;
  EmailSignatureEntry = interface;
  EmailSignatureEntryDisp = dispinterface;
  HTMLDivision = interface;
  HTMLDivisionDisp = dispinterface;
  HTMLDivisions = interface;
  HTMLDivisionsDisp = dispinterface;
  DiagramNode = interface;
  DiagramNodeDisp = dispinterface;
  DiagramNodeChildren = interface;
  DiagramNodeChildrenDisp = dispinterface;
  DiagramNodes = interface;
  DiagramNodesDisp = dispinterface;
  Diagram = interface;
  DiagramDisp = dispinterface;
  CustomProperty = interface;
  CustomPropertyDisp = dispinterface;
  CustomProperties = interface;
  CustomPropertiesDisp = dispinterface;
  SmartTag = interface;
  SmartTagDisp = dispinterface;
  SmartTags = interface;
  SmartTagsDisp = dispinterface;
  StyleSheet = interface;
  StyleSheetDisp = dispinterface;
  StyleSheets = interface;
  StyleSheetsDisp = dispinterface;
  MappedDataField = interface;
  MappedDataFieldDisp = dispinterface;
  MappedDataFields = interface;
  MappedDataFieldsDisp = dispinterface;
  CanvasShapes = interface;
  CanvasShapesDisp = dispinterface;
  TableStyle = interface;
  TableStyleDisp = dispinterface;
  ConditionalStyle = interface;
  ConditionalStyleDisp = dispinterface;
  FootnoteOptions = interface;
  FootnoteOptionsDisp = dispinterface;
  EndnoteOptions = interface;
  EndnoteOptionsDisp = dispinterface;
  Reviewers = interface;
  ReviewersDisp = dispinterface;
  Reviewer = interface;
  ReviewerDisp = dispinterface;
  TaskPane = interface;
  TaskPaneDisp = dispinterface;
  TaskPanes = interface;
  TaskPanesDisp = dispinterface;
  IApplicationEvents3 = interface;
  IApplicationEvents3Disp = dispinterface;
  ApplicationEvents4 = dispinterface;
  SmartTagAction = interface;
  SmartTagActionDisp = dispinterface;
  SmartTagActions = interface;
  SmartTagActionsDisp = dispinterface;
  SmartTagRecognizer = interface;
  SmartTagRecognizerDisp = dispinterface;
  SmartTagRecognizers = interface;
  SmartTagRecognizersDisp = dispinterface;
  SmartTagType = interface;
  SmartTagTypeDisp = dispinterface;
  SmartTagTypes = interface;
  SmartTagTypesDisp = dispinterface;
  Line = interface;
  LineDisp = dispinterface;
  Lines = interface;
  LinesDisp = dispinterface;
  Rectangle = interface;
  RectangleDisp = dispinterface;
  Rectangles = interface;
  RectanglesDisp = dispinterface;
  Break = interface;
  BreakDisp = dispinterface;
  Breaks = interface;
  BreaksDisp = dispinterface;
  Page = interface;
  PageDisp = dispinterface;
  Pages = interface;
  PagesDisp = dispinterface;
  XMLNode = interface;
  XMLNodeDisp = dispinterface;
  XMLNodes = interface;
  XMLNodesDisp = dispinterface;
  XMLSchemaReference = interface;
  XMLSchemaReferenceDisp = dispinterface;
  XMLSchemaReferences = interface;
  XMLSchemaReferencesDisp = dispinterface;
  XMLChildNodeSuggestion = interface;
  XMLChildNodeSuggestionDisp = dispinterface;
  XMLChildNodeSuggestions = interface;
  XMLChildNodeSuggestionsDisp = dispinterface;
  XMLNamespace = interface;
  XMLNamespaceDisp = dispinterface;
  XMLNamespaces = interface;
  XMLNamespacesDisp = dispinterface;
  XSLTransform = interface;
  XSLTransformDisp = dispinterface;
  XSLTransforms = interface;
  XSLTransformsDisp = dispinterface;
  Editors = interface;
  EditorsDisp = dispinterface;
  Editor = interface;
  EditorDisp = dispinterface;
  IApplicationEvents4 = interface;
  Source = interface;
  SourceDisp = dispinterface;
  Sources = interface;
  SourcesDisp = dispinterface;
  Bibliography = interface;
  BibliographyDisp = dispinterface;
  OMaths = interface;
  OMathsDisp = dispinterface;
  OMath = interface;
  OMathDisp = dispinterface;
  OMathFunctions = interface;
  OMathFunctionsDisp = dispinterface;
  OMathArgs = interface;
  OMathArgsDisp = dispinterface;
  OMathFunction = interface;
  OMathFunctionDisp = dispinterface;
  OMathAcc = interface;
  OMathAccDisp = dispinterface;
  OMathBar = interface;
  OMathBarDisp = dispinterface;
  OMathBox = interface;
  OMathBoxDisp = dispinterface;
  OMathBorderBox = interface;
  OMathBorderBoxDisp = dispinterface;
  OMathDelim = interface;
  OMathDelimDisp = dispinterface;
  OMathEqArray = interface;
  OMathEqArrayDisp = dispinterface;
  OMathFrac = interface;
  OMathFracDisp = dispinterface;
  OMathFunc = interface;
  OMathFuncDisp = dispinterface;
  OMathGroupChar = interface;
  OMathGroupCharDisp = dispinterface;
  OMathLimLow = interface;
  OMathLimLowDisp = dispinterface;
  OMathLimUpp = interface;
  OMathLimUppDisp = dispinterface;
  OMathMat = interface;
  OMathMatDisp = dispinterface;
  OMathMatRows = interface;
  OMathMatRowsDisp = dispinterface;
  OMathMatCols = interface;
  OMathMatColsDisp = dispinterface;
  OMathMatRow = interface;
  OMathMatRowDisp = dispinterface;
  OMathMatCol = interface;
  OMathMatColDisp = dispinterface;
  OMathNary = interface;
  OMathNaryDisp = dispinterface;
  OMathPhantom = interface;
  OMathPhantomDisp = dispinterface;
  OMathScrPre = interface;
  OMathScrPreDisp = dispinterface;
  OMathRad = interface;
  OMathRadDisp = dispinterface;
  OMathScrSub = interface;
  OMathScrSubDisp = dispinterface;
  OMathScrSubSup = interface;
  OMathScrSubSupDisp = dispinterface;
  OMathScrSup = interface;
  OMathScrSupDisp = dispinterface;
  OMathAutoCorrect = interface;
  OMathAutoCorrectDisp = dispinterface;
  OMathAutoCorrectEntries = interface;
  OMathAutoCorrectEntriesDisp = dispinterface;
  OMathAutoCorrectEntry = interface;
  OMathAutoCorrectEntryDisp = dispinterface;
  OMathRecognizedFunctions = interface;
  OMathRecognizedFunctionsDisp = dispinterface;
  OMathRecognizedFunction = interface;
  OMathRecognizedFunctionDisp = dispinterface;
  ContentControls = interface;
  ContentControlsDisp = dispinterface;
  ContentControl = interface;
  ContentControlDisp = dispinterface;
  XMLMapping = interface;
  XMLMappingDisp = dispinterface;
  ContentControlListEntries = interface;
  ContentControlListEntriesDisp = dispinterface;
  ContentControlListEntry = interface;
  ContentControlListEntryDisp = dispinterface;
  BuildingBlockTypes = interface;
  BuildingBlockTypesDisp = dispinterface;
  BuildingBlockType = interface;
  BuildingBlockTypeDisp = dispinterface;
  Categories = interface;
  CategoriesDisp = dispinterface;
  Category = interface;
  CategoryDisp = dispinterface;
  BuildingBlocks = interface;
  BuildingBlocksDisp = dispinterface;
  BuildingBlock = interface;
  BuildingBlockDisp = dispinterface;
  BuildingBlockEntries = interface;
  BuildingBlockEntriesDisp = dispinterface;
  OMathBreaks = interface;
  OMathBreaksDisp = dispinterface;
  OMathBreak = interface;
  OMathBreakDisp = dispinterface;
  Research = interface;
  ResearchDisp = dispinterface;
  SoftEdgeFormat = interface;
  SoftEdgeFormatDisp = dispinterface;
  GlowFormat = interface;
  GlowFormatDisp = dispinterface;
  ReflectionFormat = interface;
  ReflectionFormatDisp = dispinterface;
  ChartData = interface;
  ChartDataDisp = dispinterface;
  Chart = interface;
  ChartDisp = dispinterface;
  Corners = interface;
  CornersDisp = dispinterface;
  Legend = interface;
  LegendDisp = dispinterface;
  ChartBorder = interface;
  ChartBorderDisp = dispinterface;
  Walls = interface;
  WallsDisp = dispinterface;
  Floor = interface;
  FloorDisp = dispinterface;
  PlotArea = interface;
  PlotAreaDisp = dispinterface;
  ChartArea = interface;
  ChartAreaDisp = dispinterface;
  SeriesLines = interface;
  SeriesLinesDisp = dispinterface;
  LeaderLines = interface;
  LeaderLinesDisp = dispinterface;
  Gridlines = interface;
  GridlinesDisp = dispinterface;
  UpBars = interface;
  UpBarsDisp = dispinterface;
  DownBars = interface;
  DownBarsDisp = dispinterface;
  Interior = interface;
  InteriorDisp = dispinterface;
  ChartFillFormat = interface;
  ChartFillFormatDisp = dispinterface;
  LegendEntries = interface;
  LegendEntriesDisp = dispinterface;
  ChartFont = interface;
  ChartFontDisp = dispinterface;
  ChartColorFormat = interface;
  ChartColorFormatDisp = dispinterface;
  LegendEntry = interface;
  LegendEntryDisp = dispinterface;
  LegendKey = interface;
  LegendKeyDisp = dispinterface;
  SeriesCollection = interface;
  SeriesCollectionDisp = dispinterface;
  Series = interface;
  SeriesDisp = dispinterface;
  ErrorBars = interface;
  ErrorBarsDisp = dispinterface;
  Trendline = interface;
  TrendlineDisp = dispinterface;
  Trendlines = interface;
  TrendlinesDisp = dispinterface;
  DataLabels = interface;
  DataLabelsDisp = dispinterface;
  DataLabel = interface;
  DataLabelDisp = dispinterface;
  Points = interface;
  PointsDisp = dispinterface;
  Point = interface;
  PointDisp = dispinterface;
  Axes = interface;
  AxesDisp = dispinterface;
  Axis = interface;
  AxisDisp = dispinterface;
  DataTable = interface;
  DataTableDisp = dispinterface;
  ChartTitle = interface;
  ChartTitleDisp = dispinterface;
  AxisTitle = interface;
  AxisTitleDisp = dispinterface;
  DisplayUnitLabel = interface;
  DisplayUnitLabelDisp = dispinterface;
  TickLabels = interface;
  TickLabelsDisp = dispinterface;
  DropLines = interface;
  DropLinesDisp = dispinterface;
  HiLoLines = interface;
  HiLoLinesDisp = dispinterface;
  ChartGroup = interface;
  ChartGroupDisp = dispinterface;
  ChartGroups = interface;
  ChartGroupsDisp = dispinterface;
  ChartCharacters = interface;
  ChartCharactersDisp = dispinterface;
  ChartFormat = interface;
  ChartFormatDisp = dispinterface;
  UndoRecord = interface;
  UndoRecordDisp = dispinterface;
  CoAuthLock = interface;
  CoAuthLockDisp = dispinterface;
  CoAuthLocks = interface;
  CoAuthLocksDisp = dispinterface;
  CoAuthUpdate = interface;
  CoAuthUpdateDisp = dispinterface;
  CoAuthUpdates = interface;
  CoAuthUpdatesDisp = dispinterface;
  CoAuthor = interface;
  CoAuthorDisp = dispinterface;
  CoAuthors = interface;
  CoAuthorsDisp = dispinterface;
  CoAuthoring = interface;
  CoAuthoringDisp = dispinterface;
  Conflicts = interface;
  ConflictsDisp = dispinterface;
  Conflict = interface;
  ConflictDisp = dispinterface;
  ProtectedViewWindows = interface;
  ProtectedViewWindowsDisp = dispinterface;
  ProtectedViewWindow = interface;
  ProtectedViewWindowDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  WordGlobal = _Global;
  WordFont = _Font;
  WordParagraphFormat = _ParagraphFormat;
  WordOLEControl = _OLEControl;
  WordLetterContent = _LetterContent;
  WordApplication = _Application;
  WordDocument = _Document;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  POleVariant1 = ^OleVariant; {*}
  PPSafeArray1 = ^PSafeArray; {*}
  PWordBool1 = ^WordBool; {*}
  PUserType1 = ^TGUID; {*}
  PShortint1 = ^Shortint; {*}
  PPShortint1 = ^PShortint1; {*}
  PUserType2 = ^DISPPARAMS; {*}
  PSYSINT1 = ^SYSINT; {*}
  PInteger1 = ^Integer; {*}


// *********************************************************************//
// Interface: _Application
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020970-0000-0000-C000-000000000046}
// *********************************************************************//
  _Application = interface(IDispatch)
    ['{00020970-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Documents: Documents; safecall;
    function Get_Windows: Windows; safecall;
    function Get_ActiveDocument: WordDocument; safecall;
    function Get_ActiveWindow: Window; safecall;
    function Get_Selection: WordSelection; safecall;
    function Get_WordBasic: IDispatch; safecall;
    function Get_RecentFiles: RecentFiles; safecall;
    function Get_NormalTemplate: Template; safecall;
    function Get_System_: System; safecall;
    function Get_AutoCorrect: AutoCorrect; safecall;
    function Get_FontNames: FontNames; safecall;
    function Get_LandscapeFontNames: FontNames; safecall;
    function Get_PortraitFontNames: FontNames; safecall;
    function Get_Languages: Languages; safecall;
    function Get_Assistant: Assistant; safecall;
    function Get_Browser: Browser; safecall;
    function Get_FileConverters: FileConverters; safecall;
    function Get_MailingLabel: MailingLabel; safecall;
    function Get_Dialogs: Dialogs; safecall;
    function Get_CaptionLabels: CaptionLabels; safecall;
    function Get_AutoCaptions: AutoCaptions; safecall;
    function Get_AddIns: AddIns; safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    function Get_Version: WideString; safecall;
    function Get_ScreenUpdating: WordBool; safecall;
    procedure Set_ScreenUpdating(prop: WordBool); safecall;
    function Get_PrintPreview: WordBool; safecall;
    procedure Set_PrintPreview(prop: WordBool); safecall;
    function Get_Tasks: Tasks; safecall;
    function Get_DisplayStatusBar: WordBool; safecall;
    procedure Set_DisplayStatusBar(prop: WordBool); safecall;
    function Get_SpecialMode: WordBool; safecall;
    function Get_UsableWidth: Integer; safecall;
    function Get_UsableHeight: Integer; safecall;
    function Get_MathCoprocessorAvailable: WordBool; safecall;
    function Get_MouseAvailable: WordBool; safecall;
    function Get_International(Index: WdInternationalIndex): OleVariant; safecall;
    function Get_Build: WideString; safecall;
    function Get_CapsLock: WordBool; safecall;
    function Get_NumLock: WordBool; safecall;
    function Get_UserName: WideString; safecall;
    procedure Set_UserName(const prop: WideString); safecall;
    function Get_UserInitials: WideString; safecall;
    procedure Set_UserInitials(const prop: WideString); safecall;
    function Get_UserAddress: WideString; safecall;
    procedure Set_UserAddress(const prop: WideString); safecall;
    function Get_MacroContainer: IDispatch; safecall;
    function Get_DisplayRecentFiles: WordBool; safecall;
    procedure Set_DisplayRecentFiles(prop: WordBool); safecall;
    function Get_CommandBars: CommandBars; safecall;
    function Get_SynonymInfo(const Word: WideString; var LanguageID: OleVariant): SynonymInfo; safecall;
    function Get_VBE: VBE; safecall;
    function Get_DefaultSaveFormat: WideString; safecall;
    procedure Set_DefaultSaveFormat(const prop: WideString); safecall;
    function Get_ListGalleries: ListGalleries; safecall;
    function Get_ActivePrinter: WideString; safecall;
    procedure Set_ActivePrinter(const prop: WideString); safecall;
    function Get_Templates: Templates; safecall;
    function Get_CustomizationContext: IDispatch; safecall;
    procedure Set_CustomizationContext(const prop: IDispatch); safecall;
    function Get_KeyBindings: KeyBindings; safecall;
    function Get_KeysBoundTo(KeyCategory: WdKeyCategory; const Command: WideString; 
                             var CommandParameter: OleVariant): KeysBoundTo; safecall;
    function Get_FindKey(KeyCode: Integer; var KeyCode2: OleVariant): KeyBinding; safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Path: WideString; safecall;
    function Get_DisplayScrollBars: WordBool; safecall;
    procedure Set_DisplayScrollBars(prop: WordBool); safecall;
    function Get_StartupPath: WideString; safecall;
    procedure Set_StartupPath(const prop: WideString); safecall;
    function Get_BackgroundSavingStatus: Integer; safecall;
    function Get_BackgroundPrintingStatus: Integer; safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(prop: Integer); safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(prop: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(prop: Integer); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(prop: Integer); safecall;
    function Get_WindowState: WdWindowState; safecall;
    procedure Set_WindowState(prop: WdWindowState); safecall;
    function Get_DisplayAutoCompleteTips: WordBool; safecall;
    procedure Set_DisplayAutoCompleteTips(prop: WordBool); safecall;
    function Get_Options: Options; safecall;
    function Get_DisplayAlerts: WdAlertLevel; safecall;
    procedure Set_DisplayAlerts(prop: WdAlertLevel); safecall;
    function Get_CustomDictionaries: Dictionaries; safecall;
    function Get_PathSeparator: WideString; safecall;
    procedure Set_StatusBar(const Param1: WideString); safecall;
    function Get_MAPIAvailable: WordBool; safecall;
    function Get_DisplayScreenTips: WordBool; safecall;
    procedure Set_DisplayScreenTips(prop: WordBool); safecall;
    function Get_EnableCancelKey: WdEnableCancelKey; safecall;
    procedure Set_EnableCancelKey(prop: WdEnableCancelKey); safecall;
    function Get_UserControl: WordBool; safecall;
    function Get_FileSearch: FileSearch; safecall;
    function Get_MailSystem: WdMailSystem; safecall;
    function Get_DefaultTableSeparator: WideString; safecall;
    procedure Set_DefaultTableSeparator(const prop: WideString); safecall;
    function Get_ShowVisualBasicEditor: WordBool; safecall;
    procedure Set_ShowVisualBasicEditor(prop: WordBool); safecall;
    function Get_BrowseExtraFileTypes: WideString; safecall;
    procedure Set_BrowseExtraFileTypes(const prop: WideString); safecall;
    function Get_IsObjectValid(const Object_: IDispatch): WordBool; safecall;
    function Get_HangulHanjaDictionaries: HangulHanjaConversionDictionaries; safecall;
    function Get_MailMessage: MailMessage; safecall;
    function Get_FocusInMailHeader: WordBool; safecall;
    procedure Quit(var SaveChanges: OleVariant; var OriginalFormat: OleVariant; 
                   var RouteDocument: OleVariant); safecall;
    procedure ScreenRefresh; safecall;
    procedure PrintOutOld(var Background: OleVariant; var Append: OleVariant; 
                          var Range: OleVariant; var OutputFileName: OleVariant; 
                          var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                          var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                          var PrintToFile: OleVariant; var Collate: OleVariant; 
                          var FileName: OleVariant; var ActivePrinterMacGX: OleVariant; 
                          var ManualDuplexPrint: OleVariant); safecall;
    procedure LookupNameProperties(const Name: WideString); safecall;
    procedure SubstituteFont(const UnavailableFont: WideString; const SubstituteFont: WideString); safecall;
    function Repeat_(var Times: OleVariant): WordBool; safecall;
    procedure DDEExecute(Channel: Integer; const Command: WideString); safecall;
    function DDEInitiate(const App: WideString; const Topic: WideString): Integer; safecall;
    procedure DDEPoke(Channel: Integer; const Item: WideString; const Data: WideString); safecall;
    function DDERequest(Channel: Integer; const Item: WideString): WideString; safecall;
    procedure DDETerminate(Channel: Integer); safecall;
    procedure DDETerminateAll; safecall;
    function BuildKeyCode(Arg1: WdKey; var Arg2: OleVariant; var Arg3: OleVariant; 
                          var Arg4: OleVariant): Integer; safecall;
    function KeyString(KeyCode: Integer; var KeyCode2: OleVariant): WideString; safecall;
    procedure OrganizerCopy(const Source: WideString; const Destination: WideString; 
                            const Name: WideString; Object_: WdOrganizerObject); safecall;
    procedure OrganizerDelete(const Source: WideString; const Name: WideString; 
                              Object_: WdOrganizerObject); safecall;
    procedure OrganizerRename(const Source: WideString; const Name: WideString; 
                              const NewName: WideString; Object_: WdOrganizerObject); safecall;
    procedure AddAddress(var TagID: PSafeArray; var Value: PSafeArray); safecall;
    function GetAddress(var Name: OleVariant; var AddressProperties: OleVariant; 
                        var UseAutoText: OleVariant; var DisplaySelectDialog: OleVariant; 
                        var SelectDialog: OleVariant; var CheckNamesDialog: OleVariant; 
                        var RecentAddressesChoice: OleVariant; var UpdateRecentAddresses: OleVariant): WideString; safecall;
    function CheckGrammar(const String_: WideString): WordBool; safecall;
    function CheckSpelling(const Word: WideString; var CustomDictionary: OleVariant; 
                           var IgnoreUppercase: OleVariant; var MainDictionary: OleVariant; 
                           var CustomDictionary2: OleVariant; var CustomDictionary3: OleVariant; 
                           var CustomDictionary4: OleVariant; var CustomDictionary5: OleVariant; 
                           var CustomDictionary6: OleVariant; var CustomDictionary7: OleVariant; 
                           var CustomDictionary8: OleVariant; var CustomDictionary9: OleVariant; 
                           var CustomDictionary10: OleVariant): WordBool; safecall;
    procedure ResetIgnoreAll; safecall;
    function GetSpellingSuggestions(const Word: WideString; var CustomDictionary: OleVariant; 
                                    var IgnoreUppercase: OleVariant; 
                                    var MainDictionary: OleVariant; var SuggestionMode: OleVariant; 
                                    var CustomDictionary2: OleVariant; 
                                    var CustomDictionary3: OleVariant; 
                                    var CustomDictionary4: OleVariant; 
                                    var CustomDictionary5: OleVariant; 
                                    var CustomDictionary6: OleVariant; 
                                    var CustomDictionary7: OleVariant; 
                                    var CustomDictionary8: OleVariant; 
                                    var CustomDictionary9: OleVariant; 
                                    var CustomDictionary10: OleVariant): SpellingSuggestions; safecall;
    procedure GoBack; safecall;
    procedure Help(var HelpType: OleVariant); safecall;
    procedure AutomaticChange; safecall;
    procedure ShowMe; safecall;
    procedure HelpTool; safecall;
    function NewWindow: Window; safecall;
    procedure ListCommands(ListAllCommands: WordBool); safecall;
    procedure ShowClipboard; safecall;
    procedure OnTime(var When: OleVariant; const Name: WideString; var Tolerance: OleVariant); safecall;
    procedure NextLetter; safecall;
    function MountVolume(const Zone: WideString; const Server: WideString; 
                         const Volume: WideString; var User: OleVariant; 
                         var UserPassword: OleVariant; var VolumePassword: OleVariant): Smallint; safecall;
    function CleanString(const String_: WideString): WideString; safecall;
    procedure SendFax; safecall;
    procedure ChangeFileOpenDirectory(const Path: WideString); safecall;
    procedure RunOld(const MacroName: WideString); safecall;
    procedure GoForward; safecall;
    procedure Move(Left: Integer; Top: Integer); safecall;
    procedure Resize(Width: Integer; Height: Integer); safecall;
    function InchesToPoints(Inches: Single): Single; safecall;
    function CentimetersToPoints(Centimeters: Single): Single; safecall;
    function MillimetersToPoints(Millimeters: Single): Single; safecall;
    function PicasToPoints(Picas: Single): Single; safecall;
    function LinesToPoints(Lines: Single): Single; safecall;
    function PointsToInches(Points: Single): Single; safecall;
    function PointsToCentimeters(Points: Single): Single; safecall;
    function PointsToMillimeters(Points: Single): Single; safecall;
    function PointsToPicas(Points: Single): Single; safecall;
    function PointsToLines(Points: Single): Single; safecall;
    procedure Activate; safecall;
    function PointsToPixels(Points: Single; var fVertical: OleVariant): Single; safecall;
    function PixelsToPoints(Pixels: Single; var fVertical: OleVariant): Single; safecall;
    procedure KeyboardLatin; safecall;
    procedure KeyboardBidi; safecall;
    procedure ToggleKeyboard; safecall;
    function Keyboard(LangId: Integer): Integer; safecall;
    function ProductCode: WideString; safecall;
    function DefaultWebOptions: DefaultWebOptions; safecall;
    procedure DiscussionSupport(var Range: OleVariant; var cid: OleVariant; var piCSE: OleVariant); safecall;
    procedure SetDefaultTheme(const Name: WideString; DocumentType: WdDocumentMedium); safecall;
    function GetDefaultTheme(DocumentType: WdDocumentMedium): WideString; safecall;
    function Get_EmailOptions: EmailOptions; safecall;
    function Get_Language: MsoLanguageID; safecall;
    function Get_COMAddIns: COMAddIns; safecall;
    function Get_CheckLanguage: WordBool; safecall;
    procedure Set_CheckLanguage(prop: WordBool); safecall;
    function Get_LanguageSettings: LanguageSettings; safecall;
    function Get_Dummy1: WordBool; safecall;
    function Get_AnswerWizard: AnswerWizard; safecall;
    function Get_FeatureInstall: MsoFeatureInstall; safecall;
    procedure Set_FeatureInstall(prop: MsoFeatureInstall); safecall;
    procedure PrintOut2000(var Background: OleVariant; var Append: OleVariant; 
                           var Range: OleVariant; var OutputFileName: OleVariant; 
                           var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                           var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                           var PrintToFile: OleVariant; var Collate: OleVariant; 
                           var FileName: OleVariant; var ActivePrinterMacGX: OleVariant; 
                           var ManualDuplexPrint: OleVariant; var PrintZoomColumn: OleVariant; 
                           var PrintZoomRow: OleVariant; var PrintZoomPaperWidth: OleVariant; 
                           var PrintZoomPaperHeight: OleVariant); safecall;
    function Run(const MacroName: WideString; var varg1: OleVariant; var varg2: OleVariant; 
                 var varg3: OleVariant; var varg4: OleVariant; var varg5: OleVariant; 
                 var varg6: OleVariant; var varg7: OleVariant; var varg8: OleVariant; 
                 var varg9: OleVariant; var varg10: OleVariant; var varg11: OleVariant; 
                 var varg12: OleVariant; var varg13: OleVariant; var varg14: OleVariant; 
                 var varg15: OleVariant; var varg16: OleVariant; var varg17: OleVariant; 
                 var varg18: OleVariant; var varg19: OleVariant; var varg20: OleVariant; 
                 var varg21: OleVariant; var varg22: OleVariant; var varg23: OleVariant; 
                 var varg24: OleVariant; var varg25: OleVariant; var varg26: OleVariant; 
                 var varg27: OleVariant; var varg28: OleVariant; var varg29: OleVariant; 
                 var varg30: OleVariant): OleVariant; safecall;
    procedure PrintOut(var Background: OleVariant; var Append: OleVariant; var Range: OleVariant; 
                       var OutputFileName: OleVariant; var From: OleVariant; var To_: OleVariant; 
                       var Item: OleVariant; var Copies: OleVariant; var Pages: OleVariant; 
                       var PageType: OleVariant; var PrintToFile: OleVariant; 
                       var Collate: OleVariant; var FileName: OleVariant; 
                       var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant; 
                       var PrintZoomColumn: OleVariant; var PrintZoomRow: OleVariant; 
                       var PrintZoomPaperWidth: OleVariant; var PrintZoomPaperHeight: OleVariant); safecall;
    function Get_AutomationSecurity: MsoAutomationSecurity; safecall;
    procedure Set_AutomationSecurity(prop: MsoAutomationSecurity); safecall;
    function Get_FileDialog(FileDialogType: MsoFileDialogType): FileDialog; safecall;
    function Get_EmailTemplate: WideString; safecall;
    procedure Set_EmailTemplate(const prop: WideString); safecall;
    function Get_ShowWindowsInTaskbar: WordBool; safecall;
    procedure Set_ShowWindowsInTaskbar(prop: WordBool); safecall;
    function Get_NewDocument: NewFile; safecall;
    function Get_ShowStartupDialog: WordBool; safecall;
    procedure Set_ShowStartupDialog(prop: WordBool); safecall;
    function Get_AutoCorrectEmail: AutoCorrect; safecall;
    function Get_TaskPanes: TaskPanes; safecall;
    function Get_DefaultLegalBlackline: WordBool; safecall;
    procedure Set_DefaultLegalBlackline(prop: WordBool); safecall;
    function Dummy2: WordBool; safecall;
    function Get_SmartTagRecognizers: SmartTagRecognizers; safecall;
    function Get_SmartTagTypes: SmartTagTypes; safecall;
    function Get_XMLNamespaces: XMLNamespaces; safecall;
    procedure PutFocusInMailHeader; safecall;
    function Get_ArbitraryXMLSupportAvailable: WordBool; safecall;
    function Get_BuildFull: WideString; safecall;
    function Get_BuildFeatureCrew: WideString; safecall;
    procedure LoadMasterList(const FileName: WideString); safecall;
    function CompareDocuments(const OriginalDocument: WordDocument; 
                              const RevisedDocument: WordDocument; 
                              Destination: WdCompareDestination; Granularity: WdGranularity; 
                              CompareFormatting: WordBool; CompareCaseChanges: WordBool; 
                              CompareWhitespace: WordBool; CompareTables: WordBool; 
                              CompareHeaders: WordBool; CompareFootnotes: WordBool; 
                              CompareTextboxes: WordBool; CompareFields: WordBool; 
                              CompareComments: WordBool; CompareMoves: WordBool; 
                              const RevisedAuthor: WideString; IgnoreAllComparisonWarnings: WordBool): WordDocument; safecall;
    function MergeDocuments(const OriginalDocument: WordDocument; 
                            const RevisedDocument: WordDocument; Destination: WdCompareDestination; 
                            Granularity: WdGranularity; CompareFormatting: WordBool; 
                            CompareCaseChanges: WordBool; CompareWhitespace: WordBool; 
                            CompareTables: WordBool; CompareHeaders: WordBool; 
                            CompareFootnotes: WordBool; CompareTextboxes: WordBool; 
                            CompareFields: WordBool; CompareComments: WordBool; 
                            CompareMoves: WordBool; const OriginalAuthor: WideString; 
                            const RevisedAuthor: WideString; FormatFrom: WdMergeFormatFrom): WordDocument; safecall;
    function Get_Bibliography: Bibliography; safecall;
    function Get_ShowStylePreviews: WordBool; safecall;
    procedure Set_ShowStylePreviews(prop: WordBool); safecall;
    function Get_RestrictLinkedStyles: WordBool; safecall;
    procedure Set_RestrictLinkedStyles(prop: WordBool); safecall;
    function Get_OMathAutoCorrect: OMathAutoCorrect; safecall;
    function Get_DisplayDocumentInformationPanel: WordBool; safecall;
    procedure Set_DisplayDocumentInformationPanel(prop: WordBool); safecall;
    function Get_Assistance: IAssistance; safecall;
    function Get_OpenAttachmentsInFullScreen: WordBool; safecall;
    procedure Set_OpenAttachmentsInFullScreen(prop: WordBool); safecall;
    function Get_ActiveEncryptionSession: Integer; safecall;
    function Get_DontResetInsertionPointProperties: WordBool; safecall;
    procedure Set_DontResetInsertionPointProperties(prop: WordBool); safecall;
    function Get_SmartArtLayouts: SmartArtLayouts; safecall;
    function Get_SmartArtQuickStyles: SmartArtQuickStyles; safecall;
    function Get_SmartArtColors: SmartArtColors; safecall;
    procedure ThreeWayMerge(const LocalDocument: WordDocument; const ServerDocument: WordDocument; 
                            const BaseDocument: WordDocument; FavorSource: WordBool); safecall;
    procedure Dummy4; safecall;
    function Get_UndoRecord: UndoRecord; safecall;
    function Get_PickerDialog: PickerDialog; safecall;
    function Get_ProtectedViewWindows: ProtectedViewWindows; safecall;
    function Get_ActiveProtectedViewWindow: ProtectedViewWindow; safecall;
    function Get_IsSandboxed: WordBool; safecall;
    function Get_FileValidation: MsoFileValidationMode; safecall;
    procedure Set_FileValidation(prop: MsoFileValidationMode); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Documents: Documents read Get_Documents;
    property Windows: Windows read Get_Windows;
    property ActiveDocument: WordDocument read Get_ActiveDocument;
    property ActiveWindow: Window read Get_ActiveWindow;
    property Selection: WordSelection read Get_Selection;
    property WordBasic: IDispatch read Get_WordBasic;
    property RecentFiles: RecentFiles read Get_RecentFiles;
    property NormalTemplate: Template read Get_NormalTemplate;
    property System_: System read Get_System_;
    property AutoCorrect: AutoCorrect read Get_AutoCorrect;
    property FontNames: FontNames read Get_FontNames;
    property LandscapeFontNames: FontNames read Get_LandscapeFontNames;
    property PortraitFontNames: FontNames read Get_PortraitFontNames;
    property Languages: Languages read Get_Languages;
    property Assistant: Assistant read Get_Assistant;
    property Browser: Browser read Get_Browser;
    property FileConverters: FileConverters read Get_FileConverters;
    property MailingLabel: MailingLabel read Get_MailingLabel;
    property Dialogs: Dialogs read Get_Dialogs;
    property CaptionLabels: CaptionLabels read Get_CaptionLabels;
    property AutoCaptions: AutoCaptions read Get_AutoCaptions;
    property AddIns: AddIns read Get_AddIns;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Version: WideString read Get_Version;
    property ScreenUpdating: WordBool read Get_ScreenUpdating write Set_ScreenUpdating;
    property PrintPreview: WordBool read Get_PrintPreview write Set_PrintPreview;
    property Tasks: Tasks read Get_Tasks;
    property DisplayStatusBar: WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
    property SpecialMode: WordBool read Get_SpecialMode;
    property UsableWidth: Integer read Get_UsableWidth;
    property UsableHeight: Integer read Get_UsableHeight;
    property MathCoprocessorAvailable: WordBool read Get_MathCoprocessorAvailable;
    property MouseAvailable: WordBool read Get_MouseAvailable;
    property International[Index: WdInternationalIndex]: OleVariant read Get_International;
    property Build: WideString read Get_Build;
    property CapsLock: WordBool read Get_CapsLock;
    property NumLock: WordBool read Get_NumLock;
    property UserName: WideString read Get_UserName write Set_UserName;
    property UserInitials: WideString read Get_UserInitials write Set_UserInitials;
    property UserAddress: WideString read Get_UserAddress write Set_UserAddress;
    property MacroContainer: IDispatch read Get_MacroContainer;
    property DisplayRecentFiles: WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
    property CommandBars: CommandBars read Get_CommandBars;
    property SynonymInfo[const Word: WideString; var LanguageID: OleVariant]: SynonymInfo read Get_SynonymInfo;
    property VBE: VBE read Get_VBE;
    property DefaultSaveFormat: WideString read Get_DefaultSaveFormat write Set_DefaultSaveFormat;
    property ListGalleries: ListGalleries read Get_ListGalleries;
    property ActivePrinter: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property Templates: Templates read Get_Templates;
    property CustomizationContext: IDispatch read Get_CustomizationContext write Set_CustomizationContext;
    property KeyBindings: KeyBindings read Get_KeyBindings;
    property KeysBoundTo[KeyCategory: WdKeyCategory; const Command: WideString; 
                         var CommandParameter: OleVariant]: KeysBoundTo read Get_KeysBoundTo;
    property FindKey[KeyCode: Integer; var KeyCode2: OleVariant]: KeyBinding read Get_FindKey;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Path: WideString read Get_Path;
    property DisplayScrollBars: WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
    property StartupPath: WideString read Get_StartupPath write Set_StartupPath;
    property BackgroundSavingStatus: Integer read Get_BackgroundSavingStatus;
    property BackgroundPrintingStatus: Integer read Get_BackgroundPrintingStatus;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property DisplayAutoCompleteTips: WordBool read Get_DisplayAutoCompleteTips write Set_DisplayAutoCompleteTips;
    property Options: Options read Get_Options;
    property DisplayAlerts: WdAlertLevel read Get_DisplayAlerts write Set_DisplayAlerts;
    property CustomDictionaries: Dictionaries read Get_CustomDictionaries;
    property PathSeparator: WideString read Get_PathSeparator;
    property StatusBar: WideString write Set_StatusBar;
    property MAPIAvailable: WordBool read Get_MAPIAvailable;
    property DisplayScreenTips: WordBool read Get_DisplayScreenTips write Set_DisplayScreenTips;
    property EnableCancelKey: WdEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
    property UserControl: WordBool read Get_UserControl;
    property FileSearch: FileSearch read Get_FileSearch;
    property MailSystem: WdMailSystem read Get_MailSystem;
    property DefaultTableSeparator: WideString read Get_DefaultTableSeparator write Set_DefaultTableSeparator;
    property ShowVisualBasicEditor: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
    property BrowseExtraFileTypes: WideString read Get_BrowseExtraFileTypes write Set_BrowseExtraFileTypes;
    property IsObjectValid[const Object_: IDispatch]: WordBool read Get_IsObjectValid;
    property HangulHanjaDictionaries: HangulHanjaConversionDictionaries read Get_HangulHanjaDictionaries;
    property MailMessage: MailMessage read Get_MailMessage;
    property FocusInMailHeader: WordBool read Get_FocusInMailHeader;
    property EmailOptions: EmailOptions read Get_EmailOptions;
    property Language: MsoLanguageID read Get_Language;
    property COMAddIns: COMAddIns read Get_COMAddIns;
    property CheckLanguage: WordBool read Get_CheckLanguage write Set_CheckLanguage;
    property LanguageSettings: LanguageSettings read Get_LanguageSettings;
    property Dummy1: WordBool read Get_Dummy1;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
    property FeatureInstall: MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
    property AutomationSecurity: MsoAutomationSecurity read Get_AutomationSecurity write Set_AutomationSecurity;
    property FileDialog[FileDialogType: MsoFileDialogType]: FileDialog read Get_FileDialog;
    property EmailTemplate: WideString read Get_EmailTemplate write Set_EmailTemplate;
    property ShowWindowsInTaskbar: WordBool read Get_ShowWindowsInTaskbar write Set_ShowWindowsInTaskbar;
    property NewDocument: NewFile read Get_NewDocument;
    property ShowStartupDialog: WordBool read Get_ShowStartupDialog write Set_ShowStartupDialog;
    property AutoCorrectEmail: AutoCorrect read Get_AutoCorrectEmail;
    property TaskPanes: TaskPanes read Get_TaskPanes;
    property DefaultLegalBlackline: WordBool read Get_DefaultLegalBlackline write Set_DefaultLegalBlackline;
    property SmartTagRecognizers: SmartTagRecognizers read Get_SmartTagRecognizers;
    property SmartTagTypes: SmartTagTypes read Get_SmartTagTypes;
    property XMLNamespaces: XMLNamespaces read Get_XMLNamespaces;
    property ArbitraryXMLSupportAvailable: WordBool read Get_ArbitraryXMLSupportAvailable;
    property BuildFull: WideString read Get_BuildFull;
    property BuildFeatureCrew: WideString read Get_BuildFeatureCrew;
    property Bibliography: Bibliography read Get_Bibliography;
    property ShowStylePreviews: WordBool read Get_ShowStylePreviews write Set_ShowStylePreviews;
    property RestrictLinkedStyles: WordBool read Get_RestrictLinkedStyles write Set_RestrictLinkedStyles;
    property OMathAutoCorrect: OMathAutoCorrect read Get_OMathAutoCorrect;
    property DisplayDocumentInformationPanel: WordBool read Get_DisplayDocumentInformationPanel write Set_DisplayDocumentInformationPanel;
    property Assistance: IAssistance read Get_Assistance;
    property OpenAttachmentsInFullScreen: WordBool read Get_OpenAttachmentsInFullScreen write Set_OpenAttachmentsInFullScreen;
    property ActiveEncryptionSession: Integer read Get_ActiveEncryptionSession;
    property DontResetInsertionPointProperties: WordBool read Get_DontResetInsertionPointProperties write Set_DontResetInsertionPointProperties;
    property SmartArtLayouts: SmartArtLayouts read Get_SmartArtLayouts;
    property SmartArtQuickStyles: SmartArtQuickStyles read Get_SmartArtQuickStyles;
    property SmartArtColors: SmartArtColors read Get_SmartArtColors;
    property UndoRecord: UndoRecord read Get_UndoRecord;
    property PickerDialog: PickerDialog read Get_PickerDialog;
    property ProtectedViewWindows: ProtectedViewWindows read Get_ProtectedViewWindows;
    property ActiveProtectedViewWindow: ProtectedViewWindow read Get_ActiveProtectedViewWindow;
    property IsSandboxed: WordBool read Get_IsSandboxed;
    property FileValidation: MsoFileValidationMode read Get_FileValidation write Set_FileValidation;
  end;

// *********************************************************************//
// DispIntf:  _ApplicationDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020970-0000-0000-C000-000000000046}
// *********************************************************************//
  _ApplicationDisp = dispinterface
    ['{00020970-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Documents: Documents readonly dispid 6;
    property Windows: Windows readonly dispid 2;
    property ActiveDocument: WordDocument readonly dispid 3;
    property ActiveWindow: Window readonly dispid 4;
    property Selection: WordSelection readonly dispid 5;
    property WordBasic: IDispatch readonly dispid 1;
    property RecentFiles: RecentFiles readonly dispid 7;
    property NormalTemplate: Template readonly dispid 8;
    property System_: System readonly dispid 9;
    property AutoCorrect: AutoCorrect readonly dispid 10;
    property FontNames: FontNames readonly dispid 11;
    property LandscapeFontNames: FontNames readonly dispid 12;
    property PortraitFontNames: FontNames readonly dispid 13;
    property Languages: Languages readonly dispid 14;
    property Assistant: Assistant readonly dispid 15;
    property Browser: Browser readonly dispid 16;
    property FileConverters: FileConverters readonly dispid 17;
    property MailingLabel: MailingLabel readonly dispid 18;
    property Dialogs: Dialogs readonly dispid 19;
    property CaptionLabels: CaptionLabels readonly dispid 20;
    property AutoCaptions: AutoCaptions readonly dispid 21;
    property AddIns: AddIns readonly dispid 22;
    property Visible: WordBool dispid 23;
    property Version: WideString readonly dispid 24;
    property ScreenUpdating: WordBool dispid 26;
    property PrintPreview: WordBool dispid 27;
    property Tasks: Tasks readonly dispid 28;
    property DisplayStatusBar: WordBool dispid 29;
    property SpecialMode: WordBool readonly dispid 30;
    property UsableWidth: Integer readonly dispid 33;
    property UsableHeight: Integer readonly dispid 34;
    property MathCoprocessorAvailable: WordBool readonly dispid 36;
    property MouseAvailable: WordBool readonly dispid 37;
    property International[Index: WdInternationalIndex]: OleVariant readonly dispid 46;
    property Build: WideString readonly dispid 47;
    property CapsLock: WordBool readonly dispid 48;
    property NumLock: WordBool readonly dispid 49;
    property UserName: WideString dispid 52;
    property UserInitials: WideString dispid 53;
    property UserAddress: WideString dispid 54;
    property MacroContainer: IDispatch readonly dispid 55;
    property DisplayRecentFiles: WordBool dispid 56;
    property CommandBars: CommandBars readonly dispid 57;
    property SynonymInfo[const Word: WideString; var LanguageID: OleVariant]: SynonymInfo readonly dispid 59;
    property VBE: VBE readonly dispid 61;
    property DefaultSaveFormat: WideString dispid 64;
    property ListGalleries: ListGalleries readonly dispid 65;
    property ActivePrinter: WideString dispid 66;
    property Templates: Templates readonly dispid 67;
    property CustomizationContext: IDispatch dispid 68;
    property KeyBindings: KeyBindings readonly dispid 69;
    property KeysBoundTo[KeyCategory: WdKeyCategory; const Command: WideString; 
                         var CommandParameter: OleVariant]: KeysBoundTo readonly dispid 70;
    property FindKey[KeyCode: Integer; var KeyCode2: OleVariant]: KeyBinding readonly dispid 71;
    property Caption: WideString dispid 80;
    property Path: WideString readonly dispid 81;
    property DisplayScrollBars: WordBool dispid 82;
    property StartupPath: WideString dispid 83;
    property BackgroundSavingStatus: Integer readonly dispid 85;
    property BackgroundPrintingStatus: Integer readonly dispid 86;
    property Left: Integer dispid 87;
    property Top: Integer dispid 88;
    property Width: Integer dispid 89;
    property Height: Integer dispid 90;
    property WindowState: WdWindowState dispid 91;
    property DisplayAutoCompleteTips: WordBool dispid 92;
    property Options: Options readonly dispid 93;
    property DisplayAlerts: WdAlertLevel dispid 94;
    property CustomDictionaries: Dictionaries readonly dispid 95;
    property PathSeparator: WideString readonly dispid 96;
    property StatusBar: WideString writeonly dispid 97;
    property MAPIAvailable: WordBool readonly dispid 98;
    property DisplayScreenTips: WordBool dispid 99;
    property EnableCancelKey: WdEnableCancelKey dispid 100;
    property UserControl: WordBool readonly dispid 101;
    property FileSearch: FileSearch readonly dispid 103;
    property MailSystem: WdMailSystem readonly dispid 104;
    property DefaultTableSeparator: WideString dispid 105;
    property ShowVisualBasicEditor: WordBool dispid 106;
    property BrowseExtraFileTypes: WideString dispid 108;
    property IsObjectValid[const Object_: IDispatch]: WordBool readonly dispid 109;
    property HangulHanjaDictionaries: HangulHanjaConversionDictionaries readonly dispid 110;
    property MailMessage: MailMessage readonly dispid 348;
    property FocusInMailHeader: WordBool readonly dispid 386;
    procedure Quit(var SaveChanges: OleVariant; var OriginalFormat: OleVariant; 
                   var RouteDocument: OleVariant); dispid 1105;
    procedure ScreenRefresh; dispid 301;
    procedure PrintOutOld(var Background: OleVariant; var Append: OleVariant; 
                          var Range: OleVariant; var OutputFileName: OleVariant; 
                          var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                          var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                          var PrintToFile: OleVariant; var Collate: OleVariant; 
                          var FileName: OleVariant; var ActivePrinterMacGX: OleVariant; 
                          var ManualDuplexPrint: OleVariant); dispid 302;
    procedure LookupNameProperties(const Name: WideString); dispid 303;
    procedure SubstituteFont(const UnavailableFont: WideString; const SubstituteFont: WideString); dispid 304;
    function Repeat_(var Times: OleVariant): WordBool; dispid 305;
    procedure DDEExecute(Channel: Integer; const Command: WideString); dispid 310;
    function DDEInitiate(const App: WideString; const Topic: WideString): Integer; dispid 311;
    procedure DDEPoke(Channel: Integer; const Item: WideString; const Data: WideString); dispid 312;
    function DDERequest(Channel: Integer; const Item: WideString): WideString; dispid 313;
    procedure DDETerminate(Channel: Integer); dispid 314;
    procedure DDETerminateAll; dispid 315;
    function BuildKeyCode(Arg1: WdKey; var Arg2: OleVariant; var Arg3: OleVariant; 
                          var Arg4: OleVariant): Integer; dispid 316;
    function KeyString(KeyCode: Integer; var KeyCode2: OleVariant): WideString; dispid 317;
    procedure OrganizerCopy(const Source: WideString; const Destination: WideString; 
                            const Name: WideString; Object_: WdOrganizerObject); dispid 318;
    procedure OrganizerDelete(const Source: WideString; const Name: WideString; 
                              Object_: WdOrganizerObject); dispid 319;
    procedure OrganizerRename(const Source: WideString; const Name: WideString; 
                              const NewName: WideString; Object_: WdOrganizerObject); dispid 320;
    procedure AddAddress(var TagID: {??PSafeArray}OleVariant; var Value: {??PSafeArray}OleVariant); dispid 321;
    function GetAddress(var Name: OleVariant; var AddressProperties: OleVariant; 
                        var UseAutoText: OleVariant; var DisplaySelectDialog: OleVariant; 
                        var SelectDialog: OleVariant; var CheckNamesDialog: OleVariant; 
                        var RecentAddressesChoice: OleVariant; var UpdateRecentAddresses: OleVariant): WideString; dispid 322;
    function CheckGrammar(const String_: WideString): WordBool; dispid 323;
    function CheckSpelling(const Word: WideString; var CustomDictionary: OleVariant; 
                           var IgnoreUppercase: OleVariant; var MainDictionary: OleVariant; 
                           var CustomDictionary2: OleVariant; var CustomDictionary3: OleVariant; 
                           var CustomDictionary4: OleVariant; var CustomDictionary5: OleVariant; 
                           var CustomDictionary6: OleVariant; var CustomDictionary7: OleVariant; 
                           var CustomDictionary8: OleVariant; var CustomDictionary9: OleVariant; 
                           var CustomDictionary10: OleVariant): WordBool; dispid 324;
    procedure ResetIgnoreAll; dispid 326;
    function GetSpellingSuggestions(const Word: WideString; var CustomDictionary: OleVariant; 
                                    var IgnoreUppercase: OleVariant; 
                                    var MainDictionary: OleVariant; var SuggestionMode: OleVariant; 
                                    var CustomDictionary2: OleVariant; 
                                    var CustomDictionary3: OleVariant; 
                                    var CustomDictionary4: OleVariant; 
                                    var CustomDictionary5: OleVariant; 
                                    var CustomDictionary6: OleVariant; 
                                    var CustomDictionary7: OleVariant; 
                                    var CustomDictionary8: OleVariant; 
                                    var CustomDictionary9: OleVariant; 
                                    var CustomDictionary10: OleVariant): SpellingSuggestions; dispid 327;
    procedure GoBack; dispid 328;
    procedure Help(var HelpType: OleVariant); dispid 329;
    procedure AutomaticChange; dispid 330;
    procedure ShowMe; dispid 331;
    procedure HelpTool; dispid 332;
    function NewWindow: Window; dispid 345;
    procedure ListCommands(ListAllCommands: WordBool); dispid 346;
    procedure ShowClipboard; dispid 349;
    procedure OnTime(var When: OleVariant; const Name: WideString; var Tolerance: OleVariant); dispid 350;
    procedure NextLetter; dispid 351;
    function MountVolume(const Zone: WideString; const Server: WideString; 
                         const Volume: WideString; var User: OleVariant; 
                         var UserPassword: OleVariant; var VolumePassword: OleVariant): Smallint; dispid 353;
    function CleanString(const String_: WideString): WideString; dispid 354;
    procedure SendFax; dispid 356;
    procedure ChangeFileOpenDirectory(const Path: WideString); dispid 357;
    procedure RunOld(const MacroName: WideString); dispid 358;
    procedure GoForward; dispid 359;
    procedure Move(Left: Integer; Top: Integer); dispid 360;
    procedure Resize(Width: Integer; Height: Integer); dispid 361;
    function InchesToPoints(Inches: Single): Single; dispid 370;
    function CentimetersToPoints(Centimeters: Single): Single; dispid 371;
    function MillimetersToPoints(Millimeters: Single): Single; dispid 372;
    function PicasToPoints(Picas: Single): Single; dispid 373;
    function LinesToPoints(Lines: Single): Single; dispid 374;
    function PointsToInches(Points: Single): Single; dispid 380;
    function PointsToCentimeters(Points: Single): Single; dispid 381;
    function PointsToMillimeters(Points: Single): Single; dispid 382;
    function PointsToPicas(Points: Single): Single; dispid 383;
    function PointsToLines(Points: Single): Single; dispid 384;
    procedure Activate; dispid 385;
    function PointsToPixels(Points: Single; var fVertical: OleVariant): Single; dispid 387;
    function PixelsToPoints(Pixels: Single; var fVertical: OleVariant): Single; dispid 388;
    procedure KeyboardLatin; dispid 400;
    procedure KeyboardBidi; dispid 401;
    procedure ToggleKeyboard; dispid 402;
    function Keyboard(LangId: Integer): Integer; dispid 446;
    function ProductCode: WideString; dispid 404;
    function DefaultWebOptions: DefaultWebOptions; dispid 405;
    procedure DiscussionSupport(var Range: OleVariant; var cid: OleVariant; var piCSE: OleVariant); dispid 407;
    procedure SetDefaultTheme(const Name: WideString; DocumentType: WdDocumentMedium); dispid 414;
    function GetDefaultTheme(DocumentType: WdDocumentMedium): WideString; dispid 416;
    property EmailOptions: EmailOptions readonly dispid 389;
    property Language: MsoLanguageID readonly dispid 391;
    property COMAddIns: COMAddIns readonly dispid 111;
    property CheckLanguage: WordBool dispid 112;
    property LanguageSettings: LanguageSettings readonly dispid 403;
    property Dummy1: WordBool readonly dispid 406;
    property AnswerWizard: AnswerWizard readonly dispid 409;
    property FeatureInstall: MsoFeatureInstall dispid 447;
    procedure PrintOut2000(var Background: OleVariant; var Append: OleVariant; 
                           var Range: OleVariant; var OutputFileName: OleVariant; 
                           var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                           var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                           var PrintToFile: OleVariant; var Collate: OleVariant; 
                           var FileName: OleVariant; var ActivePrinterMacGX: OleVariant; 
                           var ManualDuplexPrint: OleVariant; var PrintZoomColumn: OleVariant; 
                           var PrintZoomRow: OleVariant; var PrintZoomPaperWidth: OleVariant; 
                           var PrintZoomPaperHeight: OleVariant); dispid 444;
    function Run(const MacroName: WideString; var varg1: OleVariant; var varg2: OleVariant; 
                 var varg3: OleVariant; var varg4: OleVariant; var varg5: OleVariant; 
                 var varg6: OleVariant; var varg7: OleVariant; var varg8: OleVariant; 
                 var varg9: OleVariant; var varg10: OleVariant; var varg11: OleVariant; 
                 var varg12: OleVariant; var varg13: OleVariant; var varg14: OleVariant; 
                 var varg15: OleVariant; var varg16: OleVariant; var varg17: OleVariant; 
                 var varg18: OleVariant; var varg19: OleVariant; var varg20: OleVariant; 
                 var varg21: OleVariant; var varg22: OleVariant; var varg23: OleVariant; 
                 var varg24: OleVariant; var varg25: OleVariant; var varg26: OleVariant; 
                 var varg27: OleVariant; var varg28: OleVariant; var varg29: OleVariant; 
                 var varg30: OleVariant): OleVariant; dispid 445;
    procedure PrintOut(var Background: OleVariant; var Append: OleVariant; var Range: OleVariant; 
                       var OutputFileName: OleVariant; var From: OleVariant; var To_: OleVariant; 
                       var Item: OleVariant; var Copies: OleVariant; var Pages: OleVariant; 
                       var PageType: OleVariant; var PrintToFile: OleVariant; 
                       var Collate: OleVariant; var FileName: OleVariant; 
                       var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant; 
                       var PrintZoomColumn: OleVariant; var PrintZoomRow: OleVariant; 
                       var PrintZoomPaperWidth: OleVariant; var PrintZoomPaperHeight: OleVariant); dispid 448;
    property AutomationSecurity: MsoAutomationSecurity dispid 449;
    property FileDialog[FileDialogType: MsoFileDialogType]: FileDialog readonly dispid 450;
    property EmailTemplate: WideString dispid 451;
    property ShowWindowsInTaskbar: WordBool dispid 452;
    property NewDocument: NewFile readonly dispid 454;
    property ShowStartupDialog: WordBool dispid 455;
    property AutoCorrectEmail: AutoCorrect readonly dispid 456;
    property TaskPanes: TaskPanes readonly dispid 457;
    property DefaultLegalBlackline: WordBool dispid 459;
    function Dummy2: WordBool; dispid 458;
    property SmartTagRecognizers: SmartTagRecognizers readonly dispid 460;
    property SmartTagTypes: SmartTagTypes readonly dispid 461;
    property XMLNamespaces: XMLNamespaces readonly dispid 463;
    procedure PutFocusInMailHeader; dispid 464;
    property ArbitraryXMLSupportAvailable: WordBool readonly dispid 465;
    property BuildFull: WideString readonly dispid 466;
    property BuildFeatureCrew: WideString readonly dispid 467;
    procedure LoadMasterList(const FileName: WideString); dispid 469;
    function CompareDocuments(const OriginalDocument: WordDocument; 
                              const RevisedDocument: WordDocument; 
                              Destination: WdCompareDestination; Granularity: WdGranularity; 
                              CompareFormatting: WordBool; CompareCaseChanges: WordBool; 
                              CompareWhitespace: WordBool; CompareTables: WordBool; 
                              CompareHeaders: WordBool; CompareFootnotes: WordBool; 
                              CompareTextboxes: WordBool; CompareFields: WordBool; 
                              CompareComments: WordBool; CompareMoves: WordBool; 
                              const RevisedAuthor: WideString; IgnoreAllComparisonWarnings: WordBool): WordDocument; dispid 470;
    function MergeDocuments(const OriginalDocument: WordDocument; 
                            const RevisedDocument: WordDocument; Destination: WdCompareDestination; 
                            Granularity: WdGranularity; CompareFormatting: WordBool; 
                            CompareCaseChanges: WordBool; CompareWhitespace: WordBool; 
                            CompareTables: WordBool; CompareHeaders: WordBool; 
                            CompareFootnotes: WordBool; CompareTextboxes: WordBool; 
                            CompareFields: WordBool; CompareComments: WordBool; 
                            CompareMoves: WordBool; const OriginalAuthor: WideString; 
                            const RevisedAuthor: WideString; FormatFrom: WdMergeFormatFrom): WordDocument; dispid 471;
    property Bibliography: Bibliography readonly dispid 472;
    property ShowStylePreviews: WordBool dispid 473;
    property RestrictLinkedStyles: WordBool dispid 474;
    property OMathAutoCorrect: OMathAutoCorrect readonly dispid 475;
    property DisplayDocumentInformationPanel: WordBool dispid 476;
    property Assistance: IAssistance readonly dispid 477;
    property OpenAttachmentsInFullScreen: WordBool dispid 478;
    property ActiveEncryptionSession: Integer readonly dispid 479;
    property DontResetInsertionPointProperties: WordBool dispid 480;
    property SmartArtLayouts: SmartArtLayouts readonly dispid 481;
    property SmartArtQuickStyles: SmartArtQuickStyles readonly dispid 482;
    property SmartArtColors: SmartArtColors readonly dispid 483;
    procedure ThreeWayMerge(const LocalDocument: WordDocument; const ServerDocument: WordDocument; 
                            const BaseDocument: WordDocument; FavorSource: WordBool); dispid 484;
    procedure Dummy4; dispid 485;
    property UndoRecord: UndoRecord readonly dispid 486;
    property PickerDialog: PickerDialog readonly dispid 489;
    property ProtectedViewWindows: ProtectedViewWindows readonly dispid 490;
    property ActiveProtectedViewWindow: ProtectedViewWindow readonly dispid 491;
    property IsSandboxed: WordBool readonly dispid 492;
    property FileValidation: MsoFileValidationMode dispid 493;
  end;

// *********************************************************************//
// Interface: _Global
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B9-0000-0000-C000-000000000046}
// *********************************************************************//
  _Global = interface(IDispatch)
    ['{000209B9-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Documents: Documents; safecall;
    function Get_Windows: Windows; safecall;
    function Get_ActiveDocument: WordDocument; safecall;
    function Get_ActiveWindow: Window; safecall;
    function Get_Selection: WordSelection; safecall;
    function Get_WordBasic: IDispatch; safecall;
    function Get_PrintPreview: WordBool; safecall;
    procedure Set_PrintPreview(prop: WordBool); safecall;
    function Get_RecentFiles: RecentFiles; safecall;
    function Get_NormalTemplate: Template; safecall;
    function Get_System_: System; safecall;
    function Get_AutoCorrect: AutoCorrect; safecall;
    function Get_FontNames: FontNames; safecall;
    function Get_LandscapeFontNames: FontNames; safecall;
    function Get_PortraitFontNames: FontNames; safecall;
    function Get_Languages: Languages; safecall;
    function Get_Assistant: Assistant; safecall;
    function Get_FileConverters: FileConverters; safecall;
    function Get_Dialogs: Dialogs; safecall;
    function Get_CaptionLabels: CaptionLabels; safecall;
    function Get_AutoCaptions: AutoCaptions; safecall;
    function Get_AddIns: AddIns; safecall;
    function Get_Tasks: Tasks; safecall;
    function Get_MacroContainer: IDispatch; safecall;
    function Get_CommandBars: CommandBars; safecall;
    function Get_SynonymInfo(const Word: WideString; var LanguageID: OleVariant): SynonymInfo; safecall;
    function Get_VBE: VBE; safecall;
    function Get_ListGalleries: ListGalleries; safecall;
    function Get_ActivePrinter: WideString; safecall;
    procedure Set_ActivePrinter(const prop: WideString); safecall;
    function Get_Templates: Templates; safecall;
    function Get_CustomizationContext: IDispatch; safecall;
    procedure Set_CustomizationContext(const prop: IDispatch); safecall;
    function Get_KeyBindings: KeyBindings; safecall;
    function Get_KeysBoundTo(KeyCategory: WdKeyCategory; const Command: WideString; 
                             var CommandParameter: OleVariant): KeysBoundTo; safecall;
    function Get_FindKey(KeyCode: Integer; var KeyCode2: OleVariant): KeyBinding; safecall;
    function Get_Options: Options; safecall;
    function Get_CustomDictionaries: Dictionaries; safecall;
    procedure Set_StatusBar(const Param1: WideString); safecall;
    function Get_ShowVisualBasicEditor: WordBool; safecall;
    procedure Set_ShowVisualBasicEditor(prop: WordBool); safecall;
    function Get_IsObjectValid(const Object_: IDispatch): WordBool; safecall;
    function Get_HangulHanjaDictionaries: HangulHanjaConversionDictionaries; safecall;
    function Repeat_(var Times: OleVariant): WordBool; safecall;
    procedure DDEExecute(Channel: Integer; const Command: WideString); safecall;
    function DDEInitiate(const App: WideString; const Topic: WideString): Integer; safecall;
    procedure DDEPoke(Channel: Integer; const Item: WideString; const Data: WideString); safecall;
    function DDERequest(Channel: Integer; const Item: WideString): WideString; safecall;
    procedure DDETerminate(Channel: Integer); safecall;
    procedure DDETerminateAll; safecall;
    function BuildKeyCode(Arg1: WdKey; var Arg2: OleVariant; var Arg3: OleVariant; 
                          var Arg4: OleVariant): Integer; safecall;
    function KeyString(KeyCode: Integer; var KeyCode2: OleVariant): WideString; safecall;
    function CheckSpelling(const Word: WideString; var CustomDictionary: OleVariant; 
                           var IgnoreUppercase: OleVariant; var MainDictionary: OleVariant; 
                           var CustomDictionary2: OleVariant; var CustomDictionary3: OleVariant; 
                           var CustomDictionary4: OleVariant; var CustomDictionary5: OleVariant; 
                           var CustomDictionary6: OleVariant; var CustomDictionary7: OleVariant; 
                           var CustomDictionary8: OleVariant; var CustomDictionary9: OleVariant; 
                           var CustomDictionary10: OleVariant): WordBool; safecall;
    function GetSpellingSuggestions(const Word: WideString; var CustomDictionary: OleVariant; 
                                    var IgnoreUppercase: OleVariant; 
                                    var MainDictionary: OleVariant; var SuggestionMode: OleVariant; 
                                    var CustomDictionary2: OleVariant; 
                                    var CustomDictionary3: OleVariant; 
                                    var CustomDictionary4: OleVariant; 
                                    var CustomDictionary5: OleVariant; 
                                    var CustomDictionary6: OleVariant; 
                                    var CustomDictionary7: OleVariant; 
                                    var CustomDictionary8: OleVariant; 
                                    var CustomDictionary9: OleVariant; 
                                    var CustomDictionary10: OleVariant): SpellingSuggestions; safecall;
    procedure Help(var HelpType: OleVariant); safecall;
    function NewWindow: Window; safecall;
    function CleanString(const String_: WideString): WideString; safecall;
    procedure ChangeFileOpenDirectory(const Path: WideString); safecall;
    function InchesToPoints(Inches: Single): Single; safecall;
    function CentimetersToPoints(Centimeters: Single): Single; safecall;
    function MillimetersToPoints(Millimeters: Single): Single; safecall;
    function PicasToPoints(Picas: Single): Single; safecall;
    function LinesToPoints(Lines: Single): Single; safecall;
    function PointsToInches(Points: Single): Single; safecall;
    function PointsToCentimeters(Points: Single): Single; safecall;
    function PointsToMillimeters(Points: Single): Single; safecall;
    function PointsToPicas(Points: Single): Single; safecall;
    function PointsToLines(Points: Single): Single; safecall;
    function PointsToPixels(Points: Single; var fVertical: OleVariant): Single; safecall;
    function PixelsToPoints(Pixels: Single; var fVertical: OleVariant): Single; safecall;
    function Get_LanguageSettings: LanguageSettings; safecall;
    function Get_AnswerWizard: AnswerWizard; safecall;
    function Get_AutoCorrectEmail: AutoCorrect; safecall;
    function Get_ProtectedViewWindows: ProtectedViewWindows; safecall;
    function Get_ActiveProtectedViewWindow: ProtectedViewWindow; safecall;
    function Get_IsSandboxed: WordBool; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Documents: Documents read Get_Documents;
    property Windows: Windows read Get_Windows;
    property ActiveDocument: WordDocument read Get_ActiveDocument;
    property ActiveWindow: Window read Get_ActiveWindow;
    property Selection: WordSelection read Get_Selection;
    property WordBasic: IDispatch read Get_WordBasic;
    property PrintPreview: WordBool read Get_PrintPreview write Set_PrintPreview;
    property RecentFiles: RecentFiles read Get_RecentFiles;
    property NormalTemplate: Template read Get_NormalTemplate;
    property System_: System read Get_System_;
    property AutoCorrect: AutoCorrect read Get_AutoCorrect;
    property FontNames: FontNames read Get_FontNames;
    property LandscapeFontNames: FontNames read Get_LandscapeFontNames;
    property PortraitFontNames: FontNames read Get_PortraitFontNames;
    property Languages: Languages read Get_Languages;
    property Assistant: Assistant read Get_Assistant;
    property FileConverters: FileConverters read Get_FileConverters;
    property Dialogs: Dialogs read Get_Dialogs;
    property CaptionLabels: CaptionLabels read Get_CaptionLabels;
    property AutoCaptions: AutoCaptions read Get_AutoCaptions;
    property AddIns: AddIns read Get_AddIns;
    property Tasks: Tasks read Get_Tasks;
    property MacroContainer: IDispatch read Get_MacroContainer;
    property CommandBars: CommandBars read Get_CommandBars;
    property SynonymInfo[const Word: WideString; var LanguageID: OleVariant]: SynonymInfo read Get_SynonymInfo;
    property VBE: VBE read Get_VBE;
    property ListGalleries: ListGalleries read Get_ListGalleries;
    property ActivePrinter: WideString read Get_ActivePrinter write Set_ActivePrinter;
    property Templates: Templates read Get_Templates;
    property CustomizationContext: IDispatch read Get_CustomizationContext write Set_CustomizationContext;
    property KeyBindings: KeyBindings read Get_KeyBindings;
    property KeysBoundTo[KeyCategory: WdKeyCategory; const Command: WideString; 
                         var CommandParameter: OleVariant]: KeysBoundTo read Get_KeysBoundTo;
    property FindKey[KeyCode: Integer; var KeyCode2: OleVariant]: KeyBinding read Get_FindKey;
    property Options: Options read Get_Options;
    property CustomDictionaries: Dictionaries read Get_CustomDictionaries;
    property StatusBar: WideString write Set_StatusBar;
    property ShowVisualBasicEditor: WordBool read Get_ShowVisualBasicEditor write Set_ShowVisualBasicEditor;
    property IsObjectValid[const Object_: IDispatch]: WordBool read Get_IsObjectValid;
    property HangulHanjaDictionaries: HangulHanjaConversionDictionaries read Get_HangulHanjaDictionaries;
    property LanguageSettings: LanguageSettings read Get_LanguageSettings;
    property AnswerWizard: AnswerWizard read Get_AnswerWizard;
    property AutoCorrectEmail: AutoCorrect read Get_AutoCorrectEmail;
    property ProtectedViewWindows: ProtectedViewWindows read Get_ProtectedViewWindows;
    property ActiveProtectedViewWindow: ProtectedViewWindow read Get_ActiveProtectedViewWindow;
    property IsSandboxed: WordBool read Get_IsSandboxed;
  end;

// *********************************************************************//
// DispIntf:  _GlobalDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B9-0000-0000-C000-000000000046}
// *********************************************************************//
  _GlobalDisp = dispinterface
    ['{000209B9-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Documents: Documents readonly dispid 1;
    property Windows: Windows readonly dispid 2;
    property ActiveDocument: WordDocument readonly dispid 3;
    property ActiveWindow: Window readonly dispid 4;
    property Selection: WordSelection readonly dispid 5;
    property WordBasic: IDispatch readonly dispid 6;
    property PrintPreview: WordBool dispid 27;
    property RecentFiles: RecentFiles readonly dispid 7;
    property NormalTemplate: Template readonly dispid 8;
    property System_: System readonly dispid 9;
    property AutoCorrect: AutoCorrect readonly dispid 10;
    property FontNames: FontNames readonly dispid 11;
    property LandscapeFontNames: FontNames readonly dispid 12;
    property PortraitFontNames: FontNames readonly dispid 13;
    property Languages: Languages readonly dispid 14;
    property Assistant: Assistant readonly dispid 15;
    property FileConverters: FileConverters readonly dispid 17;
    property Dialogs: Dialogs readonly dispid 19;
    property CaptionLabels: CaptionLabels readonly dispid 20;
    property AutoCaptions: AutoCaptions readonly dispid 21;
    property AddIns: AddIns readonly dispid 22;
    property Tasks: Tasks readonly dispid 28;
    property MacroContainer: IDispatch readonly dispid 55;
    property CommandBars: CommandBars readonly dispid 57;
    property SynonymInfo[const Word: WideString; var LanguageID: OleVariant]: SynonymInfo readonly dispid 59;
    property VBE: VBE readonly dispid 61;
    property ListGalleries: ListGalleries readonly dispid 65;
    property ActivePrinter: WideString dispid 66;
    property Templates: Templates readonly dispid 67;
    property CustomizationContext: IDispatch dispid 68;
    property KeyBindings: KeyBindings readonly dispid 69;
    property KeysBoundTo[KeyCategory: WdKeyCategory; const Command: WideString; 
                         var CommandParameter: OleVariant]: KeysBoundTo readonly dispid 70;
    property FindKey[KeyCode: Integer; var KeyCode2: OleVariant]: KeyBinding readonly dispid 71;
    property Options: Options readonly dispid 93;
    property CustomDictionaries: Dictionaries readonly dispid 95;
    property StatusBar: WideString writeonly dispid 97;
    property ShowVisualBasicEditor: WordBool dispid 104;
    property IsObjectValid[const Object_: IDispatch]: WordBool readonly dispid 109;
    property HangulHanjaDictionaries: HangulHanjaConversionDictionaries readonly dispid 110;
    function Repeat_(var Times: OleVariant): WordBool; dispid 305;
    procedure DDEExecute(Channel: Integer; const Command: WideString); dispid 310;
    function DDEInitiate(const App: WideString; const Topic: WideString): Integer; dispid 311;
    procedure DDEPoke(Channel: Integer; const Item: WideString; const Data: WideString); dispid 312;
    function DDERequest(Channel: Integer; const Item: WideString): WideString; dispid 313;
    procedure DDETerminate(Channel: Integer); dispid 314;
    procedure DDETerminateAll; dispid 315;
    function BuildKeyCode(Arg1: WdKey; var Arg2: OleVariant; var Arg3: OleVariant; 
                          var Arg4: OleVariant): Integer; dispid 316;
    function KeyString(KeyCode: Integer; var KeyCode2: OleVariant): WideString; dispid 317;
    function CheckSpelling(const Word: WideString; var CustomDictionary: OleVariant; 
                           var IgnoreUppercase: OleVariant; var MainDictionary: OleVariant; 
                           var CustomDictionary2: OleVariant; var CustomDictionary3: OleVariant; 
                           var CustomDictionary4: OleVariant; var CustomDictionary5: OleVariant; 
                           var CustomDictionary6: OleVariant; var CustomDictionary7: OleVariant; 
                           var CustomDictionary8: OleVariant; var CustomDictionary9: OleVariant; 
                           var CustomDictionary10: OleVariant): WordBool; dispid 324;
    function GetSpellingSuggestions(const Word: WideString; var CustomDictionary: OleVariant; 
                                    var IgnoreUppercase: OleVariant; 
                                    var MainDictionary: OleVariant; var SuggestionMode: OleVariant; 
                                    var CustomDictionary2: OleVariant; 
                                    var CustomDictionary3: OleVariant; 
                                    var CustomDictionary4: OleVariant; 
                                    var CustomDictionary5: OleVariant; 
                                    var CustomDictionary6: OleVariant; 
                                    var CustomDictionary7: OleVariant; 
                                    var CustomDictionary8: OleVariant; 
                                    var CustomDictionary9: OleVariant; 
                                    var CustomDictionary10: OleVariant): SpellingSuggestions; dispid 327;
    procedure Help(var HelpType: OleVariant); dispid 329;
    function NewWindow: Window; dispid 345;
    function CleanString(const String_: WideString): WideString; dispid 354;
    procedure ChangeFileOpenDirectory(const Path: WideString); dispid 355;
    function InchesToPoints(Inches: Single): Single; dispid 370;
    function CentimetersToPoints(Centimeters: Single): Single; dispid 371;
    function MillimetersToPoints(Millimeters: Single): Single; dispid 372;
    function PicasToPoints(Picas: Single): Single; dispid 373;
    function LinesToPoints(Lines: Single): Single; dispid 374;
    function PointsToInches(Points: Single): Single; dispid 380;
    function PointsToCentimeters(Points: Single): Single; dispid 381;
    function PointsToMillimeters(Points: Single): Single; dispid 382;
    function PointsToPicas(Points: Single): Single; dispid 383;
    function PointsToLines(Points: Single): Single; dispid 384;
    function PointsToPixels(Points: Single; var fVertical: OleVariant): Single; dispid 385;
    function PixelsToPoints(Pixels: Single; var fVertical: OleVariant): Single; dispid 386;
    property LanguageSettings: LanguageSettings readonly dispid 111;
    property AnswerWizard: AnswerWizard readonly dispid 112;
    property AutoCorrectEmail: AutoCorrect readonly dispid 113;
    property ProtectedViewWindows: ProtectedViewWindows readonly dispid 114;
    property ActiveProtectedViewWindow: ProtectedViewWindow readonly dispid 115;
    property IsSandboxed: WordBool readonly dispid 116;
  end;

// *********************************************************************//
// Interface: FontNames
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096F-0000-0000-C000-000000000046}
// *********************************************************************//
  FontNames = interface(IDispatch)
    ['{0002096F-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): WideString; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  FontNamesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096F-0000-0000-C000-000000000046}
// *********************************************************************//
  FontNamesDisp = dispinterface
    ['{0002096F-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: Languages
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096E-0000-0000-C000-000000000046}
// *********************************************************************//
  Languages = interface(IDispatch)
    ['{0002096E-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): Language; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  LanguagesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096E-0000-0000-C000-000000000046}
// *********************************************************************//
  LanguagesDisp = dispinterface
    ['{0002096E-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): Language; dispid 0;
  end;

// *********************************************************************//
// Interface: Language
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096D-0000-0000-C000-000000000046}
// *********************************************************************//
  Language = interface(IDispatch)
    ['{0002096D-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ID: WdLanguageID; safecall;
    function Get_NameLocal: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_ActiveGrammarDictionary: Dictionary; safecall;
    function Get_ActiveHyphenationDictionary: Dictionary; safecall;
    function Get_ActiveSpellingDictionary: Dictionary; safecall;
    function Get_ActiveThesaurusDictionary: Dictionary; safecall;
    function Get_DefaultWritingStyle: WideString; safecall;
    procedure Set_DefaultWritingStyle(const prop: WideString); safecall;
    function Get_WritingStyleList: OleVariant; safecall;
    function Get_SpellingDictionaryType: WdDictionaryType; safecall;
    procedure Set_SpellingDictionaryType(prop: WdDictionaryType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ID: WdLanguageID read Get_ID;
    property NameLocal: WideString read Get_NameLocal;
    property Name: WideString read Get_Name;
    property ActiveGrammarDictionary: Dictionary read Get_ActiveGrammarDictionary;
    property ActiveHyphenationDictionary: Dictionary read Get_ActiveHyphenationDictionary;
    property ActiveSpellingDictionary: Dictionary read Get_ActiveSpellingDictionary;
    property ActiveThesaurusDictionary: Dictionary read Get_ActiveThesaurusDictionary;
    property DefaultWritingStyle: WideString read Get_DefaultWritingStyle write Set_DefaultWritingStyle;
    property WritingStyleList: OleVariant read Get_WritingStyleList;
    property SpellingDictionaryType: WdDictionaryType read Get_SpellingDictionaryType write Set_SpellingDictionaryType;
  end;

// *********************************************************************//
// DispIntf:  LanguageDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096D-0000-0000-C000-000000000046}
// *********************************************************************//
  LanguageDisp = dispinterface
    ['{0002096D-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ID: WdLanguageID readonly dispid 10;
    property NameLocal: WideString readonly dispid 0;
    property Name: WideString readonly dispid 12;
    property ActiveGrammarDictionary: Dictionary readonly dispid 13;
    property ActiveHyphenationDictionary: Dictionary readonly dispid 14;
    property ActiveSpellingDictionary: Dictionary readonly dispid 15;
    property ActiveThesaurusDictionary: Dictionary readonly dispid 16;
    property DefaultWritingStyle: WideString dispid 17;
    property WritingStyleList: OleVariant readonly dispid 18;
    property SpellingDictionaryType: WdDictionaryType dispid 19;
  end;

// *********************************************************************//
// Interface: Documents
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096C-0000-0000-C000-000000000046}
// *********************************************************************//
  Documents = interface(IDispatch)
    ['{0002096C-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): WordDocument; safecall;
    procedure Close(var SaveChanges: OleVariant; var OriginalFormat: OleVariant; 
                    var RouteDocument: OleVariant); safecall;
    function AddOld(var Template: OleVariant; var NewTemplate: OleVariant): WordDocument; safecall;
    function OpenOld(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                     var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                     var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                     var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                     var WritePasswordTemplate: OleVariant; var Format: OleVariant): WordDocument; safecall;
    procedure Save(var NoPrompt: OleVariant; var OriginalFormat: OleVariant); safecall;
    function Add(var Template: OleVariant; var NewTemplate: OleVariant; 
                 var DocumentType: OleVariant; var Visible: OleVariant): WordDocument; safecall;
    function Open2000(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                      var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                      var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                      var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                      var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                      var Encoding: OleVariant; var Visible: OleVariant): WordDocument; safecall;
    procedure CheckOut(const FileName: WideString); safecall;
    function CanCheckOut(const FileName: WideString): WordBool; safecall;
    function Open2002(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                      var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                      var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                      var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                      var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                      var Encoding: OleVariant; var Visible: OleVariant; 
                      var OpenAndRepair: OleVariant; var DocumentDirection: OleVariant; 
                      var NoEncodingDialog: OleVariant): WordDocument; safecall;
    function Open(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                  var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                  var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                  var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                  var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                  var Encoding: OleVariant; var Visible: OleVariant; var OpenAndRepair: OleVariant; 
                  var DocumentDirection: OleVariant; var NoEncodingDialog: OleVariant; 
                  var XMLTransform: OleVariant): WordDocument; safecall;
    function OpenNoRepairDialog(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                                var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                                var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                                var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                                var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                                var Encoding: OleVariant; var Visible: OleVariant; 
                                var OpenAndRepair: OleVariant; var DocumentDirection: OleVariant; 
                                var NoEncodingDialog: OleVariant; var XMLTransform: OleVariant): WordDocument; safecall;
    function AddBlogDocument(const ProviderID: WideString; const PostURL: WideString; 
                             const BlogName: WideString; const PostID: WideString): WordDocument; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  DocumentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096C-0000-0000-C000-000000000046}
// *********************************************************************//
  DocumentsDisp = dispinterface
    ['{0002096C-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): WordDocument; dispid 0;
    procedure Close(var SaveChanges: OleVariant; var OriginalFormat: OleVariant; 
                    var RouteDocument: OleVariant); dispid 1105;
    function AddOld(var Template: OleVariant; var NewTemplate: OleVariant): WordDocument; dispid 11;
    function OpenOld(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                     var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                     var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                     var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                     var WritePasswordTemplate: OleVariant; var Format: OleVariant): WordDocument; dispid 12;
    procedure Save(var NoPrompt: OleVariant; var OriginalFormat: OleVariant); dispid 13;
    function Add(var Template: OleVariant; var NewTemplate: OleVariant; 
                 var DocumentType: OleVariant; var Visible: OleVariant): WordDocument; dispid 14;
    function Open2000(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                      var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                      var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                      var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                      var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                      var Encoding: OleVariant; var Visible: OleVariant): WordDocument; dispid 15;
    procedure CheckOut(const FileName: WideString); dispid 16;
    function CanCheckOut(const FileName: WideString): WordBool; dispid 17;
    function Open2002(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                      var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                      var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                      var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                      var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                      var Encoding: OleVariant; var Visible: OleVariant; 
                      var OpenAndRepair: OleVariant; var DocumentDirection: OleVariant; 
                      var NoEncodingDialog: OleVariant): WordDocument; dispid 18;
    function Open(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                  var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                  var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                  var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                  var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                  var Encoding: OleVariant; var Visible: OleVariant; var OpenAndRepair: OleVariant; 
                  var DocumentDirection: OleVariant; var NoEncodingDialog: OleVariant; 
                  var XMLTransform: OleVariant): WordDocument; dispid 19;
    function OpenNoRepairDialog(var FileName: OleVariant; var ConfirmConversions: OleVariant; 
                                var ReadOnly: OleVariant; var AddToRecentFiles: OleVariant; 
                                var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                                var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                                var WritePasswordTemplate: OleVariant; var Format: OleVariant; 
                                var Encoding: OleVariant; var Visible: OleVariant; 
                                var OpenAndRepair: OleVariant; var DocumentDirection: OleVariant; 
                                var NoEncodingDialog: OleVariant; var XMLTransform: OleVariant): WordDocument; dispid 20;
    function AddBlogDocument(const ProviderID: WideString; const PostURL: WideString; 
                             const BlogName: WideString; const PostID: WideString): WordDocument; dispid 21;
  end;

// *********************************************************************//
// Interface: _Document
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0002096B-0000-0000-C000-000000000046}
// *********************************************************************//
  _Document = interface(IDispatch)
    ['{0002096B-0000-0000-C000-000000000046}']
    function Get_Name: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_BuiltInDocumentProperties: IDispatch; safecall;
    function Get_CustomDocumentProperties: IDispatch; safecall;
    function Get_Path: WideString; safecall;
    function Get_Bookmarks: Bookmarks; safecall;
    function Get_Tables: Tables; safecall;
    function Get_Footnotes: Footnotes; safecall;
    function Get_Endnotes: Endnotes; safecall;
    function Get_Comments: Comments; safecall;
    function Get_type_: WdDocumentType; safecall;
    function Get_AutoHyphenation: WordBool; safecall;
    procedure Set_AutoHyphenation(prop: WordBool); safecall;
    function Get_HyphenateCaps: WordBool; safecall;
    procedure Set_HyphenateCaps(prop: WordBool); safecall;
    function Get_HyphenationZone: Integer; safecall;
    procedure Set_HyphenationZone(prop: Integer); safecall;
    function Get_ConsecutiveHyphensLimit: Integer; safecall;
    procedure Set_ConsecutiveHyphensLimit(prop: Integer); safecall;
    function Get_Sections: Sections; safecall;
    function Get_Paragraphs: Paragraphs; safecall;
    function Get_Words: Words; safecall;
    function Get_Sentences: Sentences; safecall;
    function Get_Characters: Characters; safecall;
    function Get_Fields: Fields; safecall;
    function Get_FormFields: FormFields; safecall;
    function Get_Styles: Styles; safecall;
    function Get_Frames: Frames; safecall;
    function Get_TablesOfFigures: TablesOfFigures; safecall;
    function Get_Variables: Variables; safecall;
    function Get_MailMerge: MailMerge; safecall;
    function Get_Envelope: Envelope; safecall;
    function Get_FullName: WideString; safecall;
    function Get_Revisions: Revisions; safecall;
    function Get_TablesOfContents: TablesOfContents; safecall;
    function Get_TablesOfAuthorities: TablesOfAuthorities; safecall;
    function Get_PageSetup: PageSetup; safecall;
    procedure Set_PageSetup(const prop: PageSetup); safecall;
    function Get_Windows: Windows; safecall;
    function Get_HasRoutingSlip: WordBool; safecall;
    procedure Set_HasRoutingSlip(prop: WordBool); safecall;
    function Get_RoutingSlip: RoutingSlip; safecall;
    function Get_Routed: WordBool; safecall;
    function Get_TablesOfAuthoritiesCategories: TablesOfAuthoritiesCategories; safecall;
    function Get_Indexes: Indexes; safecall;
    function Get_Saved: WordBool; safecall;
    procedure Set_Saved(prop: WordBool); safecall;
    function Get_Content: WordRange; safecall;
    function Get_ActiveWindow: Window; safecall;
    function Get_Kind: WdDocumentKind; safecall;
    procedure Set_Kind(prop: WdDocumentKind); safecall;
    function Get_ReadOnly: WordBool; safecall;
    function Get_Subdocuments: Subdocuments; safecall;
    function Get_IsMasterDocument: WordBool; safecall;
    function Get_DefaultTabStop: Single; safecall;
    procedure Set_DefaultTabStop(prop: Single); safecall;
    function Get_EmbedTrueTypeFonts: WordBool; safecall;
    procedure Set_EmbedTrueTypeFonts(prop: WordBool); safecall;
    function Get_SaveFormsData: WordBool; safecall;
    procedure Set_SaveFormsData(prop: WordBool); safecall;
    function Get_ReadOnlyRecommended: WordBool; safecall;
    procedure Set_ReadOnlyRecommended(prop: WordBool); safecall;
    function Get_SaveSubsetFonts: WordBool; safecall;
    procedure Set_SaveSubsetFonts(prop: WordBool); safecall;
    function Get_Compatibility(Type_: WdCompatibility): WordBool; safecall;
    procedure Set_Compatibility(Type_: WdCompatibility; prop: WordBool); safecall;
    function Get_StoryRanges: StoryRanges; safecall;
    function Get_CommandBars: CommandBars; safecall;
    function Get_IsSubdocument: WordBool; safecall;
    function Get_SaveFormat: Integer; safecall;
    function Get_ProtectionType: WdProtectionType; safecall;
    function Get_Hyperlinks: Hyperlinks; safecall;
    function Get_Shapes: Shapes; safecall;
    function Get_ListTemplates: ListTemplates; safecall;
    function Get_Lists: Lists; safecall;
    function Get_UpdateStylesOnOpen: WordBool; safecall;
    procedure Set_UpdateStylesOnOpen(prop: WordBool); safecall;
    function Get_AttachedTemplate: OleVariant; safecall;
    procedure Set_AttachedTemplate(var prop: OleVariant); safecall;
    function Get_InlineShapes: InlineShapes; safecall;
    function Get_Background: Shape; safecall;
    procedure Set_Background(const prop: Shape); safecall;
    function Get_GrammarChecked: WordBool; safecall;
    procedure Set_GrammarChecked(prop: WordBool); safecall;
    function Get_SpellingChecked: WordBool; safecall;
    procedure Set_SpellingChecked(prop: WordBool); safecall;
    function Get_ShowGrammaticalErrors: WordBool; safecall;
    procedure Set_ShowGrammaticalErrors(prop: WordBool); safecall;
    function Get_ShowSpellingErrors: WordBool; safecall;
    procedure Set_ShowSpellingErrors(prop: WordBool); safecall;
    function Get_Versions: Versions; safecall;
    function Get_ShowSummary: WordBool; safecall;
    procedure Set_ShowSummary(prop: WordBool); safecall;
    function Get_SummaryViewMode: WdSummaryMode; safecall;
    procedure Set_SummaryViewMode(prop: WdSummaryMode); safecall;
    function Get_SummaryLength: Integer; safecall;
    procedure Set_SummaryLength(prop: Integer); safecall;
    function Get_PrintFractionalWidths: WordBool; safecall;
    procedure Set_PrintFractionalWidths(prop: WordBool); safecall;
    function Get_PrintPostScriptOverText: WordBool; safecall;
    procedure Set_PrintPostScriptOverText(prop: WordBool); safecall;
    function Get_Container: IDispatch; safecall;
    function Get_PrintFormsData: WordBool; safecall;
    procedure Set_PrintFormsData(prop: WordBool); safecall;
    function Get_ListParagraphs: ListParagraphs; safecall;
    procedure Set_Password(const Param1: WideString); safecall;
    procedure Set_WritePassword(const Param1: WideString); safecall;
    function Get_HasPassword: WordBool; safecall;
    function Get_WriteReserved: WordBool; safecall;
    function Get_ActiveWritingStyle(var LanguageID: OleVariant): WideString; safecall;
    procedure Set_ActiveWritingStyle(var LanguageID: OleVariant; const prop: WideString); safecall;
    function Get_UserControl: WordBool; safecall;
    procedure Set_UserControl(prop: WordBool); safecall;
    function Get_HasMailer: WordBool; safecall;
    procedure Set_HasMailer(prop: WordBool); safecall;
    function Get_Mailer: Mailer; safecall;
    function Get_ReadabilityStatistics: ReadabilityStatistics; safecall;
    function Get_GrammaticalErrors: ProofreadingErrors; safecall;
    function Get_SpellingErrors: ProofreadingErrors; safecall;
    function Get_VBProject: VBProject; safecall;
    function Get_FormsDesign: WordBool; safecall;
    function Get__CodeName: WideString; safecall;
    procedure Set__CodeName(const prop: WideString); safecall;
    function Get_CodeName: WideString; safecall;
    function Get_SnapToGrid: WordBool; safecall;
    procedure Set_SnapToGrid(prop: WordBool); safecall;
    function Get_SnapToShapes: WordBool; safecall;
    procedure Set_SnapToShapes(prop: WordBool); safecall;
    function Get_GridDistanceHorizontal: Single; safecall;
    procedure Set_GridDistanceHorizontal(prop: Single); safecall;
    function Get_GridDistanceVertical: Single; safecall;
    procedure Set_GridDistanceVertical(prop: Single); safecall;
    function Get_GridOriginHorizontal: Single; safecall;
    procedure Set_GridOriginHorizontal(prop: Single); safecall;
    function Get_GridOriginVertical: Single; safecall;
    procedure Set_GridOriginVertical(prop: Single); safecall;
    function Get_GridSpaceBetweenHorizontalLines: Integer; safecall;
    procedure Set_GridSpaceBetweenHorizontalLines(prop: Integer); safecall;
    function Get_GridSpaceBetweenVerticalLines: Integer; safecall;
    procedure Set_GridSpaceBetweenVerticalLines(prop: Integer); safecall;
    function Get_GridOriginFromMargin: WordBool; safecall;
    procedure Set_GridOriginFromMargin(prop: WordBool); safecall;
    function Get_KerningByAlgorithm: WordBool; safecall;
    procedure Set_KerningByAlgorithm(prop: WordBool); safecall;
    function Get_JustificationMode: WdJustificationMode; safecall;
    procedure Set_JustificationMode(prop: WdJustificationMode); safecall;
    function Get_FarEastLineBreakLevel: WdFarEastLineBreakLevel; safecall;
    procedure Set_FarEastLineBreakLevel(prop: WdFarEastLineBreakLevel); safecall;
    function Get_NoLineBreakBefore: WideString; safecall;
    procedure Set_NoLineBreakBefore(const prop: WideString); safecall;
    function Get_NoLineBreakAfter: WideString; safecall;
    procedure Set_NoLineBreakAfter(const prop: WideString); safecall;
    function Get_TrackRevisions: WordBool; safecall;
    procedure Set_TrackRevisions(prop: WordBool); safecall;
    function Get_PrintRevisions: WordBool; safecall;
    procedure Set_PrintRevisions(prop: WordBool); safecall;
    function Get_ShowRevisions: WordBool; safecall;
    procedure Set_ShowRevisions(prop: WordBool); safecall;
    procedure Close(var SaveChanges: OleVariant; var OriginalFormat: OleVariant; 
                    var RouteDocument: OleVariant); safecall;
    procedure SaveAs2000(var FileName: OleVariant; var FileFormat: OleVariant; 
                         var LockComments: OleVariant; var Password: OleVariant; 
                         var AddToRecentFiles: OleVariant; var WritePassword: OleVariant; 
                         var ReadOnlyRecommended: OleVariant; var EmbedTrueTypeFonts: OleVariant; 
                         var SaveNativePictureFormat: OleVariant; var SaveFormsData: OleVariant; 
                         var SaveAsAOCELetter: OleVariant); safecall;
    procedure Repaginate; safecall;
    procedure FitToPages; safecall;
    procedure ManualHyphenation; safecall;
    procedure Select; safecall;
    procedure DataForm; safecall;
    procedure Route; safecall;
    procedure Save; safecall;
    procedure PrintOutOld(var Background: OleVariant; var Append: OleVariant; 
                          var Range: OleVariant; var OutputFileName: OleVariant; 
                          var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                          var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                          var PrintToFile: OleVariant; var Collate: OleVariant; 
                          var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant); safecall;
    procedure SendMail; safecall;
    function Range(var Start: OleVariant; var End_: OleVariant): WordRange; safecall;
    procedure RunAutoMacro(Which: WdAutoMacros); safecall;
    procedure Activate; safecall;
    procedure PrintPreview; safecall;
    function GoTo_(var What: OleVariant; var Which: OleVariant; var Count: OleVariant; 
                   var Name: OleVariant): WordRange; safecall;
    function Undo(var Times: OleVariant): WordBool; safecall;
    function Redo(var Times: OleVariant): WordBool; safecall;
    function ComputeStatistics(Statistic: WdStatistic; var IncludeFootnotesAndEndnotes: OleVariant): Integer; safecall;
    procedure MakeCompatibilityDefault; safecall;
    procedure Protect2002(Type_: WdProtectionType; var NoReset: OleVariant; var Password: OleVariant); safecall;
    procedure Unprotect(var Password: OleVariant); safecall;
    procedure EditionOptions(Type_: WdEditionType; Option: WdEditionOption; const Name: WideString; 
                             var Format: OleVariant); safecall;
    procedure RunLetterWizard(var LetterContent: OleVariant; var WizardMode: OleVariant); safecall;
    function GetLetterContent: WordLetterContent; safecall;
    procedure SetLetterContent(var LetterContent: OleVariant); safecall;
    procedure CopyStylesFromTemplate(const Template: WideString); safecall;
    procedure UpdateStyles; safecall;
    procedure CheckGrammar; safecall;
    procedure CheckSpelling(var CustomDictionary: OleVariant; var IgnoreUppercase: OleVariant; 
                            var AlwaysSuggest: OleVariant; var CustomDictionary2: OleVariant; 
                            var CustomDictionary3: OleVariant; var CustomDictionary4: OleVariant; 
                            var CustomDictionary5: OleVariant; var CustomDictionary6: OleVariant; 
                            var CustomDictionary7: OleVariant; var CustomDictionary8: OleVariant; 
                            var CustomDictionary9: OleVariant; var CustomDictionary10: OleVariant); safecall;
    procedure FollowHyperlink(var Address: OleVariant; var SubAddress: OleVariant; 
                              var NewWindow: OleVariant; var AddHistory: OleVariant; 
                              var ExtraInfo: OleVariant; var Method: OleVariant; 
                              var HeaderInfo: OleVariant); safecall;
    procedure AddToFavorites; safecall;
    procedure Reload; safecall;
    function AutoSummarize(var Length: OleVariant; var Mode: OleVariant; 
                           var UpdateProperties: OleVariant): WordRange; safecall;
    procedure RemoveNumbers(var NumberType: OleVariant); safecall;
    procedure ConvertNumbersToText(var NumberType: OleVariant); safecall;
    function CountNumberedItems(var NumberType: OleVariant; var Level: OleVariant): Integer; safecall;
    procedure Post; safecall;
    procedure ToggleFormsDesign; safecall;
    procedure Compare2000(const Name: WideString); safecall;
    procedure UpdateSummaryProperties; safecall;
    function GetCrossReferenceItems(var ReferenceType: OleVariant): OleVariant; safecall;
    procedure AutoFormat; safecall;
    procedure ViewCode; safecall;
    procedure ViewPropertyBrowser; safecall;
    procedure ForwardMailer; safecall;
    procedure Reply; safecall;
    procedure ReplyAll; safecall;
    procedure SendMailer(var FileFormat: OleVariant; var Priority: OleVariant); safecall;
    procedure UndoClear; safecall;
    procedure PresentIt; safecall;
    procedure SendFax(const Address: WideString; var Subject: OleVariant); safecall;
    procedure Merge2000(const FileName: WideString); safecall;
    procedure ClosePrintPreview; safecall;
    procedure CheckConsistency; safecall;
    function CreateLetterContent(const DateFormat: WideString; IncludeHeaderFooter: WordBool; 
                                 const PageDesign: WideString; LetterStyle: WdLetterStyle; 
                                 Letterhead: WordBool; LetterheadLocation: WdLetterheadLocation; 
                                 LetterheadSize: Single; const RecipientName: WideString; 
                                 const RecipientAddress: WideString; const Salutation: WideString; 
                                 SalutationType: WdSalutationType; 
                                 const RecipientReference: WideString; 
                                 const MailingInstructions: WideString; 
                                 const AttentionLine: WideString; const Subject: WideString; 
                                 const CCList: WideString; const ReturnAddress: WideString; 
                                 const SenderName: WideString; const Closing: WideString; 
                                 const SenderCompany: WideString; const SenderJobTitle: WideString; 
                                 const SenderInitials: WideString; EnclosureNumber: Integer; 
                                 var InfoBlock: OleVariant; var RecipientCode: OleVariant; 
                                 var RecipientGender: OleVariant; 
                                 var ReturnAddressShortForm: OleVariant; 
                                 var SenderCity: OleVariant; var SenderCode: OleVariant; 
                                 var SenderGender: OleVariant; var SenderReference: OleVariant): WordLetterContent; safecall;
    procedure AcceptAllRevisions; safecall;
    procedure RejectAllRevisions; safecall;
    procedure DetectLanguage; safecall;
    procedure ApplyTheme(const Name: WideString); safecall;
    procedure RemoveTheme; safecall;
    procedure WebPagePreview; safecall;
    procedure ReloadAs(Encoding: MsoEncoding); safecall;
    function Get_ActiveTheme: WideString; safecall;
    function Get_ActiveThemeDisplayName: WideString; safecall;
    function Get_Email: Email; safecall;
    function Get_Scripts: Scripts; safecall;
    function Get_LanguageDetected: WordBool; safecall;
    procedure Set_LanguageDetected(prop: WordBool); safecall;
    function Get_FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID; safecall;
    procedure Set_FarEastLineBreakLanguage(prop: WdFarEastLineBreakLanguageID); safecall;
    function Get_Frameset: Frameset; safecall;
    function Get_ClickAndTypeParagraphStyle: OleVariant; safecall;
    procedure Set_ClickAndTypeParagraphStyle(var prop: OleVariant); safecall;
    function Get_HTMLProject: HTMLProject; safecall;
    function Get_WebOptions: WebOptions; safecall;
    function Get_OpenEncoding: MsoEncoding; safecall;
    function Get_SaveEncoding: MsoEncoding; safecall;
    procedure Set_SaveEncoding(prop: MsoEncoding); safecall;
    function Get_OptimizeForWord97: WordBool; safecall;
    procedure Set_OptimizeForWord97(prop: WordBool); safecall;
    function Get_VBASigned: WordBool; safecall;
    procedure PrintOut2000(var Background: OleVariant; var Append: OleVariant; 
                           var Range: OleVariant; var OutputFileName: OleVariant; 
                           var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                           var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                           var PrintToFile: OleVariant; var Collate: OleVariant; 
                           var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant; 
                           var PrintZoomColumn: OleVariant; var PrintZoomRow: OleVariant; 
                           var PrintZoomPaperWidth: OleVariant; var PrintZoomPaperHeight: OleVariant); safecall;
    procedure sblt(const s: WideString); safecall;
    procedure ConvertVietDoc(CodePageOrigin: Integer); safecall;
    procedure PrintOut(var Background: OleVariant; var Append: OleVariant; var Range: OleVariant; 
                       var OutputFileName: OleVariant; var From: OleVariant; var To_: OleVariant; 
                       var Item: OleVariant; var Copies: OleVariant; var Pages: OleVariant; 
                       var PageType: OleVariant; var PrintToFile: OleVariant; 
                       var Collate: OleVariant; var ActivePrinterMacGX: OleVariant; 
                       var ManualDuplexPrint: OleVariant; var PrintZoomColumn: OleVariant; 
                       var PrintZoomRow: OleVariant; var PrintZoomPaperWidth: OleVariant; 
                       var PrintZoomPaperHeight: OleVariant); safecall;
    function Get_MailEnvelope: MsoEnvelope; safecall;
    function Get_DisableFeatures: WordBool; safecall;
    procedure Set_DisableFeatures(prop: WordBool); safecall;
    function Get_DoNotEmbedSystemFonts: WordBool; safecall;
    procedure Set_DoNotEmbedSystemFonts(prop: WordBool); safecall;
    function Get_Signatures: SignatureSet; safecall;
    function Get_DefaultTargetFrame: WideString; safecall;
    procedure Set_DefaultTargetFrame(const prop: WideString); safecall;
    function Get_HTMLDivisions: HTMLDivisions; safecall;
    function Get_DisableFeaturesIntroducedAfter: WdDisableFeaturesIntroducedAfter; safecall;
    procedure Set_DisableFeaturesIntroducedAfter(prop: WdDisableFeaturesIntroducedAfter); safecall;
    function Get_RemovePersonalInformation: WordBool; safecall;
    procedure Set_RemovePersonalInformation(prop: WordBool); safecall;
    function Get_SmartTags: SmartTags; safecall;
    procedure Compare2002(const Name: WideString; var AuthorName: OleVariant; 
                          var CompareTarget: OleVariant; var DetectFormatChanges: OleVariant; 
                          var IgnoreAllComparisonWarnings: OleVariant; 
                          var AddToRecentFiles: OleVariant); safecall;
    procedure CheckIn(SaveChanges: WordBool; var Comments: OleVariant; MakePublic: WordBool); safecall;
    function CanCheckin: WordBool; safecall;
    procedure Merge(const FileName: WideString; var MergeTarget: OleVariant; 
                    var DetectFormatChanges: OleVariant; var UseFormattingFrom: OleVariant; 
                    var AddToRecentFiles: OleVariant); safecall;
    function Get_EmbedSmartTags: WordBool; safecall;
    procedure Set_EmbedSmartTags(prop: WordBool); safecall;
    function Get_SmartTagsAsXMLProps: WordBool; safecall;
    procedure Set_SmartTagsAsXMLProps(prop: WordBool); safecall;
    function Get_TextEncoding: MsoEncoding; safecall;
    procedure Set_TextEncoding(prop: MsoEncoding); safecall;
    function Get_TextLineEnding: WdLineEndingType; safecall;
    procedure Set_TextLineEnding(prop: WdLineEndingType); safecall;
    procedure SendForReview(var Recipients: OleVariant; var Subject: OleVariant; 
                            var ShowMessage: OleVariant; var IncludeAttachment: OleVariant); safecall;
    procedure ReplyWithChanges(var ShowMessage: OleVariant); safecall;
    procedure EndReview; safecall;
    function Get_StyleSheets: StyleSheets; safecall;
    function Get_DefaultTableStyle: OleVariant; safecall;
    function Get_PasswordEncryptionProvider: WideString; safecall;
    function Get_PasswordEncryptionAlgorithm: WideString; safecall;
    function Get_PasswordEncryptionKeyLength: Integer; safecall;
    function Get_PasswordEncryptionFileProperties: WordBool; safecall;
    procedure SetPasswordEncryptionOptions(const PasswordEncryptionProvider: WideString; 
                                           const PasswordEncryptionAlgorithm: WideString; 
                                           PasswordEncryptionKeyLength: Integer; 
                                           var PasswordEncryptionFileProperties: OleVariant); safecall;
    procedure RecheckSmartTags; safecall;
    procedure RemoveSmartTags; safecall;
    procedure SetDefaultTableStyle(var Style: OleVariant; SetInTemplate: WordBool); safecall;
    procedure DeleteAllComments; safecall;
    procedure AcceptAllRevisionsShown; safecall;
    procedure RejectAllRevisionsShown; safecall;
    procedure DeleteAllCommentsShown; safecall;
    procedure ResetFormFields; safecall;
    procedure SaveAs(var FileName: OleVariant; var FileFormat: OleVariant; 
                     var LockComments: OleVariant; var Password: OleVariant; 
                     var AddToRecentFiles: OleVariant; var WritePassword: OleVariant; 
                     var ReadOnlyRecommended: OleVariant; var EmbedTrueTypeFonts: OleVariant; 
                     var SaveNativePictureFormat: OleVariant; var SaveFormsData: OleVariant; 
                     var SaveAsAOCELetter: OleVariant; var Encoding: OleVariant; 
                     var InsertLineBreaks: OleVariant; var AllowSubstitutions: OleVariant; 
                     var LineEnding: OleVariant; var AddBiDiMarks: OleVariant); safecall;
    function Get_EmbedLinguisticData: WordBool; safecall;
    procedure Set_EmbedLinguisticData(prop: WordBool); safecall;
    function Get_FormattingShowFont: WordBool; safecall;
    procedure Set_FormattingShowFont(prop: WordBool); safecall;
    function Get_FormattingShowClear: WordBool; safecall;
    procedure Set_FormattingShowClear(prop: WordBool); safecall;
    function Get_FormattingShowParagraph: WordBool; safecall;
    procedure Set_FormattingShowParagraph(prop: WordBool); safecall;
    function Get_FormattingShowNumbering: WordBool; safecall;
    procedure Set_FormattingShowNumbering(prop: WordBool); safecall;
    function Get_FormattingShowFilter: WdShowFilter; safecall;
    procedure Set_FormattingShowFilter(prop: WdShowFilter); safecall;
    procedure CheckNewSmartTags; safecall;
    function Get_Permission: Permission; safecall;
    function Get_XMLNodes: XMLNodes; safecall;
    function Get_XMLSchemaReferences: XMLSchemaReferences; safecall;
    function Get_SmartDocument: SmartDocument; safecall;
    function Get_SharedWorkspace: SharedWorkspace; safecall;
    function Get_Sync: Sync; safecall;
    function Get_EnforceStyle: WordBool; safecall;
    procedure Set_EnforceStyle(prop: WordBool); safecall;
    function Get_AutoFormatOverride: WordBool; safecall;
    procedure Set_AutoFormatOverride(prop: WordBool); safecall;
    function Get_XMLSaveDataOnly: WordBool; safecall;
    procedure Set_XMLSaveDataOnly(prop: WordBool); safecall;
    function Get_XMLHideNamespaces: WordBool; safecall;
    procedure Set_XMLHideNamespaces(prop: WordBool); safecall;
    function Get_XMLShowAdvancedErrors: WordBool; safecall;
    procedure Set_XMLShowAdvancedErrors(prop: WordBool); safecall;
    function Get_XMLUseXSLTWhenSaving: WordBool; safecall;
    procedure Set_XMLUseXSLTWhenSaving(prop: WordBool); safecall;
    function Get_XMLSaveThroughXSLT: WideString; safecall;
    procedure Set_XMLSaveThroughXSLT(const prop: WideString); safecall;
    function Get_DocumentLibraryVersions: DocumentLibraryVersions; safecall;
    function Get_ReadingModeLayoutFrozen: WordBool; safecall;
    procedure Set_ReadingModeLayoutFrozen(prop: WordBool); safecall;
    function Get_RemoveDateAndTime: WordBool; safecall;
    procedure Set_RemoveDateAndTime(prop: WordBool); safecall;
    procedure SendFaxOverInternet(var Recipients: OleVariant; var Subject: OleVariant; 
                                  var ShowMessage: OleVariant); safecall;
    procedure TransformDocument(const Path: WideString; DataOnly: WordBool); safecall;
    procedure Protect(Type_: WdProtectionType; var NoReset: OleVariant; var Password: OleVariant; 
                      var UseIRM: OleVariant; var EnforceStyleLock: OleVariant); safecall;
    procedure SelectAllEditableRanges(var EditorID: OleVariant); safecall;
    procedure DeleteAllEditableRanges(var EditorID: OleVariant); safecall;
    procedure DeleteAllInkAnnotations; safecall;
    procedure AddDocumentWorkspaceHeader(RichFormat: WordBool; const Url: WideString; 
                                         const Title: WideString; const Description: WideString; 
                                         const ID: WideString); safecall;
    procedure RemoveDocumentWorkspaceHeader(const ID: WideString); safecall;
    procedure Compare(const Name: WideString; var AuthorName: OleVariant; 
                      var CompareTarget: OleVariant; var DetectFormatChanges: OleVariant; 
                      var IgnoreAllComparisonWarnings: OleVariant; 
                      var AddToRecentFiles: OleVariant; var RemovePersonalInformation: OleVariant; 
                      var RemoveDateAndTime: OleVariant); safecall;
    procedure RemoveLockedStyles; safecall;
    function Get_ChildNodeSuggestions: XMLChildNodeSuggestions; safecall;
    function SelectSingleNode(const XPath: WideString; const PrefixMapping: WideString; 
                              FastSearchSkippingTextNodes: WordBool): XMLNode; safecall;
    function SelectNodes(const XPath: WideString; const PrefixMapping: WideString; 
                         FastSearchSkippingTextNodes: WordBool): XMLNodes; safecall;
    function Get_XMLSchemaViolations: XMLNodes; safecall;
    function Get_ReadingLayoutSizeX: Integer; safecall;
    procedure Set_ReadingLayoutSizeX(prop: Integer); safecall;
    function Get_ReadingLayoutSizeY: Integer; safecall;
    procedure Set_ReadingLayoutSizeY(prop: Integer); safecall;
    function Get_StyleSortMethod: WdStyleSort; safecall;
    procedure Set_StyleSortMethod(prop: WdStyleSort); safecall;
    function Get_ContentTypeProperties: MetaProperties; safecall;
    function Get_TrackMoves: WordBool; safecall;
    procedure Set_TrackMoves(prop: WordBool); safecall;
    function Get_TrackFormatting: WordBool; safecall;
    procedure Set_TrackFormatting(prop: WordBool); safecall;
    function Get_Dummy1: HResult; safecall;
    function Get_OMaths: OMaths; safecall;
    procedure RemoveDocumentInformation(RemoveDocInfoType: WdRemoveDocInfoType); safecall;
    procedure CheckInWithVersion(SaveChanges: WordBool; var Comments: OleVariant; 
                                 MakePublic: WordBool; var VersionType: OleVariant); safecall;
    procedure Dummy2; safecall;
    function Get_Dummy3: HResult; safecall;
    function Get_ServerPolicy: ServerPolicy; safecall;
    function Get_ContentControls: ContentControls; safecall;
    function Get_DocumentInspectors: DocumentInspectors; safecall;
    procedure LockServerFile; safecall;
    function GetWorkflowTasks: WorkflowTasks; safecall;
    function GetWorkflowTemplates: WorkflowTemplates; safecall;
    procedure Dummy4; safecall;
    procedure AddMeetingWorkspaceHeader(SkipIfAbsent: WordBool; const Url: WideString; 
                                        const Title: WideString; const Description: WideString; 
                                        const ID: WideString); safecall;
    function Get_Bibliography: Bibliography; safecall;
    function Get_LockTheme: WordBool; safecall;
    procedure Set_LockTheme(prop: WordBool); safecall;
    function Get_LockQuickStyleSet: WordBool; safecall;
    procedure Set_LockQuickStyleSet(prop: WordBool); safecall;
    function Get_OriginalDocumentTitle: WideString; safecall;
    function Get_RevisedDocumentTitle: WideString; safecall;
    function Get_CustomXMLParts: CustomXMLParts; safecall;
    function Get_FormattingShowNextLevel: WordBool; safecall;
    procedure Set_FormattingShowNextLevel(prop: WordBool); safecall;
    function Get_FormattingShowUserStyleName: WordBool; safecall;
    procedure Set_FormattingShowUserStyleName(prop: WordBool); safecall;
    procedure SaveAsQuickStyleSet(const FileName: WideString); safecall;
    procedure ApplyQuickStyleSet(const Name: WideString); safecall;
    function Get_Research: Research; safecall;
    function Get_Final: WordBool; safecall;
    procedure Set_Final(prop: WordBool); safecall;
    function Get_OMathBreakBin: WdOMathBreakBin; safecall;
    procedure Set_OMathBreakBin(prop: WdOMathBreakBin); safecall;
    function Get_OMathBreakSub: WdOMathBreakSub; safecall;
    procedure Set_OMathBreakSub(prop: WdOMathBreakSub); safecall;
    function Get_OMathJc: WdOMathJc; safecall;
    procedure Set_OMathJc(prop: WdOMathJc); safecall;
    function Get_OMathLeftMargin: Single; safecall;
    procedure Set_OMathLeftMargin(prop: Single); safecall;
    function Get_OMathRightMargin: Single; safecall;
    procedure Set_OMathRightMargin(prop: Single); safecall;
    function Get_OMathWrap: Single; safecall;
    procedure Set_OMathWrap(prop: Single); safecall;
    function Get_OMathIntSubSupLim: WordBool; safecall;
    procedure Set_OMathIntSubSupLim(prop: WordBool); safecall;
    function Get_OMathNarySupSubLim: WordBool; safecall;
    procedure Set_OMathNarySupSubLim(prop: WordBool); safecall;
    function Get_OMathSmallFrac: WordBool; safecall;
    procedure Set_OMathSmallFrac(prop: WordBool); safecall;
    function Get_WordOpenXML: WideString; safecall;
    function Get_DocumentTheme: OfficeTheme; safecall;
    procedure ApplyDocumentTheme(const FileName: WideString); safecall;
    function Get_HasVBProject: WordBool; safecall;
    function SelectLinkedControls(const Node: CustomXMLNode): ContentControls; safecall;
    function SelectUnlinkedControls(const Stream: CustomXMLPart): ContentControls; safecall;
    function SelectContentControlsByTitle(const Title: WideString): ContentControls; safecall;
    procedure ExportAsFixedFormat(const OutputFileName: WideString; ExportFormat: WdExportFormat; 
                                  OpenAfterExport: WordBool; OptimizeFor: WdExportOptimizeFor; 
                                  Range: WdExportRange; From: Integer; To_: Integer; 
                                  Item: WdExportItem; IncludeDocProps: WordBool; KeepIRM: WordBool; 
                                  CreateBookmarks: WdExportCreateBookmarks; 
                                  DocStructureTags: WordBool; BitmapMissingFonts: WordBool; 
                                  UseISO19005_1: WordBool; var FixedFormatExtClassPtr: OleVariant); safecall;
    procedure FreezeLayout; safecall;
    procedure UnfreezeLayout; safecall;
    function Get_OMathFontName: WideString; safecall;
    procedure Set_OMathFontName(const prop: WideString); safecall;
    procedure DowngradeDocument; safecall;
    function Get_EncryptionProvider: WideString; safecall;
    procedure Set_EncryptionProvider(const prop: WideString); safecall;
    function Get_UseMathDefaults: WordBool; safecall;
    procedure Set_UseMathDefaults(prop: WordBool); safecall;
    function Get_CurrentRsid: Integer; safecall;
    procedure Convert; safecall;
    function SelectContentControlsByTag(const Tag: WideString): ContentControls; safecall;
    procedure ConvertAutoHyphens; safecall;
    function Get_DocID: Integer; safecall;
    procedure ApplyQuickStyleSet2(var Style: OleVariant); safecall;
    function Get_CompatibilityMode: Integer; safecall;
    procedure SaveAs2(var FileName: OleVariant; var FileFormat: OleVariant; 
                      var LockComments: OleVariant; var Password: OleVariant; 
                      var AddToRecentFiles: OleVariant; var WritePassword: OleVariant; 
                      var ReadOnlyRecommended: OleVariant; var EmbedTrueTypeFonts: OleVariant; 
                      var SaveNativePictureFormat: OleVariant; var SaveFormsData: OleVariant; 
                      var SaveAsAOCELetter: OleVariant; var Encoding: OleVariant; 
                      var InsertLineBreaks: OleVariant; var AllowSubstitutions: OleVariant; 
                      var LineEnding: OleVariant; var AddBiDiMarks: OleVariant; 
                      var CompatibilityMode: OleVariant); safecall;
    function Get_CoAuthoring: CoAuthoring; safecall;
    procedure SetCompatibilityMode(Mode: Integer); safecall;
    property Name: WideString read Get_Name;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BuiltInDocumentProperties: IDispatch read Get_BuiltInDocumentProperties;
    property CustomDocumentProperties: IDispatch read Get_CustomDocumentProperties;
    property Path: WideString read Get_Path;
    property Bookmarks: Bookmarks read Get_Bookmarks;
    property Tables: Tables read Get_Tables;
    property Footnotes: Footnotes read Get_Footnotes;
    property Endnotes: Endnotes read Get_Endnotes;
    property Comments: Comments read Get_Comments;
    property type_: WdDocumentType read Get_type_;
    property AutoHyphenation: WordBool read Get_AutoHyphenation write Set_AutoHyphenation;
    property HyphenateCaps: WordBool read Get_HyphenateCaps write Set_HyphenateCaps;
    property HyphenationZone: Integer read Get_HyphenationZone write Set_HyphenationZone;
    property ConsecutiveHyphensLimit: Integer read Get_ConsecutiveHyphensLimit write Set_ConsecutiveHyphensLimit;
    property Sections: Sections read Get_Sections;
    property Paragraphs: Paragraphs read Get_Paragraphs;
    property Words: Words read Get_Words;
    property Sentences: Sentences read Get_Sentences;
    property Characters: Characters read Get_Characters;
    property Fields: Fields read Get_Fields;
    property FormFields: FormFields read Get_FormFields;
    property Styles: Styles read Get_Styles;
    property Frames: Frames read Get_Frames;
    property TablesOfFigures: TablesOfFigures read Get_TablesOfFigures;
    property Variables: Variables read Get_Variables;
    property MailMerge: MailMerge read Get_MailMerge;
    property Envelope: Envelope read Get_Envelope;
    property FullName: WideString read Get_FullName;
    property Revisions: Revisions read Get_Revisions;
    property TablesOfContents: TablesOfContents read Get_TablesOfContents;
    property TablesOfAuthorities: TablesOfAuthorities read Get_TablesOfAuthorities;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property Windows: Windows read Get_Windows;
    property HasRoutingSlip: WordBool read Get_HasRoutingSlip write Set_HasRoutingSlip;
    property RoutingSlip: RoutingSlip read Get_RoutingSlip;
    property Routed: WordBool read Get_Routed;
    property TablesOfAuthoritiesCategories: TablesOfAuthoritiesCategories read Get_TablesOfAuthoritiesCategories;
    property Indexes: Indexes read Get_Indexes;
    property Saved: WordBool read Get_Saved write Set_Saved;
    property Content: WordRange read Get_Content;
    property ActiveWindow: Window read Get_ActiveWindow;
    property Kind: WdDocumentKind read Get_Kind write Set_Kind;
    property ReadOnly: WordBool read Get_ReadOnly;
    property Subdocuments: Subdocuments read Get_Subdocuments;
    property IsMasterDocument: WordBool read Get_IsMasterDocument;
    property DefaultTabStop: Single read Get_DefaultTabStop write Set_DefaultTabStop;
    property EmbedTrueTypeFonts: WordBool read Get_EmbedTrueTypeFonts write Set_EmbedTrueTypeFonts;
    property SaveFormsData: WordBool read Get_SaveFormsData write Set_SaveFormsData;
    property ReadOnlyRecommended: WordBool read Get_ReadOnlyRecommended write Set_ReadOnlyRecommended;
    property SaveSubsetFonts: WordBool read Get_SaveSubsetFonts write Set_SaveSubsetFonts;
    property Compatibility[Type_: WdCompatibility]: WordBool read Get_Compatibility write Set_Compatibility;
    property StoryRanges: StoryRanges read Get_StoryRanges;
    property CommandBars: CommandBars read Get_CommandBars;
    property IsSubdocument: WordBool read Get_IsSubdocument;
    property SaveFormat: Integer read Get_SaveFormat;
    property ProtectionType: WdProtectionType read Get_ProtectionType;
    property Hyperlinks: Hyperlinks read Get_Hyperlinks;
    property Shapes: Shapes read Get_Shapes;
    property ListTemplates: ListTemplates read Get_ListTemplates;
    property Lists: Lists read Get_Lists;
    property UpdateStylesOnOpen: WordBool read Get_UpdateStylesOnOpen write Set_UpdateStylesOnOpen;
    property InlineShapes: InlineShapes read Get_InlineShapes;
    property Background: Shape read Get_Background write Set_Background;
    property GrammarChecked: WordBool read Get_GrammarChecked write Set_GrammarChecked;
    property SpellingChecked: WordBool read Get_SpellingChecked write Set_SpellingChecked;
    property ShowGrammaticalErrors: WordBool read Get_ShowGrammaticalErrors write Set_ShowGrammaticalErrors;
    property ShowSpellingErrors: WordBool read Get_ShowSpellingErrors write Set_ShowSpellingErrors;
    property Versions: Versions read Get_Versions;
    property ShowSummary: WordBool read Get_ShowSummary write Set_ShowSummary;
    property SummaryViewMode: WdSummaryMode read Get_SummaryViewMode write Set_SummaryViewMode;
    property SummaryLength: Integer read Get_SummaryLength write Set_SummaryLength;
    property PrintFractionalWidths: WordBool read Get_PrintFractionalWidths write Set_PrintFractionalWidths;
    property PrintPostScriptOverText: WordBool read Get_PrintPostScriptOverText write Set_PrintPostScriptOverText;
    property Container: IDispatch read Get_Container;
    property PrintFormsData: WordBool read Get_PrintFormsData write Set_PrintFormsData;
    property ListParagraphs: ListParagraphs read Get_ListParagraphs;
    property Password: WideString write Set_Password;
    property WritePassword: WideString write Set_WritePassword;
    property HasPassword: WordBool read Get_HasPassword;
    property WriteReserved: WordBool read Get_WriteReserved;
    property ActiveWritingStyle[var LanguageID: OleVariant]: WideString read Get_ActiveWritingStyle write Set_ActiveWritingStyle;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property HasMailer: WordBool read Get_HasMailer write Set_HasMailer;
    property Mailer: Mailer read Get_Mailer;
    property ReadabilityStatistics: ReadabilityStatistics read Get_ReadabilityStatistics;
    property GrammaticalErrors: ProofreadingErrors read Get_GrammaticalErrors;
    property SpellingErrors: ProofreadingErrors read Get_SpellingErrors;
    property VBProject: VBProject read Get_VBProject;
    property FormsDesign: WordBool read Get_FormsDesign;
    property _CodeName: WideString read Get__CodeName write Set__CodeName;
    property CodeName: WideString read Get_CodeName;
    property SnapToGrid: WordBool read Get_SnapToGrid write Set_SnapToGrid;
    property SnapToShapes: WordBool read Get_SnapToShapes write Set_SnapToShapes;
    property GridDistanceHorizontal: Single read Get_GridDistanceHorizontal write Set_GridDistanceHorizontal;
    property GridDistanceVertical: Single read Get_GridDistanceVertical write Set_GridDistanceVertical;
    property GridOriginHorizontal: Single read Get_GridOriginHorizontal write Set_GridOriginHorizontal;
    property GridOriginVertical: Single read Get_GridOriginVertical write Set_GridOriginVertical;
    property GridSpaceBetweenHorizontalLines: Integer read Get_GridSpaceBetweenHorizontalLines write Set_GridSpaceBetweenHorizontalLines;
    property GridSpaceBetweenVerticalLines: Integer read Get_GridSpaceBetweenVerticalLines write Set_GridSpaceBetweenVerticalLines;
    property GridOriginFromMargin: WordBool read Get_GridOriginFromMargin write Set_GridOriginFromMargin;
    property KerningByAlgorithm: WordBool read Get_KerningByAlgorithm write Set_KerningByAlgorithm;
    property JustificationMode: WdJustificationMode read Get_JustificationMode write Set_JustificationMode;
    property FarEastLineBreakLevel: WdFarEastLineBreakLevel read Get_FarEastLineBreakLevel write Set_FarEastLineBreakLevel;
    property NoLineBreakBefore: WideString read Get_NoLineBreakBefore write Set_NoLineBreakBefore;
    property NoLineBreakAfter: WideString read Get_NoLineBreakAfter write Set_NoLineBreakAfter;
    property TrackRevisions: WordBool read Get_TrackRevisions write Set_TrackRevisions;
    property PrintRevisions: WordBool read Get_PrintRevisions write Set_PrintRevisions;
    property ShowRevisions: WordBool read Get_ShowRevisions write Set_ShowRevisions;
    property ActiveTheme: WideString read Get_ActiveTheme;
    property ActiveThemeDisplayName: WideString read Get_ActiveThemeDisplayName;
    property Email: Email read Get_Email;
    property Scripts: Scripts read Get_Scripts;
    property LanguageDetected: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID read Get_FarEastLineBreakLanguage write Set_FarEastLineBreakLanguage;
    property Frameset: Frameset read Get_Frameset;
    property HTMLProject: HTMLProject read Get_HTMLProject;
    property WebOptions: WebOptions read Get_WebOptions;
    property OpenEncoding: MsoEncoding read Get_OpenEncoding;
    property SaveEncoding: MsoEncoding read Get_SaveEncoding write Set_SaveEncoding;
    property OptimizeForWord97: WordBool read Get_OptimizeForWord97 write Set_OptimizeForWord97;
    property VBASigned: WordBool read Get_VBASigned;
    property MailEnvelope: MsoEnvelope read Get_MailEnvelope;
    property DisableFeatures: WordBool read Get_DisableFeatures write Set_DisableFeatures;
    property DoNotEmbedSystemFonts: WordBool read Get_DoNotEmbedSystemFonts write Set_DoNotEmbedSystemFonts;
    property Signatures: SignatureSet read Get_Signatures;
    property DefaultTargetFrame: WideString read Get_DefaultTargetFrame write Set_DefaultTargetFrame;
    property HTMLDivisions: HTMLDivisions read Get_HTMLDivisions;
    property DisableFeaturesIntroducedAfter: WdDisableFeaturesIntroducedAfter read Get_DisableFeaturesIntroducedAfter write Set_DisableFeaturesIntroducedAfter;
    property RemovePersonalInformation: WordBool read Get_RemovePersonalInformation write Set_RemovePersonalInformation;
    property SmartTags: SmartTags read Get_SmartTags;
    property EmbedSmartTags: WordBool read Get_EmbedSmartTags write Set_EmbedSmartTags;
    property SmartTagsAsXMLProps: WordBool read Get_SmartTagsAsXMLProps write Set_SmartTagsAsXMLProps;
    property TextEncoding: MsoEncoding read Get_TextEncoding write Set_TextEncoding;
    property TextLineEnding: WdLineEndingType read Get_TextLineEnding write Set_TextLineEnding;
    property StyleSheets: StyleSheets read Get_StyleSheets;
    property DefaultTableStyle: OleVariant read Get_DefaultTableStyle;
    property PasswordEncryptionProvider: WideString read Get_PasswordEncryptionProvider;
    property PasswordEncryptionAlgorithm: WideString read Get_PasswordEncryptionAlgorithm;
    property PasswordEncryptionKeyLength: Integer read Get_PasswordEncryptionKeyLength;
    property PasswordEncryptionFileProperties: WordBool read Get_PasswordEncryptionFileProperties;
    property EmbedLinguisticData: WordBool read Get_EmbedLinguisticData write Set_EmbedLinguisticData;
    property FormattingShowFont: WordBool read Get_FormattingShowFont write Set_FormattingShowFont;
    property FormattingShowClear: WordBool read Get_FormattingShowClear write Set_FormattingShowClear;
    property FormattingShowParagraph: WordBool read Get_FormattingShowParagraph write Set_FormattingShowParagraph;
    property FormattingShowNumbering: WordBool read Get_FormattingShowNumbering write Set_FormattingShowNumbering;
    property FormattingShowFilter: WdShowFilter read Get_FormattingShowFilter write Set_FormattingShowFilter;
    property Permission: Permission read Get_Permission;
    property XMLNodes: XMLNodes read Get_XMLNodes;
    property XMLSchemaReferences: XMLSchemaReferences read Get_XMLSchemaReferences;
    property SmartDocument: SmartDocument read Get_SmartDocument;
    property SharedWorkspace: SharedWorkspace read Get_SharedWorkspace;
    property Sync: Sync read Get_Sync;
    property EnforceStyle: WordBool read Get_EnforceStyle write Set_EnforceStyle;
    property AutoFormatOverride: WordBool read Get_AutoFormatOverride write Set_AutoFormatOverride;
    property XMLSaveDataOnly: WordBool read Get_XMLSaveDataOnly write Set_XMLSaveDataOnly;
    property XMLHideNamespaces: WordBool read Get_XMLHideNamespaces write Set_XMLHideNamespaces;
    property XMLShowAdvancedErrors: WordBool read Get_XMLShowAdvancedErrors write Set_XMLShowAdvancedErrors;
    property XMLUseXSLTWhenSaving: WordBool read Get_XMLUseXSLTWhenSaving write Set_XMLUseXSLTWhenSaving;
    property XMLSaveThroughXSLT: WideString read Get_XMLSaveThroughXSLT write Set_XMLSaveThroughXSLT;
    property DocumentLibraryVersions: DocumentLibraryVersions read Get_DocumentLibraryVersions;
    property ReadingModeLayoutFrozen: WordBool read Get_ReadingModeLayoutFrozen write Set_ReadingModeLayoutFrozen;
    property RemoveDateAndTime: WordBool read Get_RemoveDateAndTime write Set_RemoveDateAndTime;
    property ChildNodeSuggestions: XMLChildNodeSuggestions read Get_ChildNodeSuggestions;
    property XMLSchemaViolations: XMLNodes read Get_XMLSchemaViolations;
    property ReadingLayoutSizeX: Integer read Get_ReadingLayoutSizeX write Set_ReadingLayoutSizeX;
    property ReadingLayoutSizeY: Integer read Get_ReadingLayoutSizeY write Set_ReadingLayoutSizeY;
    property StyleSortMethod: WdStyleSort read Get_StyleSortMethod write Set_StyleSortMethod;
    property ContentTypeProperties: MetaProperties read Get_ContentTypeProperties;
    property TrackMoves: WordBool read Get_TrackMoves write Set_TrackMoves;
    property TrackFormatting: WordBool read Get_TrackFormatting write Set_TrackFormatting;
    property Dummy1: HResult read Get_Dummy1;
    property OMaths: OMaths read Get_OMaths;
    property Dummy3: HResult read Get_Dummy3;
    property ServerPolicy: ServerPolicy read Get_ServerPolicy;
    property ContentControls: ContentControls read Get_ContentControls;
    property DocumentInspectors: DocumentInspectors read Get_DocumentInspectors;
    property Bibliography: Bibliography read Get_Bibliography;
    property LockTheme: WordBool read Get_LockTheme write Set_LockTheme;
    property LockQuickStyleSet: WordBool read Get_LockQuickStyleSet write Set_LockQuickStyleSet;
    property OriginalDocumentTitle: WideString read Get_OriginalDocumentTitle;
    property RevisedDocumentTitle: WideString read Get_RevisedDocumentTitle;
    property CustomXMLParts: CustomXMLParts read Get_CustomXMLParts;
    property FormattingShowNextLevel: WordBool read Get_FormattingShowNextLevel write Set_FormattingShowNextLevel;
    property FormattingShowUserStyleName: WordBool read Get_FormattingShowUserStyleName write Set_FormattingShowUserStyleName;
    property Research: Research read Get_Research;
    property Final: WordBool read Get_Final write Set_Final;
    property OMathBreakBin: WdOMathBreakBin read Get_OMathBreakBin write Set_OMathBreakBin;
    property OMathBreakSub: WdOMathBreakSub read Get_OMathBreakSub write Set_OMathBreakSub;
    property OMathJc: WdOMathJc read Get_OMathJc write Set_OMathJc;
    property OMathLeftMargin: Single read Get_OMathLeftMargin write Set_OMathLeftMargin;
    property OMathRightMargin: Single read Get_OMathRightMargin write Set_OMathRightMargin;
    property OMathWrap: Single read Get_OMathWrap write Set_OMathWrap;
    property OMathIntSubSupLim: WordBool read Get_OMathIntSubSupLim write Set_OMathIntSubSupLim;
    property OMathNarySupSubLim: WordBool read Get_OMathNarySupSubLim write Set_OMathNarySupSubLim;
    property OMathSmallFrac: WordBool read Get_OMathSmallFrac write Set_OMathSmallFrac;
    property WordOpenXML: WideString read Get_WordOpenXML;
    property DocumentTheme: OfficeTheme read Get_DocumentTheme;
    property HasVBProject: WordBool read Get_HasVBProject;
    property OMathFontName: WideString read Get_OMathFontName write Set_OMathFontName;
    property EncryptionProvider: WideString read Get_EncryptionProvider write Set_EncryptionProvider;
    property UseMathDefaults: WordBool read Get_UseMathDefaults write Set_UseMathDefaults;
    property CurrentRsid: Integer read Get_CurrentRsid;
    property DocID: Integer read Get_DocID;
    property CompatibilityMode: Integer read Get_CompatibilityMode;
    property CoAuthoring: CoAuthoring read Get_CoAuthoring;
  end;

// *********************************************************************//
// DispIntf:  _DocumentDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0002096B-0000-0000-C000-000000000046}
// *********************************************************************//
  _DocumentDisp = dispinterface
    ['{0002096B-0000-0000-C000-000000000046}']
    property Name: WideString readonly dispid 0;
    property Application: WordApplication readonly dispid 1;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property BuiltInDocumentProperties: IDispatch readonly dispid 1000;
    property CustomDocumentProperties: IDispatch readonly dispid 2;
    property Path: WideString readonly dispid 3;
    property Bookmarks: Bookmarks readonly dispid 4;
    property Tables: Tables readonly dispid 6;
    property Footnotes: Footnotes readonly dispid 7;
    property Endnotes: Endnotes readonly dispid 8;
    property Comments: Comments readonly dispid 9;
    property type_: WdDocumentType readonly dispid 10;
    property AutoHyphenation: WordBool dispid 11;
    property HyphenateCaps: WordBool dispid 12;
    property HyphenationZone: Integer dispid 13;
    property ConsecutiveHyphensLimit: Integer dispid 14;
    property Sections: Sections readonly dispid 15;
    property Paragraphs: Paragraphs readonly dispid 16;
    property Words: Words readonly dispid 17;
    property Sentences: Sentences readonly dispid 18;
    property Characters: Characters readonly dispid 19;
    property Fields: Fields readonly dispid 20;
    property FormFields: FormFields readonly dispid 21;
    property Styles: Styles readonly dispid 22;
    property Frames: Frames readonly dispid 23;
    property TablesOfFigures: TablesOfFigures readonly dispid 25;
    property Variables: Variables readonly dispid 26;
    property MailMerge: MailMerge readonly dispid 27;
    property Envelope: Envelope readonly dispid 28;
    property FullName: WideString readonly dispid 29;
    property Revisions: Revisions readonly dispid 30;
    property TablesOfContents: TablesOfContents readonly dispid 31;
    property TablesOfAuthorities: TablesOfAuthorities readonly dispid 32;
    property PageSetup: PageSetup dispid 1101;
    property Windows: Windows readonly dispid 34;
    property HasRoutingSlip: WordBool dispid 35;
    property RoutingSlip: RoutingSlip readonly dispid 36;
    property Routed: WordBool readonly dispid 37;
    property TablesOfAuthoritiesCategories: TablesOfAuthoritiesCategories readonly dispid 38;
    property Indexes: Indexes readonly dispid 39;
    property Saved: WordBool dispid 40;
    property Content: WordRange readonly dispid 41;
    property ActiveWindow: Window readonly dispid 42;
    property Kind: WdDocumentKind dispid 43;
    property ReadOnly: WordBool readonly dispid 44;
    property Subdocuments: Subdocuments readonly dispid 45;
    property IsMasterDocument: WordBool readonly dispid 46;
    property DefaultTabStop: Single dispid 48;
    property EmbedTrueTypeFonts: WordBool dispid 50;
    property SaveFormsData: WordBool dispid 51;
    property ReadOnlyRecommended: WordBool dispid 52;
    property SaveSubsetFonts: WordBool dispid 53;
    property Compatibility[Type_: WdCompatibility]: WordBool dispid 55;
    property StoryRanges: StoryRanges readonly dispid 56;
    property CommandBars: CommandBars readonly dispid 57;
    property IsSubdocument: WordBool readonly dispid 58;
    property SaveFormat: Integer readonly dispid 59;
    property ProtectionType: WdProtectionType readonly dispid 60;
    property Hyperlinks: Hyperlinks readonly dispid 61;
    property Shapes: Shapes readonly dispid 62;
    property ListTemplates: ListTemplates readonly dispid 63;
    property Lists: Lists readonly dispid 64;
    property UpdateStylesOnOpen: WordBool dispid 66;
    function AttachedTemplate: OleVariant; dispid 67;
    property InlineShapes: InlineShapes readonly dispid 68;
    property Background: Shape dispid 69;
    property GrammarChecked: WordBool dispid 70;
    property SpellingChecked: WordBool dispid 71;
    property ShowGrammaticalErrors: WordBool dispid 72;
    property ShowSpellingErrors: WordBool dispid 73;
    property Versions: Versions readonly dispid 75;
    property ShowSummary: WordBool dispid 76;
    property SummaryViewMode: WdSummaryMode dispid 77;
    property SummaryLength: Integer dispid 78;
    property PrintFractionalWidths: WordBool dispid 79;
    property PrintPostScriptOverText: WordBool dispid 80;
    property Container: IDispatch readonly dispid 82;
    property PrintFormsData: WordBool dispid 83;
    property ListParagraphs: ListParagraphs readonly dispid 84;
    property Password: WideString writeonly dispid 85;
    property WritePassword: WideString writeonly dispid 86;
    property HasPassword: WordBool readonly dispid 87;
    property WriteReserved: WordBool readonly dispid 88;
    property ActiveWritingStyle[var LanguageID: OleVariant]: WideString dispid 90;
    property UserControl: WordBool dispid 92;
    property HasMailer: WordBool dispid 93;
    property Mailer: Mailer readonly dispid 94;
    property ReadabilityStatistics: ReadabilityStatistics readonly dispid 96;
    property GrammaticalErrors: ProofreadingErrors readonly dispid 97;
    property SpellingErrors: ProofreadingErrors readonly dispid 98;
    property VBProject: VBProject readonly dispid 99;
    property FormsDesign: WordBool readonly dispid 100;
    property _CodeName: WideString dispid -2147418112;
    property CodeName: WideString readonly dispid 262;
    property SnapToGrid: WordBool dispid 300;
    property SnapToShapes: WordBool dispid 301;
    property GridDistanceHorizontal: Single dispid 302;
    property GridDistanceVertical: Single dispid 303;
    property GridOriginHorizontal: Single dispid 304;
    property GridOriginVertical: Single dispid 305;
    property GridSpaceBetweenHorizontalLines: Integer dispid 306;
    property GridSpaceBetweenVerticalLines: Integer dispid 307;
    property GridOriginFromMargin: WordBool dispid 308;
    property KerningByAlgorithm: WordBool dispid 309;
    property JustificationMode: WdJustificationMode dispid 310;
    property FarEastLineBreakLevel: WdFarEastLineBreakLevel dispid 311;
    property NoLineBreakBefore: WideString dispid 312;
    property NoLineBreakAfter: WideString dispid 313;
    property TrackRevisions: WordBool dispid 314;
    property PrintRevisions: WordBool dispid 315;
    property ShowRevisions: WordBool dispid 316;
    procedure Close(var SaveChanges: OleVariant; var OriginalFormat: OleVariant; 
                    var RouteDocument: OleVariant); dispid 1105;
    procedure SaveAs2000(var FileName: OleVariant; var FileFormat: OleVariant; 
                         var LockComments: OleVariant; var Password: OleVariant; 
                         var AddToRecentFiles: OleVariant; var WritePassword: OleVariant; 
                         var ReadOnlyRecommended: OleVariant; var EmbedTrueTypeFonts: OleVariant; 
                         var SaveNativePictureFormat: OleVariant; var SaveFormsData: OleVariant; 
                         var SaveAsAOCELetter: OleVariant); dispid 102;
    procedure Repaginate; dispid 103;
    procedure FitToPages; dispid 104;
    procedure ManualHyphenation; dispid 105;
    procedure Select; dispid 65535;
    procedure DataForm; dispid 106;
    procedure Route; dispid 107;
    procedure Save; dispid 108;
    procedure PrintOutOld(var Background: OleVariant; var Append: OleVariant; 
                          var Range: OleVariant; var OutputFileName: OleVariant; 
                          var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                          var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                          var PrintToFile: OleVariant; var Collate: OleVariant; 
                          var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant); dispid 109;
    procedure SendMail; dispid 110;
    function Range(var Start: OleVariant; var End_: OleVariant): WordRange; dispid 2000;
    procedure RunAutoMacro(Which: WdAutoMacros); dispid 112;
    procedure Activate; dispid 113;
    procedure PrintPreview; dispid 114;
    function GoTo_(var What: OleVariant; var Which: OleVariant; var Count: OleVariant; 
                   var Name: OleVariant): WordRange; dispid 115;
    function Undo(var Times: OleVariant): WordBool; dispid 116;
    function Redo(var Times: OleVariant): WordBool; dispid 117;
    function ComputeStatistics(Statistic: WdStatistic; var IncludeFootnotesAndEndnotes: OleVariant): Integer; dispid 118;
    procedure MakeCompatibilityDefault; dispid 119;
    procedure Protect2002(Type_: WdProtectionType; var NoReset: OleVariant; var Password: OleVariant); dispid 120;
    procedure Unprotect(var Password: OleVariant); dispid 121;
    procedure EditionOptions(Type_: WdEditionType; Option: WdEditionOption; const Name: WideString; 
                             var Format: OleVariant); dispid 122;
    procedure RunLetterWizard(var LetterContent: OleVariant; var WizardMode: OleVariant); dispid 123;
    function GetLetterContent: WordLetterContent; dispid 124;
    procedure SetLetterContent(var LetterContent: OleVariant); dispid 125;
    procedure CopyStylesFromTemplate(const Template: WideString); dispid 126;
    procedure UpdateStyles; dispid 127;
    procedure CheckGrammar; dispid 131;
    procedure CheckSpelling(var CustomDictionary: OleVariant; var IgnoreUppercase: OleVariant; 
                            var AlwaysSuggest: OleVariant; var CustomDictionary2: OleVariant; 
                            var CustomDictionary3: OleVariant; var CustomDictionary4: OleVariant; 
                            var CustomDictionary5: OleVariant; var CustomDictionary6: OleVariant; 
                            var CustomDictionary7: OleVariant; var CustomDictionary8: OleVariant; 
                            var CustomDictionary9: OleVariant; var CustomDictionary10: OleVariant); dispid 132;
    procedure FollowHyperlink(var Address: OleVariant; var SubAddress: OleVariant; 
                              var NewWindow: OleVariant; var AddHistory: OleVariant; 
                              var ExtraInfo: OleVariant; var Method: OleVariant; 
                              var HeaderInfo: OleVariant); dispid 135;
    procedure AddToFavorites; dispid 136;
    procedure Reload; dispid 137;
    function AutoSummarize(var Length: OleVariant; var Mode: OleVariant; 
                           var UpdateProperties: OleVariant): WordRange; dispid 138;
    procedure RemoveNumbers(var NumberType: OleVariant); dispid 140;
    procedure ConvertNumbersToText(var NumberType: OleVariant); dispid 141;
    function CountNumberedItems(var NumberType: OleVariant; var Level: OleVariant): Integer; dispid 142;
    procedure Post; dispid 143;
    procedure ToggleFormsDesign; dispid 144;
    procedure Compare2000(const Name: WideString); dispid 145;
    procedure UpdateSummaryProperties; dispid 146;
    function GetCrossReferenceItems(var ReferenceType: OleVariant): OleVariant; dispid 147;
    procedure AutoFormat; dispid 148;
    procedure ViewCode; dispid 149;
    procedure ViewPropertyBrowser; dispid 150;
    procedure ForwardMailer; dispid 250;
    procedure Reply; dispid 251;
    procedure ReplyAll; dispid 252;
    procedure SendMailer(var FileFormat: OleVariant; var Priority: OleVariant); dispid 253;
    procedure UndoClear; dispid 254;
    procedure PresentIt; dispid 255;
    procedure SendFax(const Address: WideString; var Subject: OleVariant); dispid 256;
    procedure Merge2000(const FileName: WideString); dispid 257;
    procedure ClosePrintPreview; dispid 258;
    procedure CheckConsistency; dispid 259;
    function CreateLetterContent(const DateFormat: WideString; IncludeHeaderFooter: WordBool; 
                                 const PageDesign: WideString; LetterStyle: WdLetterStyle; 
                                 Letterhead: WordBool; LetterheadLocation: WdLetterheadLocation; 
                                 LetterheadSize: Single; const RecipientName: WideString; 
                                 const RecipientAddress: WideString; const Salutation: WideString; 
                                 SalutationType: WdSalutationType; 
                                 const RecipientReference: WideString; 
                                 const MailingInstructions: WideString; 
                                 const AttentionLine: WideString; const Subject: WideString; 
                                 const CCList: WideString; const ReturnAddress: WideString; 
                                 const SenderName: WideString; const Closing: WideString; 
                                 const SenderCompany: WideString; const SenderJobTitle: WideString; 
                                 const SenderInitials: WideString; EnclosureNumber: Integer; 
                                 var InfoBlock: OleVariant; var RecipientCode: OleVariant; 
                                 var RecipientGender: OleVariant; 
                                 var ReturnAddressShortForm: OleVariant; 
                                 var SenderCity: OleVariant; var SenderCode: OleVariant; 
                                 var SenderGender: OleVariant; var SenderReference: OleVariant): WordLetterContent; dispid 260;
    procedure AcceptAllRevisions; dispid 317;
    procedure RejectAllRevisions; dispid 318;
    procedure DetectLanguage; dispid 151;
    procedure ApplyTheme(const Name: WideString); dispid 322;
    procedure RemoveTheme; dispid 323;
    procedure WebPagePreview; dispid 325;
    procedure ReloadAs(Encoding: MsoEncoding); dispid 331;
    property ActiveTheme: WideString readonly dispid 540;
    property ActiveThemeDisplayName: WideString readonly dispid 541;
    property Email: Email readonly dispid 319;
    property Scripts: Scripts readonly dispid 320;
    property LanguageDetected: WordBool dispid 321;
    property FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID dispid 326;
    property Frameset: Frameset readonly dispid 327;
    function ClickAndTypeParagraphStyle: OleVariant; dispid 328;
    property HTMLProject: HTMLProject readonly dispid 329;
    property WebOptions: WebOptions readonly dispid 330;
    property OpenEncoding: MsoEncoding readonly dispid 332;
    property SaveEncoding: MsoEncoding dispid 333;
    property OptimizeForWord97: WordBool dispid 334;
    property VBASigned: WordBool readonly dispid 335;
    procedure PrintOut2000(var Background: OleVariant; var Append: OleVariant; 
                           var Range: OleVariant; var OutputFileName: OleVariant; 
                           var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                           var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                           var PrintToFile: OleVariant; var Collate: OleVariant; 
                           var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant; 
                           var PrintZoomColumn: OleVariant; var PrintZoomRow: OleVariant; 
                           var PrintZoomPaperWidth: OleVariant; var PrintZoomPaperHeight: OleVariant); dispid 444;
    procedure sblt(const s: WideString); dispid 445;
    procedure ConvertVietDoc(CodePageOrigin: Integer); dispid 447;
    procedure PrintOut(var Background: OleVariant; var Append: OleVariant; var Range: OleVariant; 
                       var OutputFileName: OleVariant; var From: OleVariant; var To_: OleVariant; 
                       var Item: OleVariant; var Copies: OleVariant; var Pages: OleVariant; 
                       var PageType: OleVariant; var PrintToFile: OleVariant; 
                       var Collate: OleVariant; var ActivePrinterMacGX: OleVariant; 
                       var ManualDuplexPrint: OleVariant; var PrintZoomColumn: OleVariant; 
                       var PrintZoomRow: OleVariant; var PrintZoomPaperWidth: OleVariant; 
                       var PrintZoomPaperHeight: OleVariant); dispid 446;
    property MailEnvelope: MsoEnvelope readonly dispid 336;
    property DisableFeatures: WordBool dispid 337;
    property DoNotEmbedSystemFonts: WordBool dispid 338;
    property Signatures: SignatureSet readonly dispid 339;
    property DefaultTargetFrame: WideString dispid 340;
    property HTMLDivisions: HTMLDivisions readonly dispid 342;
    property DisableFeaturesIntroducedAfter: WdDisableFeaturesIntroducedAfter dispid 343;
    property RemovePersonalInformation: WordBool dispid 344;
    property SmartTags: SmartTags readonly dispid 346;
    procedure Compare2002(const Name: WideString; var AuthorName: OleVariant; 
                          var CompareTarget: OleVariant; var DetectFormatChanges: OleVariant; 
                          var IgnoreAllComparisonWarnings: OleVariant; 
                          var AddToRecentFiles: OleVariant); dispid 345;
    procedure CheckIn(SaveChanges: WordBool; var Comments: OleVariant; MakePublic: WordBool); dispid 349;
    function CanCheckin: WordBool; dispid 351;
    procedure Merge(const FileName: WideString; var MergeTarget: OleVariant; 
                    var DetectFormatChanges: OleVariant; var UseFormattingFrom: OleVariant; 
                    var AddToRecentFiles: OleVariant); dispid 362;
    property EmbedSmartTags: WordBool dispid 347;
    property SmartTagsAsXMLProps: WordBool dispid 348;
    property TextEncoding: MsoEncoding dispid 357;
    property TextLineEnding: WdLineEndingType dispid 358;
    procedure SendForReview(var Recipients: OleVariant; var Subject: OleVariant; 
                            var ShowMessage: OleVariant; var IncludeAttachment: OleVariant); dispid 353;
    procedure ReplyWithChanges(var ShowMessage: OleVariant); dispid 354;
    procedure EndReview; dispid 356;
    property StyleSheets: StyleSheets readonly dispid 360;
    property DefaultTableStyle: OleVariant readonly dispid 365;
    property PasswordEncryptionProvider: WideString readonly dispid 367;
    property PasswordEncryptionAlgorithm: WideString readonly dispid 368;
    property PasswordEncryptionKeyLength: Integer readonly dispid 369;
    property PasswordEncryptionFileProperties: WordBool readonly dispid 370;
    procedure SetPasswordEncryptionOptions(const PasswordEncryptionProvider: WideString; 
                                           const PasswordEncryptionAlgorithm: WideString; 
                                           PasswordEncryptionKeyLength: Integer; 
                                           var PasswordEncryptionFileProperties: OleVariant); dispid 361;
    procedure RecheckSmartTags; dispid 363;
    procedure RemoveSmartTags; dispid 364;
    procedure SetDefaultTableStyle(var Style: OleVariant; SetInTemplate: WordBool); dispid 366;
    procedure DeleteAllComments; dispid 371;
    procedure AcceptAllRevisionsShown; dispid 372;
    procedure RejectAllRevisionsShown; dispid 373;
    procedure DeleteAllCommentsShown; dispid 374;
    procedure ResetFormFields; dispid 375;
    procedure SaveAs(var FileName: OleVariant; var FileFormat: OleVariant; 
                     var LockComments: OleVariant; var Password: OleVariant; 
                     var AddToRecentFiles: OleVariant; var WritePassword: OleVariant; 
                     var ReadOnlyRecommended: OleVariant; var EmbedTrueTypeFonts: OleVariant; 
                     var SaveNativePictureFormat: OleVariant; var SaveFormsData: OleVariant; 
                     var SaveAsAOCELetter: OleVariant; var Encoding: OleVariant; 
                     var InsertLineBreaks: OleVariant; var AllowSubstitutions: OleVariant; 
                     var LineEnding: OleVariant; var AddBiDiMarks: OleVariant); dispid 376;
    property EmbedLinguisticData: WordBool dispid 377;
    property FormattingShowFont: WordBool dispid 448;
    property FormattingShowClear: WordBool dispid 449;
    property FormattingShowParagraph: WordBool dispid 450;
    property FormattingShowNumbering: WordBool dispid 451;
    property FormattingShowFilter: WdShowFilter dispid 452;
    procedure CheckNewSmartTags; dispid 378;
    property Permission: Permission readonly dispid 453;
    property XMLNodes: XMLNodes readonly dispid 460;
    property XMLSchemaReferences: XMLSchemaReferences readonly dispid 461;
    property SmartDocument: SmartDocument readonly dispid 462;
    property SharedWorkspace: SharedWorkspace readonly dispid 463;
    property Sync: Sync readonly dispid 466;
    property EnforceStyle: WordBool dispid 471;
    property AutoFormatOverride: WordBool dispid 472;
    property XMLSaveDataOnly: WordBool dispid 473;
    property XMLHideNamespaces: WordBool dispid 477;
    property XMLShowAdvancedErrors: WordBool dispid 478;
    property XMLUseXSLTWhenSaving: WordBool dispid 474;
    property XMLSaveThroughXSLT: WideString dispid 475;
    property DocumentLibraryVersions: DocumentLibraryVersions readonly dispid 476;
    property ReadingModeLayoutFrozen: WordBool dispid 481;
    property RemoveDateAndTime: WordBool dispid 484;
    procedure SendFaxOverInternet(var Recipients: OleVariant; var Subject: OleVariant; 
                                  var ShowMessage: OleVariant); dispid 464;
    procedure TransformDocument(const Path: WideString; DataOnly: WordBool); dispid 500;
    procedure Protect(Type_: WdProtectionType; var NoReset: OleVariant; var Password: OleVariant; 
                      var UseIRM: OleVariant; var EnforceStyleLock: OleVariant); dispid 467;
    procedure SelectAllEditableRanges(var EditorID: OleVariant); dispid 468;
    procedure DeleteAllEditableRanges(var EditorID: OleVariant); dispid 469;
    procedure DeleteAllInkAnnotations; dispid 479;
    procedure AddDocumentWorkspaceHeader(RichFormat: WordBool; const Url: WideString; 
                                         const Title: WideString; const Description: WideString; 
                                         const ID: WideString); dispid 482;
    procedure RemoveDocumentWorkspaceHeader(const ID: WideString); dispid 483;
    procedure Compare(const Name: WideString; var AuthorName: OleVariant; 
                      var CompareTarget: OleVariant; var DetectFormatChanges: OleVariant; 
                      var IgnoreAllComparisonWarnings: OleVariant; 
                      var AddToRecentFiles: OleVariant; var RemovePersonalInformation: OleVariant; 
                      var RemoveDateAndTime: OleVariant); dispid 485;
    procedure RemoveLockedStyles; dispid 487;
    property ChildNodeSuggestions: XMLChildNodeSuggestions readonly dispid 486;
    function SelectSingleNode(const XPath: WideString; const PrefixMapping: WideString; 
                              FastSearchSkippingTextNodes: WordBool): XMLNode; dispid 488;
    function SelectNodes(const XPath: WideString; const PrefixMapping: WideString; 
                         FastSearchSkippingTextNodes: WordBool): XMLNodes; dispid 489;
    property XMLSchemaViolations: XMLNodes readonly dispid 490;
    property ReadingLayoutSizeX: Integer dispid 491;
    property ReadingLayoutSizeY: Integer dispid 492;
    property StyleSortMethod: WdStyleSort dispid 493;
    property ContentTypeProperties: MetaProperties readonly dispid 496;
    property TrackMoves: WordBool dispid 499;
    property TrackFormatting: WordBool dispid 502;
    property Dummy1: HResult readonly dispid 503;
    property OMaths: OMaths readonly dispid 504;
    procedure RemoveDocumentInformation(RemoveDocInfoType: WdRemoveDocInfoType); dispid 495;
    procedure CheckInWithVersion(SaveChanges: WordBool; var Comments: OleVariant; 
                                 MakePublic: WordBool; var VersionType: OleVariant); dispid 501;
    procedure Dummy2; dispid 505;
    property Dummy3: HResult readonly dispid 506;
    property ServerPolicy: ServerPolicy readonly dispid 507;
    property ContentControls: ContentControls readonly dispid 508;
    property DocumentInspectors: DocumentInspectors readonly dispid 510;
    procedure LockServerFile; dispid 509;
    function GetWorkflowTasks: WorkflowTasks; dispid 511;
    function GetWorkflowTemplates: WorkflowTemplates; dispid 512;
    procedure Dummy4; dispid 514;
    procedure AddMeetingWorkspaceHeader(SkipIfAbsent: WordBool; const Url: WideString; 
                                        const Title: WideString; const Description: WideString; 
                                        const ID: WideString); dispid 515;
    property Bibliography: Bibliography readonly dispid 516;
    property LockTheme: WordBool dispid 517;
    property LockQuickStyleSet: WordBool dispid 518;
    property OriginalDocumentTitle: WideString readonly dispid 519;
    property RevisedDocumentTitle: WideString readonly dispid 520;
    property CustomXMLParts: CustomXMLParts readonly dispid 521;
    property FormattingShowNextLevel: WordBool dispid 522;
    property FormattingShowUserStyleName: WordBool dispid 523;
    procedure SaveAsQuickStyleSet(const FileName: WideString); dispid 524;
    procedure ApplyQuickStyleSet(const Name: WideString); dispid 525;
    property Research: Research readonly dispid 526;
    property Final: WordBool dispid 527;
    property OMathBreakBin: WdOMathBreakBin dispid 528;
    property OMathBreakSub: WdOMathBreakSub dispid 529;
    property OMathJc: WdOMathJc dispid 530;
    property OMathLeftMargin: Single dispid 531;
    property OMathRightMargin: Single dispid 532;
    property OMathWrap: Single dispid 535;
    property OMathIntSubSupLim: WordBool dispid 536;
    property OMathNarySupSubLim: WordBool dispid 537;
    property OMathSmallFrac: WordBool dispid 539;
    property WordOpenXML: WideString readonly dispid 542;
    property DocumentTheme: OfficeTheme readonly dispid 545;
    procedure ApplyDocumentTheme(const FileName: WideString); dispid 546;
    property HasVBProject: WordBool readonly dispid 548;
    function SelectLinkedControls(const Node: CustomXMLNode): ContentControls; dispid 549;
    function SelectUnlinkedControls(const Stream: CustomXMLPart): ContentControls; dispid 550;
    function SelectContentControlsByTitle(const Title: WideString): ContentControls; dispid 551;
    procedure ExportAsFixedFormat(const OutputFileName: WideString; ExportFormat: WdExportFormat; 
                                  OpenAfterExport: WordBool; OptimizeFor: WdExportOptimizeFor; 
                                  Range: WdExportRange; From: Integer; To_: Integer; 
                                  Item: WdExportItem; IncludeDocProps: WordBool; KeepIRM: WordBool; 
                                  CreateBookmarks: WdExportCreateBookmarks; 
                                  DocStructureTags: WordBool; BitmapMissingFonts: WordBool; 
                                  UseISO19005_1: WordBool; var FixedFormatExtClassPtr: OleVariant); dispid 552;
    procedure FreezeLayout; dispid 553;
    procedure UnfreezeLayout; dispid 554;
    property OMathFontName: WideString dispid 555;
    procedure DowngradeDocument; dispid 558;
    property EncryptionProvider: WideString dispid 559;
    property UseMathDefaults: WordBool dispid 560;
    property CurrentRsid: Integer readonly dispid 563;
    procedure Convert; dispid 561;
    function SelectContentControlsByTag(const Tag: WideString): ContentControls; dispid 562;
    procedure ConvertAutoHyphens; dispid 650;
    property DocID: Integer readonly dispid 564;
    procedure ApplyQuickStyleSet2(var Style: OleVariant); dispid 566;
    property CompatibilityMode: Integer readonly dispid 567;
    procedure SaveAs2(var FileName: OleVariant; var FileFormat: OleVariant; 
                      var LockComments: OleVariant; var Password: OleVariant; 
                      var AddToRecentFiles: OleVariant; var WritePassword: OleVariant; 
                      var ReadOnlyRecommended: OleVariant; var EmbedTrueTypeFonts: OleVariant; 
                      var SaveNativePictureFormat: OleVariant; var SaveFormsData: OleVariant; 
                      var SaveAsAOCELetter: OleVariant; var Encoding: OleVariant; 
                      var InsertLineBreaks: OleVariant; var AllowSubstitutions: OleVariant; 
                      var LineEnding: OleVariant; var AddBiDiMarks: OleVariant; 
                      var CompatibilityMode: OleVariant); dispid 568;
    property CoAuthoring: CoAuthoring readonly dispid 600;
    procedure SetCompatibilityMode(Mode: Integer); dispid 571;
  end;

// *********************************************************************//
// Interface: Template
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096A-0000-0000-C000-000000000046}
// *********************************************************************//
  Template = interface(IDispatch)
    ['{0002096A-0000-0000-C000-000000000046}']
    function Get_Name: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Path: WideString; safecall;
    function Get_AutoTextEntries: AutoTextEntries; safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_Saved: WordBool; safecall;
    procedure Set_Saved(prop: WordBool); safecall;
    function Get_type_: WdTemplateType; safecall;
    function Get_FullName: WideString; safecall;
    function Get_BuiltInDocumentProperties: IDispatch; safecall;
    function Get_CustomDocumentProperties: IDispatch; safecall;
    function Get_ListTemplates: ListTemplates; safecall;
    function Get_LanguageIDFarEast: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast(prop: WdLanguageID); safecall;
    function Get_VBProject: VBProject; safecall;
    function Get_KerningByAlgorithm: WordBool; safecall;
    procedure Set_KerningByAlgorithm(prop: WordBool); safecall;
    function Get_JustificationMode: WdJustificationMode; safecall;
    procedure Set_JustificationMode(prop: WdJustificationMode); safecall;
    function Get_FarEastLineBreakLevel: WdFarEastLineBreakLevel; safecall;
    procedure Set_FarEastLineBreakLevel(prop: WdFarEastLineBreakLevel); safecall;
    function Get_NoLineBreakBefore: WideString; safecall;
    procedure Set_NoLineBreakBefore(const prop: WideString); safecall;
    function Get_NoLineBreakAfter: WideString; safecall;
    procedure Set_NoLineBreakAfter(const prop: WideString); safecall;
    function OpenAsDocument: WordDocument; safecall;
    procedure Save; safecall;
    function Get_NoProofing: Integer; safecall;
    procedure Set_NoProofing(prop: Integer); safecall;
    function Get_FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID; safecall;
    procedure Set_FarEastLineBreakLanguage(prop: WdFarEastLineBreakLanguageID); safecall;
    function Get_BuildingBlockEntries: BuildingBlockEntries; safecall;
    function Get_BuildingBlockTypes: BuildingBlockTypes; safecall;
    property Name: WideString read Get_Name;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Path: WideString read Get_Path;
    property AutoTextEntries: AutoTextEntries read Get_AutoTextEntries;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property Saved: WordBool read Get_Saved write Set_Saved;
    property type_: WdTemplateType read Get_type_;
    property FullName: WideString read Get_FullName;
    property BuiltInDocumentProperties: IDispatch read Get_BuiltInDocumentProperties;
    property CustomDocumentProperties: IDispatch read Get_CustomDocumentProperties;
    property ListTemplates: ListTemplates read Get_ListTemplates;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property VBProject: VBProject read Get_VBProject;
    property KerningByAlgorithm: WordBool read Get_KerningByAlgorithm write Set_KerningByAlgorithm;
    property JustificationMode: WdJustificationMode read Get_JustificationMode write Set_JustificationMode;
    property FarEastLineBreakLevel: WdFarEastLineBreakLevel read Get_FarEastLineBreakLevel write Set_FarEastLineBreakLevel;
    property NoLineBreakBefore: WideString read Get_NoLineBreakBefore write Set_NoLineBreakBefore;
    property NoLineBreakAfter: WideString read Get_NoLineBreakAfter write Set_NoLineBreakAfter;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID read Get_FarEastLineBreakLanguage write Set_FarEastLineBreakLanguage;
    property BuildingBlockEntries: BuildingBlockEntries read Get_BuildingBlockEntries;
    property BuildingBlockTypes: BuildingBlockTypes read Get_BuildingBlockTypes;
  end;

// *********************************************************************//
// DispIntf:  TemplateDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002096A-0000-0000-C000-000000000046}
// *********************************************************************//
  TemplateDisp = dispinterface
    ['{0002096A-0000-0000-C000-000000000046}']
    property Name: WideString readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Path: WideString readonly dispid 1;
    property AutoTextEntries: AutoTextEntries readonly dispid 2;
    property LanguageID: WdLanguageID dispid 4;
    property Saved: WordBool dispid 5;
    property type_: WdTemplateType readonly dispid 6;
    property FullName: WideString readonly dispid 7;
    property BuiltInDocumentProperties: IDispatch readonly dispid 8;
    property CustomDocumentProperties: IDispatch readonly dispid 9;
    property ListTemplates: ListTemplates readonly dispid 10;
    property LanguageIDFarEast: WdLanguageID dispid 11;
    property VBProject: VBProject readonly dispid 99;
    property KerningByAlgorithm: WordBool dispid 12;
    property JustificationMode: WdJustificationMode dispid 13;
    property FarEastLineBreakLevel: WdFarEastLineBreakLevel dispid 14;
    property NoLineBreakBefore: WideString dispid 15;
    property NoLineBreakAfter: WideString dispid 16;
    function OpenAsDocument: WordDocument; dispid 100;
    procedure Save; dispid 101;
    property NoProofing: Integer dispid 17;
    property FarEastLineBreakLanguage: WdFarEastLineBreakLanguageID dispid 18;
    property BuildingBlockEntries: BuildingBlockEntries readonly dispid 19;
    property BuildingBlockTypes: BuildingBlockTypes readonly dispid 20;
  end;

// *********************************************************************//
// Interface: Templates
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A2-0000-0000-C000-000000000046}
// *********************************************************************//
  Templates = interface(IDispatch)
    ['{000209A2-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(var Index: OleVariant): Template; safecall;
    procedure LoadBuildingBlocks; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  TemplatesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A2-0000-0000-C000-000000000046}
// *********************************************************************//
  TemplatesDisp = dispinterface
    ['{000209A2-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(var Index: OleVariant): Template; dispid 0;
    procedure LoadBuildingBlocks; dispid 100;
  end;

// *********************************************************************//
// Interface: RoutingSlip
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020969-0000-0000-C000-000000000046}
// *********************************************************************//
  RoutingSlip = interface(IDispatch)
    ['{00020969-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const prop: WideString); safecall;
    function Get_Message: WideString; safecall;
    procedure Set_Message(const prop: WideString); safecall;
    function Get_Delivery: WdRoutingSlipDelivery; safecall;
    procedure Set_Delivery(prop: WdRoutingSlipDelivery); safecall;
    function Get_TrackStatus: WordBool; safecall;
    procedure Set_TrackStatus(prop: WordBool); safecall;
    function Get_Protect: WdProtectionType; safecall;
    procedure Set_Protect(prop: WdProtectionType); safecall;
    function Get_ReturnWhenDone: WordBool; safecall;
    procedure Set_ReturnWhenDone(prop: WordBool); safecall;
    function Get_Status: WdRoutingSlipStatus; safecall;
    function Get_Recipients(var Index: OleVariant): OleVariant; safecall;
    procedure Reset; safecall;
    procedure AddRecipient(const Recipient: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Subject: WideString read Get_Subject write Set_Subject;
    property Message: WideString read Get_Message write Set_Message;
    property Delivery: WdRoutingSlipDelivery read Get_Delivery write Set_Delivery;
    property TrackStatus: WordBool read Get_TrackStatus write Set_TrackStatus;
    property Protect: WdProtectionType read Get_Protect write Set_Protect;
    property ReturnWhenDone: WordBool read Get_ReturnWhenDone write Set_ReturnWhenDone;
    property Status: WdRoutingSlipStatus read Get_Status;
    property Recipients[var Index: OleVariant]: OleVariant read Get_Recipients;
  end;

// *********************************************************************//
// DispIntf:  RoutingSlipDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020969-0000-0000-C000-000000000046}
// *********************************************************************//
  RoutingSlipDisp = dispinterface
    ['{00020969-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Subject: WideString dispid 1;
    property Message: WideString dispid 2;
    property Delivery: WdRoutingSlipDelivery dispid 3;
    property TrackStatus: WordBool dispid 4;
    property Protect: WdProtectionType dispid 5;
    property ReturnWhenDone: WordBool dispid 6;
    property Status: WdRoutingSlipStatus readonly dispid 7;
    property Recipients[var Index: OleVariant]: OleVariant readonly dispid 9;
    procedure Reset; dispid 101;
    procedure AddRecipient(const Recipient: WideString); dispid 102;
  end;

// *********************************************************************//
// Interface: Bookmark
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020968-0000-0000-C000-000000000046}
// *********************************************************************//
  Bookmark = interface(IDispatch)
    ['{00020968-0000-0000-C000-000000000046}']
    function Get_Name: WideString; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Empty: WordBool; safecall;
    function Get_Start: Integer; safecall;
    procedure Set_Start(prop: Integer); safecall;
    function Get_End_: Integer; safecall;
    procedure Set_End_(prop: Integer); safecall;
    function Get_Column: WordBool; safecall;
    function Get_StoryType: WdStoryType; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    function Copy(const Name: WideString): Bookmark; safecall;
    property Name: WideString read Get_Name;
    property Range: WordRange read Get_Range;
    property Empty: WordBool read Get_Empty;
    property Start: Integer read Get_Start write Set_Start;
    property End_: Integer read Get_End_ write Set_End_;
    property Column: WordBool read Get_Column;
    property StoryType: WdStoryType read Get_StoryType;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  BookmarkDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020968-0000-0000-C000-000000000046}
// *********************************************************************//
  BookmarkDisp = dispinterface
    ['{00020968-0000-0000-C000-000000000046}']
    property Name: WideString readonly dispid 0;
    property Range: WordRange readonly dispid 1;
    property Empty: WordBool readonly dispid 2;
    property Start: Integer dispid 3;
    property End_: Integer dispid 4;
    property Column: WordBool readonly dispid 5;
    property StoryType: WdStoryType readonly dispid 6;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure Select; dispid 65535;
    procedure Delete; dispid 11;
    function Copy(const Name: WideString): Bookmark; dispid 12;
  end;

// *********************************************************************//
// Interface: Bookmarks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020967-0000-0000-C000-000000000046}
// *********************************************************************//
  Bookmarks = interface(IDispatch)
    ['{00020967-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_DefaultSorting: WdBookmarkSortBy; safecall;
    procedure Set_DefaultSorting(prop: WdBookmarkSortBy); safecall;
    function Get_ShowHidden: WordBool; safecall;
    procedure Set_ShowHidden(prop: WordBool); safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): Bookmark; safecall;
    function Add(const Name: WideString; var Range: OleVariant): Bookmark; safecall;
    function Exists(const Name: WideString): WordBool; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property DefaultSorting: WdBookmarkSortBy read Get_DefaultSorting write Set_DefaultSorting;
    property ShowHidden: WordBool read Get_ShowHidden write Set_ShowHidden;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  BookmarksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020967-0000-0000-C000-000000000046}
// *********************************************************************//
  BookmarksDisp = dispinterface
    ['{00020967-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property DefaultSorting: WdBookmarkSortBy dispid 3;
    property ShowHidden: WordBool dispid 4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): Bookmark; dispid 0;
    function Add(const Name: WideString; var Range: OleVariant): Bookmark; dispid 5;
    function Exists(const Name: WideString): WordBool; dispid 6;
  end;

// *********************************************************************//
// Interface: Variable
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020966-0000-0000-C000-000000000046}
// *********************************************************************//
  Variable = interface(IDispatch)
    ['{00020966-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    function Get_Index: Integer; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Value: WideString read Get_Value write Set_Value;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  VariableDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020966-0000-0000-C000-000000000046}
// *********************************************************************//
  VariableDisp = dispinterface
    ['{00020966-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 1;
    property Value: WideString dispid 0;
    property Index: Integer readonly dispid 2;
    procedure Delete; dispid 11;
  end;

// *********************************************************************//
// Interface: Variables
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020965-0000-0000-C000-000000000046}
// *********************************************************************//
  Variables = interface(IDispatch)
    ['{00020965-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): Variable; safecall;
    function Add(const Name: WideString; var Value: OleVariant): Variable; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  VariablesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020965-0000-0000-C000-000000000046}
// *********************************************************************//
  VariablesDisp = dispinterface
    ['{00020965-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): Variable; dispid 0;
    function Add(const Name: WideString; var Value: OleVariant): Variable; dispid 7;
  end;

// *********************************************************************//
// Interface: RecentFile
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020964-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFile = interface(IDispatch)
    ['{00020964-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Index: Integer; safecall;
    function Get_ReadOnly: WordBool; safecall;
    procedure Set_ReadOnly(prop: WordBool); safecall;
    function Get_Path: WideString; safecall;
    function Open: WordDocument; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
    property ReadOnly: WordBool read Get_ReadOnly write Set_ReadOnly;
    property Path: WideString read Get_Path;
  end;

// *********************************************************************//
// DispIntf:  RecentFileDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020964-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFileDisp = dispinterface
    ['{00020964-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Index: Integer readonly dispid 1;
    property ReadOnly: WordBool dispid 2;
    property Path: WideString readonly dispid 3;
    function Open: WordDocument; dispid 4;
    procedure Delete; dispid 5;
  end;

// *********************************************************************//
// Interface: RecentFiles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020963-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFiles = interface(IDispatch)
    ['{00020963-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Maximum: Integer; safecall;
    procedure Set_Maximum(prop: Integer); safecall;
    function Item(Index: Integer): RecentFile; safecall;
    function Add(var Document: OleVariant; var ReadOnly: OleVariant): RecentFile; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Maximum: Integer read Get_Maximum write Set_Maximum;
  end;

// *********************************************************************//
// DispIntf:  RecentFilesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020963-0000-0000-C000-000000000046}
// *********************************************************************//
  RecentFilesDisp = dispinterface
    ['{00020963-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Maximum: Integer dispid 2;
    function Item(Index: Integer): RecentFile; dispid 0;
    function Add(var Document: OleVariant; var ReadOnly: OleVariant): RecentFile; dispid 3;
  end;

// *********************************************************************//
// Interface: Window
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020962-0000-0000-C000-000000000046}
// *********************************************************************//
  Window = interface(IDispatch)
    ['{00020962-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ActivePane: Pane; safecall;
    function Get_Document: WordDocument; safecall;
    function Get_Panes: Panes; safecall;
    function Get_Selection: WordSelection; safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(prop: Integer); safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(prop: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(prop: Integer); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(prop: Integer); safecall;
    function Get_Split: WordBool; safecall;
    procedure Set_Split(prop: WordBool); safecall;
    function Get_SplitVertical: Integer; safecall;
    procedure Set_SplitVertical(prop: Integer); safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_WindowState: WdWindowState; safecall;
    procedure Set_WindowState(prop: WdWindowState); safecall;
    function Get_DisplayRulers: WordBool; safecall;
    procedure Set_DisplayRulers(prop: WordBool); safecall;
    function Get_DisplayVerticalRuler: WordBool; safecall;
    procedure Set_DisplayVerticalRuler(prop: WordBool); safecall;
    function Get_View: View; safecall;
    function Get_type_: WdWindowType; safecall;
    function Get_Next: Window; safecall;
    function Get_Previous: Window; safecall;
    function Get_WindowNumber: Integer; safecall;
    function Get_DisplayVerticalScrollBar: WordBool; safecall;
    procedure Set_DisplayVerticalScrollBar(prop: WordBool); safecall;
    function Get_DisplayHorizontalScrollBar: WordBool; safecall;
    procedure Set_DisplayHorizontalScrollBar(prop: WordBool); safecall;
    function Get_StyleAreaWidth: Single; safecall;
    procedure Set_StyleAreaWidth(prop: Single); safecall;
    function Get_DisplayScreenTips: WordBool; safecall;
    procedure Set_DisplayScreenTips(prop: WordBool); safecall;
    function Get_HorizontalPercentScrolled: Integer; safecall;
    procedure Set_HorizontalPercentScrolled(prop: Integer); safecall;
    function Get_VerticalPercentScrolled: Integer; safecall;
    procedure Set_VerticalPercentScrolled(prop: Integer); safecall;
    function Get_DocumentMap: WordBool; safecall;
    procedure Set_DocumentMap(prop: WordBool); safecall;
    function Get_Active: WordBool; safecall;
    function Get_DocumentMapPercentWidth: Integer; safecall;
    procedure Set_DocumentMapPercentWidth(prop: Integer); safecall;
    function Get_Index: Integer; safecall;
    function Get_IMEMode: WdIMEMode; safecall;
    procedure Set_IMEMode(prop: WdIMEMode); safecall;
    procedure Activate; safecall;
    procedure Close(var SaveChanges: OleVariant; var RouteDocument: OleVariant); safecall;
    procedure LargeScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); safecall;
    procedure SmallScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); safecall;
    function NewWindow: Window; safecall;
    procedure PrintOutOld(var Background: OleVariant; var Append: OleVariant; 
                          var Range: OleVariant; var OutputFileName: OleVariant; 
                          var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                          var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                          var PrintToFile: OleVariant; var Collate: OleVariant; 
                          var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant); safecall;
    procedure PageScroll(var Down: OleVariant; var Up: OleVariant); safecall;
    procedure SetFocus; safecall;
    function RangeFromPoint(x: Integer; y: Integer): IDispatch; safecall;
    procedure ScrollIntoView(const obj: IDispatch; var Start: OleVariant); safecall;
    procedure GetPoint(out ScreenPixelsLeft: Integer; out ScreenPixelsTop: Integer; 
                       out ScreenPixelsWidth: Integer; out ScreenPixelsHeight: Integer; 
                       const obj: IDispatch); safecall;
    procedure PrintOut2000(var Background: OleVariant; var Append: OleVariant; 
                           var Range: OleVariant; var OutputFileName: OleVariant; 
                           var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                           var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                           var PrintToFile: OleVariant; var Collate: OleVariant; 
                           var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant; 
                           var PrintZoomColumn: OleVariant; var PrintZoomRow: OleVariant; 
                           var PrintZoomPaperWidth: OleVariant; var PrintZoomPaperHeight: OleVariant); safecall;
    function Get_UsableWidth: Integer; safecall;
    function Get_UsableHeight: Integer; safecall;
    function Get_EnvelopeVisible: WordBool; safecall;
    procedure Set_EnvelopeVisible(prop: WordBool); safecall;
    function Get_DisplayRightRuler: WordBool; safecall;
    procedure Set_DisplayRightRuler(prop: WordBool); safecall;
    function Get_DisplayLeftScrollBar: WordBool; safecall;
    procedure Set_DisplayLeftScrollBar(prop: WordBool); safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    procedure PrintOut(var Background: OleVariant; var Append: OleVariant; var Range: OleVariant; 
                       var OutputFileName: OleVariant; var From: OleVariant; var To_: OleVariant; 
                       var Item: OleVariant; var Copies: OleVariant; var Pages: OleVariant; 
                       var PageType: OleVariant; var PrintToFile: OleVariant; 
                       var Collate: OleVariant; var ActivePrinterMacGX: OleVariant; 
                       var ManualDuplexPrint: OleVariant; var PrintZoomColumn: OleVariant; 
                       var PrintZoomRow: OleVariant; var PrintZoomPaperWidth: OleVariant; 
                       var PrintZoomPaperHeight: OleVariant); safecall;
    procedure ToggleShowAllReviewers; safecall;
    function Get_Thumbnails: WordBool; safecall;
    procedure Set_Thumbnails(prop: WordBool); safecall;
    function Get_ShowSourceDocuments: WdShowSourceDocuments; safecall;
    procedure Set_ShowSourceDocuments(prop: WdShowSourceDocuments); safecall;
    procedure ToggleRibbon; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ActivePane: Pane read Get_ActivePane;
    property Document: WordDocument read Get_Document;
    property Panes: Panes read Get_Panes;
    property Selection: WordSelection read Get_Selection;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property Split: WordBool read Get_Split write Set_Split;
    property SplitVertical: Integer read Get_SplitVertical write Set_SplitVertical;
    property Caption: WideString read Get_Caption write Set_Caption;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property DisplayRulers: WordBool read Get_DisplayRulers write Set_DisplayRulers;
    property DisplayVerticalRuler: WordBool read Get_DisplayVerticalRuler write Set_DisplayVerticalRuler;
    property View: View read Get_View;
    property type_: WdWindowType read Get_type_;
    property Next: Window read Get_Next;
    property Previous: Window read Get_Previous;
    property WindowNumber: Integer read Get_WindowNumber;
    property DisplayVerticalScrollBar: WordBool read Get_DisplayVerticalScrollBar write Set_DisplayVerticalScrollBar;
    property DisplayHorizontalScrollBar: WordBool read Get_DisplayHorizontalScrollBar write Set_DisplayHorizontalScrollBar;
    property StyleAreaWidth: Single read Get_StyleAreaWidth write Set_StyleAreaWidth;
    property DisplayScreenTips: WordBool read Get_DisplayScreenTips write Set_DisplayScreenTips;
    property HorizontalPercentScrolled: Integer read Get_HorizontalPercentScrolled write Set_HorizontalPercentScrolled;
    property VerticalPercentScrolled: Integer read Get_VerticalPercentScrolled write Set_VerticalPercentScrolled;
    property DocumentMap: WordBool read Get_DocumentMap write Set_DocumentMap;
    property Active: WordBool read Get_Active;
    property DocumentMapPercentWidth: Integer read Get_DocumentMapPercentWidth write Set_DocumentMapPercentWidth;
    property Index: Integer read Get_Index;
    property IMEMode: WdIMEMode read Get_IMEMode write Set_IMEMode;
    property UsableWidth: Integer read Get_UsableWidth;
    property UsableHeight: Integer read Get_UsableHeight;
    property EnvelopeVisible: WordBool read Get_EnvelopeVisible write Set_EnvelopeVisible;
    property DisplayRightRuler: WordBool read Get_DisplayRightRuler write Set_DisplayRightRuler;
    property DisplayLeftScrollBar: WordBool read Get_DisplayLeftScrollBar write Set_DisplayLeftScrollBar;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Thumbnails: WordBool read Get_Thumbnails write Set_Thumbnails;
    property ShowSourceDocuments: WdShowSourceDocuments read Get_ShowSourceDocuments write Set_ShowSourceDocuments;
  end;

// *********************************************************************//
// DispIntf:  WindowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020962-0000-0000-C000-000000000046}
// *********************************************************************//
  WindowDisp = dispinterface
    ['{00020962-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ActivePane: Pane readonly dispid 1;
    property Document: WordDocument readonly dispid 2;
    property Panes: Panes readonly dispid 3;
    property Selection: WordSelection readonly dispid 4;
    property Left: Integer dispid 5;
    property Top: Integer dispid 6;
    property Width: Integer dispid 7;
    property Height: Integer dispid 8;
    property Split: WordBool dispid 9;
    property SplitVertical: Integer dispid 10;
    property Caption: WideString dispid 0;
    property WindowState: WdWindowState dispid 11;
    property DisplayRulers: WordBool dispid 12;
    property DisplayVerticalRuler: WordBool dispid 13;
    property View: View readonly dispid 14;
    property type_: WdWindowType readonly dispid 15;
    property Next: Window readonly dispid 16;
    property Previous: Window readonly dispid 17;
    property WindowNumber: Integer readonly dispid 18;
    property DisplayVerticalScrollBar: WordBool dispid 19;
    property DisplayHorizontalScrollBar: WordBool dispid 20;
    property StyleAreaWidth: Single dispid 21;
    property DisplayScreenTips: WordBool dispid 22;
    property HorizontalPercentScrolled: Integer dispid 23;
    property VerticalPercentScrolled: Integer dispid 24;
    property DocumentMap: WordBool dispid 25;
    property Active: WordBool readonly dispid 26;
    property DocumentMapPercentWidth: Integer dispid 27;
    property Index: Integer readonly dispid 28;
    property IMEMode: WdIMEMode dispid 30;
    procedure Activate; dispid 100;
    procedure Close(var SaveChanges: OleVariant; var RouteDocument: OleVariant); dispid 102;
    procedure LargeScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); dispid 103;
    procedure SmallScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); dispid 104;
    function NewWindow: Window; dispid 105;
    procedure PrintOutOld(var Background: OleVariant; var Append: OleVariant; 
                          var Range: OleVariant; var OutputFileName: OleVariant; 
                          var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                          var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                          var PrintToFile: OleVariant; var Collate: OleVariant; 
                          var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant); dispid 107;
    procedure PageScroll(var Down: OleVariant; var Up: OleVariant); dispid 108;
    procedure SetFocus; dispid 109;
    function RangeFromPoint(x: Integer; y: Integer): IDispatch; dispid 110;
    procedure ScrollIntoView(const obj: IDispatch; var Start: OleVariant); dispid 111;
    procedure GetPoint(out ScreenPixelsLeft: Integer; out ScreenPixelsTop: Integer; 
                       out ScreenPixelsWidth: Integer; out ScreenPixelsHeight: Integer; 
                       const obj: IDispatch); dispid 112;
    procedure PrintOut2000(var Background: OleVariant; var Append: OleVariant; 
                           var Range: OleVariant; var OutputFileName: OleVariant; 
                           var From: OleVariant; var To_: OleVariant; var Item: OleVariant; 
                           var Copies: OleVariant; var Pages: OleVariant; var PageType: OleVariant; 
                           var PrintToFile: OleVariant; var Collate: OleVariant; 
                           var ActivePrinterMacGX: OleVariant; var ManualDuplexPrint: OleVariant; 
                           var PrintZoomColumn: OleVariant; var PrintZoomRow: OleVariant; 
                           var PrintZoomPaperWidth: OleVariant; var PrintZoomPaperHeight: OleVariant); dispid 444;
    property UsableWidth: Integer readonly dispid 31;
    property UsableHeight: Integer readonly dispid 32;
    property EnvelopeVisible: WordBool dispid 33;
    property DisplayRightRuler: WordBool dispid 35;
    property DisplayLeftScrollBar: WordBool dispid 34;
    property Visible: WordBool dispid 36;
    procedure PrintOut(var Background: OleVariant; var Append: OleVariant; var Range: OleVariant; 
                       var OutputFileName: OleVariant; var From: OleVariant; var To_: OleVariant; 
                       var Item: OleVariant; var Copies: OleVariant; var Pages: OleVariant; 
                       var PageType: OleVariant; var PrintToFile: OleVariant; 
                       var Collate: OleVariant; var ActivePrinterMacGX: OleVariant; 
                       var ManualDuplexPrint: OleVariant; var PrintZoomColumn: OleVariant; 
                       var PrintZoomRow: OleVariant; var PrintZoomPaperWidth: OleVariant; 
                       var PrintZoomPaperHeight: OleVariant); dispid 445;
    procedure ToggleShowAllReviewers; dispid 446;
    property Thumbnails: WordBool dispid 37;
    property ShowSourceDocuments: WdShowSourceDocuments dispid 38;
    procedure ToggleRibbon; dispid 447;
  end;

// *********************************************************************//
// Interface: Windows
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020961-0000-0000-C000-000000000046}
// *********************************************************************//
  Windows = interface(IDispatch)
    ['{00020961-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): Window; safecall;
    function Add(var Window: OleVariant): Window; safecall;
    procedure Arrange(var ArrangeStyle: OleVariant); safecall;
    function CompareSideBySideWith(var Document: OleVariant): WordBool; safecall;
    function BreakSideBySide: WordBool; safecall;
    procedure ResetPositionsSideBySide; safecall;
    function Get_SyncScrollingSideBySide: WordBool; safecall;
    procedure Set_SyncScrollingSideBySide(prop: WordBool); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property SyncScrollingSideBySide: WordBool read Get_SyncScrollingSideBySide write Set_SyncScrollingSideBySide;
  end;

// *********************************************************************//
// DispIntf:  WindowsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020961-0000-0000-C000-000000000046}
// *********************************************************************//
  WindowsDisp = dispinterface
    ['{00020961-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): Window; dispid 0;
    function Add(var Window: OleVariant): Window; dispid 10;
    procedure Arrange(var ArrangeStyle: OleVariant); dispid 11;
    function CompareSideBySideWith(var Document: OleVariant): WordBool; dispid 12;
    function BreakSideBySide: WordBool; dispid 13;
    procedure ResetPositionsSideBySide; dispid 14;
    property SyncScrollingSideBySide: WordBool dispid 1003;
  end;

// *********************************************************************//
// Interface: Pane
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020960-0000-0000-C000-000000000046}
// *********************************************************************//
  Pane = interface(IDispatch)
    ['{00020960-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Document: WordDocument; safecall;
    function Get_Selection: WordSelection; safecall;
    function Get_DisplayRulers: WordBool; safecall;
    procedure Set_DisplayRulers(prop: WordBool); safecall;
    function Get_DisplayVerticalRuler: WordBool; safecall;
    procedure Set_DisplayVerticalRuler(prop: WordBool); safecall;
    function Get_Zooms: Zooms; safecall;
    function Get_Index: Integer; safecall;
    function Get_View: View; safecall;
    function Get_Next: Pane; safecall;
    function Get_Previous: Pane; safecall;
    function Get_HorizontalPercentScrolled: Integer; safecall;
    procedure Set_HorizontalPercentScrolled(prop: Integer); safecall;
    function Get_VerticalPercentScrolled: Integer; safecall;
    procedure Set_VerticalPercentScrolled(prop: Integer); safecall;
    function Get_MinimumFontSize: Integer; safecall;
    procedure Set_MinimumFontSize(prop: Integer); safecall;
    function Get_BrowseToWindow: WordBool; safecall;
    procedure Set_BrowseToWindow(prop: WordBool); safecall;
    function Get_BrowseWidth: Integer; safecall;
    procedure Activate; safecall;
    procedure Close; safecall;
    procedure LargeScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); safecall;
    procedure SmallScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); safecall;
    procedure AutoScroll(Velocity: Integer); safecall;
    procedure PageScroll(var Down: OleVariant; var Up: OleVariant); safecall;
    procedure NewFrameset; safecall;
    procedure TOCInFrameset; safecall;
    function Get_Frameset: Frameset; safecall;
    function Get_Pages: Pages; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Document: WordDocument read Get_Document;
    property Selection: WordSelection read Get_Selection;
    property DisplayRulers: WordBool read Get_DisplayRulers write Set_DisplayRulers;
    property DisplayVerticalRuler: WordBool read Get_DisplayVerticalRuler write Set_DisplayVerticalRuler;
    property Zooms: Zooms read Get_Zooms;
    property Index: Integer read Get_Index;
    property View: View read Get_View;
    property Next: Pane read Get_Next;
    property Previous: Pane read Get_Previous;
    property HorizontalPercentScrolled: Integer read Get_HorizontalPercentScrolled write Set_HorizontalPercentScrolled;
    property VerticalPercentScrolled: Integer read Get_VerticalPercentScrolled write Set_VerticalPercentScrolled;
    property MinimumFontSize: Integer read Get_MinimumFontSize write Set_MinimumFontSize;
    property BrowseToWindow: WordBool read Get_BrowseToWindow write Set_BrowseToWindow;
    property BrowseWidth: Integer read Get_BrowseWidth;
    property Frameset: Frameset read Get_Frameset;
    property Pages: Pages read Get_Pages;
  end;

// *********************************************************************//
// DispIntf:  PaneDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020960-0000-0000-C000-000000000046}
// *********************************************************************//
  PaneDisp = dispinterface
    ['{00020960-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Document: WordDocument readonly dispid 1;
    property Selection: WordSelection readonly dispid 3;
    property DisplayRulers: WordBool dispid 4;
    property DisplayVerticalRuler: WordBool dispid 5;
    property Zooms: Zooms readonly dispid 7;
    property Index: Integer readonly dispid 9;
    property View: View readonly dispid 10;
    property Next: Pane readonly dispid 11;
    property Previous: Pane readonly dispid 12;
    property HorizontalPercentScrolled: Integer dispid 13;
    property VerticalPercentScrolled: Integer dispid 14;
    property MinimumFontSize: Integer dispid 15;
    property BrowseToWindow: WordBool dispid 16;
    property BrowseWidth: Integer readonly dispid 17;
    procedure Activate; dispid 100;
    procedure Close; dispid 101;
    procedure LargeScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); dispid 102;
    procedure SmallScroll(var Down: OleVariant; var Up: OleVariant; var ToRight: OleVariant; 
                          var ToLeft: OleVariant); dispid 103;
    procedure AutoScroll(Velocity: Integer); dispid 104;
    procedure PageScroll(var Down: OleVariant; var Up: OleVariant); dispid 105;
    procedure NewFrameset; dispid 106;
    procedure TOCInFrameset; dispid 107;
    property Frameset: Frameset readonly dispid 18;
    property Pages: Pages readonly dispid 19;
  end;

// *********************************************************************//
// Interface: Panes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095F-0000-0000-C000-000000000046}
// *********************************************************************//
  Panes = interface(IDispatch)
    ['{0002095F-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Pane; safecall;
    function Add(var SplitVertical: OleVariant): Pane; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  PanesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095F-0000-0000-C000-000000000046}
// *********************************************************************//
  PanesDisp = dispinterface
    ['{0002095F-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Pane; dispid 0;
    function Add(var SplitVertical: OleVariant): Pane; dispid 3;
  end;

// *********************************************************************//
// Interface: WordRange
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095E-0000-0000-C000-000000000046}
// *********************************************************************//
  WordRange = interface(IDispatch)
    ['{0002095E-0000-0000-C000-000000000046}']
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_FormattedText: WordRange; safecall;
    procedure Set_FormattedText(const prop: WordRange); safecall;
    function Get_Start: Integer; safecall;
    procedure Set_Start(prop: Integer); safecall;
    function Get_End_: Integer; safecall;
    procedure Set_End_(prop: Integer); safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    function Get_Duplicate: WordRange; safecall;
    function Get_StoryType: WdStoryType; safecall;
    function Get_Tables: Tables; safecall;
    function Get_Words: Words; safecall;
    function Get_Sentences: Sentences; safecall;
    function Get_Characters: Characters; safecall;
    function Get_Footnotes: Footnotes; safecall;
    function Get_Endnotes: Endnotes; safecall;
    function Get_Comments: Comments; safecall;
    function Get_Cells: Cells; safecall;
    function Get_Sections: Sections; safecall;
    function Get_Paragraphs: Paragraphs; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_TextRetrievalMode: TextRetrievalMode; safecall;
    procedure Set_TextRetrievalMode(const prop: TextRetrievalMode); safecall;
    function Get_Fields: Fields; safecall;
    function Get_FormFields: FormFields; safecall;
    function Get_Frames: Frames; safecall;
    function Get_ParagraphFormat: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat(const prop: WordParagraphFormat); safecall;
    function Get_ListFormat: ListFormat; safecall;
    function Get_Bookmarks: Bookmarks; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Bold: Integer; safecall;
    procedure Set_Bold(prop: Integer); safecall;
    function Get_Italic: Integer; safecall;
    procedure Set_Italic(prop: Integer); safecall;
    function Get_Underline: WdUnderline; safecall;
    procedure Set_Underline(prop: WdUnderline); safecall;
    function Get_EmphasisMark: WdEmphasisMark; safecall;
    procedure Set_EmphasisMark(prop: WdEmphasisMark); safecall;
    function Get_DisableCharacterSpaceGrid: WordBool; safecall;
    procedure Set_DisableCharacterSpaceGrid(prop: WordBool); safecall;
    function Get_Revisions: Revisions; safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_StoryLength: Integer; safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_SynonymInfo: SynonymInfo; safecall;
    function Get_Hyperlinks: Hyperlinks; safecall;
    function Get_ListParagraphs: ListParagraphs; safecall;
    function Get_Subdocuments: Subdocuments; safecall;
    function Get_GrammarChecked: WordBool; safecall;
    procedure Set_GrammarChecked(prop: WordBool); safecall;
    function Get_SpellingChecked: WordBool; safecall;
    procedure Set_SpellingChecked(prop: WordBool); safecall;
    function Get_HighlightColorIndex: WdColorIndex; safecall;
    procedure Set_HighlightColorIndex(prop: WdColorIndex); safecall;
    function Get_Columns: Columns; safecall;
    function Get_Rows: Rows; safecall;
    function Get_CanEdit: Integer; safecall;
    function Get_CanPaste: Integer; safecall;
    function Get_IsEndOfRowMark: WordBool; safecall;
    function Get_BookmarkID: Integer; safecall;
    function Get_PreviousBookmarkID: Integer; safecall;
    function Get_Find: Find; safecall;
    function Get_PageSetup: PageSetup; safecall;
    procedure Set_PageSetup(const prop: PageSetup); safecall;
    function Get_ShapeRange: ShapeRange; safecall;
    function Get_Case_: WdCharacterCase; safecall;
    procedure Set_Case_(prop: WdCharacterCase); safecall;
    function Get_Information(Type_: WdInformation): OleVariant; safecall;
    function Get_ReadabilityStatistics: ReadabilityStatistics; safecall;
    function Get_GrammaticalErrors: ProofreadingErrors; safecall;
    function Get_SpellingErrors: ProofreadingErrors; safecall;
    function Get_Orientation: WdTextOrientation; safecall;
    procedure Set_Orientation(prop: WdTextOrientation); safecall;
    function Get_InlineShapes: InlineShapes; safecall;
    function Get_NextStoryRange: WordRange; safecall;
    function Get_LanguageIDFarEast: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast(prop: WdLanguageID); safecall;
    function Get_LanguageIDOther: WdLanguageID; safecall;
    procedure Set_LanguageIDOther(prop: WdLanguageID); safecall;
    procedure Select; safecall;
    procedure SetRange(Start: Integer; End_: Integer); safecall;
    procedure Collapse(var Direction: OleVariant); safecall;
    procedure InsertBefore(const Text: WideString); safecall;
    procedure InsertAfter(const Text: WideString); safecall;
    function Next(var Unit_: OleVariant; var Count: OleVariant): WordRange; safecall;
    function Previous(var Unit_: OleVariant; var Count: OleVariant): WordRange; safecall;
    function StartOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; safecall;
    function EndOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; safecall;
    function Move(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveStart(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveEnd(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveWhile(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveStartWhile(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveEndWhile(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveUntil(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveStartUntil(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveEndUntil(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    procedure Cut; safecall;
    procedure Copy; safecall;
    procedure Paste; safecall;
    procedure InsertBreak(var Type_: OleVariant); safecall;
    procedure InsertFile(const FileName: WideString; var Range: OleVariant; 
                         var ConfirmConversions: OleVariant; var Link: OleVariant; 
                         var Attachment: OleVariant); safecall;
    function InStory(const Range: WordRange): WordBool; safecall;
    function InRange(const Range: WordRange): WordBool; safecall;
    function Delete(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    procedure WholeStory; safecall;
    function Expand(var Unit_: OleVariant): Integer; safecall;
    procedure InsertParagraph; safecall;
    procedure InsertParagraphAfter; safecall;
    function ConvertToTableOld(var Separator: OleVariant; var NumRows: OleVariant; 
                               var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                               var Format: OleVariant; var ApplyBorders: OleVariant; 
                               var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                               var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                               var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                               var ApplyLastColumn: OleVariant; var AutoFit: OleVariant): Table; safecall;
    procedure InsertDateTimeOld(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                                var InsertAsFullWidth: OleVariant); safecall;
    procedure InsertSymbol(CharacterNumber: Integer; var Font: OleVariant; var Unicode: OleVariant; 
                           var Bias: OleVariant); safecall;
    procedure InsertCrossReference_2002(var ReferenceType: OleVariant; 
                                        ReferenceKind: WdReferenceKind; 
                                        var ReferenceItem: OleVariant; 
                                        var InsertAsHyperlink: OleVariant; 
                                        var IncludePosition: OleVariant); safecall;
    procedure InsertCaptionXP(var Label_: OleVariant; var Title: OleVariant; 
                              var TitleAutoText: OleVariant; var Position: OleVariant); safecall;
    procedure CopyAsPicture; safecall;
    procedure SortOld(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                      var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                      var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                      var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                      var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                      var SortColumn: OleVariant; var Separator: OleVariant; 
                      var CaseSensitive: OleVariant; var LanguageID: OleVariant); safecall;
    procedure SortAscending; safecall;
    procedure SortDescending; safecall;
    function IsEqual(const Range: WordRange): WordBool; safecall;
    function Calculate: Single; safecall;
    function GoTo_(var What: OleVariant; var Which: OleVariant; var Count: OleVariant; 
                   var Name: OleVariant): WordRange; safecall;
    function GoToNext(What: WdGoToItem): WordRange; safecall;
    function GoToPrevious(What: WdGoToItem): WordRange; safecall;
    procedure PasteSpecial(var IconIndex: OleVariant; var Link: OleVariant; 
                           var Placement: OleVariant; var DisplayAsIcon: OleVariant; 
                           var DataType: OleVariant; var IconFileName: OleVariant; 
                           var IconLabel: OleVariant); safecall;
    procedure LookupNameProperties; safecall;
    function ComputeStatistics(Statistic: WdStatistic): Integer; safecall;
    procedure Relocate(Direction: Integer); safecall;
    procedure CheckSynonyms; safecall;
    procedure SubscribeTo(const Edition: WideString; var Format: OleVariant); safecall;
    procedure CreatePublisher(var Edition: OleVariant; var ContainsPICT: OleVariant; 
                              var ContainsRTF: OleVariant; var ContainsText: OleVariant); safecall;
    procedure InsertAutoText; safecall;
    procedure InsertDatabase(var Format: OleVariant; var Style: OleVariant; 
                             var LinkToSource: OleVariant; var Connection: OleVariant; 
                             var SQLStatement: OleVariant; var SQLStatement1: OleVariant; 
                             var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                             var WritePasswordDocument: OleVariant; 
                             var WritePasswordTemplate: OleVariant; var DataSource: OleVariant; 
                             var From: OleVariant; var To_: OleVariant; 
                             var IncludeFields: OleVariant); safecall;
    procedure AutoFormat; safecall;
    procedure CheckGrammar; safecall;
    procedure CheckSpelling(var CustomDictionary: OleVariant; var IgnoreUppercase: OleVariant; 
                            var AlwaysSuggest: OleVariant; var CustomDictionary2: OleVariant; 
                            var CustomDictionary3: OleVariant; var CustomDictionary4: OleVariant; 
                            var CustomDictionary5: OleVariant; var CustomDictionary6: OleVariant; 
                            var CustomDictionary7: OleVariant; var CustomDictionary8: OleVariant; 
                            var CustomDictionary9: OleVariant; var CustomDictionary10: OleVariant); safecall;
    function GetSpellingSuggestions(var CustomDictionary: OleVariant; 
                                    var IgnoreUppercase: OleVariant; 
                                    var MainDictionary: OleVariant; var SuggestionMode: OleVariant; 
                                    var CustomDictionary2: OleVariant; 
                                    var CustomDictionary3: OleVariant; 
                                    var CustomDictionary4: OleVariant; 
                                    var CustomDictionary5: OleVariant; 
                                    var CustomDictionary6: OleVariant; 
                                    var CustomDictionary7: OleVariant; 
                                    var CustomDictionary8: OleVariant; 
                                    var CustomDictionary9: OleVariant; 
                                    var CustomDictionary10: OleVariant): SpellingSuggestions; safecall;
    procedure InsertParagraphBefore; safecall;
    procedure NextSubdocument; safecall;
    procedure PreviousSubdocument; safecall;
    procedure ConvertHangulAndHanja(var ConversionsMode: OleVariant; 
                                    var FastConversion: OleVariant; 
                                    var CheckHangulEnding: OleVariant; 
                                    var EnableRecentOrdering: OleVariant; 
                                    var CustomDictionary: OleVariant); safecall;
    procedure PasteAsNestedTable; safecall;
    procedure ModifyEnclosure(var Style: OleVariant; var Symbol: OleVariant; 
                              var EnclosedText: OleVariant); safecall;
    procedure PhoneticGuide(const Text: WideString; Alignment: WdPhoneticGuideAlignmentType; 
                            Raise_: Integer; FontSize: Integer; const FontName: WideString); safecall;
    procedure InsertDateTime(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                             var InsertAsFullWidth: OleVariant; var DateLanguage: OleVariant; 
                             var CalendarType: OleVariant); safecall;
    procedure Sort(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                   var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                   var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                   var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                   var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                   var SortColumn: OleVariant; var Separator: OleVariant; 
                   var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                   var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                   var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                   var LanguageID: OleVariant); safecall;
    procedure DetectLanguage; safecall;
    function ConvertToTable(var Separator: OleVariant; var NumRows: OleVariant; 
                            var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                            var Format: OleVariant; var ApplyBorders: OleVariant; 
                            var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                            var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                            var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                            var ApplyLastColumn: OleVariant; var AutoFit: OleVariant; 
                            var AutoFitBehavior: OleVariant; var DefaultTableBehavior: OleVariant): Table; safecall;
    procedure TCSCConverter(WdTCSCConverterDirection: WdTCSCConverterDirection; 
                            CommonTerms: WordBool; UseVariants: WordBool); safecall;
    function Get_LanguageDetected: WordBool; safecall;
    procedure Set_LanguageDetected(prop: WordBool); safecall;
    function Get_FitTextWidth: Single; safecall;
    procedure Set_FitTextWidth(prop: Single); safecall;
    function Get_HorizontalInVertical: WdHorizontalInVerticalType; safecall;
    procedure Set_HorizontalInVertical(prop: WdHorizontalInVerticalType); safecall;
    function Get_TwoLinesInOne: WdTwoLinesInOneType; safecall;
    procedure Set_TwoLinesInOne(prop: WdTwoLinesInOneType); safecall;
    function Get_CombineCharacters: WordBool; safecall;
    procedure Set_CombineCharacters(prop: WordBool); safecall;
    function Get_NoProofing: Integer; safecall;
    procedure Set_NoProofing(prop: Integer); safecall;
    function Get_TopLevelTables: Tables; safecall;
    function Get_Scripts: Scripts; safecall;
    function Get_CharacterWidth: WdCharacterWidth; safecall;
    procedure Set_CharacterWidth(prop: WdCharacterWidth); safecall;
    function Get_Kana: WdKana; safecall;
    procedure Set_Kana(prop: WdKana); safecall;
    function Get_BoldBi: Integer; safecall;
    procedure Set_BoldBi(prop: Integer); safecall;
    function Get_ItalicBi: Integer; safecall;
    procedure Set_ItalicBi(prop: Integer); safecall;
    function Get_ID: WideString; safecall;
    procedure Set_ID(const prop: WideString); safecall;
    function Get_HTMLDivisions: HTMLDivisions; safecall;
    function Get_SmartTags: SmartTags; safecall;
    function Get_ShowAll: WordBool; safecall;
    procedure Set_ShowAll(prop: WordBool); safecall;
    function Get_Document: WordDocument; safecall;
    function Get_FootnoteOptions: FootnoteOptions; safecall;
    function Get_EndnoteOptions: EndnoteOptions; safecall;
    procedure PasteAndFormat(Type_: WdRecoveryType); safecall;
    procedure PasteExcelTable(LinkedToExcel: WordBool; WordFormatting: WordBool; RTF: WordBool); safecall;
    procedure PasteAppendTable; safecall;
    function Get_XMLNodes: XMLNodes; safecall;
    function Get_XMLParentNode: XMLNode; safecall;
    function Get_Editors: Editors; safecall;
    function Get_XML(DataOnly: WordBool): WideString; safecall;
    function Get_EnhMetaFileBits: OleVariant; safecall;
    function GoToEditableRange(var EditorID: OleVariant): WordRange; safecall;
    procedure InsertXML(const XML: WideString; var Transform: OleVariant); safecall;
    procedure InsertCaption(var Label_: OleVariant; var Title: OleVariant; 
                            var TitleAutoText: OleVariant; var Position: OleVariant; 
                            var ExcludeLabel: OleVariant); safecall;
    procedure InsertCrossReference(var ReferenceType: OleVariant; ReferenceKind: WdReferenceKind; 
                                   var ReferenceItem: OleVariant; 
                                   var InsertAsHyperlink: OleVariant; 
                                   var IncludePosition: OleVariant; 
                                   var SeparateNumbers: OleVariant; var SeparatorString: OleVariant); safecall;
    function Get_OMaths: OMaths; safecall;
    function Get_CharacterStyle: OleVariant; safecall;
    function Get_ParagraphStyle: OleVariant; safecall;
    function Get_ListStyle: OleVariant; safecall;
    function Get_TableStyle: OleVariant; safecall;
    function Get_ContentControls: ContentControls; safecall;
    procedure ExportFragment(const FileName: WideString; Format: WdSaveFormat); safecall;
    function Get_WordOpenXML: WideString; safecall;
    procedure SetListLevel(Level: Smallint); safecall;
    procedure InsertAlignmentTab(Alignment: Integer; RelativeTo: Integer); safecall;
    function Get_ParentContentControl: ContentControl; safecall;
    procedure ImportFragment(const FileName: WideString; MatchDestination: WordBool); safecall;
    procedure ExportAsFixedFormat(const OutputFileName: WideString; ExportFormat: WdExportFormat; 
                                  OpenAfterExport: WordBool; OptimizeFor: WdExportOptimizeFor; 
                                  ExportCurrentPage: WordBool; Item: WdExportItem; 
                                  IncludeDocProps: WordBool; KeepIRM: WordBool; 
                                  CreateBookmarks: WdExportCreateBookmarks; 
                                  DocStructureTags: WordBool; BitmapMissingFonts: WordBool; 
                                  UseISO19005_1: WordBool; var FixedFormatExtClassPtr: OleVariant); safecall;
    function Get_Locks: CoAuthLocks; safecall;
    function Get_Updates: CoAuthUpdates; safecall;
    function Get_Conflicts: Conflicts; safecall;
    property Text: WideString read Get_Text write Set_Text;
    property FormattedText: WordRange read Get_FormattedText write Set_FormattedText;
    property Start: Integer read Get_Start write Set_Start;
    property End_: Integer read Get_End_ write Set_End_;
    property Font: WordFont read Get_Font write Set_Font;
    property Duplicate: WordRange read Get_Duplicate;
    property StoryType: WdStoryType read Get_StoryType;
    property Tables: Tables read Get_Tables;
    property Words: Words read Get_Words;
    property Sentences: Sentences read Get_Sentences;
    property Characters: Characters read Get_Characters;
    property Footnotes: Footnotes read Get_Footnotes;
    property Endnotes: Endnotes read Get_Endnotes;
    property Comments: Comments read Get_Comments;
    property Cells: Cells read Get_Cells;
    property Sections: Sections read Get_Sections;
    property Paragraphs: Paragraphs read Get_Paragraphs;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property TextRetrievalMode: TextRetrievalMode read Get_TextRetrievalMode write Set_TextRetrievalMode;
    property Fields: Fields read Get_Fields;
    property FormFields: FormFields read Get_FormFields;
    property Frames: Frames read Get_Frames;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property ListFormat: ListFormat read Get_ListFormat;
    property Bookmarks: Bookmarks read Get_Bookmarks;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Bold: Integer read Get_Bold write Set_Bold;
    property Italic: Integer read Get_Italic write Set_Italic;
    property Underline: WdUnderline read Get_Underline write Set_Underline;
    property EmphasisMark: WdEmphasisMark read Get_EmphasisMark write Set_EmphasisMark;
    property DisableCharacterSpaceGrid: WordBool read Get_DisableCharacterSpaceGrid write Set_DisableCharacterSpaceGrid;
    property Revisions: Revisions read Get_Revisions;
    property StoryLength: Integer read Get_StoryLength;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property SynonymInfo: SynonymInfo read Get_SynonymInfo;
    property Hyperlinks: Hyperlinks read Get_Hyperlinks;
    property ListParagraphs: ListParagraphs read Get_ListParagraphs;
    property Subdocuments: Subdocuments read Get_Subdocuments;
    property GrammarChecked: WordBool read Get_GrammarChecked write Set_GrammarChecked;
    property SpellingChecked: WordBool read Get_SpellingChecked write Set_SpellingChecked;
    property HighlightColorIndex: WdColorIndex read Get_HighlightColorIndex write Set_HighlightColorIndex;
    property Columns: Columns read Get_Columns;
    property Rows: Rows read Get_Rows;
    property CanEdit: Integer read Get_CanEdit;
    property CanPaste: Integer read Get_CanPaste;
    property IsEndOfRowMark: WordBool read Get_IsEndOfRowMark;
    property BookmarkID: Integer read Get_BookmarkID;
    property PreviousBookmarkID: Integer read Get_PreviousBookmarkID;
    property Find: Find read Get_Find;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property ShapeRange: ShapeRange read Get_ShapeRange;
    property Case_: WdCharacterCase read Get_Case_ write Set_Case_;
    property Information[Type_: WdInformation]: OleVariant read Get_Information;
    property ReadabilityStatistics: ReadabilityStatistics read Get_ReadabilityStatistics;
    property GrammaticalErrors: ProofreadingErrors read Get_GrammaticalErrors;
    property SpellingErrors: ProofreadingErrors read Get_SpellingErrors;
    property Orientation: WdTextOrientation read Get_Orientation write Set_Orientation;
    property InlineShapes: InlineShapes read Get_InlineShapes;
    property NextStoryRange: WordRange read Get_NextStoryRange;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property LanguageIDOther: WdLanguageID read Get_LanguageIDOther write Set_LanguageIDOther;
    property LanguageDetected: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FitTextWidth: Single read Get_FitTextWidth write Set_FitTextWidth;
    property HorizontalInVertical: WdHorizontalInVerticalType read Get_HorizontalInVertical write Set_HorizontalInVertical;
    property TwoLinesInOne: WdTwoLinesInOneType read Get_TwoLinesInOne write Set_TwoLinesInOne;
    property CombineCharacters: WordBool read Get_CombineCharacters write Set_CombineCharacters;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property TopLevelTables: Tables read Get_TopLevelTables;
    property Scripts: Scripts read Get_Scripts;
    property CharacterWidth: WdCharacterWidth read Get_CharacterWidth write Set_CharacterWidth;
    property Kana: WdKana read Get_Kana write Set_Kana;
    property BoldBi: Integer read Get_BoldBi write Set_BoldBi;
    property ItalicBi: Integer read Get_ItalicBi write Set_ItalicBi;
    property ID: WideString read Get_ID write Set_ID;
    property HTMLDivisions: HTMLDivisions read Get_HTMLDivisions;
    property SmartTags: SmartTags read Get_SmartTags;
    property ShowAll: WordBool read Get_ShowAll write Set_ShowAll;
    property Document: WordDocument read Get_Document;
    property FootnoteOptions: FootnoteOptions read Get_FootnoteOptions;
    property EndnoteOptions: EndnoteOptions read Get_EndnoteOptions;
    property XMLNodes: XMLNodes read Get_XMLNodes;
    property XMLParentNode: XMLNode read Get_XMLParentNode;
    property Editors: Editors read Get_Editors;
    property XML[DataOnly: WordBool]: WideString read Get_XML;
    property EnhMetaFileBits: OleVariant read Get_EnhMetaFileBits;
    property OMaths: OMaths read Get_OMaths;
    property CharacterStyle: OleVariant read Get_CharacterStyle;
    property ParagraphStyle: OleVariant read Get_ParagraphStyle;
    property ListStyle: OleVariant read Get_ListStyle;
    property TableStyle: OleVariant read Get_TableStyle;
    property ContentControls: ContentControls read Get_ContentControls;
    property WordOpenXML: WideString read Get_WordOpenXML;
    property ParentContentControl: ContentControl read Get_ParentContentControl;
    property Locks: CoAuthLocks read Get_Locks;
    property Updates: CoAuthUpdates read Get_Updates;
    property Conflicts: Conflicts read Get_Conflicts;
  end;

// *********************************************************************//
// DispIntf:  WordRangeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095E-0000-0000-C000-000000000046}
// *********************************************************************//
  WordRangeDisp = dispinterface
    ['{0002095E-0000-0000-C000-000000000046}']
    property Text: WideString dispid 0;
    property FormattedText: WordRange dispid 2;
    property Start: Integer dispid 3;
    property End_: Integer dispid 4;
    property Font: WordFont dispid 5;
    property Duplicate: WordRange readonly dispid 6;
    property StoryType: WdStoryType readonly dispid 7;
    property Tables: Tables readonly dispid 50;
    property Words: Words readonly dispid 51;
    property Sentences: Sentences readonly dispid 52;
    property Characters: Characters readonly dispid 53;
    property Footnotes: Footnotes readonly dispid 54;
    property Endnotes: Endnotes readonly dispid 55;
    property Comments: Comments readonly dispid 56;
    property Cells: Cells readonly dispid 57;
    property Sections: Sections readonly dispid 58;
    property Paragraphs: Paragraphs readonly dispid 59;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 61;
    property TextRetrievalMode: TextRetrievalMode dispid 62;
    property Fields: Fields readonly dispid 64;
    property FormFields: FormFields readonly dispid 65;
    property Frames: Frames readonly dispid 66;
    property ParagraphFormat: WordParagraphFormat dispid 1102;
    property ListFormat: ListFormat readonly dispid 68;
    property Bookmarks: Bookmarks readonly dispid 75;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Bold: Integer dispid 130;
    property Italic: Integer dispid 131;
    property Underline: WdUnderline dispid 139;
    property EmphasisMark: WdEmphasisMark dispid 140;
    property DisableCharacterSpaceGrid: WordBool dispid 141;
    property Revisions: Revisions readonly dispid 150;
    function Style: OleVariant; dispid 151;
    property StoryLength: Integer readonly dispid 152;
    property LanguageID: WdLanguageID dispid 153;
    property SynonymInfo: SynonymInfo readonly dispid 155;
    property Hyperlinks: Hyperlinks readonly dispid 156;
    property ListParagraphs: ListParagraphs readonly dispid 157;
    property Subdocuments: Subdocuments readonly dispid 159;
    property GrammarChecked: WordBool dispid 260;
    property SpellingChecked: WordBool dispid 261;
    property HighlightColorIndex: WdColorIndex dispid 301;
    property Columns: Columns readonly dispid 302;
    property Rows: Rows readonly dispid 303;
    property CanEdit: Integer readonly dispid 304;
    property CanPaste: Integer readonly dispid 305;
    property IsEndOfRowMark: WordBool readonly dispid 307;
    property BookmarkID: Integer readonly dispid 308;
    property PreviousBookmarkID: Integer readonly dispid 309;
    property Find: Find readonly dispid 262;
    property PageSetup: PageSetup dispid 1101;
    property ShapeRange: ShapeRange readonly dispid 311;
    property Case_: WdCharacterCase dispid 312;
    property Information[Type_: WdInformation]: OleVariant readonly dispid 313;
    property ReadabilityStatistics: ReadabilityStatistics readonly dispid 314;
    property GrammaticalErrors: ProofreadingErrors readonly dispid 315;
    property SpellingErrors: ProofreadingErrors readonly dispid 316;
    property Orientation: WdTextOrientation dispid 317;
    property InlineShapes: InlineShapes readonly dispid 319;
    property NextStoryRange: WordRange readonly dispid 320;
    property LanguageIDFarEast: WdLanguageID dispid 321;
    property LanguageIDOther: WdLanguageID dispid 322;
    procedure Select; dispid 65535;
    procedure SetRange(Start: Integer; End_: Integer); dispid 100;
    procedure Collapse(var Direction: OleVariant); dispid 101;
    procedure InsertBefore(const Text: WideString); dispid 102;
    procedure InsertAfter(const Text: WideString); dispid 104;
    function Next(var Unit_: OleVariant; var Count: OleVariant): WordRange; dispid 105;
    function Previous(var Unit_: OleVariant; var Count: OleVariant): WordRange; dispid 106;
    function StartOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; dispid 107;
    function EndOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; dispid 108;
    function Move(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 109;
    function MoveStart(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 110;
    function MoveEnd(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 111;
    function MoveWhile(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 112;
    function MoveStartWhile(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 113;
    function MoveEndWhile(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 114;
    function MoveUntil(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 115;
    function MoveStartUntil(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 116;
    function MoveEndUntil(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 117;
    procedure Cut; dispid 119;
    procedure Copy; dispid 120;
    procedure Paste; dispid 121;
    procedure InsertBreak(var Type_: OleVariant); dispid 122;
    procedure InsertFile(const FileName: WideString; var Range: OleVariant; 
                         var ConfirmConversions: OleVariant; var Link: OleVariant; 
                         var Attachment: OleVariant); dispid 123;
    function InStory(const Range: WordRange): WordBool; dispid 125;
    function InRange(const Range: WordRange): WordBool; dispid 126;
    function Delete(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 127;
    procedure WholeStory; dispid 128;
    function Expand(var Unit_: OleVariant): Integer; dispid 129;
    procedure InsertParagraph; dispid 160;
    procedure InsertParagraphAfter; dispid 161;
    function ConvertToTableOld(var Separator: OleVariant; var NumRows: OleVariant; 
                               var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                               var Format: OleVariant; var ApplyBorders: OleVariant; 
                               var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                               var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                               var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                               var ApplyLastColumn: OleVariant; var AutoFit: OleVariant): Table; dispid 162;
    procedure InsertDateTimeOld(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                                var InsertAsFullWidth: OleVariant); dispid 163;
    procedure InsertSymbol(CharacterNumber: Integer; var Font: OleVariant; var Unicode: OleVariant; 
                           var Bias: OleVariant); dispid 164;
    procedure InsertCrossReference_2002(var ReferenceType: OleVariant; 
                                        ReferenceKind: WdReferenceKind; 
                                        var ReferenceItem: OleVariant; 
                                        var InsertAsHyperlink: OleVariant; 
                                        var IncludePosition: OleVariant); dispid 165;
    procedure InsertCaptionXP(var Label_: OleVariant; var Title: OleVariant; 
                              var TitleAutoText: OleVariant; var Position: OleVariant); dispid 166;
    procedure CopyAsPicture; dispid 167;
    procedure SortOld(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                      var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                      var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                      var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                      var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                      var SortColumn: OleVariant; var Separator: OleVariant; 
                      var CaseSensitive: OleVariant; var LanguageID: OleVariant); dispid 168;
    procedure SortAscending; dispid 169;
    procedure SortDescending; dispid 170;
    function IsEqual(const Range: WordRange): WordBool; dispid 171;
    function Calculate: Single; dispid 172;
    function GoTo_(var What: OleVariant; var Which: OleVariant; var Count: OleVariant; 
                   var Name: OleVariant): WordRange; dispid 173;
    function GoToNext(What: WdGoToItem): WordRange; dispid 174;
    function GoToPrevious(What: WdGoToItem): WordRange; dispid 175;
    procedure PasteSpecial(var IconIndex: OleVariant; var Link: OleVariant; 
                           var Placement: OleVariant; var DisplayAsIcon: OleVariant; 
                           var DataType: OleVariant; var IconFileName: OleVariant; 
                           var IconLabel: OleVariant); dispid 176;
    procedure LookupNameProperties; dispid 177;
    function ComputeStatistics(Statistic: WdStatistic): Integer; dispid 178;
    procedure Relocate(Direction: Integer); dispid 179;
    procedure CheckSynonyms; dispid 180;
    procedure SubscribeTo(const Edition: WideString; var Format: OleVariant); dispid 181;
    procedure CreatePublisher(var Edition: OleVariant; var ContainsPICT: OleVariant; 
                              var ContainsRTF: OleVariant; var ContainsText: OleVariant); dispid 182;
    procedure InsertAutoText; dispid 183;
    procedure InsertDatabase(var Format: OleVariant; var Style: OleVariant; 
                             var LinkToSource: OleVariant; var Connection: OleVariant; 
                             var SQLStatement: OleVariant; var SQLStatement1: OleVariant; 
                             var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                             var WritePasswordDocument: OleVariant; 
                             var WritePasswordTemplate: OleVariant; var DataSource: OleVariant; 
                             var From: OleVariant; var To_: OleVariant; 
                             var IncludeFields: OleVariant); dispid 194;
    procedure AutoFormat; dispid 195;
    procedure CheckGrammar; dispid 204;
    procedure CheckSpelling(var CustomDictionary: OleVariant; var IgnoreUppercase: OleVariant; 
                            var AlwaysSuggest: OleVariant; var CustomDictionary2: OleVariant; 
                            var CustomDictionary3: OleVariant; var CustomDictionary4: OleVariant; 
                            var CustomDictionary5: OleVariant; var CustomDictionary6: OleVariant; 
                            var CustomDictionary7: OleVariant; var CustomDictionary8: OleVariant; 
                            var CustomDictionary9: OleVariant; var CustomDictionary10: OleVariant); dispid 205;
    function GetSpellingSuggestions(var CustomDictionary: OleVariant; 
                                    var IgnoreUppercase: OleVariant; 
                                    var MainDictionary: OleVariant; var SuggestionMode: OleVariant; 
                                    var CustomDictionary2: OleVariant; 
                                    var CustomDictionary3: OleVariant; 
                                    var CustomDictionary4: OleVariant; 
                                    var CustomDictionary5: OleVariant; 
                                    var CustomDictionary6: OleVariant; 
                                    var CustomDictionary7: OleVariant; 
                                    var CustomDictionary8: OleVariant; 
                                    var CustomDictionary9: OleVariant; 
                                    var CustomDictionary10: OleVariant): SpellingSuggestions; dispid 209;
    procedure InsertParagraphBefore; dispid 212;
    procedure NextSubdocument; dispid 219;
    procedure PreviousSubdocument; dispid 220;
    procedure ConvertHangulAndHanja(var ConversionsMode: OleVariant; 
                                    var FastConversion: OleVariant; 
                                    var CheckHangulEnding: OleVariant; 
                                    var EnableRecentOrdering: OleVariant; 
                                    var CustomDictionary: OleVariant); dispid 221;
    procedure PasteAsNestedTable; dispid 222;
    procedure ModifyEnclosure(var Style: OleVariant; var Symbol: OleVariant; 
                              var EnclosedText: OleVariant); dispid 223;
    procedure PhoneticGuide(const Text: WideString; Alignment: WdPhoneticGuideAlignmentType; 
                            Raise_: Integer; FontSize: Integer; const FontName: WideString); dispid 224;
    procedure InsertDateTime(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                             var InsertAsFullWidth: OleVariant; var DateLanguage: OleVariant; 
                             var CalendarType: OleVariant); dispid 444;
    procedure Sort(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                   var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                   var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                   var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                   var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                   var SortColumn: OleVariant; var Separator: OleVariant; 
                   var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                   var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                   var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                   var LanguageID: OleVariant); dispid 484;
    procedure DetectLanguage; dispid 203;
    function ConvertToTable(var Separator: OleVariant; var NumRows: OleVariant; 
                            var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                            var Format: OleVariant; var ApplyBorders: OleVariant; 
                            var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                            var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                            var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                            var ApplyLastColumn: OleVariant; var AutoFit: OleVariant; 
                            var AutoFitBehavior: OleVariant; var DefaultTableBehavior: OleVariant): Table; dispid 498;
    procedure TCSCConverter(WdTCSCConverterDirection: WdTCSCConverterDirection; 
                            CommonTerms: WordBool; UseVariants: WordBool); dispid 499;
    property LanguageDetected: WordBool dispid 263;
    property FitTextWidth: Single dispid 264;
    property HorizontalInVertical: WdHorizontalInVerticalType dispid 265;
    property TwoLinesInOne: WdTwoLinesInOneType dispid 266;
    property CombineCharacters: WordBool dispid 267;
    property NoProofing: Integer dispid 323;
    property TopLevelTables: Tables readonly dispid 324;
    property Scripts: Scripts readonly dispid 325;
    property CharacterWidth: WdCharacterWidth dispid 326;
    property Kana: WdKana dispid 327;
    property BoldBi: Integer dispid 400;
    property ItalicBi: Integer dispid 401;
    property ID: WideString dispid 405;
    property HTMLDivisions: HTMLDivisions readonly dispid 406;
    property SmartTags: SmartTags readonly dispid 407;
    property ShowAll: WordBool dispid 408;
    property Document: WordDocument readonly dispid 409;
    property FootnoteOptions: FootnoteOptions readonly dispid 410;
    property EndnoteOptions: EndnoteOptions readonly dispid 411;
    procedure PasteAndFormat(Type_: WdRecoveryType); dispid 412;
    procedure PasteExcelTable(LinkedToExcel: WordBool; WordFormatting: WordBool; RTF: WordBool); dispid 413;
    procedure PasteAppendTable; dispid 414;
    property XMLNodes: XMLNodes readonly dispid 340;
    property XMLParentNode: XMLNode readonly dispid 341;
    property Editors: Editors readonly dispid 343;
    property XML[DataOnly: WordBool]: WideString readonly dispid 344;
    property EnhMetaFileBits: OleVariant readonly dispid 345;
    function GoToEditableRange(var EditorID: OleVariant): WordRange; dispid 415;
    procedure InsertXML(const XML: WideString; var Transform: OleVariant); dispid 416;
    procedure InsertCaption(var Label_: OleVariant; var Title: OleVariant; 
                            var TitleAutoText: OleVariant; var Position: OleVariant; 
                            var ExcludeLabel: OleVariant); dispid 417;
    procedure InsertCrossReference(var ReferenceType: OleVariant; ReferenceKind: WdReferenceKind; 
                                   var ReferenceItem: OleVariant; 
                                   var InsertAsHyperlink: OleVariant; 
                                   var IncludePosition: OleVariant; 
                                   var SeparateNumbers: OleVariant; var SeparatorString: OleVariant); dispid 418;
    property OMaths: OMaths readonly dispid 346;
    property CharacterStyle: OleVariant readonly dispid 420;
    property ParagraphStyle: OleVariant readonly dispid 421;
    property ListStyle: OleVariant readonly dispid 422;
    property TableStyle: OleVariant readonly dispid 423;
    property ContentControls: ContentControls readonly dispid 424;
    procedure ExportFragment(const FileName: WideString; Format: WdSaveFormat); dispid 425;
    property WordOpenXML: WideString readonly dispid 426;
    procedure SetListLevel(Level: Smallint); dispid 427;
    procedure InsertAlignmentTab(Alignment: Integer; RelativeTo: Integer); dispid 500;
    property ParentContentControl: ContentControl readonly dispid 501;
    procedure ImportFragment(const FileName: WideString; MatchDestination: WordBool); dispid 502;
    procedure ExportAsFixedFormat(const OutputFileName: WideString; ExportFormat: WdExportFormat; 
                                  OpenAfterExport: WordBool; OptimizeFor: WdExportOptimizeFor; 
                                  ExportCurrentPage: WordBool; Item: WdExportItem; 
                                  IncludeDocProps: WordBool; KeepIRM: WordBool; 
                                  CreateBookmarks: WdExportCreateBookmarks; 
                                  DocStructureTags: WordBool; BitmapMissingFonts: WordBool; 
                                  UseISO19005_1: WordBool; var FixedFormatExtClassPtr: OleVariant); dispid 503;
    property Locks: CoAuthLocks readonly dispid 504;
    property Updates: CoAuthUpdates readonly dispid 505;
    property Conflicts: Conflicts readonly dispid 506;
  end;

// *********************************************************************//
// Interface: ListFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C0-0000-0000-C000-000000000046}
// *********************************************************************//
  ListFormat = interface(IDispatch)
    ['{000209C0-0000-0000-C000-000000000046}']
    function Get_ListLevelNumber: Integer; safecall;
    procedure Set_ListLevelNumber(prop: Integer); safecall;
    function Get_List: List; safecall;
    function Get_ListTemplate: ListTemplate; safecall;
    function Get_ListValue: Integer; safecall;
    function Get_SingleList: WordBool; safecall;
    function Get_SingleListTemplate: WordBool; safecall;
    function Get_ListType: WdListType; safecall;
    function Get_ListString: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function CanContinuePreviousList(const ListTemplate: ListTemplate): WdContinue; safecall;
    procedure RemoveNumbers(var NumberType: OleVariant); safecall;
    procedure ConvertNumbersToText(var NumberType: OleVariant); safecall;
    function CountNumberedItems(var NumberType: OleVariant; var Level: OleVariant): Integer; safecall;
    procedure ApplyBulletDefaultOld; safecall;
    procedure ApplyNumberDefaultOld; safecall;
    procedure ApplyOutlineNumberDefaultOld; safecall;
    procedure ApplyListTemplateOld(const ListTemplate: ListTemplate; 
                                   var ContinuePreviousList: OleVariant; var ApplyTo: OleVariant); safecall;
    procedure ListOutdent; safecall;
    procedure ListIndent; safecall;
    procedure ApplyBulletDefault(var DefaultListBehavior: OleVariant); safecall;
    procedure ApplyNumberDefault(var DefaultListBehavior: OleVariant); safecall;
    procedure ApplyOutlineNumberDefault(var DefaultListBehavior: OleVariant); safecall;
    procedure ApplyListTemplate(const ListTemplate: ListTemplate; 
                                var ContinuePreviousList: OleVariant; var ApplyTo: OleVariant; 
                                var DefaultListBehavior: OleVariant); safecall;
    function Get_ListPictureBullet: InlineShape; safecall;
    procedure ApplyListTemplateWithLevel(const ListTemplate: ListTemplate; 
                                         var ContinuePreviousList: OleVariant; 
                                         var ApplyTo: OleVariant; 
                                         var DefaultListBehavior: OleVariant; 
                                         var ApplyLevel: OleVariant); safecall;
    property ListLevelNumber: Integer read Get_ListLevelNumber write Set_ListLevelNumber;
    property List: List read Get_List;
    property ListTemplate: ListTemplate read Get_ListTemplate;
    property ListValue: Integer read Get_ListValue;
    property SingleList: WordBool read Get_SingleList;
    property SingleListTemplate: WordBool read Get_SingleListTemplate;
    property ListType: WdListType read Get_ListType;
    property ListString: WideString read Get_ListString;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ListPictureBullet: InlineShape read Get_ListPictureBullet;
  end;

// *********************************************************************//
// DispIntf:  ListFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C0-0000-0000-C000-000000000046}
// *********************************************************************//
  ListFormatDisp = dispinterface
    ['{000209C0-0000-0000-C000-000000000046}']
    property ListLevelNumber: Integer dispid 68;
    property List: List readonly dispid 69;
    property ListTemplate: ListTemplate readonly dispid 70;
    property ListValue: Integer readonly dispid 71;
    property SingleList: WordBool readonly dispid 72;
    property SingleListTemplate: WordBool readonly dispid 73;
    property ListType: WdListType readonly dispid 74;
    property ListString: WideString readonly dispid 75;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function CanContinuePreviousList(const ListTemplate: ListTemplate): WdContinue; dispid 184;
    procedure RemoveNumbers(var NumberType: OleVariant); dispid 185;
    procedure ConvertNumbersToText(var NumberType: OleVariant); dispid 186;
    function CountNumberedItems(var NumberType: OleVariant; var Level: OleVariant): Integer; dispid 187;
    procedure ApplyBulletDefaultOld; dispid 188;
    procedure ApplyNumberDefaultOld; dispid 189;
    procedure ApplyOutlineNumberDefaultOld; dispid 190;
    procedure ApplyListTemplateOld(const ListTemplate: ListTemplate; 
                                   var ContinuePreviousList: OleVariant; var ApplyTo: OleVariant); dispid 191;
    procedure ListOutdent; dispid 210;
    procedure ListIndent; dispid 211;
    procedure ApplyBulletDefault(var DefaultListBehavior: OleVariant); dispid 212;
    procedure ApplyNumberDefault(var DefaultListBehavior: OleVariant); dispid 213;
    procedure ApplyOutlineNumberDefault(var DefaultListBehavior: OleVariant); dispid 214;
    procedure ApplyListTemplate(const ListTemplate: ListTemplate; 
                                var ContinuePreviousList: OleVariant; var ApplyTo: OleVariant; 
                                var DefaultListBehavior: OleVariant); dispid 215;
    property ListPictureBullet: InlineShape readonly dispid 76;
    procedure ApplyListTemplateWithLevel(const ListTemplate: ListTemplate; 
                                         var ContinuePreviousList: OleVariant; 
                                         var ApplyTo: OleVariant; 
                                         var DefaultListBehavior: OleVariant; 
                                         var ApplyLevel: OleVariant); dispid 216;
  end;

// *********************************************************************//
// Interface: Find
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B0-0000-0000-C000-000000000046}
// *********************************************************************//
  Find = interface(IDispatch)
    ['{000209B0-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Forward: WordBool; safecall;
    procedure Set_Forward(prop: WordBool); safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    function Get_Found: WordBool; safecall;
    function Get_MatchAllWordForms: WordBool; safecall;
    procedure Set_MatchAllWordForms(prop: WordBool); safecall;
    function Get_MatchCase: WordBool; safecall;
    procedure Set_MatchCase(prop: WordBool); safecall;
    function Get_MatchWildcards: WordBool; safecall;
    procedure Set_MatchWildcards(prop: WordBool); safecall;
    function Get_MatchSoundsLike: WordBool; safecall;
    procedure Set_MatchSoundsLike(prop: WordBool); safecall;
    function Get_MatchWholeWord: WordBool; safecall;
    procedure Set_MatchWholeWord(prop: WordBool); safecall;
    function Get_MatchFuzzy: WordBool; safecall;
    procedure Set_MatchFuzzy(prop: WordBool); safecall;
    function Get_MatchByte: WordBool; safecall;
    procedure Set_MatchByte(prop: WordBool); safecall;
    function Get_ParagraphFormat: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat(const prop: WordParagraphFormat); safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_Highlight: Integer; safecall;
    procedure Set_Highlight(prop: Integer); safecall;
    function Get_Replacement: Replacement; safecall;
    function Get_Frame: Frame; safecall;
    function Get_Wrap: WdFindWrap; safecall;
    procedure Set_Wrap(prop: WdFindWrap); safecall;
    function Get_Format: WordBool; safecall;
    procedure Set_Format(prop: WordBool); safecall;
    function Get_LanguageIDFarEast: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast(prop: WdLanguageID); safecall;
    function Get_LanguageIDOther: WdLanguageID; safecall;
    procedure Set_LanguageIDOther(prop: WdLanguageID); safecall;
    function Get_CorrectHangulEndings: WordBool; safecall;
    procedure Set_CorrectHangulEndings(prop: WordBool); safecall;
    function ExecuteOld(var FindText: OleVariant; var MatchCase: OleVariant; 
                        var MatchWholeWord: OleVariant; var MatchWildcards: OleVariant; 
                        var MatchSoundsLike: OleVariant; var MatchAllWordForms: OleVariant; 
                        var Forward: OleVariant; var Wrap: OleVariant; var Format: OleVariant; 
                        var ReplaceWith: OleVariant; var Replace: OleVariant): WordBool; safecall;
    procedure ClearFormatting; safecall;
    procedure SetAllFuzzyOptions; safecall;
    procedure ClearAllFuzzyOptions; safecall;
    function Execute(var FindText: OleVariant; var MatchCase: OleVariant; 
                     var MatchWholeWord: OleVariant; var MatchWildcards: OleVariant; 
                     var MatchSoundsLike: OleVariant; var MatchAllWordForms: OleVariant; 
                     var Forward: OleVariant; var Wrap: OleVariant; var Format: OleVariant; 
                     var ReplaceWith: OleVariant; var Replace: OleVariant; 
                     var MatchKashida: OleVariant; var MatchDiacritics: OleVariant; 
                     var MatchAlefHamza: OleVariant; var MatchControl: OleVariant): WordBool; safecall;
    function Get_NoProofing: Integer; safecall;
    procedure Set_NoProofing(prop: Integer); safecall;
    function Get_MatchKashida: WordBool; safecall;
    procedure Set_MatchKashida(prop: WordBool); safecall;
    function Get_MatchDiacritics: WordBool; safecall;
    procedure Set_MatchDiacritics(prop: WordBool); safecall;
    function Get_MatchAlefHamza: WordBool; safecall;
    procedure Set_MatchAlefHamza(prop: WordBool); safecall;
    function Get_MatchControl: WordBool; safecall;
    procedure Set_MatchControl(prop: WordBool); safecall;
    function Get_MatchPhrase: WordBool; safecall;
    procedure Set_MatchPhrase(prop: WordBool); safecall;
    function Get_MatchPrefix: WordBool; safecall;
    procedure Set_MatchPrefix(prop: WordBool); safecall;
    function Get_MatchSuffix: WordBool; safecall;
    procedure Set_MatchSuffix(prop: WordBool); safecall;
    function Get_IgnoreSpace: WordBool; safecall;
    procedure Set_IgnoreSpace(prop: WordBool); safecall;
    function Get_IgnorePunct: WordBool; safecall;
    procedure Set_IgnorePunct(prop: WordBool); safecall;
    function HitHighlight(var FindText: OleVariant; var HighlightColor: OleVariant; 
                          var TextColor: OleVariant; var MatchCase: OleVariant; 
                          var MatchWholeWord: OleVariant; var MatchPrefix: OleVariant; 
                          var MatchSuffix: OleVariant; var MatchPhrase: OleVariant; 
                          var MatchWildcards: OleVariant; var MatchSoundsLike: OleVariant; 
                          var MatchAllWordForms: OleVariant; var MatchByte: OleVariant; 
                          var MatchFuzzy: OleVariant; var MatchKashida: OleVariant; 
                          var MatchDiacritics: OleVariant; var MatchAlefHamza: OleVariant; 
                          var MatchControl: OleVariant; var IgnoreSpace: OleVariant; 
                          var IgnorePunct: OleVariant; var HanjaPhoneticHangul: OleVariant): WordBool; safecall;
    function ClearHitHighlight: WordBool; safecall;
    function Execute2007(var FindText: OleVariant; var MatchCase: OleVariant; 
                         var MatchWholeWord: OleVariant; var MatchWildcards: OleVariant; 
                         var MatchSoundsLike: OleVariant; var MatchAllWordForms: OleVariant; 
                         var Forward: OleVariant; var Wrap: OleVariant; var Format: OleVariant; 
                         var ReplaceWith: OleVariant; var Replace: OleVariant; 
                         var MatchKashida: OleVariant; var MatchDiacritics: OleVariant; 
                         var MatchAlefHamza: OleVariant; var MatchControl: OleVariant; 
                         var MatchPrefix: OleVariant; var MatchSuffix: OleVariant; 
                         var MatchPhrase: OleVariant; var IgnoreSpace: OleVariant; 
                         var IgnorePunct: OleVariant): WordBool; safecall;
    function Get_HanjaPhoneticHangul: WordBool; safecall;
    procedure Set_HanjaPhoneticHangul(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Forward: WordBool read Get_Forward write Set_Forward;
    property Font: WordFont read Get_Font write Set_Font;
    property Found: WordBool read Get_Found;
    property MatchAllWordForms: WordBool read Get_MatchAllWordForms write Set_MatchAllWordForms;
    property MatchCase: WordBool read Get_MatchCase write Set_MatchCase;
    property MatchWildcards: WordBool read Get_MatchWildcards write Set_MatchWildcards;
    property MatchSoundsLike: WordBool read Get_MatchSoundsLike write Set_MatchSoundsLike;
    property MatchWholeWord: WordBool read Get_MatchWholeWord write Set_MatchWholeWord;
    property MatchFuzzy: WordBool read Get_MatchFuzzy write Set_MatchFuzzy;
    property MatchByte: WordBool read Get_MatchByte write Set_MatchByte;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Text: WideString read Get_Text write Set_Text;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property Highlight: Integer read Get_Highlight write Set_Highlight;
    property Replacement: Replacement read Get_Replacement;
    property Frame: Frame read Get_Frame;
    property Wrap: WdFindWrap read Get_Wrap write Set_Wrap;
    property Format: WordBool read Get_Format write Set_Format;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property LanguageIDOther: WdLanguageID read Get_LanguageIDOther write Set_LanguageIDOther;
    property CorrectHangulEndings: WordBool read Get_CorrectHangulEndings write Set_CorrectHangulEndings;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property MatchKashida: WordBool read Get_MatchKashida write Set_MatchKashida;
    property MatchDiacritics: WordBool read Get_MatchDiacritics write Set_MatchDiacritics;
    property MatchAlefHamza: WordBool read Get_MatchAlefHamza write Set_MatchAlefHamza;
    property MatchControl: WordBool read Get_MatchControl write Set_MatchControl;
    property MatchPhrase: WordBool read Get_MatchPhrase write Set_MatchPhrase;
    property MatchPrefix: WordBool read Get_MatchPrefix write Set_MatchPrefix;
    property MatchSuffix: WordBool read Get_MatchSuffix write Set_MatchSuffix;
    property IgnoreSpace: WordBool read Get_IgnoreSpace write Set_IgnoreSpace;
    property IgnorePunct: WordBool read Get_IgnorePunct write Set_IgnorePunct;
    property HanjaPhoneticHangul: WordBool read Get_HanjaPhoneticHangul write Set_HanjaPhoneticHangul;
  end;

// *********************************************************************//
// DispIntf:  FindDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B0-0000-0000-C000-000000000046}
// *********************************************************************//
  FindDisp = dispinterface
    ['{000209B0-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Forward: WordBool dispid 10;
    property Font: WordFont dispid 11;
    property Found: WordBool readonly dispid 12;
    property MatchAllWordForms: WordBool dispid 13;
    property MatchCase: WordBool dispid 14;
    property MatchWildcards: WordBool dispid 15;
    property MatchSoundsLike: WordBool dispid 16;
    property MatchWholeWord: WordBool dispid 17;
    property MatchFuzzy: WordBool dispid 40;
    property MatchByte: WordBool dispid 41;
    property ParagraphFormat: WordParagraphFormat dispid 18;
    function Style: OleVariant; dispid 19;
    property Text: WideString dispid 22;
    property LanguageID: WdLanguageID dispid 23;
    property Highlight: Integer dispid 24;
    property Replacement: Replacement readonly dispid 25;
    property Frame: Frame readonly dispid 26;
    property Wrap: WdFindWrap dispid 27;
    property Format: WordBool dispid 28;
    property LanguageIDFarEast: WdLanguageID dispid 29;
    property LanguageIDOther: WdLanguageID dispid 60;
    property CorrectHangulEndings: WordBool dispid 61;
    function ExecuteOld(var FindText: OleVariant; var MatchCase: OleVariant; 
                        var MatchWholeWord: OleVariant; var MatchWildcards: OleVariant; 
                        var MatchSoundsLike: OleVariant; var MatchAllWordForms: OleVariant; 
                        var Forward: OleVariant; var Wrap: OleVariant; var Format: OleVariant; 
                        var ReplaceWith: OleVariant; var Replace: OleVariant): WordBool; dispid 30;
    procedure ClearFormatting; dispid 31;
    procedure SetAllFuzzyOptions; dispid 32;
    procedure ClearAllFuzzyOptions; dispid 33;
    function Execute(var FindText: OleVariant; var MatchCase: OleVariant; 
                     var MatchWholeWord: OleVariant; var MatchWildcards: OleVariant; 
                     var MatchSoundsLike: OleVariant; var MatchAllWordForms: OleVariant; 
                     var Forward: OleVariant; var Wrap: OleVariant; var Format: OleVariant; 
                     var ReplaceWith: OleVariant; var Replace: OleVariant; 
                     var MatchKashida: OleVariant; var MatchDiacritics: OleVariant; 
                     var MatchAlefHamza: OleVariant; var MatchControl: OleVariant): WordBool; dispid 444;
    property NoProofing: Integer dispid 34;
    property MatchKashida: WordBool dispid 100;
    property MatchDiacritics: WordBool dispid 101;
    property MatchAlefHamza: WordBool dispid 102;
    property MatchControl: WordBool dispid 103;
    property MatchPhrase: WordBool dispid 104;
    property MatchPrefix: WordBool dispid 105;
    property MatchSuffix: WordBool dispid 106;
    property IgnoreSpace: WordBool dispid 107;
    property IgnorePunct: WordBool dispid 108;
    function HitHighlight(var FindText: OleVariant; var HighlightColor: OleVariant; 
                          var TextColor: OleVariant; var MatchCase: OleVariant; 
                          var MatchWholeWord: OleVariant; var MatchPrefix: OleVariant; 
                          var MatchSuffix: OleVariant; var MatchPhrase: OleVariant; 
                          var MatchWildcards: OleVariant; var MatchSoundsLike: OleVariant; 
                          var MatchAllWordForms: OleVariant; var MatchByte: OleVariant; 
                          var MatchFuzzy: OleVariant; var MatchKashida: OleVariant; 
                          var MatchDiacritics: OleVariant; var MatchAlefHamza: OleVariant; 
                          var MatchControl: OleVariant; var IgnoreSpace: OleVariant; 
                          var IgnorePunct: OleVariant; var HanjaPhoneticHangul: OleVariant): WordBool; dispid 445;
    function ClearHitHighlight: WordBool; dispid 446;
    function Execute2007(var FindText: OleVariant; var MatchCase: OleVariant; 
                         var MatchWholeWord: OleVariant; var MatchWildcards: OleVariant; 
                         var MatchSoundsLike: OleVariant; var MatchAllWordForms: OleVariant; 
                         var Forward: OleVariant; var Wrap: OleVariant; var Format: OleVariant; 
                         var ReplaceWith: OleVariant; var Replace: OleVariant; 
                         var MatchKashida: OleVariant; var MatchDiacritics: OleVariant; 
                         var MatchAlefHamza: OleVariant; var MatchControl: OleVariant; 
                         var MatchPrefix: OleVariant; var MatchSuffix: OleVariant; 
                         var MatchPhrase: OleVariant; var IgnoreSpace: OleVariant; 
                         var IgnorePunct: OleVariant): WordBool; dispid 447;
    property HanjaPhoneticHangul: WordBool dispid 109;
  end;

// *********************************************************************//
// Interface: Replacement
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B1-0000-0000-C000-000000000046}
// *********************************************************************//
  Replacement = interface(IDispatch)
    ['{000209B1-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    function Get_ParagraphFormat: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat(const prop: WordParagraphFormat); safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_Highlight: Integer; safecall;
    procedure Set_Highlight(prop: Integer); safecall;
    function Get_Frame: Frame; safecall;
    function Get_LanguageIDFarEast: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast(prop: WdLanguageID); safecall;
    procedure ClearFormatting; safecall;
    function Get_NoProofing: Integer; safecall;
    procedure Set_NoProofing(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Font: WordFont read Get_Font write Set_Font;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Text: WideString read Get_Text write Set_Text;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property Highlight: Integer read Get_Highlight write Set_Highlight;
    property Frame: Frame read Get_Frame;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
  end;

// *********************************************************************//
// DispIntf:  ReplacementDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B1-0000-0000-C000-000000000046}
// *********************************************************************//
  ReplacementDisp = dispinterface
    ['{000209B1-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Font: WordFont dispid 10;
    property ParagraphFormat: WordParagraphFormat dispid 11;
    function Style: OleVariant; dispid 12;
    property Text: WideString dispid 15;
    property LanguageID: WdLanguageID dispid 16;
    property Highlight: Integer dispid 17;
    property Frame: Frame readonly dispid 18;
    property LanguageIDFarEast: WdLanguageID dispid 19;
    procedure ClearFormatting; dispid 20;
    property NoProofing: Integer dispid 21;
  end;

// *********************************************************************//
// Interface: Characters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095D-0000-0000-C000-000000000046}
// *********************************************************************//
  Characters = interface(IDispatch)
    ['{0002095D-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_First: WordRange; safecall;
    function Get_Last: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): WordRange; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: WordRange read Get_First;
    property Last: WordRange read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  CharactersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095D-0000-0000-C000-000000000046}
// *********************************************************************//
  CharactersDisp = dispinterface
    ['{0002095D-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property First: WordRange readonly dispid 3;
    property Last: WordRange readonly dispid 4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): WordRange; dispid 0;
  end;

// *********************************************************************//
// Interface: Words
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095C-0000-0000-C000-000000000046}
// *********************************************************************//
  Words = interface(IDispatch)
    ['{0002095C-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_First: WordRange; safecall;
    function Get_Last: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): WordRange; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: WordRange read Get_First;
    property Last: WordRange read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  WordsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095C-0000-0000-C000-000000000046}
// *********************************************************************//
  WordsDisp = dispinterface
    ['{0002095C-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property First: WordRange readonly dispid 3;
    property Last: WordRange readonly dispid 4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): WordRange; dispid 0;
  end;

// *********************************************************************//
// Interface: Sentences
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095B-0000-0000-C000-000000000046}
// *********************************************************************//
  Sentences = interface(IDispatch)
    ['{0002095B-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_First: WordRange; safecall;
    function Get_Last: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): WordRange; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: WordRange read Get_First;
    property Last: WordRange read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SentencesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095B-0000-0000-C000-000000000046}
// *********************************************************************//
  SentencesDisp = dispinterface
    ['{0002095B-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property First: WordRange readonly dispid 3;
    property Last: WordRange readonly dispid 4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): WordRange; dispid 0;
  end;

// *********************************************************************//
// Interface: Sections
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095A-0000-0000-C000-000000000046}
// *********************************************************************//
  Sections = interface(IDispatch)
    ['{0002095A-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_First: Section; safecall;
    function Get_Last: Section; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_PageSetup: PageSetup; safecall;
    procedure Set_PageSetup(const prop: PageSetup); safecall;
    function Item(Index: Integer): Section; safecall;
    function Add(var Range: OleVariant; var Start: OleVariant): Section; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Section read Get_First;
    property Last: Section read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
  end;

// *********************************************************************//
// DispIntf:  SectionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002095A-0000-0000-C000-000000000046}
// *********************************************************************//
  SectionsDisp = dispinterface
    ['{0002095A-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property First: Section readonly dispid 3;
    property Last: Section readonly dispid 4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property PageSetup: PageSetup dispid 1101;
    function Item(Index: Integer): Section; dispid 0;
    function Add(var Range: OleVariant; var Start: OleVariant): Section; dispid 5;
  end;

// *********************************************************************//
// Interface: Section
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020959-0000-0000-C000-000000000046}
// *********************************************************************//
  Section = interface(IDispatch)
    ['{00020959-0000-0000-C000-000000000046}']
    function Get_Range: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_PageSetup: PageSetup; safecall;
    procedure Set_PageSetup(const prop: PageSetup); safecall;
    function Get_Headers: HeadersFooters; safecall;
    function Get_Footers: HeadersFooters; safecall;
    function Get_ProtectedForForms: WordBool; safecall;
    procedure Set_ProtectedForForms(prop: WordBool); safecall;
    function Get_Index: Integer; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    property Range: WordRange read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property Headers: HeadersFooters read Get_Headers;
    property Footers: HeadersFooters read Get_Footers;
    property ProtectedForForms: WordBool read Get_ProtectedForForms write Set_ProtectedForForms;
    property Index: Integer read Get_Index;
    property Borders: Borders read Get_Borders write Set_Borders;
  end;

// *********************************************************************//
// DispIntf:  SectionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020959-0000-0000-C000-000000000046}
// *********************************************************************//
  SectionDisp = dispinterface
    ['{00020959-0000-0000-C000-000000000046}']
    property Range: WordRange readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property PageSetup: PageSetup dispid 1101;
    property Headers: HeadersFooters readonly dispid 121;
    property Footers: HeadersFooters readonly dispid 122;
    property ProtectedForForms: WordBool dispid 123;
    property Index: Integer readonly dispid 124;
    property Borders: Borders dispid 1100;
  end;

// *********************************************************************//
// Interface: Paragraphs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020958-0000-0000-C000-000000000046}
// *********************************************************************//
  Paragraphs = interface(IDispatch)
    ['{00020958-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_First: Paragraph; safecall;
    function Get_Last: Paragraph; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Format: WordParagraphFormat; safecall;
    procedure Set_Format(const prop: WordParagraphFormat); safecall;
    function Get_TabStops: TabStops; safecall;
    procedure Set_TabStops(const prop: TabStops); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Alignment: WdParagraphAlignment; safecall;
    procedure Set_Alignment(prop: WdParagraphAlignment); safecall;
    function Get_KeepTogether: Integer; safecall;
    procedure Set_KeepTogether(prop: Integer); safecall;
    function Get_KeepWithNext: Integer; safecall;
    procedure Set_KeepWithNext(prop: Integer); safecall;
    function Get_PageBreakBefore: Integer; safecall;
    procedure Set_PageBreakBefore(prop: Integer); safecall;
    function Get_NoLineNumber: Integer; safecall;
    procedure Set_NoLineNumber(prop: Integer); safecall;
    function Get_RightIndent: Single; safecall;
    procedure Set_RightIndent(prop: Single); safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_FirstLineIndent: Single; safecall;
    procedure Set_FirstLineIndent(prop: Single); safecall;
    function Get_LineSpacing: Single; safecall;
    procedure Set_LineSpacing(prop: Single); safecall;
    function Get_LineSpacingRule: WdLineSpacing; safecall;
    procedure Set_LineSpacingRule(prop: WdLineSpacing); safecall;
    function Get_SpaceBefore: Single; safecall;
    procedure Set_SpaceBefore(prop: Single); safecall;
    function Get_SpaceAfter: Single; safecall;
    procedure Set_SpaceAfter(prop: Single); safecall;
    function Get_Hyphenation: Integer; safecall;
    procedure Set_Hyphenation(prop: Integer); safecall;
    function Get_WidowControl: Integer; safecall;
    procedure Set_WidowControl(prop: Integer); safecall;
    function Get_Shading: Shading; safecall;
    function Get_FarEastLineBreakControl: Integer; safecall;
    procedure Set_FarEastLineBreakControl(prop: Integer); safecall;
    function Get_WordWrap: Integer; safecall;
    procedure Set_WordWrap(prop: Integer); safecall;
    function Get_HangingPunctuation: Integer; safecall;
    procedure Set_HangingPunctuation(prop: Integer); safecall;
    function Get_HalfWidthPunctuationOnTopOfLine: Integer; safecall;
    procedure Set_HalfWidthPunctuationOnTopOfLine(prop: Integer); safecall;
    function Get_AddSpaceBetweenFarEastAndAlpha: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndAlpha(prop: Integer); safecall;
    function Get_AddSpaceBetweenFarEastAndDigit: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndDigit(prop: Integer); safecall;
    function Get_BaseLineAlignment: WdBaselineAlignment; safecall;
    procedure Set_BaseLineAlignment(prop: WdBaselineAlignment); safecall;
    function Get_AutoAdjustRightIndent: Integer; safecall;
    procedure Set_AutoAdjustRightIndent(prop: Integer); safecall;
    function Get_DisableLineHeightGrid: Integer; safecall;
    procedure Set_DisableLineHeightGrid(prop: Integer); safecall;
    function Get_OutlineLevel: WdOutlineLevel; safecall;
    procedure Set_OutlineLevel(prop: WdOutlineLevel); safecall;
    function Item(Index: Integer): Paragraph; safecall;
    function Add(var Range: OleVariant): Paragraph; safecall;
    procedure CloseUp; safecall;
    procedure OpenUp; safecall;
    procedure OpenOrCloseUp; safecall;
    procedure TabHangingIndent(Count: Smallint); safecall;
    procedure TabIndent(Count: Smallint); safecall;
    procedure Reset; safecall;
    procedure Space1; safecall;
    procedure Space15; safecall;
    procedure Space2; safecall;
    procedure IndentCharWidth(Count: Smallint); safecall;
    procedure IndentFirstLineCharWidth(Count: Smallint); safecall;
    procedure OutlinePromote; safecall;
    procedure OutlineDemote; safecall;
    procedure OutlineDemoteToBody; safecall;
    procedure Indent; safecall;
    procedure Outdent; safecall;
    function Get_CharacterUnitRightIndent: Single; safecall;
    procedure Set_CharacterUnitRightIndent(prop: Single); safecall;
    function Get_CharacterUnitLeftIndent: Single; safecall;
    procedure Set_CharacterUnitLeftIndent(prop: Single); safecall;
    function Get_CharacterUnitFirstLineIndent: Single; safecall;
    procedure Set_CharacterUnitFirstLineIndent(prop: Single); safecall;
    function Get_LineUnitBefore: Single; safecall;
    procedure Set_LineUnitBefore(prop: Single); safecall;
    function Get_LineUnitAfter: Single; safecall;
    procedure Set_LineUnitAfter(prop: Single); safecall;
    function Get_ReadingOrder: WdReadingOrder; safecall;
    procedure Set_ReadingOrder(prop: WdReadingOrder); safecall;
    function Get_SpaceBeforeAuto: Integer; safecall;
    procedure Set_SpaceBeforeAuto(prop: Integer); safecall;
    function Get_SpaceAfterAuto: Integer; safecall;
    procedure Set_SpaceAfterAuto(prop: Integer); safecall;
    procedure IncreaseSpacing; safecall;
    procedure DecreaseSpacing; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property First: Paragraph read Get_First;
    property Last: Paragraph read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Format: WordParagraphFormat read Get_Format write Set_Format;
    property TabStops: TabStops read Get_TabStops write Set_TabStops;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Alignment: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl: Integer read Get_WidowControl write Set_WidowControl;
    property Shading: Shading read Get_Shading;
    property FarEastLineBreakControl: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property OutlineLevel: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property SpaceBeforeAuto: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
  end;

// *********************************************************************//
// DispIntf:  ParagraphsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020958-0000-0000-C000-000000000046}
// *********************************************************************//
  ParagraphsDisp = dispinterface
    ['{00020958-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property First: Paragraph readonly dispid 3;
    property Last: Paragraph readonly dispid 4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Format: WordParagraphFormat dispid 1102;
    property TabStops: TabStops dispid 1103;
    property Borders: Borders dispid 1100;
    function Style: OleVariant; dispid 100;
    property Alignment: WdParagraphAlignment dispid 101;
    property KeepTogether: Integer dispid 102;
    property KeepWithNext: Integer dispid 103;
    property PageBreakBefore: Integer dispid 104;
    property NoLineNumber: Integer dispid 105;
    property RightIndent: Single dispid 106;
    property LeftIndent: Single dispid 107;
    property FirstLineIndent: Single dispid 108;
    property LineSpacing: Single dispid 109;
    property LineSpacingRule: WdLineSpacing dispid 110;
    property SpaceBefore: Single dispid 111;
    property SpaceAfter: Single dispid 112;
    property Hyphenation: Integer dispid 113;
    property WidowControl: Integer dispid 114;
    property Shading: Shading readonly dispid 116;
    property FarEastLineBreakControl: Integer dispid 117;
    property WordWrap: Integer dispid 118;
    property HangingPunctuation: Integer dispid 119;
    property HalfWidthPunctuationOnTopOfLine: Integer dispid 120;
    property AddSpaceBetweenFarEastAndAlpha: Integer dispid 121;
    property AddSpaceBetweenFarEastAndDigit: Integer dispid 122;
    property BaseLineAlignment: WdBaselineAlignment dispid 123;
    property AutoAdjustRightIndent: Integer dispid 124;
    property DisableLineHeightGrid: Integer dispid 125;
    property OutlineLevel: WdOutlineLevel dispid 202;
    function Item(Index: Integer): Paragraph; dispid 0;
    function Add(var Range: OleVariant): Paragraph; dispid 5;
    procedure CloseUp; dispid 301;
    procedure OpenUp; dispid 302;
    procedure OpenOrCloseUp; dispid 303;
    procedure TabHangingIndent(Count: Smallint); dispid 304;
    procedure TabIndent(Count: Smallint); dispid 306;
    procedure Reset; dispid 312;
    procedure Space1; dispid 313;
    procedure Space15; dispid 314;
    procedure Space2; dispid 315;
    procedure IndentCharWidth(Count: Smallint); dispid 320;
    procedure IndentFirstLineCharWidth(Count: Smallint); dispid 322;
    procedure OutlinePromote; dispid 324;
    procedure OutlineDemote; dispid 325;
    procedure OutlineDemoteToBody; dispid 326;
    procedure Indent; dispid 333;
    procedure Outdent; dispid 334;
    property CharacterUnitRightIndent: Single dispid 126;
    property CharacterUnitLeftIndent: Single dispid 127;
    property CharacterUnitFirstLineIndent: Single dispid 128;
    property LineUnitBefore: Single dispid 129;
    property LineUnitAfter: Single dispid 130;
    property ReadingOrder: WdReadingOrder dispid 131;
    property SpaceBeforeAuto: Integer dispid 132;
    property SpaceAfterAuto: Integer dispid 133;
    procedure IncreaseSpacing; dispid 335;
    procedure DecreaseSpacing; dispid 336;
  end;

// *********************************************************************//
// Interface: Paragraph
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020957-0000-0000-C000-000000000046}
// *********************************************************************//
  Paragraph = interface(IDispatch)
    ['{00020957-0000-0000-C000-000000000046}']
    function Get_Range: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Format: WordParagraphFormat; safecall;
    procedure Set_Format(const prop: WordParagraphFormat); safecall;
    function Get_TabStops: TabStops; safecall;
    procedure Set_TabStops(const prop: TabStops); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_DropCap: DropCap; safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Alignment: WdParagraphAlignment; safecall;
    procedure Set_Alignment(prop: WdParagraphAlignment); safecall;
    function Get_KeepTogether: Integer; safecall;
    procedure Set_KeepTogether(prop: Integer); safecall;
    function Get_KeepWithNext: Integer; safecall;
    procedure Set_KeepWithNext(prop: Integer); safecall;
    function Get_PageBreakBefore: Integer; safecall;
    procedure Set_PageBreakBefore(prop: Integer); safecall;
    function Get_NoLineNumber: Integer; safecall;
    procedure Set_NoLineNumber(prop: Integer); safecall;
    function Get_RightIndent: Single; safecall;
    procedure Set_RightIndent(prop: Single); safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_FirstLineIndent: Single; safecall;
    procedure Set_FirstLineIndent(prop: Single); safecall;
    function Get_LineSpacing: Single; safecall;
    procedure Set_LineSpacing(prop: Single); safecall;
    function Get_LineSpacingRule: WdLineSpacing; safecall;
    procedure Set_LineSpacingRule(prop: WdLineSpacing); safecall;
    function Get_SpaceBefore: Single; safecall;
    procedure Set_SpaceBefore(prop: Single); safecall;
    function Get_SpaceAfter: Single; safecall;
    procedure Set_SpaceAfter(prop: Single); safecall;
    function Get_Hyphenation: Integer; safecall;
    procedure Set_Hyphenation(prop: Integer); safecall;
    function Get_WidowControl: Integer; safecall;
    procedure Set_WidowControl(prop: Integer); safecall;
    function Get_Shading: Shading; safecall;
    function Get_FarEastLineBreakControl: Integer; safecall;
    procedure Set_FarEastLineBreakControl(prop: Integer); safecall;
    function Get_WordWrap: Integer; safecall;
    procedure Set_WordWrap(prop: Integer); safecall;
    function Get_HangingPunctuation: Integer; safecall;
    procedure Set_HangingPunctuation(prop: Integer); safecall;
    function Get_HalfWidthPunctuationOnTopOfLine: Integer; safecall;
    procedure Set_HalfWidthPunctuationOnTopOfLine(prop: Integer); safecall;
    function Get_AddSpaceBetweenFarEastAndAlpha: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndAlpha(prop: Integer); safecall;
    function Get_AddSpaceBetweenFarEastAndDigit: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndDigit(prop: Integer); safecall;
    function Get_BaseLineAlignment: WdBaselineAlignment; safecall;
    procedure Set_BaseLineAlignment(prop: WdBaselineAlignment); safecall;
    function Get_AutoAdjustRightIndent: Integer; safecall;
    procedure Set_AutoAdjustRightIndent(prop: Integer); safecall;
    function Get_DisableLineHeightGrid: Integer; safecall;
    procedure Set_DisableLineHeightGrid(prop: Integer); safecall;
    function Get_OutlineLevel: WdOutlineLevel; safecall;
    procedure Set_OutlineLevel(prop: WdOutlineLevel); safecall;
    procedure CloseUp; safecall;
    procedure OpenUp; safecall;
    procedure OpenOrCloseUp; safecall;
    procedure TabHangingIndent(Count: Smallint); safecall;
    procedure TabIndent(Count: Smallint); safecall;
    procedure Reset; safecall;
    procedure Space1; safecall;
    procedure Space15; safecall;
    procedure Space2; safecall;
    procedure IndentCharWidth(Count: Smallint); safecall;
    procedure IndentFirstLineCharWidth(Count: Smallint); safecall;
    function Next(var Count: OleVariant): Paragraph; safecall;
    function Previous(var Count: OleVariant): Paragraph; safecall;
    procedure OutlinePromote; safecall;
    procedure OutlineDemote; safecall;
    procedure OutlineDemoteToBody; safecall;
    procedure Indent; safecall;
    procedure Outdent; safecall;
    function Get_CharacterUnitRightIndent: Single; safecall;
    procedure Set_CharacterUnitRightIndent(prop: Single); safecall;
    function Get_CharacterUnitLeftIndent: Single; safecall;
    procedure Set_CharacterUnitLeftIndent(prop: Single); safecall;
    function Get_CharacterUnitFirstLineIndent: Single; safecall;
    procedure Set_CharacterUnitFirstLineIndent(prop: Single); safecall;
    function Get_LineUnitBefore: Single; safecall;
    procedure Set_LineUnitBefore(prop: Single); safecall;
    function Get_LineUnitAfter: Single; safecall;
    procedure Set_LineUnitAfter(prop: Single); safecall;
    function Get_ReadingOrder: WdReadingOrder; safecall;
    procedure Set_ReadingOrder(prop: WdReadingOrder); safecall;
    function Get_ID: WideString; safecall;
    procedure Set_ID(const prop: WideString); safecall;
    function Get_SpaceBeforeAuto: Integer; safecall;
    procedure Set_SpaceBeforeAuto(prop: Integer); safecall;
    function Get_SpaceAfterAuto: Integer; safecall;
    procedure Set_SpaceAfterAuto(prop: Integer); safecall;
    function Get_IsStyleSeparator: WordBool; safecall;
    procedure SelectNumber; safecall;
    procedure ListAdvanceTo(Level1: Smallint; Level2: Smallint; Level3: Smallint; Level4: Smallint; 
                            Level5: Smallint; Level6: Smallint; Level7: Smallint; Level8: Smallint; 
                            Level9: Smallint); safecall;
    procedure ResetAdvanceTo; safecall;
    procedure SeparateList; safecall;
    procedure JoinList; safecall;
    function Get_MirrorIndents: Integer; safecall;
    procedure Set_MirrorIndents(prop: Integer); safecall;
    function Get_TextboxTightWrap: WdTextboxTightWrap; safecall;
    procedure Set_TextboxTightWrap(prop: WdTextboxTightWrap); safecall;
    function Get_ListNumberOriginal(Level: Smallint): Smallint; safecall;
    function Get_ParaID: Integer; safecall;
    function Get_TextID: Integer; safecall;
    property Range: WordRange read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Format: WordParagraphFormat read Get_Format write Set_Format;
    property TabStops: TabStops read Get_TabStops write Set_TabStops;
    property Borders: Borders read Get_Borders write Set_Borders;
    property DropCap: DropCap read Get_DropCap;
    property Alignment: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl: Integer read Get_WidowControl write Set_WidowControl;
    property Shading: Shading read Get_Shading;
    property FarEastLineBreakControl: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property OutlineLevel: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property ID: WideString read Get_ID write Set_ID;
    property SpaceBeforeAuto: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
    property IsStyleSeparator: WordBool read Get_IsStyleSeparator;
    property MirrorIndents: Integer read Get_MirrorIndents write Set_MirrorIndents;
    property TextboxTightWrap: WdTextboxTightWrap read Get_TextboxTightWrap write Set_TextboxTightWrap;
    property ListNumberOriginal[Level: Smallint]: Smallint read Get_ListNumberOriginal;
    property ParaID: Integer read Get_ParaID;
    property TextID: Integer read Get_TextID;
  end;

// *********************************************************************//
// DispIntf:  ParagraphDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020957-0000-0000-C000-000000000046}
// *********************************************************************//
  ParagraphDisp = dispinterface
    ['{00020957-0000-0000-C000-000000000046}']
    property Range: WordRange readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Format: WordParagraphFormat dispid 1102;
    property TabStops: TabStops dispid 1103;
    property Borders: Borders dispid 1100;
    property DropCap: DropCap readonly dispid 13;
    function Style: OleVariant; dispid 100;
    property Alignment: WdParagraphAlignment dispid 101;
    property KeepTogether: Integer dispid 102;
    property KeepWithNext: Integer dispid 103;
    property PageBreakBefore: Integer dispid 104;
    property NoLineNumber: Integer dispid 105;
    property RightIndent: Single dispid 106;
    property LeftIndent: Single dispid 107;
    property FirstLineIndent: Single dispid 108;
    property LineSpacing: Single dispid 109;
    property LineSpacingRule: WdLineSpacing dispid 110;
    property SpaceBefore: Single dispid 111;
    property SpaceAfter: Single dispid 112;
    property Hyphenation: Integer dispid 113;
    property WidowControl: Integer dispid 114;
    property Shading: Shading readonly dispid 116;
    property FarEastLineBreakControl: Integer dispid 117;
    property WordWrap: Integer dispid 118;
    property HangingPunctuation: Integer dispid 119;
    property HalfWidthPunctuationOnTopOfLine: Integer dispid 120;
    property AddSpaceBetweenFarEastAndAlpha: Integer dispid 121;
    property AddSpaceBetweenFarEastAndDigit: Integer dispid 122;
    property BaseLineAlignment: WdBaselineAlignment dispid 123;
    property AutoAdjustRightIndent: Integer dispid 124;
    property DisableLineHeightGrid: Integer dispid 125;
    property OutlineLevel: WdOutlineLevel dispid 202;
    procedure CloseUp; dispid 301;
    procedure OpenUp; dispid 302;
    procedure OpenOrCloseUp; dispid 303;
    procedure TabHangingIndent(Count: Smallint); dispid 304;
    procedure TabIndent(Count: Smallint); dispid 306;
    procedure Reset; dispid 312;
    procedure Space1; dispid 313;
    procedure Space15; dispid 314;
    procedure Space2; dispid 315;
    procedure IndentCharWidth(Count: Smallint); dispid 320;
    procedure IndentFirstLineCharWidth(Count: Smallint); dispid 322;
    function Next(var Count: OleVariant): Paragraph; dispid 324;
    function Previous(var Count: OleVariant): Paragraph; dispid 325;
    procedure OutlinePromote; dispid 326;
    procedure OutlineDemote; dispid 327;
    procedure OutlineDemoteToBody; dispid 328;
    procedure Indent; dispid 333;
    procedure Outdent; dispid 334;
    property CharacterUnitRightIndent: Single dispid 126;
    property CharacterUnitLeftIndent: Single dispid 127;
    property CharacterUnitFirstLineIndent: Single dispid 128;
    property LineUnitBefore: Single dispid 129;
    property LineUnitAfter: Single dispid 130;
    property ReadingOrder: WdReadingOrder dispid 203;
    property ID: WideString dispid 204;
    property SpaceBeforeAuto: Integer dispid 132;
    property SpaceAfterAuto: Integer dispid 133;
    property IsStyleSeparator: WordBool readonly dispid 134;
    procedure SelectNumber; dispid 335;
    procedure ListAdvanceTo(Level1: Smallint; Level2: Smallint; Level3: Smallint; Level4: Smallint; 
                            Level5: Smallint; Level6: Smallint; Level7: Smallint; Level8: Smallint; 
                            Level9: Smallint); dispid 336;
    procedure ResetAdvanceTo; dispid 337;
    procedure SeparateList; dispid 338;
    procedure JoinList; dispid 339;
    property MirrorIndents: Integer dispid 135;
    property TextboxTightWrap: WdTextboxTightWrap dispid 136;
    property ListNumberOriginal[Level: Smallint]: Smallint readonly dispid 137;
    property ParaID: Integer readonly dispid 138;
    property TextID: Integer readonly dispid 140;
  end;

// *********************************************************************//
// Interface: DropCap
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020956-0000-0000-C000-000000000046}
// *********************************************************************//
  DropCap = interface(IDispatch)
    ['{00020956-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Position: WdDropPosition; safecall;
    procedure Set_Position(prop: WdDropPosition); safecall;
    function Get_FontName: WideString; safecall;
    procedure Set_FontName(const prop: WideString); safecall;
    function Get_LinesToDrop: Integer; safecall;
    procedure Set_LinesToDrop(prop: Integer); safecall;
    function Get_DistanceFromText: Single; safecall;
    procedure Set_DistanceFromText(prop: Single); safecall;
    procedure Clear; safecall;
    procedure Enable; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Position: WdDropPosition read Get_Position write Set_Position;
    property FontName: WideString read Get_FontName write Set_FontName;
    property LinesToDrop: Integer read Get_LinesToDrop write Set_LinesToDrop;
    property DistanceFromText: Single read Get_DistanceFromText write Set_DistanceFromText;
  end;

// *********************************************************************//
// DispIntf:  DropCapDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020956-0000-0000-C000-000000000046}
// *********************************************************************//
  DropCapDisp = dispinterface
    ['{00020956-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Position: WdDropPosition dispid 10;
    property FontName: WideString dispid 11;
    property LinesToDrop: Integer dispid 12;
    property DistanceFromText: Single dispid 13;
    procedure Clear; dispid 100;
    procedure Enable; dispid 101;
  end;

// *********************************************************************//
// Interface: TabStops
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020955-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStops = interface(IDispatch)
    ['{00020955-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): TabStop; safecall;
    function Add(Position: Single; var Alignment: OleVariant; var Leader: OleVariant): TabStop; safecall;
    procedure ClearAll; safecall;
    function Before(Position: Single): TabStop; safecall;
    function After(Position: Single): TabStop; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  TabStopsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020955-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStopsDisp = dispinterface
    ['{00020955-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): TabStop; dispid 0;
    function Add(Position: Single; var Alignment: OleVariant; var Leader: OleVariant): TabStop; dispid 100;
    procedure ClearAll; dispid 101;
    function Before(Position: Single): TabStop; dispid 102;
    function After(Position: Single): TabStop; dispid 103;
  end;

// *********************************************************************//
// Interface: TabStop
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020954-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStop = interface(IDispatch)
    ['{00020954-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Alignment: WdTabAlignment; safecall;
    procedure Set_Alignment(prop: WdTabAlignment); safecall;
    function Get_Leader: WdTabLeader; safecall;
    procedure Set_Leader(prop: WdTabLeader); safecall;
    function Get_Position: Single; safecall;
    procedure Set_Position(prop: Single); safecall;
    function Get_CustomTab: WordBool; safecall;
    function Get_Next: TabStop; safecall;
    function Get_Previous: TabStop; safecall;
    procedure Clear; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Alignment: WdTabAlignment read Get_Alignment write Set_Alignment;
    property Leader: WdTabLeader read Get_Leader write Set_Leader;
    property Position: Single read Get_Position write Set_Position;
    property CustomTab: WordBool read Get_CustomTab;
    property Next: TabStop read Get_Next;
    property Previous: TabStop read Get_Previous;
  end;

// *********************************************************************//
// DispIntf:  TabStopDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020954-0000-0000-C000-000000000046}
// *********************************************************************//
  TabStopDisp = dispinterface
    ['{00020954-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Alignment: WdTabAlignment dispid 100;
    property Leader: WdTabLeader dispid 101;
    property Position: Single dispid 102;
    property CustomTab: WordBool readonly dispid 103;
    property Next: TabStop readonly dispid 104;
    property Previous: TabStop readonly dispid 105;
    procedure Clear; dispid 200;
  end;

// *********************************************************************//
// Interface: _ParagraphFormat
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020953-0000-0000-C000-000000000046}
// *********************************************************************//
  _ParagraphFormat = interface(IDispatch)
    ['{00020953-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Duplicate: WordParagraphFormat; safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Alignment: WdParagraphAlignment; safecall;
    procedure Set_Alignment(prop: WdParagraphAlignment); safecall;
    function Get_KeepTogether: Integer; safecall;
    procedure Set_KeepTogether(prop: Integer); safecall;
    function Get_KeepWithNext: Integer; safecall;
    procedure Set_KeepWithNext(prop: Integer); safecall;
    function Get_PageBreakBefore: Integer; safecall;
    procedure Set_PageBreakBefore(prop: Integer); safecall;
    function Get_NoLineNumber: Integer; safecall;
    procedure Set_NoLineNumber(prop: Integer); safecall;
    function Get_RightIndent: Single; safecall;
    procedure Set_RightIndent(prop: Single); safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_FirstLineIndent: Single; safecall;
    procedure Set_FirstLineIndent(prop: Single); safecall;
    function Get_LineSpacing: Single; safecall;
    procedure Set_LineSpacing(prop: Single); safecall;
    function Get_LineSpacingRule: WdLineSpacing; safecall;
    procedure Set_LineSpacingRule(prop: WdLineSpacing); safecall;
    function Get_SpaceBefore: Single; safecall;
    procedure Set_SpaceBefore(prop: Single); safecall;
    function Get_SpaceAfter: Single; safecall;
    procedure Set_SpaceAfter(prop: Single); safecall;
    function Get_Hyphenation: Integer; safecall;
    procedure Set_Hyphenation(prop: Integer); safecall;
    function Get_WidowControl: Integer; safecall;
    procedure Set_WidowControl(prop: Integer); safecall;
    function Get_FarEastLineBreakControl: Integer; safecall;
    procedure Set_FarEastLineBreakControl(prop: Integer); safecall;
    function Get_WordWrap: Integer; safecall;
    procedure Set_WordWrap(prop: Integer); safecall;
    function Get_HangingPunctuation: Integer; safecall;
    procedure Set_HangingPunctuation(prop: Integer); safecall;
    function Get_HalfWidthPunctuationOnTopOfLine: Integer; safecall;
    procedure Set_HalfWidthPunctuationOnTopOfLine(prop: Integer); safecall;
    function Get_AddSpaceBetweenFarEastAndAlpha: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndAlpha(prop: Integer); safecall;
    function Get_AddSpaceBetweenFarEastAndDigit: Integer; safecall;
    procedure Set_AddSpaceBetweenFarEastAndDigit(prop: Integer); safecall;
    function Get_BaseLineAlignment: WdBaselineAlignment; safecall;
    procedure Set_BaseLineAlignment(prop: WdBaselineAlignment); safecall;
    function Get_AutoAdjustRightIndent: Integer; safecall;
    procedure Set_AutoAdjustRightIndent(prop: Integer); safecall;
    function Get_DisableLineHeightGrid: Integer; safecall;
    procedure Set_DisableLineHeightGrid(prop: Integer); safecall;
    function Get_TabStops: TabStops; safecall;
    procedure Set_TabStops(const prop: TabStops); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_OutlineLevel: WdOutlineLevel; safecall;
    procedure Set_OutlineLevel(prop: WdOutlineLevel); safecall;
    procedure CloseUp; safecall;
    procedure OpenUp; safecall;
    procedure OpenOrCloseUp; safecall;
    procedure TabHangingIndent(Count: Smallint); safecall;
    procedure TabIndent(Count: Smallint); safecall;
    procedure Reset; safecall;
    procedure Space1; safecall;
    procedure Space15; safecall;
    procedure Space2; safecall;
    procedure IndentCharWidth(Count: Smallint); safecall;
    procedure IndentFirstLineCharWidth(Count: Smallint); safecall;
    function Get_CharacterUnitRightIndent: Single; safecall;
    procedure Set_CharacterUnitRightIndent(prop: Single); safecall;
    function Get_CharacterUnitLeftIndent: Single; safecall;
    procedure Set_CharacterUnitLeftIndent(prop: Single); safecall;
    function Get_CharacterUnitFirstLineIndent: Single; safecall;
    procedure Set_CharacterUnitFirstLineIndent(prop: Single); safecall;
    function Get_LineUnitBefore: Single; safecall;
    procedure Set_LineUnitBefore(prop: Single); safecall;
    function Get_LineUnitAfter: Single; safecall;
    procedure Set_LineUnitAfter(prop: Single); safecall;
    function Get_ReadingOrder: WdReadingOrder; safecall;
    procedure Set_ReadingOrder(prop: WdReadingOrder); safecall;
    function Get_SpaceBeforeAuto: Integer; safecall;
    procedure Set_SpaceBeforeAuto(prop: Integer); safecall;
    function Get_SpaceAfterAuto: Integer; safecall;
    procedure Set_SpaceAfterAuto(prop: Integer); safecall;
    function Get_MirrorIndents: Integer; safecall;
    procedure Set_MirrorIndents(prop: Integer); safecall;
    function Get_TextboxTightWrap: WdTextboxTightWrap; safecall;
    procedure Set_TextboxTightWrap(prop: WdTextboxTightWrap); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Duplicate: WordParagraphFormat read Get_Duplicate;
    property Alignment: WdParagraphAlignment read Get_Alignment write Set_Alignment;
    property KeepTogether: Integer read Get_KeepTogether write Set_KeepTogether;
    property KeepWithNext: Integer read Get_KeepWithNext write Set_KeepWithNext;
    property PageBreakBefore: Integer read Get_PageBreakBefore write Set_PageBreakBefore;
    property NoLineNumber: Integer read Get_NoLineNumber write Set_NoLineNumber;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property FirstLineIndent: Single read Get_FirstLineIndent write Set_FirstLineIndent;
    property LineSpacing: Single read Get_LineSpacing write Set_LineSpacing;
    property LineSpacingRule: WdLineSpacing read Get_LineSpacingRule write Set_LineSpacingRule;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property Hyphenation: Integer read Get_Hyphenation write Set_Hyphenation;
    property WidowControl: Integer read Get_WidowControl write Set_WidowControl;
    property FarEastLineBreakControl: Integer read Get_FarEastLineBreakControl write Set_FarEastLineBreakControl;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property HangingPunctuation: Integer read Get_HangingPunctuation write Set_HangingPunctuation;
    property HalfWidthPunctuationOnTopOfLine: Integer read Get_HalfWidthPunctuationOnTopOfLine write Set_HalfWidthPunctuationOnTopOfLine;
    property AddSpaceBetweenFarEastAndAlpha: Integer read Get_AddSpaceBetweenFarEastAndAlpha write Set_AddSpaceBetweenFarEastAndAlpha;
    property AddSpaceBetweenFarEastAndDigit: Integer read Get_AddSpaceBetweenFarEastAndDigit write Set_AddSpaceBetweenFarEastAndDigit;
    property BaseLineAlignment: WdBaselineAlignment read Get_BaseLineAlignment write Set_BaseLineAlignment;
    property AutoAdjustRightIndent: Integer read Get_AutoAdjustRightIndent write Set_AutoAdjustRightIndent;
    property DisableLineHeightGrid: Integer read Get_DisableLineHeightGrid write Set_DisableLineHeightGrid;
    property TabStops: TabStops read Get_TabStops write Set_TabStops;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property OutlineLevel: WdOutlineLevel read Get_OutlineLevel write Set_OutlineLevel;
    property CharacterUnitRightIndent: Single read Get_CharacterUnitRightIndent write Set_CharacterUnitRightIndent;
    property CharacterUnitLeftIndent: Single read Get_CharacterUnitLeftIndent write Set_CharacterUnitLeftIndent;
    property CharacterUnitFirstLineIndent: Single read Get_CharacterUnitFirstLineIndent write Set_CharacterUnitFirstLineIndent;
    property LineUnitBefore: Single read Get_LineUnitBefore write Set_LineUnitBefore;
    property LineUnitAfter: Single read Get_LineUnitAfter write Set_LineUnitAfter;
    property ReadingOrder: WdReadingOrder read Get_ReadingOrder write Set_ReadingOrder;
    property SpaceBeforeAuto: Integer read Get_SpaceBeforeAuto write Set_SpaceBeforeAuto;
    property SpaceAfterAuto: Integer read Get_SpaceAfterAuto write Set_SpaceAfterAuto;
    property MirrorIndents: Integer read Get_MirrorIndents write Set_MirrorIndents;
    property TextboxTightWrap: WdTextboxTightWrap read Get_TextboxTightWrap write Set_TextboxTightWrap;
  end;

// *********************************************************************//
// DispIntf:  _ParagraphFormatDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020953-0000-0000-C000-000000000046}
// *********************************************************************//
  _ParagraphFormatDisp = dispinterface
    ['{00020953-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Duplicate: WordParagraphFormat readonly dispid 10;
    function Style: OleVariant; dispid 100;
    property Alignment: WdParagraphAlignment dispid 101;
    property KeepTogether: Integer dispid 102;
    property KeepWithNext: Integer dispid 103;
    property PageBreakBefore: Integer dispid 104;
    property NoLineNumber: Integer dispid 105;
    property RightIndent: Single dispid 106;
    property LeftIndent: Single dispid 107;
    property FirstLineIndent: Single dispid 108;
    property LineSpacing: Single dispid 109;
    property LineSpacingRule: WdLineSpacing dispid 110;
    property SpaceBefore: Single dispid 111;
    property SpaceAfter: Single dispid 112;
    property Hyphenation: Integer dispid 113;
    property WidowControl: Integer dispid 114;
    property FarEastLineBreakControl: Integer dispid 117;
    property WordWrap: Integer dispid 118;
    property HangingPunctuation: Integer dispid 119;
    property HalfWidthPunctuationOnTopOfLine: Integer dispid 120;
    property AddSpaceBetweenFarEastAndAlpha: Integer dispid 121;
    property AddSpaceBetweenFarEastAndDigit: Integer dispid 122;
    property BaseLineAlignment: WdBaselineAlignment dispid 123;
    property AutoAdjustRightIndent: Integer dispid 124;
    property DisableLineHeightGrid: Integer dispid 125;
    property TabStops: TabStops dispid 1103;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 1101;
    property OutlineLevel: WdOutlineLevel dispid 202;
    procedure CloseUp; dispid 301;
    procedure OpenUp; dispid 302;
    procedure OpenOrCloseUp; dispid 303;
    procedure TabHangingIndent(Count: Smallint); dispid 304;
    procedure TabIndent(Count: Smallint); dispid 306;
    procedure Reset; dispid 312;
    procedure Space1; dispid 313;
    procedure Space15; dispid 314;
    procedure Space2; dispid 315;
    procedure IndentCharWidth(Count: Smallint); dispid 320;
    procedure IndentFirstLineCharWidth(Count: Smallint); dispid 322;
    property CharacterUnitRightIndent: Single dispid 126;
    property CharacterUnitLeftIndent: Single dispid 127;
    property CharacterUnitFirstLineIndent: Single dispid 128;
    property LineUnitBefore: Single dispid 129;
    property LineUnitAfter: Single dispid 130;
    property ReadingOrder: WdReadingOrder dispid 131;
    property SpaceBeforeAuto: Integer dispid 132;
    property SpaceAfterAuto: Integer dispid 133;
    property MirrorIndents: Integer dispid 134;
    property TextboxTightWrap: WdTextboxTightWrap dispid 135;
  end;

// *********************************************************************//
// Interface: _Font
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020952-0000-0000-C000-000000000046}
// *********************************************************************//
  _Font = interface(IDispatch)
    ['{00020952-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Duplicate: WordFont; safecall;
    function Get_Bold: Integer; safecall;
    procedure Set_Bold(prop: Integer); safecall;
    function Get_Italic: Integer; safecall;
    procedure Set_Italic(prop: Integer); safecall;
    function Get_Hidden: Integer; safecall;
    procedure Set_Hidden(prop: Integer); safecall;
    function Get_SmallCaps: Integer; safecall;
    procedure Set_SmallCaps(prop: Integer); safecall;
    function Get_AllCaps: Integer; safecall;
    procedure Set_AllCaps(prop: Integer); safecall;
    function Get_StrikeThrough: Integer; safecall;
    procedure Set_StrikeThrough(prop: Integer); safecall;
    function Get_DoubleStrikeThrough: Integer; safecall;
    procedure Set_DoubleStrikeThrough(prop: Integer); safecall;
    function Get_ColorIndex: WdColorIndex; safecall;
    procedure Set_ColorIndex(prop: WdColorIndex); safecall;
    function Get_Subscript: Integer; safecall;
    procedure Set_Subscript(prop: Integer); safecall;
    function Get_Superscript: Integer; safecall;
    procedure Set_Superscript(prop: Integer); safecall;
    function Get_Underline: WdUnderline; safecall;
    procedure Set_Underline(prop: WdUnderline); safecall;
    function Get_Size: Single; safecall;
    procedure Set_Size(prop: Single); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Position: Integer; safecall;
    procedure Set_Position(prop: Integer); safecall;
    function Get_Spacing: Single; safecall;
    procedure Set_Spacing(prop: Single); safecall;
    function Get_Scaling: Integer; safecall;
    procedure Set_Scaling(prop: Integer); safecall;
    function Get_Shadow: Integer; safecall;
    procedure Set_Shadow(prop: Integer); safecall;
    function Get_Outline: Integer; safecall;
    procedure Set_Outline(prop: Integer); safecall;
    function Get_Emboss: Integer; safecall;
    procedure Set_Emboss(prop: Integer); safecall;
    function Get_Kerning: Single; safecall;
    procedure Set_Kerning(prop: Single); safecall;
    function Get_Engrave: Integer; safecall;
    procedure Set_Engrave(prop: Integer); safecall;
    function Get_Animation: WdAnimation; safecall;
    procedure Set_Animation(prop: WdAnimation); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_EmphasisMark: WdEmphasisMark; safecall;
    procedure Set_EmphasisMark(prop: WdEmphasisMark); safecall;
    function Get_DisableCharacterSpaceGrid: WordBool; safecall;
    procedure Set_DisableCharacterSpaceGrid(prop: WordBool); safecall;
    function Get_NameFarEast: WideString; safecall;
    procedure Set_NameFarEast(const prop: WideString); safecall;
    function Get_NameAscii: WideString; safecall;
    procedure Set_NameAscii(const prop: WideString); safecall;
    function Get_NameOther: WideString; safecall;
    procedure Set_NameOther(const prop: WideString); safecall;
    procedure Grow; safecall;
    procedure Shrink; safecall;
    procedure Reset; safecall;
    procedure SetAsTemplateDefault; safecall;
    function Get_Color: WdColor; safecall;
    procedure Set_Color(prop: WdColor); safecall;
    function Get_BoldBi: Integer; safecall;
    procedure Set_BoldBi(prop: Integer); safecall;
    function Get_ItalicBi: Integer; safecall;
    procedure Set_ItalicBi(prop: Integer); safecall;
    function Get_SizeBi: Single; safecall;
    procedure Set_SizeBi(prop: Single); safecall;
    function Get_NameBi: WideString; safecall;
    procedure Set_NameBi(const prop: WideString); safecall;
    function Get_ColorIndexBi: WdColorIndex; safecall;
    procedure Set_ColorIndexBi(prop: WdColorIndex); safecall;
    function Get_DiacriticColor: WdColor; safecall;
    procedure Set_DiacriticColor(prop: WdColor); safecall;
    function Get_UnderlineColor: WdColor; safecall;
    procedure Set_UnderlineColor(prop: WdColor); safecall;
    function Get_Glow: GlowFormat; safecall;
    procedure Set_Glow(const prop: GlowFormat); safecall;
    function Get_Reflection: ReflectionFormat; safecall;
    procedure Set_Reflection(const prop: ReflectionFormat); safecall;
    function Get_TextShadow: ShadowFormat; safecall;
    procedure Set_TextShadow(const prop: ShadowFormat); safecall;
    function Get_Fill: FillFormat; safecall;
    procedure Set_Fill(const prop: FillFormat); safecall;
    function Get_Line: LineFormat; safecall;
    procedure Set_Line(const prop: LineFormat); safecall;
    function Get_ThreeD: ThreeDFormat; safecall;
    procedure Set_ThreeD(const prop: ThreeDFormat); safecall;
    function Get_TextColor: ColorFormat; safecall;
    function Get_Ligatures: WdLigatures; safecall;
    procedure Set_Ligatures(prop: WdLigatures); safecall;
    function Get_NumberForm: WdNumberForm; safecall;
    procedure Set_NumberForm(prop: WdNumberForm); safecall;
    function Get_NumberSpacing: WdNumberSpacing; safecall;
    procedure Set_NumberSpacing(prop: WdNumberSpacing); safecall;
    function Get_ContextualAlternates: Integer; safecall;
    procedure Set_ContextualAlternates(prop: Integer); safecall;
    function Get_StylisticSet: WdStylisticSet; safecall;
    procedure Set_StylisticSet(prop: WdStylisticSet); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Duplicate: WordFont read Get_Duplicate;
    property Bold: Integer read Get_Bold write Set_Bold;
    property Italic: Integer read Get_Italic write Set_Italic;
    property Hidden: Integer read Get_Hidden write Set_Hidden;
    property SmallCaps: Integer read Get_SmallCaps write Set_SmallCaps;
    property AllCaps: Integer read Get_AllCaps write Set_AllCaps;
    property StrikeThrough: Integer read Get_StrikeThrough write Set_StrikeThrough;
    property DoubleStrikeThrough: Integer read Get_DoubleStrikeThrough write Set_DoubleStrikeThrough;
    property ColorIndex: WdColorIndex read Get_ColorIndex write Set_ColorIndex;
    property Subscript: Integer read Get_Subscript write Set_Subscript;
    property Superscript: Integer read Get_Superscript write Set_Superscript;
    property Underline: WdUnderline read Get_Underline write Set_Underline;
    property Size: Single read Get_Size write Set_Size;
    property Name: WideString read Get_Name write Set_Name;
    property Position: Integer read Get_Position write Set_Position;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property Scaling: Integer read Get_Scaling write Set_Scaling;
    property Shadow: Integer read Get_Shadow write Set_Shadow;
    property Outline: Integer read Get_Outline write Set_Outline;
    property Emboss: Integer read Get_Emboss write Set_Emboss;
    property Kerning: Single read Get_Kerning write Set_Kerning;
    property Engrave: Integer read Get_Engrave write Set_Engrave;
    property Animation: WdAnimation read Get_Animation write Set_Animation;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property EmphasisMark: WdEmphasisMark read Get_EmphasisMark write Set_EmphasisMark;
    property DisableCharacterSpaceGrid: WordBool read Get_DisableCharacterSpaceGrid write Set_DisableCharacterSpaceGrid;
    property NameFarEast: WideString read Get_NameFarEast write Set_NameFarEast;
    property NameAscii: WideString read Get_NameAscii write Set_NameAscii;
    property NameOther: WideString read Get_NameOther write Set_NameOther;
    property Color: WdColor read Get_Color write Set_Color;
    property BoldBi: Integer read Get_BoldBi write Set_BoldBi;
    property ItalicBi: Integer read Get_ItalicBi write Set_ItalicBi;
    property SizeBi: Single read Get_SizeBi write Set_SizeBi;
    property NameBi: WideString read Get_NameBi write Set_NameBi;
    property ColorIndexBi: WdColorIndex read Get_ColorIndexBi write Set_ColorIndexBi;
    property DiacriticColor: WdColor read Get_DiacriticColor write Set_DiacriticColor;
    property UnderlineColor: WdColor read Get_UnderlineColor write Set_UnderlineColor;
    property Glow: GlowFormat read Get_Glow write Set_Glow;
    property Reflection: ReflectionFormat read Get_Reflection write Set_Reflection;
    property TextShadow: ShadowFormat read Get_TextShadow write Set_TextShadow;
    property Fill: FillFormat read Get_Fill write Set_Fill;
    property Line: LineFormat read Get_Line write Set_Line;
    property ThreeD: ThreeDFormat read Get_ThreeD write Set_ThreeD;
    property TextColor: ColorFormat read Get_TextColor;
    property Ligatures: WdLigatures read Get_Ligatures write Set_Ligatures;
    property NumberForm: WdNumberForm read Get_NumberForm write Set_NumberForm;
    property NumberSpacing: WdNumberSpacing read Get_NumberSpacing write Set_NumberSpacing;
    property ContextualAlternates: Integer read Get_ContextualAlternates write Set_ContextualAlternates;
    property StylisticSet: WdStylisticSet read Get_StylisticSet write Set_StylisticSet;
  end;

// *********************************************************************//
// DispIntf:  _FontDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020952-0000-0000-C000-000000000046}
// *********************************************************************//
  _FontDisp = dispinterface
    ['{00020952-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Duplicate: WordFont readonly dispid 10;
    property Bold: Integer dispid 130;
    property Italic: Integer dispid 131;
    property Hidden: Integer dispid 132;
    property SmallCaps: Integer dispid 133;
    property AllCaps: Integer dispid 134;
    property StrikeThrough: Integer dispid 135;
    property DoubleStrikeThrough: Integer dispid 136;
    property ColorIndex: WdColorIndex dispid 137;
    property Subscript: Integer dispid 138;
    property Superscript: Integer dispid 139;
    property Underline: WdUnderline dispid 140;
    property Size: Single dispid 141;
    property Name: WideString dispid 142;
    property Position: Integer dispid 143;
    property Spacing: Single dispid 144;
    property Scaling: Integer dispid 145;
    property Shadow: Integer dispid 146;
    property Outline: Integer dispid 147;
    property Emboss: Integer dispid 148;
    property Kerning: Single dispid 149;
    property Engrave: Integer dispid 150;
    property Animation: WdAnimation dispid 151;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 153;
    property EmphasisMark: WdEmphasisMark dispid 154;
    property DisableCharacterSpaceGrid: WordBool dispid 155;
    property NameFarEast: WideString dispid 156;
    property NameAscii: WideString dispid 157;
    property NameOther: WideString dispid 158;
    procedure Grow; dispid 100;
    procedure Shrink; dispid 101;
    procedure Reset; dispid 102;
    procedure SetAsTemplateDefault; dispid 103;
    property Color: WdColor dispid 159;
    property BoldBi: Integer dispid 160;
    property ItalicBi: Integer dispid 161;
    property SizeBi: Single dispid 162;
    property NameBi: WideString dispid 163;
    property ColorIndexBi: WdColorIndex dispid 164;
    property DiacriticColor: WdColor dispid 165;
    property UnderlineColor: WdColor dispid 166;
    property Glow: GlowFormat dispid 167;
    property Reflection: ReflectionFormat dispid 168;
    property TextShadow: ShadowFormat dispid 169;
    property Fill: FillFormat dispid 170;
    property Line: LineFormat dispid 171;
    property ThreeD: ThreeDFormat dispid 172;
    property TextColor: ColorFormat readonly dispid 173;
    property Ligatures: WdLigatures dispid 174;
    property NumberForm: WdNumberForm dispid 175;
    property NumberSpacing: WdNumberSpacing dispid 176;
    property ContextualAlternates: Integer dispid 177;
    property StylisticSet: WdStylisticSet dispid 178;
  end;

// *********************************************************************//
// Interface: Table
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020951-0000-0000-C000-000000000046}
// *********************************************************************//
  Table = interface(IDispatch)
    ['{00020951-0000-0000-C000-000000000046}']
    function Get_Range: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Columns: Columns; safecall;
    function Get_Rows: Rows; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_Uniform: WordBool; safecall;
    function Get_AutoFormatType: Integer; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    procedure SortOld(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                      var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                      var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                      var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                      var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                      var CaseSensitive: OleVariant; var LanguageID: OleVariant); safecall;
    procedure SortAscending; safecall;
    procedure SortDescending; safecall;
    procedure AutoFormat(var Format: OleVariant; var ApplyBorders: OleVariant; 
                         var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                         var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                         var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                         var ApplyLastColumn: OleVariant; var AutoFit: OleVariant); safecall;
    procedure UpdateAutoFormat; safecall;
    function ConvertToTextOld(var Separator: OleVariant): WordRange; safecall;
    function Cell(Row: Integer; Column: Integer): Cell; safecall;
    function Split(var BeforeRow: OleVariant): Table; safecall;
    function ConvertToText(var Separator: OleVariant; var NestedTables: OleVariant): WordRange; safecall;
    procedure AutoFitBehavior(Behavior: WdAutoFitBehavior); safecall;
    procedure Sort(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                   var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                   var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                   var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                   var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                   var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                   var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                   var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                   var LanguageID: OleVariant); safecall;
    function Get_Tables: Tables; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_AllowPageBreaks: WordBool; safecall;
    procedure Set_AllowPageBreaks(prop: WordBool); safecall;
    function Get_AllowAutoFit: WordBool; safecall;
    procedure Set_AllowAutoFit(prop: WordBool); safecall;
    function Get_PreferredWidth: Single; safecall;
    procedure Set_PreferredWidth(prop: Single); safecall;
    function Get_PreferredWidthType: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType(prop: WdPreferredWidthType); safecall;
    function Get_TopPadding: Single; safecall;
    procedure Set_TopPadding(prop: Single); safecall;
    function Get_BottomPadding: Single; safecall;
    procedure Set_BottomPadding(prop: Single); safecall;
    function Get_LeftPadding: Single; safecall;
    procedure Set_LeftPadding(prop: Single); safecall;
    function Get_RightPadding: Single; safecall;
    procedure Set_RightPadding(prop: Single); safecall;
    function Get_Spacing: Single; safecall;
    procedure Set_Spacing(prop: Single); safecall;
    function Get_TableDirection: WdTableDirection; safecall;
    procedure Set_TableDirection(prop: WdTableDirection); safecall;
    function Get_ID: WideString; safecall;
    procedure Set_ID(const prop: WideString); safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_ApplyStyleHeadingRows: WordBool; safecall;
    procedure Set_ApplyStyleHeadingRows(prop: WordBool); safecall;
    function Get_ApplyStyleLastRow: WordBool; safecall;
    procedure Set_ApplyStyleLastRow(prop: WordBool); safecall;
    function Get_ApplyStyleFirstColumn: WordBool; safecall;
    procedure Set_ApplyStyleFirstColumn(prop: WordBool); safecall;
    function Get_ApplyStyleLastColumn: WordBool; safecall;
    procedure Set_ApplyStyleLastColumn(prop: WordBool); safecall;
    function Get_ApplyStyleRowBands: WordBool; safecall;
    procedure Set_ApplyStyleRowBands(prop: WordBool); safecall;
    function Get_ApplyStyleColumnBands: WordBool; safecall;
    procedure Set_ApplyStyleColumnBands(prop: WordBool); safecall;
    procedure ApplyStyleDirectFormatting(const StyleName: WideString); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const prop: WideString); safecall;
    function Get_Descr: WideString; safecall;
    procedure Set_Descr(const prop: WideString); safecall;
    property Range: WordRange read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Columns: Columns read Get_Columns;
    property Rows: Rows read Get_Rows;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Uniform: WordBool read Get_Uniform;
    property AutoFormatType: Integer read Get_AutoFormatType;
    property Tables: Tables read Get_Tables;
    property NestingLevel: Integer read Get_NestingLevel;
    property AllowPageBreaks: WordBool read Get_AllowPageBreaks write Set_AllowPageBreaks;
    property AllowAutoFit: WordBool read Get_AllowAutoFit write Set_AllowAutoFit;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
    property TopPadding: Single read Get_TopPadding write Set_TopPadding;
    property BottomPadding: Single read Get_BottomPadding write Set_BottomPadding;
    property LeftPadding: Single read Get_LeftPadding write Set_LeftPadding;
    property RightPadding: Single read Get_RightPadding write Set_RightPadding;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property TableDirection: WdTableDirection read Get_TableDirection write Set_TableDirection;
    property ID: WideString read Get_ID write Set_ID;
    property ApplyStyleHeadingRows: WordBool read Get_ApplyStyleHeadingRows write Set_ApplyStyleHeadingRows;
    property ApplyStyleLastRow: WordBool read Get_ApplyStyleLastRow write Set_ApplyStyleLastRow;
    property ApplyStyleFirstColumn: WordBool read Get_ApplyStyleFirstColumn write Set_ApplyStyleFirstColumn;
    property ApplyStyleLastColumn: WordBool read Get_ApplyStyleLastColumn write Set_ApplyStyleLastColumn;
    property ApplyStyleRowBands: WordBool read Get_ApplyStyleRowBands write Set_ApplyStyleRowBands;
    property ApplyStyleColumnBands: WordBool read Get_ApplyStyleColumnBands write Set_ApplyStyleColumnBands;
    property Title: WideString read Get_Title write Set_Title;
    property Descr: WideString read Get_Descr write Set_Descr;
  end;

// *********************************************************************//
// DispIntf:  TableDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020951-0000-0000-C000-000000000046}
// *********************************************************************//
  TableDisp = dispinterface
    ['{00020951-0000-0000-C000-000000000046}']
    property Range: WordRange readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Columns: Columns readonly dispid 100;
    property Rows: Rows readonly dispid 101;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 104;
    property Uniform: WordBool readonly dispid 105;
    property AutoFormatType: Integer readonly dispid 106;
    procedure Select; dispid 200;
    procedure Delete; dispid 9;
    procedure SortOld(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                      var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                      var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                      var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                      var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                      var CaseSensitive: OleVariant; var LanguageID: OleVariant); dispid 10;
    procedure SortAscending; dispid 12;
    procedure SortDescending; dispid 13;
    procedure AutoFormat(var Format: OleVariant; var ApplyBorders: OleVariant; 
                         var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                         var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                         var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                         var ApplyLastColumn: OleVariant; var AutoFit: OleVariant); dispid 14;
    procedure UpdateAutoFormat; dispid 15;
    function ConvertToTextOld(var Separator: OleVariant): WordRange; dispid 16;
    function Cell(Row: Integer; Column: Integer): Cell; dispid 17;
    function Split(var BeforeRow: OleVariant): Table; dispid 18;
    function ConvertToText(var Separator: OleVariant; var NestedTables: OleVariant): WordRange; dispid 19;
    procedure AutoFitBehavior(Behavior: WdAutoFitBehavior); dispid 20;
    procedure Sort(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                   var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                   var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                   var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                   var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                   var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                   var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                   var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                   var LanguageID: OleVariant); dispid 23;
    property Tables: Tables readonly dispid 107;
    property NestingLevel: Integer readonly dispid 108;
    property AllowPageBreaks: WordBool dispid 109;
    property AllowAutoFit: WordBool dispid 110;
    property PreferredWidth: Single dispid 111;
    property PreferredWidthType: WdPreferredWidthType dispid 112;
    property TopPadding: Single dispid 113;
    property BottomPadding: Single dispid 114;
    property LeftPadding: Single dispid 115;
    property RightPadding: Single dispid 116;
    property Spacing: Single dispid 117;
    property TableDirection: WdTableDirection dispid 118;
    property ID: WideString dispid 119;
    function Style: OleVariant; dispid 201;
    property ApplyStyleHeadingRows: WordBool dispid 202;
    property ApplyStyleLastRow: WordBool dispid 203;
    property ApplyStyleFirstColumn: WordBool dispid 204;
    property ApplyStyleLastColumn: WordBool dispid 205;
    property ApplyStyleRowBands: WordBool dispid 206;
    property ApplyStyleColumnBands: WordBool dispid 207;
    procedure ApplyStyleDirectFormatting(const StyleName: WideString); dispid 208;
    property Title: WideString dispid 209;
    property Descr: WideString dispid 210;
  end;

// *********************************************************************//
// Interface: Row
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020950-0000-0000-C000-000000000046}
// *********************************************************************//
  Row = interface(IDispatch)
    ['{00020950-0000-0000-C000-000000000046}']
    function Get_Range: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AllowBreakAcrossPages: Integer; safecall;
    procedure Set_AllowBreakAcrossPages(prop: Integer); safecall;
    function Get_Alignment: WdRowAlignment; safecall;
    procedure Set_Alignment(prop: WdRowAlignment); safecall;
    function Get_HeadingFormat: Integer; safecall;
    procedure Set_HeadingFormat(prop: Integer); safecall;
    function Get_SpaceBetweenColumns: Single; safecall;
    procedure Set_SpaceBetweenColumns(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HeightRule: WdRowHeightRule; safecall;
    procedure Set_HeightRule(prop: WdRowHeightRule); safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_IsLast: WordBool; safecall;
    function Get_IsFirst: WordBool; safecall;
    function Get_Index: Integer; safecall;
    function Get_Cells: Cells; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_Next: Row; safecall;
    function Get_Previous: Row; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    procedure SetLeftIndent(LeftIndent: Single; RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight(RowHeight: Single; HeightRule: WdRowHeightRule); safecall;
    function ConvertToTextOld(var Separator: OleVariant): WordRange; safecall;
    function ConvertToText(var Separator: OleVariant; var NestedTables: OleVariant): WordRange; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_ID: WideString; safecall;
    procedure Set_ID(const prop: WideString); safecall;
    property Range: WordRange read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AllowBreakAcrossPages: Integer read Get_AllowBreakAcrossPages write Set_AllowBreakAcrossPages;
    property Alignment: WdRowAlignment read Get_Alignment write Set_Alignment;
    property HeadingFormat: Integer read Get_HeadingFormat write Set_HeadingFormat;
    property SpaceBetweenColumns: Single read Get_SpaceBetweenColumns write Set_SpaceBetweenColumns;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property IsLast: WordBool read Get_IsLast;
    property IsFirst: WordBool read Get_IsFirst;
    property Index: Integer read Get_Index;
    property Cells: Cells read Get_Cells;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Next: Row read Get_Next;
    property Previous: Row read Get_Previous;
    property NestingLevel: Integer read Get_NestingLevel;
    property ID: WideString read Get_ID write Set_ID;
  end;

// *********************************************************************//
// DispIntf:  RowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020950-0000-0000-C000-000000000046}
// *********************************************************************//
  RowDisp = dispinterface
    ['{00020950-0000-0000-C000-000000000046}']
    property Range: WordRange readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property AllowBreakAcrossPages: Integer dispid 3;
    property Alignment: WdRowAlignment dispid 4;
    property HeadingFormat: Integer dispid 5;
    property SpaceBetweenColumns: Single dispid 6;
    property Height: Single dispid 7;
    property HeightRule: WdRowHeightRule dispid 8;
    property LeftIndent: Single dispid 9;
    property IsLast: WordBool readonly dispid 10;
    property IsFirst: WordBool readonly dispid 11;
    property Index: Integer readonly dispid 12;
    property Cells: Cells readonly dispid 100;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 103;
    property Next: Row readonly dispid 104;
    property Previous: Row readonly dispid 105;
    procedure Select; dispid 65535;
    procedure Delete; dispid 200;
    procedure SetLeftIndent(LeftIndent: Single; RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight(RowHeight: Single; HeightRule: WdRowHeightRule); dispid 203;
    function ConvertToTextOld(var Separator: OleVariant): WordRange; dispid 16;
    function ConvertToText(var Separator: OleVariant; var NestedTables: OleVariant): WordRange; dispid 18;
    property NestingLevel: Integer readonly dispid 106;
    property ID: WideString dispid 107;
  end;

// *********************************************************************//
// Interface: Column
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094F-0000-0000-C000-000000000046}
// *********************************************************************//
  Column = interface(IDispatch)
    ['{0002094F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_IsFirst: WordBool; safecall;
    function Get_IsLast: WordBool; safecall;
    function Get_Index: Integer; safecall;
    function Get_Cells: Cells; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_Next: Column; safecall;
    function Get_Previous: Column; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); safecall;
    procedure AutoFit; safecall;
    procedure SortOld(var ExcludeHeader: OleVariant; var SortFieldType: OleVariant; 
                      var SortOrder: OleVariant; var CaseSensitive: OleVariant; 
                      var LanguageID: OleVariant); safecall;
    procedure Sort(var ExcludeHeader: OleVariant; var SortFieldType: OleVariant; 
                   var SortOrder: OleVariant; var CaseSensitive: OleVariant; 
                   var BidiSort: OleVariant; var IgnoreThe: OleVariant; 
                   var IgnoreKashida: OleVariant; var IgnoreDiacritics: OleVariant; 
                   var IgnoreHe: OleVariant; var LanguageID: OleVariant); safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_PreferredWidth: Single; safecall;
    procedure Set_PreferredWidth(prop: Single); safecall;
    function Get_PreferredWidthType: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType(prop: WdPreferredWidthType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Width: Single read Get_Width write Set_Width;
    property IsFirst: WordBool read Get_IsFirst;
    property IsLast: WordBool read Get_IsLast;
    property Index: Integer read Get_Index;
    property Cells: Cells read Get_Cells;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Next: Column read Get_Next;
    property Previous: Column read Get_Previous;
    property NestingLevel: Integer read Get_NestingLevel;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  ColumnDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094F-0000-0000-C000-000000000046}
// *********************************************************************//
  ColumnDisp = dispinterface
    ['{0002094F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Width: Single dispid 3;
    property IsFirst: WordBool readonly dispid 4;
    property IsLast: WordBool readonly dispid 5;
    property Index: Integer readonly dispid 6;
    property Cells: Cells readonly dispid 100;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 102;
    property Next: Column readonly dispid 103;
    property Previous: Column readonly dispid 104;
    procedure Select; dispid 65535;
    procedure Delete; dispid 200;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); dispid 201;
    procedure AutoFit; dispid 202;
    procedure SortOld(var ExcludeHeader: OleVariant; var SortFieldType: OleVariant; 
                      var SortOrder: OleVariant; var CaseSensitive: OleVariant; 
                      var LanguageID: OleVariant); dispid 203;
    procedure Sort(var ExcludeHeader: OleVariant; var SortFieldType: OleVariant; 
                   var SortOrder: OleVariant; var CaseSensitive: OleVariant; 
                   var BidiSort: OleVariant; var IgnoreThe: OleVariant; 
                   var IgnoreKashida: OleVariant; var IgnoreDiacritics: OleVariant; 
                   var IgnoreHe: OleVariant; var LanguageID: OleVariant); dispid 204;
    property NestingLevel: Integer readonly dispid 105;
    property PreferredWidth: Single dispid 106;
    property PreferredWidthType: WdPreferredWidthType dispid 107;
  end;

// *********************************************************************//
// Interface: Cell
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094E-0000-0000-C000-000000000046}
// *********************************************************************//
  Cell = interface(IDispatch)
    ['{0002094E-0000-0000-C000-000000000046}']
    function Get_Range: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_RowIndex: Integer; safecall;
    function Get_ColumnIndex: Integer; safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HeightRule: WdRowHeightRule; safecall;
    procedure Set_HeightRule(prop: WdRowHeightRule); safecall;
    function Get_VerticalAlignment: WdCellVerticalAlignment; safecall;
    procedure Set_VerticalAlignment(prop: WdCellVerticalAlignment); safecall;
    function Get_Column: Column; safecall;
    function Get_Row: Row; safecall;
    function Get_Next: Cell; safecall;
    function Get_Previous: Cell; safecall;
    function Get_Shading: Shading; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    procedure Select; safecall;
    procedure Delete(var ShiftCells: OleVariant); safecall;
    procedure Formula(var Formula: OleVariant; var NumFormat: OleVariant); safecall;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight(var RowHeight: OleVariant; HeightRule: WdRowHeightRule); safecall;
    procedure Merge(const MergeTo: Cell); safecall;
    procedure Split(var NumRows: OleVariant; var NumColumns: OleVariant); safecall;
    procedure AutoSum; safecall;
    function Get_Tables: Tables; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_WordWrap: WordBool; safecall;
    procedure Set_WordWrap(prop: WordBool); safecall;
    function Get_PreferredWidth: Single; safecall;
    procedure Set_PreferredWidth(prop: Single); safecall;
    function Get_FitText: WordBool; safecall;
    procedure Set_FitText(prop: WordBool); safecall;
    function Get_TopPadding: Single; safecall;
    procedure Set_TopPadding(prop: Single); safecall;
    function Get_BottomPadding: Single; safecall;
    procedure Set_BottomPadding(prop: Single); safecall;
    function Get_LeftPadding: Single; safecall;
    procedure Set_LeftPadding(prop: Single); safecall;
    function Get_RightPadding: Single; safecall;
    procedure Set_RightPadding(prop: Single); safecall;
    function Get_ID: WideString; safecall;
    procedure Set_ID(const prop: WideString); safecall;
    function Get_PreferredWidthType: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType(prop: WdPreferredWidthType); safecall;
    property Range: WordRange read Get_Range;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RowIndex: Integer read Get_RowIndex;
    property ColumnIndex: Integer read Get_ColumnIndex;
    property Width: Single read Get_Width write Set_Width;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property VerticalAlignment: WdCellVerticalAlignment read Get_VerticalAlignment write Set_VerticalAlignment;
    property Column: Column read Get_Column;
    property Row: Row read Get_Row;
    property Next: Cell read Get_Next;
    property Previous: Cell read Get_Previous;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Tables: Tables read Get_Tables;
    property NestingLevel: Integer read Get_NestingLevel;
    property WordWrap: WordBool read Get_WordWrap write Set_WordWrap;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property FitText: WordBool read Get_FitText write Set_FitText;
    property TopPadding: Single read Get_TopPadding write Set_TopPadding;
    property BottomPadding: Single read Get_BottomPadding write Set_BottomPadding;
    property LeftPadding: Single read Get_LeftPadding write Set_LeftPadding;
    property RightPadding: Single read Get_RightPadding write Set_RightPadding;
    property ID: WideString read Get_ID write Set_ID;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  CellDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094E-0000-0000-C000-000000000046}
// *********************************************************************//
  CellDisp = dispinterface
    ['{0002094E-0000-0000-C000-000000000046}']
    property Range: WordRange readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property RowIndex: Integer readonly dispid 4;
    property ColumnIndex: Integer readonly dispid 5;
    property Width: Single dispid 6;
    property Height: Single dispid 7;
    property HeightRule: WdRowHeightRule dispid 8;
    property VerticalAlignment: WdCellVerticalAlignment dispid 1104;
    property Column: Column readonly dispid 101;
    property Row: Row readonly dispid 102;
    property Next: Cell readonly dispid 103;
    property Previous: Cell readonly dispid 104;
    property Shading: Shading readonly dispid 105;
    property Borders: Borders dispid 1100;
    procedure Select; dispid 65535;
    procedure Delete(var ShiftCells: OleVariant); dispid 200;
    procedure Formula(var Formula: OleVariant; var NumFormat: OleVariant); dispid 201;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight(var RowHeight: OleVariant; HeightRule: WdRowHeightRule); dispid 203;
    procedure Merge(const MergeTo: Cell); dispid 204;
    procedure Split(var NumRows: OleVariant; var NumColumns: OleVariant); dispid 205;
    procedure AutoSum; dispid 206;
    property Tables: Tables readonly dispid 106;
    property NestingLevel: Integer readonly dispid 107;
    property WordWrap: WordBool dispid 108;
    property PreferredWidth: Single dispid 109;
    property FitText: WordBool dispid 110;
    property TopPadding: Single dispid 111;
    property BottomPadding: Single dispid 112;
    property LeftPadding: Single dispid 113;
    property RightPadding: Single dispid 114;
    property ID: WideString dispid 115;
    property PreferredWidthType: WdPreferredWidthType dispid 116;
  end;

// *********************************************************************//
// Interface: Tables
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094D-0000-0000-C000-000000000046}
// *********************************************************************//
  Tables = interface(IDispatch)
    ['{0002094D-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Table; safecall;
    function AddOld(const Range: WordRange; NumRows: Integer; NumColumns: Integer): Table; safecall;
    function Add(const Range: WordRange; NumRows: Integer; NumColumns: Integer; 
                 var DefaultTableBehavior: OleVariant; var AutoFitBehavior: OleVariant): Table; safecall;
    function Get_NestingLevel: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NestingLevel: Integer read Get_NestingLevel;
  end;

// *********************************************************************//
// DispIntf:  TablesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094D-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesDisp = dispinterface
    ['{0002094D-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Table; dispid 0;
    function AddOld(const Range: WordRange; NumRows: Integer; NumColumns: Integer): Table; dispid 4;
    function Add(const Range: WordRange; NumRows: Integer; NumColumns: Integer; 
                 var DefaultTableBehavior: OleVariant; var AutoFitBehavior: OleVariant): Table; dispid 200;
    property NestingLevel: Integer readonly dispid 100;
  end;

// *********************************************************************//
// Interface: Rows
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094C-0000-0000-C000-000000000046}
// *********************************************************************//
  Rows = interface(IDispatch)
    ['{0002094C-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_AllowBreakAcrossPages: Integer; safecall;
    procedure Set_AllowBreakAcrossPages(prop: Integer); safecall;
    function Get_Alignment: WdRowAlignment; safecall;
    procedure Set_Alignment(prop: WdRowAlignment); safecall;
    function Get_HeadingFormat: Integer; safecall;
    procedure Set_HeadingFormat(prop: Integer); safecall;
    function Get_SpaceBetweenColumns: Single; safecall;
    procedure Set_SpaceBetweenColumns(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HeightRule: WdRowHeightRule; safecall;
    procedure Set_HeightRule(prop: WdRowHeightRule); safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_First: Row; safecall;
    function Get_Last: Row; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Item(Index: Integer): Row; safecall;
    function Add(var BeforeRow: OleVariant): Row; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    procedure SetLeftIndent(LeftIndent: Single; RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight(RowHeight: Single; HeightRule: WdRowHeightRule); safecall;
    function ConvertToTextOld(var Separator: OleVariant): WordRange; safecall;
    procedure DistributeHeight; safecall;
    function ConvertToText(var Separator: OleVariant; var NestedTables: OleVariant): WordRange; safecall;
    function Get_WrapAroundText: Integer; safecall;
    procedure Set_WrapAroundText(prop: Integer); safecall;
    function Get_DistanceTop: Single; safecall;
    procedure Set_DistanceTop(prop: Single); safecall;
    function Get_DistanceBottom: Single; safecall;
    procedure Set_DistanceBottom(prop: Single); safecall;
    function Get_DistanceLeft: Single; safecall;
    procedure Set_DistanceLeft(prop: Single); safecall;
    function Get_DistanceRight: Single; safecall;
    procedure Set_DistanceRight(prop: Single); safecall;
    function Get_HorizontalPosition: Single; safecall;
    procedure Set_HorizontalPosition(prop: Single); safecall;
    function Get_VerticalPosition: Single; safecall;
    procedure Set_VerticalPosition(prop: Single); safecall;
    function Get_RelativeHorizontalPosition: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition(prop: WdRelativeHorizontalPosition); safecall;
    function Get_RelativeVerticalPosition: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition(prop: WdRelativeVerticalPosition); safecall;
    function Get_AllowOverlap: Integer; safecall;
    procedure Set_AllowOverlap(prop: Integer); safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_TableDirection: WdTableDirection; safecall;
    procedure Set_TableDirection(prop: WdTableDirection); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property AllowBreakAcrossPages: Integer read Get_AllowBreakAcrossPages write Set_AllowBreakAcrossPages;
    property Alignment: WdRowAlignment read Get_Alignment write Set_Alignment;
    property HeadingFormat: Integer read Get_HeadingFormat write Set_HeadingFormat;
    property SpaceBetweenColumns: Single read Get_SpaceBetweenColumns write Set_SpaceBetweenColumns;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property First: Row read Get_First;
    property Last: Row read Get_Last;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property WrapAroundText: Integer read Get_WrapAroundText write Set_WrapAroundText;
    property DistanceTop: Single read Get_DistanceTop write Set_DistanceTop;
    property DistanceBottom: Single read Get_DistanceBottom write Set_DistanceBottom;
    property DistanceLeft: Single read Get_DistanceLeft write Set_DistanceLeft;
    property DistanceRight: Single read Get_DistanceRight write Set_DistanceRight;
    property HorizontalPosition: Single read Get_HorizontalPosition write Set_HorizontalPosition;
    property VerticalPosition: Single read Get_VerticalPosition write Set_VerticalPosition;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property AllowOverlap: Integer read Get_AllowOverlap write Set_AllowOverlap;
    property NestingLevel: Integer read Get_NestingLevel;
    property TableDirection: WdTableDirection read Get_TableDirection write Set_TableDirection;
  end;

// *********************************************************************//
// DispIntf:  RowsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094C-0000-0000-C000-000000000046}
// *********************************************************************//
  RowsDisp = dispinterface
    ['{0002094C-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property AllowBreakAcrossPages: Integer dispid 3;
    property Alignment: WdRowAlignment dispid 4;
    property HeadingFormat: Integer dispid 5;
    property SpaceBetweenColumns: Single dispid 6;
    property Height: Single dispid 7;
    property HeightRule: WdRowHeightRule dispid 8;
    property LeftIndent: Single dispid 9;
    property First: Row readonly dispid 10;
    property Last: Row readonly dispid 11;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 102;
    function Item(Index: Integer): Row; dispid 0;
    function Add(var BeforeRow: OleVariant): Row; dispid 100;
    procedure Select; dispid 199;
    procedure Delete; dispid 200;
    procedure SetLeftIndent(LeftIndent: Single; RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight(RowHeight: Single; HeightRule: WdRowHeightRule); dispid 203;
    function ConvertToTextOld(var Separator: OleVariant): WordRange; dispid 16;
    procedure DistributeHeight; dispid 206;
    function ConvertToText(var Separator: OleVariant; var NestedTables: OleVariant): WordRange; dispid 210;
    property WrapAroundText: Integer dispid 12;
    property DistanceTop: Single dispid 13;
    property DistanceBottom: Single dispid 14;
    property DistanceLeft: Single dispid 20;
    property DistanceRight: Single dispid 21;
    property HorizontalPosition: Single dispid 15;
    property VerticalPosition: Single dispid 17;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition dispid 18;
    property RelativeVerticalPosition: WdRelativeVerticalPosition dispid 19;
    property AllowOverlap: Integer dispid 22;
    property NestingLevel: Integer readonly dispid 103;
    property TableDirection: WdTableDirection dispid 104;
  end;

// *********************************************************************//
// Interface: Columns
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094B-0000-0000-C000-000000000046}
// *********************************************************************//
  Columns = interface(IDispatch)
    ['{0002094B-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_First: Column; safecall;
    function Get_Last: Column; safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Item(Index: Integer): Column; safecall;
    function Add(var BeforeColumn: OleVariant): Column; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); safecall;
    procedure AutoFit; safecall;
    procedure DistributeWidth; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_PreferredWidth: Single; safecall;
    procedure Set_PreferredWidth(prop: Single); safecall;
    function Get_PreferredWidthType: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType(prop: WdPreferredWidthType); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property First: Column read Get_First;
    property Last: Column read Get_Last;
    property Width: Single read Get_Width write Set_Width;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property NestingLevel: Integer read Get_NestingLevel;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  ColumnsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094B-0000-0000-C000-000000000046}
// *********************************************************************//
  ColumnsDisp = dispinterface
    ['{0002094B-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property First: Column readonly dispid 100;
    property Last: Column readonly dispid 101;
    property Width: Single dispid 3;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 103;
    function Item(Index: Integer): Column; dispid 0;
    function Add(var BeforeColumn: OleVariant): Column; dispid 5;
    procedure Select; dispid 199;
    procedure Delete; dispid 200;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); dispid 201;
    procedure AutoFit; dispid 202;
    procedure DistributeWidth; dispid 203;
    property NestingLevel: Integer readonly dispid 104;
    property PreferredWidth: Single dispid 105;
    property PreferredWidthType: WdPreferredWidthType dispid 106;
  end;

// *********************************************************************//
// Interface: Cells
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094A-0000-0000-C000-000000000046}
// *********************************************************************//
  Cells = interface(IDispatch)
    ['{0002094A-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HeightRule: WdRowHeightRule; safecall;
    procedure Set_HeightRule(prop: WdRowHeightRule); safecall;
    function Get_VerticalAlignment: WdCellVerticalAlignment; safecall;
    procedure Set_VerticalAlignment(prop: WdCellVerticalAlignment); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Item(Index: Integer): Cell; safecall;
    function Add(var BeforeCell: OleVariant): Cell; safecall;
    procedure Delete(var ShiftCells: OleVariant); safecall;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); safecall;
    procedure SetHeight(var RowHeight: OleVariant; HeightRule: WdRowHeightRule); safecall;
    procedure Merge; safecall;
    procedure Split(var NumRows: OleVariant; var NumColumns: OleVariant; 
                    var MergeBeforeSplit: OleVariant); safecall;
    procedure DistributeHeight; safecall;
    procedure DistributeWidth; safecall;
    procedure AutoFit; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_PreferredWidth: Single; safecall;
    procedure Set_PreferredWidth(prop: Single); safecall;
    function Get_PreferredWidthType: WdPreferredWidthType; safecall;
    procedure Set_PreferredWidthType(prop: WdPreferredWidthType); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Width: Single read Get_Width write Set_Width;
    property Height: Single read Get_Height write Set_Height;
    property HeightRule: WdRowHeightRule read Get_HeightRule write Set_HeightRule;
    property VerticalAlignment: WdCellVerticalAlignment read Get_VerticalAlignment write Set_VerticalAlignment;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property NestingLevel: Integer read Get_NestingLevel;
    property PreferredWidth: Single read Get_PreferredWidth write Set_PreferredWidth;
    property PreferredWidthType: WdPreferredWidthType read Get_PreferredWidthType write Set_PreferredWidthType;
  end;

// *********************************************************************//
// DispIntf:  CellsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002094A-0000-0000-C000-000000000046}
// *********************************************************************//
  CellsDisp = dispinterface
    ['{0002094A-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Width: Single dispid 6;
    property Height: Single dispid 7;
    property HeightRule: WdRowHeightRule dispid 8;
    property VerticalAlignment: WdCellVerticalAlignment dispid 1104;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 101;
    function Item(Index: Integer): Cell; dispid 0;
    function Add(var BeforeCell: OleVariant): Cell; dispid 4;
    procedure Delete(var ShiftCells: OleVariant); dispid 200;
    procedure SetWidth(ColumnWidth: Single; RulerStyle: WdRulerStyle); dispid 202;
    procedure SetHeight(var RowHeight: OleVariant; HeightRule: WdRowHeightRule); dispid 203;
    procedure Merge; dispid 204;
    procedure Split(var NumRows: OleVariant; var NumColumns: OleVariant; 
                    var MergeBeforeSplit: OleVariant); dispid 205;
    procedure DistributeHeight; dispid 206;
    procedure DistributeWidth; dispid 207;
    procedure AutoFit; dispid 208;
    property NestingLevel: Integer readonly dispid 102;
    property PreferredWidth: Single dispid 103;
    property PreferredWidthType: WdPreferredWidthType dispid 104;
  end;

// *********************************************************************//
// Interface: AutoCorrect
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020949-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrect = interface(IDispatch)
    ['{00020949-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_CorrectDays: WordBool; safecall;
    procedure Set_CorrectDays(prop: WordBool); safecall;
    function Get_CorrectInitialCaps: WordBool; safecall;
    procedure Set_CorrectInitialCaps(prop: WordBool); safecall;
    function Get_CorrectSentenceCaps: WordBool; safecall;
    procedure Set_CorrectSentenceCaps(prop: WordBool); safecall;
    function Get_ReplaceText: WordBool; safecall;
    procedure Set_ReplaceText(prop: WordBool); safecall;
    function Get_Entries: AutoCorrectEntries; safecall;
    function Get_FirstLetterExceptions: FirstLetterExceptions; safecall;
    function Get_FirstLetterAutoAdd: WordBool; safecall;
    procedure Set_FirstLetterAutoAdd(prop: WordBool); safecall;
    function Get_TwoInitialCapsExceptions: TwoInitialCapsExceptions; safecall;
    function Get_TwoInitialCapsAutoAdd: WordBool; safecall;
    procedure Set_TwoInitialCapsAutoAdd(prop: WordBool); safecall;
    function Get_CorrectCapsLock: WordBool; safecall;
    procedure Set_CorrectCapsLock(prop: WordBool); safecall;
    function Get_CorrectHangulAndAlphabet: WordBool; safecall;
    procedure Set_CorrectHangulAndAlphabet(prop: WordBool); safecall;
    function Get_HangulAndAlphabetExceptions: HangulAndAlphabetExceptions; safecall;
    function Get_HangulAndAlphabetAutoAdd: WordBool; safecall;
    procedure Set_HangulAndAlphabetAutoAdd(prop: WordBool); safecall;
    function Get_ReplaceTextFromSpellingChecker: WordBool; safecall;
    procedure Set_ReplaceTextFromSpellingChecker(prop: WordBool); safecall;
    function Get_OtherCorrectionsAutoAdd: WordBool; safecall;
    procedure Set_OtherCorrectionsAutoAdd(prop: WordBool); safecall;
    function Get_OtherCorrectionsExceptions: OtherCorrectionsExceptions; safecall;
    function Get_CorrectKeyboardSetting: WordBool; safecall;
    procedure Set_CorrectKeyboardSetting(prop: WordBool); safecall;
    function Get_CorrectTableCells: WordBool; safecall;
    procedure Set_CorrectTableCells(prop: WordBool); safecall;
    function Get_DisplayAutoCorrectOptions: WordBool; safecall;
    procedure Set_DisplayAutoCorrectOptions(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property CorrectDays: WordBool read Get_CorrectDays write Set_CorrectDays;
    property CorrectInitialCaps: WordBool read Get_CorrectInitialCaps write Set_CorrectInitialCaps;
    property CorrectSentenceCaps: WordBool read Get_CorrectSentenceCaps write Set_CorrectSentenceCaps;
    property ReplaceText: WordBool read Get_ReplaceText write Set_ReplaceText;
    property Entries: AutoCorrectEntries read Get_Entries;
    property FirstLetterExceptions: FirstLetterExceptions read Get_FirstLetterExceptions;
    property FirstLetterAutoAdd: WordBool read Get_FirstLetterAutoAdd write Set_FirstLetterAutoAdd;
    property TwoInitialCapsExceptions: TwoInitialCapsExceptions read Get_TwoInitialCapsExceptions;
    property TwoInitialCapsAutoAdd: WordBool read Get_TwoInitialCapsAutoAdd write Set_TwoInitialCapsAutoAdd;
    property CorrectCapsLock: WordBool read Get_CorrectCapsLock write Set_CorrectCapsLock;
    property CorrectHangulAndAlphabet: WordBool read Get_CorrectHangulAndAlphabet write Set_CorrectHangulAndAlphabet;
    property HangulAndAlphabetExceptions: HangulAndAlphabetExceptions read Get_HangulAndAlphabetExceptions;
    property HangulAndAlphabetAutoAdd: WordBool read Get_HangulAndAlphabetAutoAdd write Set_HangulAndAlphabetAutoAdd;
    property ReplaceTextFromSpellingChecker: WordBool read Get_ReplaceTextFromSpellingChecker write Set_ReplaceTextFromSpellingChecker;
    property OtherCorrectionsAutoAdd: WordBool read Get_OtherCorrectionsAutoAdd write Set_OtherCorrectionsAutoAdd;
    property OtherCorrectionsExceptions: OtherCorrectionsExceptions read Get_OtherCorrectionsExceptions;
    property CorrectKeyboardSetting: WordBool read Get_CorrectKeyboardSetting write Set_CorrectKeyboardSetting;
    property CorrectTableCells: WordBool read Get_CorrectTableCells write Set_CorrectTableCells;
    property DisplayAutoCorrectOptions: WordBool read Get_DisplayAutoCorrectOptions write Set_DisplayAutoCorrectOptions;
  end;

// *********************************************************************//
// DispIntf:  AutoCorrectDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020949-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectDisp = dispinterface
    ['{00020949-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property CorrectDays: WordBool dispid 1;
    property CorrectInitialCaps: WordBool dispid 2;
    property CorrectSentenceCaps: WordBool dispid 3;
    property ReplaceText: WordBool dispid 4;
    property Entries: AutoCorrectEntries readonly dispid 6;
    property FirstLetterExceptions: FirstLetterExceptions readonly dispid 7;
    property FirstLetterAutoAdd: WordBool dispid 8;
    property TwoInitialCapsExceptions: TwoInitialCapsExceptions readonly dispid 9;
    property TwoInitialCapsAutoAdd: WordBool dispid 10;
    property CorrectCapsLock: WordBool dispid 11;
    property CorrectHangulAndAlphabet: WordBool dispid 12;
    property HangulAndAlphabetExceptions: HangulAndAlphabetExceptions readonly dispid 13;
    property HangulAndAlphabetAutoAdd: WordBool dispid 14;
    property ReplaceTextFromSpellingChecker: WordBool dispid 15;
    property OtherCorrectionsAutoAdd: WordBool dispid 16;
    property OtherCorrectionsExceptions: OtherCorrectionsExceptions readonly dispid 17;
    property CorrectKeyboardSetting: WordBool dispid 18;
    property CorrectTableCells: WordBool dispid 19;
    property DisplayAutoCorrectOptions: WordBool dispid 20;
  end;

// *********************************************************************//
// Interface: AutoCorrectEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020948-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntries = interface(IDispatch)
    ['{00020948-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): AutoCorrectEntry; safecall;
    function Add(const Name: WideString; const Value: WideString): AutoCorrectEntry; safecall;
    function AddRichText(const Name: WideString; const Range: WordRange): AutoCorrectEntry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AutoCorrectEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020948-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntriesDisp = dispinterface
    ['{00020948-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): AutoCorrectEntry; dispid 0;
    function Add(const Name: WideString; const Value: WideString): AutoCorrectEntry; dispid 101;
    function AddRichText(const Name: WideString; const Range: WordRange): AutoCorrectEntry; dispid 102;
  end;

// *********************************************************************//
// Interface: AutoCorrectEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020947-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntry = interface(IDispatch)
    ['{00020947-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    function Get_RichText: WordBool; safecall;
    procedure Delete; safecall;
    procedure Apply(const Range: WordRange); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property Value: WideString read Get_Value write Set_Value;
    property RichText: WordBool read Get_RichText;
  end;

// *********************************************************************//
// DispIntf:  AutoCorrectEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020947-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCorrectEntryDisp = dispinterface
    ['{00020947-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString dispid 2;
    property Value: WideString dispid 3;
    property RichText: WordBool readonly dispid 4;
    procedure Delete; dispid 101;
    procedure Apply(const Range: WordRange); dispid 102;
  end;

// *********************************************************************//
// Interface: FirstLetterExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020946-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterExceptions = interface(IDispatch)
    ['{00020946-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): FirstLetterException; safecall;
    function Add(const Name: WideString): FirstLetterException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  FirstLetterExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020946-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterExceptionsDisp = dispinterface
    ['{00020946-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): FirstLetterException; dispid 0;
    function Add(const Name: WideString): FirstLetterException; dispid 101;
  end;

// *********************************************************************//
// Interface: FirstLetterException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020945-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterException = interface(IDispatch)
    ['{00020945-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  FirstLetterExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020945-0000-0000-C000-000000000046}
// *********************************************************************//
  FirstLetterExceptionDisp = dispinterface
    ['{00020945-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString readonly dispid 2;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: TwoInitialCapsExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020944-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsExceptions = interface(IDispatch)
    ['{00020944-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): TwoInitialCapsException; safecall;
    function Add(const Name: WideString): TwoInitialCapsException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  TwoInitialCapsExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020944-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsExceptionsDisp = dispinterface
    ['{00020944-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): TwoInitialCapsException; dispid 0;
    function Add(const Name: WideString): TwoInitialCapsException; dispid 101;
  end;

// *********************************************************************//
// Interface: TwoInitialCapsException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020943-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsException = interface(IDispatch)
    ['{00020943-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  TwoInitialCapsExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020943-0000-0000-C000-000000000046}
// *********************************************************************//
  TwoInitialCapsExceptionDisp = dispinterface
    ['{00020943-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString readonly dispid 2;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: Footnotes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020942-0000-0000-C000-000000000046}
// *********************************************************************//
  Footnotes = interface(IDispatch)
    ['{00020942-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Location: WdFootnoteLocation; safecall;
    procedure Set_Location(prop: WdFootnoteLocation); safecall;
    function Get_NumberStyle: WdNoteNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdNoteNumberStyle); safecall;
    function Get_StartingNumber: Integer; safecall;
    procedure Set_StartingNumber(prop: Integer); safecall;
    function Get_NumberingRule: WdNumberingRule; safecall;
    procedure Set_NumberingRule(prop: WdNumberingRule); safecall;
    function Get_Separator: WordRange; safecall;
    function Get_ContinuationSeparator: WordRange; safecall;
    function Get_ContinuationNotice: WordRange; safecall;
    function Item(Index: Integer): Footnote; safecall;
    function Add(const Range: WordRange; var Reference: OleVariant; var Text: OleVariant): Footnote; safecall;
    procedure Convert; safecall;
    procedure SwapWithEndnotes; safecall;
    procedure ResetSeparator; safecall;
    procedure ResetContinuationSeparator; safecall;
    procedure ResetContinuationNotice; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Location: WdFootnoteLocation read Get_Location write Set_Location;
    property NumberStyle: WdNoteNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property NumberingRule: WdNumberingRule read Get_NumberingRule write Set_NumberingRule;
    property Separator: WordRange read Get_Separator;
    property ContinuationSeparator: WordRange read Get_ContinuationSeparator;
    property ContinuationNotice: WordRange read Get_ContinuationNotice;
  end;

// *********************************************************************//
// DispIntf:  FootnotesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020942-0000-0000-C000-000000000046}
// *********************************************************************//
  FootnotesDisp = dispinterface
    ['{00020942-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Location: WdFootnoteLocation dispid 100;
    property NumberStyle: WdNoteNumberStyle dispid 101;
    property StartingNumber: Integer dispid 102;
    property NumberingRule: WdNumberingRule dispid 103;
    property Separator: WordRange readonly dispid 104;
    property ContinuationSeparator: WordRange readonly dispid 105;
    property ContinuationNotice: WordRange readonly dispid 106;
    function Item(Index: Integer): Footnote; dispid 0;
    function Add(const Range: WordRange; var Reference: OleVariant; var Text: OleVariant): Footnote; dispid 4;
    procedure Convert; dispid 5;
    procedure SwapWithEndnotes; dispid 6;
    procedure ResetSeparator; dispid 7;
    procedure ResetContinuationSeparator; dispid 8;
    procedure ResetContinuationNotice; dispid 9;
  end;

// *********************************************************************//
// Interface: Endnotes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020941-0000-0000-C000-000000000046}
// *********************************************************************//
  Endnotes = interface(IDispatch)
    ['{00020941-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Location: WdEndnoteLocation; safecall;
    procedure Set_Location(prop: WdEndnoteLocation); safecall;
    function Get_NumberStyle: WdNoteNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdNoteNumberStyle); safecall;
    function Get_StartingNumber: Integer; safecall;
    procedure Set_StartingNumber(prop: Integer); safecall;
    function Get_NumberingRule: WdNumberingRule; safecall;
    procedure Set_NumberingRule(prop: WdNumberingRule); safecall;
    function Get_Separator: WordRange; safecall;
    function Get_ContinuationSeparator: WordRange; safecall;
    function Get_ContinuationNotice: WordRange; safecall;
    function Item(Index: Integer): Endnote; safecall;
    function Add(const Range: WordRange; var Reference: OleVariant; var Text: OleVariant): Endnote; safecall;
    procedure Convert; safecall;
    procedure SwapWithFootnotes; safecall;
    procedure ResetSeparator; safecall;
    procedure ResetContinuationSeparator; safecall;
    procedure ResetContinuationNotice; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Location: WdEndnoteLocation read Get_Location write Set_Location;
    property NumberStyle: WdNoteNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property NumberingRule: WdNumberingRule read Get_NumberingRule write Set_NumberingRule;
    property Separator: WordRange read Get_Separator;
    property ContinuationSeparator: WordRange read Get_ContinuationSeparator;
    property ContinuationNotice: WordRange read Get_ContinuationNotice;
  end;

// *********************************************************************//
// DispIntf:  EndnotesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020941-0000-0000-C000-000000000046}
// *********************************************************************//
  EndnotesDisp = dispinterface
    ['{00020941-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Location: WdEndnoteLocation dispid 100;
    property NumberStyle: WdNoteNumberStyle dispid 101;
    property StartingNumber: Integer dispid 102;
    property NumberingRule: WdNumberingRule dispid 103;
    property Separator: WordRange readonly dispid 104;
    property ContinuationSeparator: WordRange readonly dispid 105;
    property ContinuationNotice: WordRange readonly dispid 106;
    function Item(Index: Integer): Endnote; dispid 0;
    function Add(const Range: WordRange; var Reference: OleVariant; var Text: OleVariant): Endnote; dispid 4;
    procedure Convert; dispid 5;
    procedure SwapWithFootnotes; dispid 6;
    procedure ResetSeparator; dispid 7;
    procedure ResetContinuationSeparator; dispid 8;
    procedure ResetContinuationNotice; dispid 9;
  end;

// *********************************************************************//
// Interface: Comments
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020940-0000-0000-C000-000000000046}
// *********************************************************************//
  Comments = interface(IDispatch)
    ['{00020940-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ShowBy: WideString; safecall;
    procedure Set_ShowBy(const prop: WideString); safecall;
    function Item(Index: Integer): Comment; safecall;
    function Add(const Range: WordRange; var Text: OleVariant): Comment; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ShowBy: WideString read Get_ShowBy write Set_ShowBy;
  end;

// *********************************************************************//
// DispIntf:  CommentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020940-0000-0000-C000-000000000046}
// *********************************************************************//
  CommentsDisp = dispinterface
    ['{00020940-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ShowBy: WideString dispid 1003;
    function Item(Index: Integer): Comment; dispid 0;
    function Add(const Range: WordRange; var Text: OleVariant): Comment; dispid 4;
  end;

// *********************************************************************//
// Interface: Footnote
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093F-0000-0000-C000-000000000046}
// *********************************************************************//
  Footnote = interface(IDispatch)
    ['{0002093F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Reference: WordRange; safecall;
    function Get_Index: Integer; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Reference: WordRange read Get_Reference;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  FootnoteDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093F-0000-0000-C000-000000000046}
// *********************************************************************//
  FootnoteDisp = dispinterface
    ['{0002093F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 4;
    property Reference: WordRange readonly dispid 5;
    property Index: Integer readonly dispid 6;
    procedure Delete; dispid 10;
  end;

// *********************************************************************//
// Interface: Endnote
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093E-0000-0000-C000-000000000046}
// *********************************************************************//
  Endnote = interface(IDispatch)
    ['{0002093E-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Reference: WordRange; safecall;
    function Get_Index: Integer; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Reference: WordRange read Get_Reference;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  EndnoteDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093E-0000-0000-C000-000000000046}
// *********************************************************************//
  EndnoteDisp = dispinterface
    ['{0002093E-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 4;
    property Reference: WordRange readonly dispid 5;
    property Index: Integer readonly dispid 6;
    procedure Delete; dispid 10;
  end;

// *********************************************************************//
// Interface: Comment
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093D-0000-0000-C000-000000000046}
// *********************************************************************//
  Comment = interface(IDispatch)
    ['{0002093D-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Reference: WordRange; safecall;
    function Get_Scope: WordRange; safecall;
    function Get_Index: Integer; safecall;
    function Get_Author: WideString; safecall;
    procedure Set_Author(const prop: WideString); safecall;
    function Get_Initial: WideString; safecall;
    procedure Set_Initial(const prop: WideString); safecall;
    function Get_ShowTip: WordBool; safecall;
    procedure Set_ShowTip(prop: WordBool); safecall;
    procedure Delete; safecall;
    procedure Edit; safecall;
    function Get_Date: TDateTime; safecall;
    function Get_IsInk: WordBool; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Reference: WordRange read Get_Reference;
    property Scope: WordRange read Get_Scope;
    property Index: Integer read Get_Index;
    property Author: WideString read Get_Author write Set_Author;
    property Initial: WideString read Get_Initial write Set_Initial;
    property ShowTip: WordBool read Get_ShowTip write Set_ShowTip;
    property Date: TDateTime read Get_Date;
    property IsInk: WordBool read Get_IsInk;
  end;

// *********************************************************************//
// DispIntf:  CommentDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093D-0000-0000-C000-000000000046}
// *********************************************************************//
  CommentDisp = dispinterface
    ['{0002093D-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 1003;
    property Reference: WordRange readonly dispid 1004;
    property Scope: WordRange readonly dispid 1005;
    property Index: Integer readonly dispid 1006;
    property Author: WideString dispid 1007;
    property Initial: WideString dispid 1008;
    property ShowTip: WordBool dispid 1009;
    procedure Delete; dispid 10;
    procedure Edit; dispid 1011;
    property Date: TDateTime readonly dispid 1010;
    property IsInk: WordBool readonly dispid 1012;
  end;

// *********************************************************************//
// Interface: Borders
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093C-0000-0000-C000-000000000046}
// *********************************************************************//
  Borders = interface(IDispatch)
    ['{0002093C-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Enable: Integer; safecall;
    procedure Set_Enable(prop: Integer); safecall;
    function Get_DistanceFromTop: Integer; safecall;
    procedure Set_DistanceFromTop(prop: Integer); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_InsideLineStyle: WdLineStyle; safecall;
    procedure Set_InsideLineStyle(prop: WdLineStyle); safecall;
    function Get_OutsideLineStyle: WdLineStyle; safecall;
    procedure Set_OutsideLineStyle(prop: WdLineStyle); safecall;
    function Get_InsideLineWidth: WdLineWidth; safecall;
    procedure Set_InsideLineWidth(prop: WdLineWidth); safecall;
    function Get_OutsideLineWidth: WdLineWidth; safecall;
    procedure Set_OutsideLineWidth(prop: WdLineWidth); safecall;
    function Get_InsideColorIndex: WdColorIndex; safecall;
    procedure Set_InsideColorIndex(prop: WdColorIndex); safecall;
    function Get_OutsideColorIndex: WdColorIndex; safecall;
    procedure Set_OutsideColorIndex(prop: WdColorIndex); safecall;
    function Get_DistanceFromLeft: Integer; safecall;
    procedure Set_DistanceFromLeft(prop: Integer); safecall;
    function Get_DistanceFromBottom: Integer; safecall;
    procedure Set_DistanceFromBottom(prop: Integer); safecall;
    function Get_DistanceFromRight: Integer; safecall;
    procedure Set_DistanceFromRight(prop: Integer); safecall;
    function Get_AlwaysInFront: WordBool; safecall;
    procedure Set_AlwaysInFront(prop: WordBool); safecall;
    function Get_SurroundHeader: WordBool; safecall;
    procedure Set_SurroundHeader(prop: WordBool); safecall;
    function Get_SurroundFooter: WordBool; safecall;
    procedure Set_SurroundFooter(prop: WordBool); safecall;
    function Get_JoinBorders: WordBool; safecall;
    procedure Set_JoinBorders(prop: WordBool); safecall;
    function Get_HasHorizontal: WordBool; safecall;
    function Get_HasVertical: WordBool; safecall;
    function Get_DistanceFrom: WdBorderDistanceFrom; safecall;
    procedure Set_DistanceFrom(prop: WdBorderDistanceFrom); safecall;
    function Get_EnableFirstPageInSection: WordBool; safecall;
    procedure Set_EnableFirstPageInSection(prop: WordBool); safecall;
    function Get_EnableOtherPagesInSection: WordBool; safecall;
    procedure Set_EnableOtherPagesInSection(prop: WordBool); safecall;
    function Item(Index: WdBorderType): Border; safecall;
    procedure ApplyPageBordersToAllSections; safecall;
    function Get_InsideColor: WdColor; safecall;
    procedure Set_InsideColor(prop: WdColor); safecall;
    function Get_OutsideColor: WdColor; safecall;
    procedure Set_OutsideColor(prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Enable: Integer read Get_Enable write Set_Enable;
    property DistanceFromTop: Integer read Get_DistanceFromTop write Set_DistanceFromTop;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property InsideLineStyle: WdLineStyle read Get_InsideLineStyle write Set_InsideLineStyle;
    property OutsideLineStyle: WdLineStyle read Get_OutsideLineStyle write Set_OutsideLineStyle;
    property InsideLineWidth: WdLineWidth read Get_InsideLineWidth write Set_InsideLineWidth;
    property OutsideLineWidth: WdLineWidth read Get_OutsideLineWidth write Set_OutsideLineWidth;
    property InsideColorIndex: WdColorIndex read Get_InsideColorIndex write Set_InsideColorIndex;
    property OutsideColorIndex: WdColorIndex read Get_OutsideColorIndex write Set_OutsideColorIndex;
    property DistanceFromLeft: Integer read Get_DistanceFromLeft write Set_DistanceFromLeft;
    property DistanceFromBottom: Integer read Get_DistanceFromBottom write Set_DistanceFromBottom;
    property DistanceFromRight: Integer read Get_DistanceFromRight write Set_DistanceFromRight;
    property AlwaysInFront: WordBool read Get_AlwaysInFront write Set_AlwaysInFront;
    property SurroundHeader: WordBool read Get_SurroundHeader write Set_SurroundHeader;
    property SurroundFooter: WordBool read Get_SurroundFooter write Set_SurroundFooter;
    property JoinBorders: WordBool read Get_JoinBorders write Set_JoinBorders;
    property HasHorizontal: WordBool read Get_HasHorizontal;
    property HasVertical: WordBool read Get_HasVertical;
    property DistanceFrom: WdBorderDistanceFrom read Get_DistanceFrom write Set_DistanceFrom;
    property EnableFirstPageInSection: WordBool read Get_EnableFirstPageInSection write Set_EnableFirstPageInSection;
    property EnableOtherPagesInSection: WordBool read Get_EnableOtherPagesInSection write Set_EnableOtherPagesInSection;
    property InsideColor: WdColor read Get_InsideColor write Set_InsideColor;
    property OutsideColor: WdColor read Get_OutsideColor write Set_OutsideColor;
  end;

// *********************************************************************//
// DispIntf:  BordersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093C-0000-0000-C000-000000000046}
// *********************************************************************//
  BordersDisp = dispinterface
    ['{0002093C-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Enable: Integer dispid 2;
    property DistanceFromTop: Integer dispid 4;
    property Shadow: WordBool dispid 5;
    property InsideLineStyle: WdLineStyle dispid 6;
    property OutsideLineStyle: WdLineStyle dispid 7;
    property InsideLineWidth: WdLineWidth dispid 8;
    property OutsideLineWidth: WdLineWidth dispid 9;
    property InsideColorIndex: WdColorIndex dispid 10;
    property OutsideColorIndex: WdColorIndex dispid 11;
    property DistanceFromLeft: Integer dispid 20;
    property DistanceFromBottom: Integer dispid 21;
    property DistanceFromRight: Integer dispid 22;
    property AlwaysInFront: WordBool dispid 23;
    property SurroundHeader: WordBool dispid 24;
    property SurroundFooter: WordBool dispid 25;
    property JoinBorders: WordBool dispid 26;
    property HasHorizontal: WordBool readonly dispid 27;
    property HasVertical: WordBool readonly dispid 28;
    property DistanceFrom: WdBorderDistanceFrom dispid 29;
    property EnableFirstPageInSection: WordBool dispid 30;
    property EnableOtherPagesInSection: WordBool dispid 31;
    function Item(Index: WdBorderType): Border; dispid 0;
    procedure ApplyPageBordersToAllSections; dispid 2000;
    property InsideColor: WdColor dispid 32;
    property OutsideColor: WdColor dispid 33;
  end;

// *********************************************************************//
// Interface: Border
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093B-0000-0000-C000-000000000046}
// *********************************************************************//
  Border = interface(IDispatch)
    ['{0002093B-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    function Get_ColorIndex: WdColorIndex; safecall;
    procedure Set_ColorIndex(prop: WdColorIndex); safecall;
    function Get_Inside: WordBool; safecall;
    function Get_LineStyle: WdLineStyle; safecall;
    procedure Set_LineStyle(prop: WdLineStyle); safecall;
    function Get_LineWidth: WdLineWidth; safecall;
    procedure Set_LineWidth(prop: WdLineWidth); safecall;
    function Get_ArtStyle: WdPageBorderArt; safecall;
    procedure Set_ArtStyle(prop: WdPageBorderArt); safecall;
    function Get_ArtWidth: Integer; safecall;
    procedure Set_ArtWidth(prop: Integer); safecall;
    function Get_Color: WdColor; safecall;
    procedure Set_Color(prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property ColorIndex: WdColorIndex read Get_ColorIndex write Set_ColorIndex;
    property Inside: WordBool read Get_Inside;
    property LineStyle: WdLineStyle read Get_LineStyle write Set_LineStyle;
    property LineWidth: WdLineWidth read Get_LineWidth write Set_LineWidth;
    property ArtStyle: WdPageBorderArt read Get_ArtStyle write Set_ArtStyle;
    property ArtWidth: Integer read Get_ArtWidth write Set_ArtWidth;
    property Color: WdColor read Get_Color write Set_Color;
  end;

// *********************************************************************//
// DispIntf:  BorderDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093B-0000-0000-C000-000000000046}
// *********************************************************************//
  BorderDisp = dispinterface
    ['{0002093B-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Visible: WordBool dispid 0;
    property ColorIndex: WdColorIndex dispid 1;
    property Inside: WordBool readonly dispid 2;
    property LineStyle: WdLineStyle dispid 3;
    property LineWidth: WdLineWidth dispid 4;
    property ArtStyle: WdPageBorderArt dispid 5;
    property ArtWidth: Integer dispid 6;
    property Color: WdColor dispid 7;
  end;

// *********************************************************************//
// Interface: Shading
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093A-0000-0000-C000-000000000046}
// *********************************************************************//
  Shading = interface(IDispatch)
    ['{0002093A-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ForegroundPatternColorIndex: WdColorIndex; safecall;
    procedure Set_ForegroundPatternColorIndex(prop: WdColorIndex); safecall;
    function Get_BackgroundPatternColorIndex: WdColorIndex; safecall;
    procedure Set_BackgroundPatternColorIndex(prop: WdColorIndex); safecall;
    function Get_Texture: WdTextureIndex; safecall;
    procedure Set_Texture(prop: WdTextureIndex); safecall;
    function Get_ForegroundPatternColor: WdColor; safecall;
    procedure Set_ForegroundPatternColor(prop: WdColor); safecall;
    function Get_BackgroundPatternColor: WdColor; safecall;
    procedure Set_BackgroundPatternColor(prop: WdColor); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ForegroundPatternColorIndex: WdColorIndex read Get_ForegroundPatternColorIndex write Set_ForegroundPatternColorIndex;
    property BackgroundPatternColorIndex: WdColorIndex read Get_BackgroundPatternColorIndex write Set_BackgroundPatternColorIndex;
    property Texture: WdTextureIndex read Get_Texture write Set_Texture;
    property ForegroundPatternColor: WdColor read Get_ForegroundPatternColor write Set_ForegroundPatternColor;
    property BackgroundPatternColor: WdColor read Get_BackgroundPatternColor write Set_BackgroundPatternColor;
  end;

// *********************************************************************//
// DispIntf:  ShadingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002093A-0000-0000-C000-000000000046}
// *********************************************************************//
  ShadingDisp = dispinterface
    ['{0002093A-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ForegroundPatternColorIndex: WdColorIndex dispid 1;
    property BackgroundPatternColorIndex: WdColorIndex dispid 2;
    property Texture: WdTextureIndex dispid 3;
    property ForegroundPatternColor: WdColor dispid 4;
    property BackgroundPatternColor: WdColor dispid 5;
  end;

// *********************************************************************//
// Interface: TextRetrievalMode
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020939-0000-0000-C000-000000000046}
// *********************************************************************//
  TextRetrievalMode = interface(IDispatch)
    ['{00020939-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ViewType: WdViewType; safecall;
    procedure Set_ViewType(prop: WdViewType); safecall;
    function Get_Duplicate: TextRetrievalMode; safecall;
    function Get_IncludeHiddenText: WordBool; safecall;
    procedure Set_IncludeHiddenText(prop: WordBool); safecall;
    function Get_IncludeFieldCodes: WordBool; safecall;
    procedure Set_IncludeFieldCodes(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ViewType: WdViewType read Get_ViewType write Set_ViewType;
    property Duplicate: TextRetrievalMode read Get_Duplicate;
    property IncludeHiddenText: WordBool read Get_IncludeHiddenText write Set_IncludeHiddenText;
    property IncludeFieldCodes: WordBool read Get_IncludeFieldCodes write Set_IncludeFieldCodes;
  end;

// *********************************************************************//
// DispIntf:  TextRetrievalModeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020939-0000-0000-C000-000000000046}
// *********************************************************************//
  TextRetrievalModeDisp = dispinterface
    ['{00020939-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ViewType: WdViewType dispid 0;
    property Duplicate: TextRetrievalMode readonly dispid 1;
    property IncludeHiddenText: WordBool dispid 2;
    property IncludeFieldCodes: WordBool dispid 3;
  end;

// *********************************************************************//
// Interface: AutoTextEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020937-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntries = interface(IDispatch)
    ['{00020937-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): AutoTextEntry; safecall;
    function Add(const Name: WideString; const Range: WordRange): AutoTextEntry; safecall;
    function AppendToSpike(const Range: WordRange): AutoTextEntry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AutoTextEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020937-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntriesDisp = dispinterface
    ['{00020937-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): AutoTextEntry; dispid 0;
    function Add(const Name: WideString; const Range: WordRange): AutoTextEntry; dispid 101;
    function AppendToSpike(const Range: WordRange): AutoTextEntry; dispid 102;
  end;

// *********************************************************************//
// Interface: AutoTextEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020936-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntry = interface(IDispatch)
    ['{00020936-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_StyleName: WideString; safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    procedure Delete; safecall;
    function Insert(const Where: WordRange; var RichText: OleVariant): WordRange; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property StyleName: WideString read Get_StyleName;
    property Value: WideString read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  AutoTextEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020936-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoTextEntryDisp = dispinterface
    ['{00020936-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString dispid 2;
    property StyleName: WideString readonly dispid 3;
    property Value: WideString dispid 0;
    procedure Delete; dispid 101;
    function Insert(const Where: WordRange; var RichText: OleVariant): WordRange; dispid 102;
  end;

// *********************************************************************//
// Interface: System
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020935-0000-0000-C000-000000000046}
// *********************************************************************//
  System = interface(IDispatch)
    ['{00020935-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_OperatingSystem: WideString; safecall;
    function Get_ProcessorType: WideString; safecall;
    function Get_Version: WideString; safecall;
    function Get_FreeDiskSpace: Integer; safecall;
    function Get_Country: WdCountry; safecall;
    function Get_LanguageDesignation: WideString; safecall;
    function Get_HorizontalResolution: Integer; safecall;
    function Get_VerticalResolution: Integer; safecall;
    function Get_ProfileString(const Section: WideString; const Key: WideString): WideString; safecall;
    procedure Set_ProfileString(const Section: WideString; const Key: WideString; 
                                const prop: WideString); safecall;
    function Get_PrivateProfileString(const FileName: WideString; const Section: WideString; 
                                      const Key: WideString): WideString; safecall;
    procedure Set_PrivateProfileString(const FileName: WideString; const Section: WideString; 
                                       const Key: WideString; const prop: WideString); safecall;
    function Get_MathCoprocessorInstalled: WordBool; safecall;
    function Get_ComputerType: WideString; safecall;
    function Get_MacintoshName: WideString; safecall;
    function Get_QuickDrawInstalled: WordBool; safecall;
    function Get_Cursor: WdCursorType; safecall;
    procedure Set_Cursor(prop: WdCursorType); safecall;
    procedure MSInfo; safecall;
    procedure Connect(const Path: WideString; var Drive: OleVariant; var Password: OleVariant); safecall;
    function Get_CountryRegion: WdCountry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OperatingSystem: WideString read Get_OperatingSystem;
    property ProcessorType: WideString read Get_ProcessorType;
    property Version: WideString read Get_Version;
    property FreeDiskSpace: Integer read Get_FreeDiskSpace;
    property Country: WdCountry read Get_Country;
    property LanguageDesignation: WideString read Get_LanguageDesignation;
    property HorizontalResolution: Integer read Get_HorizontalResolution;
    property VerticalResolution: Integer read Get_VerticalResolution;
    property ProfileString[const Section: WideString; const Key: WideString]: WideString read Get_ProfileString write Set_ProfileString;
    property PrivateProfileString[const FileName: WideString; const Section: WideString; 
                                  const Key: WideString]: WideString read Get_PrivateProfileString write Set_PrivateProfileString;
    property MathCoprocessorInstalled: WordBool read Get_MathCoprocessorInstalled;
    property ComputerType: WideString read Get_ComputerType;
    property MacintoshName: WideString read Get_MacintoshName;
    property QuickDrawInstalled: WordBool read Get_QuickDrawInstalled;
    property Cursor: WdCursorType read Get_Cursor write Set_Cursor;
    property CountryRegion: WdCountry read Get_CountryRegion;
  end;

// *********************************************************************//
// DispIntf:  SystemDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020935-0000-0000-C000-000000000046}
// *********************************************************************//
  SystemDisp = dispinterface
    ['{00020935-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property OperatingSystem: WideString readonly dispid 1;
    property ProcessorType: WideString readonly dispid 2;
    property Version: WideString readonly dispid 3;
    property FreeDiskSpace: Integer readonly dispid 4;
    property Country: WdCountry readonly dispid 5;
    property LanguageDesignation: WideString readonly dispid 6;
    property HorizontalResolution: Integer readonly dispid 7;
    property VerticalResolution: Integer readonly dispid 8;
    property ProfileString[const Section: WideString; const Key: WideString]: WideString dispid 9;
    property PrivateProfileString[const FileName: WideString; const Section: WideString; 
                                  const Key: WideString]: WideString dispid 10;
    property MathCoprocessorInstalled: WordBool readonly dispid 11;
    property ComputerType: WideString readonly dispid 12;
    property MacintoshName: WideString readonly dispid 14;
    property QuickDrawInstalled: WordBool readonly dispid 15;
    property Cursor: WdCursorType dispid 16;
    procedure MSInfo; dispid 101;
    procedure Connect(const Path: WideString; var Drive: OleVariant; var Password: OleVariant); dispid 102;
    property CountryRegion: WdCountry readonly dispid 103;
  end;

// *********************************************************************//
// Interface: OLEFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020933-0000-0000-C000-000000000046}
// *********************************************************************//
  OLEFormat = interface(IDispatch)
    ['{00020933-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ClassType: WideString; safecall;
    procedure Set_ClassType(const prop: WideString); safecall;
    function Get_DisplayAsIcon: WordBool; safecall;
    procedure Set_DisplayAsIcon(prop: WordBool); safecall;
    function Get_IconName: WideString; safecall;
    procedure Set_IconName(const prop: WideString); safecall;
    function Get_IconPath: WideString; safecall;
    function Get_IconIndex: Integer; safecall;
    procedure Set_IconIndex(prop: Integer); safecall;
    function Get_IconLabel: WideString; safecall;
    procedure Set_IconLabel(const prop: WideString); safecall;
    function Get_Label_: WideString; safecall;
    function Get_Object_: IDispatch; safecall;
    function Get_ProgID: WideString; safecall;
    procedure Activate; safecall;
    procedure Edit; safecall;
    procedure Open; safecall;
    procedure DoVerb(var VerbIndex: OleVariant); safecall;
    procedure ConvertTo(var ClassType: OleVariant; var DisplayAsIcon: OleVariant; 
                        var IconFileName: OleVariant; var IconIndex: OleVariant; 
                        var IconLabel: OleVariant); safecall;
    procedure ActivateAs(const ClassType: WideString); safecall;
    function Get_PreserveFormattingOnUpdate: WordBool; safecall;
    procedure Set_PreserveFormattingOnUpdate(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ClassType: WideString read Get_ClassType write Set_ClassType;
    property DisplayAsIcon: WordBool read Get_DisplayAsIcon write Set_DisplayAsIcon;
    property IconName: WideString read Get_IconName write Set_IconName;
    property IconPath: WideString read Get_IconPath;
    property IconIndex: Integer read Get_IconIndex write Set_IconIndex;
    property IconLabel: WideString read Get_IconLabel write Set_IconLabel;
    property Label_: WideString read Get_Label_;
    property Object_: IDispatch read Get_Object_;
    property ProgID: WideString read Get_ProgID;
    property PreserveFormattingOnUpdate: WordBool read Get_PreserveFormattingOnUpdate write Set_PreserveFormattingOnUpdate;
  end;

// *********************************************************************//
// DispIntf:  OLEFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020933-0000-0000-C000-000000000046}
// *********************************************************************//
  OLEFormatDisp = dispinterface
    ['{00020933-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ClassType: WideString dispid 2;
    property DisplayAsIcon: WordBool dispid 3;
    property IconName: WideString dispid 7;
    property IconPath: WideString readonly dispid 8;
    property IconIndex: Integer dispid 9;
    property IconLabel: WideString dispid 10;
    property Label_: WideString readonly dispid 12;
    property Object_: IDispatch readonly dispid 14;
    property ProgID: WideString readonly dispid 22;
    procedure Activate; dispid 104;
    procedure Edit; dispid 106;
    procedure Open; dispid 107;
    procedure DoVerb(var VerbIndex: OleVariant); dispid 109;
    procedure ConvertTo(var ClassType: OleVariant; var DisplayAsIcon: OleVariant; 
                        var IconFileName: OleVariant; var IconIndex: OleVariant; 
                        var IconLabel: OleVariant); dispid 110;
    procedure ActivateAs(const ClassType: WideString); dispid 111;
    property PreserveFormattingOnUpdate: WordBool dispid 112;
  end;

// *********************************************************************//
// Interface: LinkFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020931-0000-0000-C000-000000000046}
// *********************************************************************//
  LinkFormat = interface(IDispatch)
    ['{00020931-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AutoUpdate: WordBool; safecall;
    procedure Set_AutoUpdate(prop: WordBool); safecall;
    function Get_SourceName: WideString; safecall;
    function Get_SourcePath: WideString; safecall;
    function Get_Locked: WordBool; safecall;
    procedure Set_Locked(prop: WordBool); safecall;
    function Get_type_: WdLinkType; safecall;
    function Get_SourceFullName: WideString; safecall;
    procedure Set_SourceFullName(const prop: WideString); safecall;
    function Get_SavePictureWithDocument: WordBool; safecall;
    procedure Set_SavePictureWithDocument(prop: WordBool); safecall;
    procedure BreakLink; safecall;
    procedure Update; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AutoUpdate: WordBool read Get_AutoUpdate write Set_AutoUpdate;
    property SourceName: WideString read Get_SourceName;
    property SourcePath: WideString read Get_SourcePath;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property type_: WdLinkType read Get_type_;
    property SourceFullName: WideString read Get_SourceFullName write Set_SourceFullName;
    property SavePictureWithDocument: WordBool read Get_SavePictureWithDocument write Set_SavePictureWithDocument;
  end;

// *********************************************************************//
// DispIntf:  LinkFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020931-0000-0000-C000-000000000046}
// *********************************************************************//
  LinkFormatDisp = dispinterface
    ['{00020931-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property AutoUpdate: WordBool dispid 1;
    property SourceName: WideString readonly dispid 4;
    property SourcePath: WideString readonly dispid 5;
    property Locked: WordBool dispid 13;
    property type_: WdLinkType readonly dispid 16;
    property SourceFullName: WideString dispid 21;
    property SavePictureWithDocument: WordBool dispid 22;
    procedure BreakLink; dispid 104;
    procedure Update; dispid 105;
  end;

// *********************************************************************//
// Interface: _OLEControl
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {000209A4-0000-0000-C000-000000000046}
// *********************************************************************//
  _OLEControl = interface(IDispatch)
    ['{000209A4-0000-0000-C000-000000000046}']
    function Get_Left: Single; safecall;
    procedure Set_Left(prop: Single); safecall;
    function Get_Top: Single; safecall;
    procedure Set_Top(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Automation: IDispatch; safecall;
    procedure Select; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Delete; safecall;
    procedure Activate; safecall;
    function Get_AltHTML: WideString; safecall;
    procedure Set_AltHTML(const prop: WideString); safecall;
    property Left: Single read Get_Left write Set_Left;
    property Top: Single read Get_Top write Set_Top;
    property Height: Single read Get_Height write Set_Height;
    property Width: Single read Get_Width write Set_Width;
    property Name: WideString read Get_Name write Set_Name;
    property Automation: IDispatch read Get_Automation;
    property AltHTML: WideString read Get_AltHTML write Set_AltHTML;
  end;

// *********************************************************************//
// DispIntf:  _OLEControlDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {000209A4-0000-0000-C000-000000000046}
// *********************************************************************//
  _OLEControlDisp = dispinterface
    ['{000209A4-0000-0000-C000-000000000046}']
    property Left: Single dispid -2147417853;
    property Top: Single dispid -2147417852;
    property Height: Single dispid -2147417851;
    property Width: Single dispid -2147417850;
    property Name: WideString dispid -2147418112;
    property Automation: IDispatch readonly dispid -2147417849;
    procedure Select; dispid -2147417568;
    procedure Copy; dispid -2147417560;
    procedure Cut; dispid -2147417559;
    procedure Delete; dispid -2147417520;
    procedure Activate; dispid -2147417519;
    property AltHTML: WideString dispid -2147415101;
  end;

// *********************************************************************//
// Interface: Fields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020930-0000-0000-C000-000000000046}
// *********************************************************************//
  Fields = interface(IDispatch)
    ['{00020930-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get_Locked: Integer; safecall;
    procedure Set_Locked(prop: Integer); safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(Index: Integer): Field; safecall;
    procedure ToggleShowCodes; safecall;
    function Update: Integer; safecall;
    procedure Unlink; safecall;
    procedure UpdateSource; safecall;
    function Add(const Range: WordRange; var Type_: OleVariant; var Text: OleVariant; 
                 var PreserveFormatting: OleVariant): Field; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Locked: Integer read Get_Locked write Set_Locked;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  FieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020930-0000-0000-C000-000000000046}
// *********************************************************************//
  FieldsDisp = dispinterface
    ['{00020930-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property Locked: Integer dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(Index: Integer): Field; dispid 0;
    procedure ToggleShowCodes; dispid 100;
    function Update: Integer; dispid 101;
    procedure Unlink; dispid 102;
    procedure UpdateSource; dispid 104;
    function Add(const Range: WordRange; var Type_: OleVariant; var Text: OleVariant; 
                 var PreserveFormatting: OleVariant): Field; dispid 105;
  end;

// *********************************************************************//
// Interface: Field
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092F-0000-0000-C000-000000000046}
// *********************************************************************//
  Field = interface(IDispatch)
    ['{0002092F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Code: WordRange; safecall;
    procedure Set_Code(const prop: WordRange); safecall;
    function Get_type_: WdFieldType; safecall;
    function Get_Locked: WordBool; safecall;
    procedure Set_Locked(prop: WordBool); safecall;
    function Get_Kind: WdFieldKind; safecall;
    function Get_Result: WordRange; safecall;
    procedure Set_Result(const prop: WordRange); safecall;
    function Get_Data: WideString; safecall;
    procedure Set_Data(const prop: WideString); safecall;
    function Get_Next: Field; safecall;
    function Get_Previous: Field; safecall;
    function Get_Index: Integer; safecall;
    function Get_ShowCodes: WordBool; safecall;
    procedure Set_ShowCodes(prop: WordBool); safecall;
    function Get_LinkFormat: LinkFormat; safecall;
    function Get_OLEFormat: OLEFormat; safecall;
    function Get_InlineShape: InlineShape; safecall;
    procedure Select; safecall;
    function Update: WordBool; safecall;
    procedure Unlink; safecall;
    procedure UpdateSource; safecall;
    procedure DoClick; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Code: WordRange read Get_Code write Set_Code;
    property type_: WdFieldType read Get_type_;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Kind: WdFieldKind read Get_Kind;
    property Result: WordRange read Get_Result write Set_Result;
    property Data: WideString read Get_Data write Set_Data;
    property Next: Field read Get_Next;
    property Previous: Field read Get_Previous;
    property Index: Integer read Get_Index;
    property ShowCodes: WordBool read Get_ShowCodes write Set_ShowCodes;
    property LinkFormat: LinkFormat read Get_LinkFormat;
    property OLEFormat: OLEFormat read Get_OLEFormat;
    property InlineShape: InlineShape read Get_InlineShape;
  end;

// *********************************************************************//
// DispIntf:  FieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092F-0000-0000-C000-000000000046}
// *********************************************************************//
  FieldDisp = dispinterface
    ['{0002092F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Code: WordRange dispid 0;
    property type_: WdFieldType readonly dispid 1;
    property Locked: WordBool dispid 2;
    property Kind: WdFieldKind readonly dispid 3;
    property Result: WordRange dispid 4;
    property Data: WideString dispid 5;
    property Next: Field readonly dispid 6;
    property Previous: Field readonly dispid 7;
    property Index: Integer readonly dispid 8;
    property ShowCodes: WordBool dispid 9;
    property LinkFormat: LinkFormat readonly dispid 10;
    property OLEFormat: OLEFormat readonly dispid 11;
    property InlineShape: InlineShape readonly dispid 12;
    procedure Select; dispid 65535;
    function Update: WordBool; dispid 101;
    procedure Unlink; dispid 102;
    procedure UpdateSource; dispid 103;
    procedure DoClick; dispid 104;
    procedure Copy; dispid 105;
    procedure Cut; dispid 106;
    procedure Delete; dispid 107;
  end;

// *********************************************************************//
// Interface: Browser
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092E-0000-0000-C000-000000000046}
// *********************************************************************//
  Browser = interface(IDispatch)
    ['{0002092E-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Target: WdBrowseTarget; safecall;
    procedure Set_Target(prop: WdBrowseTarget); safecall;
    procedure Next; safecall;
    procedure Previous; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Target: WdBrowseTarget read Get_Target write Set_Target;
  end;

// *********************************************************************//
// DispIntf:  BrowserDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092E-0000-0000-C000-000000000046}
// *********************************************************************//
  BrowserDisp = dispinterface
    ['{0002092E-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Target: WdBrowseTarget dispid 1;
    procedure Next; dispid 101;
    procedure Previous; dispid 102;
  end;

// *********************************************************************//
// Interface: Styles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092D-0000-0000-C000-000000000046}
// *********************************************************************//
  Styles = interface(IDispatch)
    ['{0002092D-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): Style; safecall;
    function Add(const Name: WideString; var Type_: OleVariant): Style; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  StylesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092D-0000-0000-C000-000000000046}
// *********************************************************************//
  StylesDisp = dispinterface
    ['{0002092D-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): Style; dispid 0;
    function Add(const Name: WideString; var Type_: OleVariant): Style; dispid 100;
  end;

// *********************************************************************//
// Interface: Style
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092C-0000-0000-C000-000000000046}
// *********************************************************************//
  Style = interface(IDispatch)
    ['{0002092C-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_NameLocal: WideString; safecall;
    procedure Set_NameLocal(const prop: WideString); safecall;
    function Get_BaseStyle: OleVariant; safecall;
    procedure Set_BaseStyle(var prop: OleVariant); safecall;
    function Get_Description: WideString; safecall;
    function Get_type_: WdStyleType; safecall;
    function Get_BuiltIn: WordBool; safecall;
    function Get_NextParagraphStyle: OleVariant; safecall;
    procedure Set_NextParagraphStyle(var prop: OleVariant); safecall;
    function Get_InUse: WordBool; safecall;
    function Get_Shading: Shading; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_ParagraphFormat: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat(const prop: WordParagraphFormat); safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    function Get_Frame: Frame; safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_AutomaticallyUpdate: WordBool; safecall;
    procedure Set_AutomaticallyUpdate(prop: WordBool); safecall;
    function Get_ListTemplate: ListTemplate; safecall;
    function Get_ListLevelNumber: Integer; safecall;
    function Get_LanguageIDFarEast: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast(prop: WdLanguageID); safecall;
    function Get_Hidden: WordBool; safecall;
    procedure Set_Hidden(prop: WordBool); safecall;
    procedure Delete; safecall;
    procedure LinkToListTemplate(const ListTemplate: ListTemplate; var ListLevelNumber: OleVariant); safecall;
    function Get_NoProofing: Integer; safecall;
    procedure Set_NoProofing(prop: Integer); safecall;
    function Get_LinkStyle: OleVariant; safecall;
    procedure Set_LinkStyle(var prop: OleVariant); safecall;
    function Get_Visibility: WordBool; safecall;
    procedure Set_Visibility(prop: WordBool); safecall;
    function Get_NoSpaceBetweenParagraphsOfSameStyle: WordBool; safecall;
    procedure Set_NoSpaceBetweenParagraphsOfSameStyle(prop: WordBool); safecall;
    function Get_Table: TableStyle; safecall;
    function Get_Locked: WordBool; safecall;
    procedure Set_Locked(prop: WordBool); safecall;
    function Get_Priority: Integer; safecall;
    procedure Set_Priority(prop: Integer); safecall;
    function Get_UnhideWhenUsed: WordBool; safecall;
    procedure Set_UnhideWhenUsed(prop: WordBool); safecall;
    function Get_QuickStyle: WordBool; safecall;
    procedure Set_QuickStyle(prop: WordBool); safecall;
    function Get_Linked: WordBool; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NameLocal: WideString read Get_NameLocal write Set_NameLocal;
    property Description: WideString read Get_Description;
    property type_: WdStyleType read Get_type_;
    property BuiltIn: WordBool read Get_BuiltIn;
    property InUse: WordBool read Get_InUse;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Font: WordFont read Get_Font write Set_Font;
    property Frame: Frame read Get_Frame;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property AutomaticallyUpdate: WordBool read Get_AutomaticallyUpdate write Set_AutomaticallyUpdate;
    property ListTemplate: ListTemplate read Get_ListTemplate;
    property ListLevelNumber: Integer read Get_ListLevelNumber;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property Hidden: WordBool read Get_Hidden write Set_Hidden;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property Visibility: WordBool read Get_Visibility write Set_Visibility;
    property NoSpaceBetweenParagraphsOfSameStyle: WordBool read Get_NoSpaceBetweenParagraphsOfSameStyle write Set_NoSpaceBetweenParagraphsOfSameStyle;
    property Table: TableStyle read Get_Table;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Priority: Integer read Get_Priority write Set_Priority;
    property UnhideWhenUsed: WordBool read Get_UnhideWhenUsed write Set_UnhideWhenUsed;
    property QuickStyle: WordBool read Get_QuickStyle write Set_QuickStyle;
    property Linked: WordBool read Get_Linked;
  end;

// *********************************************************************//
// DispIntf:  StyleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092C-0000-0000-C000-000000000046}
// *********************************************************************//
  StyleDisp = dispinterface
    ['{0002092C-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property NameLocal: WideString dispid 0;
    function BaseStyle: OleVariant; dispid 1;
    property Description: WideString readonly dispid 2;
    property type_: WdStyleType readonly dispid 3;
    property BuiltIn: WordBool readonly dispid 4;
    function NextParagraphStyle: OleVariant; dispid 5;
    property InUse: WordBool readonly dispid 6;
    property Shading: Shading readonly dispid 7;
    property Borders: Borders dispid 8;
    property ParagraphFormat: WordParagraphFormat dispid 9;
    property Font: WordFont dispid 10;
    property Frame: Frame readonly dispid 11;
    property LanguageID: WdLanguageID dispid 12;
    property AutomaticallyUpdate: WordBool dispid 13;
    property ListTemplate: ListTemplate readonly dispid 14;
    property ListLevelNumber: Integer readonly dispid 15;
    property LanguageIDFarEast: WdLanguageID dispid 16;
    property Hidden: WordBool dispid 17;
    procedure Delete; dispid 100;
    procedure LinkToListTemplate(const ListTemplate: ListTemplate; var ListLevelNumber: OleVariant); dispid 101;
    property NoProofing: Integer dispid 18;
    function LinkStyle: OleVariant; dispid 104;
    property Visibility: WordBool dispid 19;
    property NoSpaceBetweenParagraphsOfSameStyle: WordBool dispid 20;
    property Table: TableStyle readonly dispid 21;
    property Locked: WordBool dispid 22;
    property Priority: Integer dispid 23;
    property UnhideWhenUsed: WordBool dispid 24;
    property QuickStyle: WordBool dispid 25;
    property Linked: WordBool readonly dispid 26;
  end;

// *********************************************************************//
// Interface: Frames
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092B-0000-0000-C000-000000000046}
// *********************************************************************//
  Frames = interface(IDispatch)
    ['{0002092B-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): Frame; safecall;
    function Add(const Range: WordRange): Frame; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  FramesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092B-0000-0000-C000-000000000046}
// *********************************************************************//
  FramesDisp = dispinterface
    ['{0002092B-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(Index: Integer): Frame; dispid 0;
    function Add(const Range: WordRange): Frame; dispid 100;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: Frame
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092A-0000-0000-C000-000000000046}
// *********************************************************************//
  Frame = interface(IDispatch)
    ['{0002092A-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_HeightRule: WdFrameSizeRule; safecall;
    procedure Set_HeightRule(prop: WdFrameSizeRule); safecall;
    function Get_WidthRule: WdFrameSizeRule; safecall;
    procedure Set_WidthRule(prop: WdFrameSizeRule); safecall;
    function Get_HorizontalDistanceFromText: Single; safecall;
    procedure Set_HorizontalDistanceFromText(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HorizontalPosition: Single; safecall;
    procedure Set_HorizontalPosition(prop: Single); safecall;
    function Get_LockAnchor: WordBool; safecall;
    procedure Set_LockAnchor(prop: WordBool); safecall;
    function Get_RelativeHorizontalPosition: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition(prop: WdRelativeHorizontalPosition); safecall;
    function Get_RelativeVerticalPosition: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition(prop: WdRelativeVerticalPosition); safecall;
    function Get_VerticalDistanceFromText: Single; safecall;
    procedure Set_VerticalDistanceFromText(prop: Single); safecall;
    function Get_VerticalPosition: Single; safecall;
    procedure Set_VerticalPosition(prop: Single); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_TextWrap: WordBool; safecall;
    procedure Set_TextWrap(prop: WordBool); safecall;
    function Get_Shading: Shading; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Range: WordRange; safecall;
    procedure Delete; safecall;
    procedure Select; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property HeightRule: WdFrameSizeRule read Get_HeightRule write Set_HeightRule;
    property WidthRule: WdFrameSizeRule read Get_WidthRule write Set_WidthRule;
    property HorizontalDistanceFromText: Single read Get_HorizontalDistanceFromText write Set_HorizontalDistanceFromText;
    property Height: Single read Get_Height write Set_Height;
    property HorizontalPosition: Single read Get_HorizontalPosition write Set_HorizontalPosition;
    property LockAnchor: WordBool read Get_LockAnchor write Set_LockAnchor;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property VerticalDistanceFromText: Single read Get_VerticalDistanceFromText write Set_VerticalDistanceFromText;
    property VerticalPosition: Single read Get_VerticalPosition write Set_VerticalPosition;
    property Width: Single read Get_Width write Set_Width;
    property TextWrap: WordBool read Get_TextWrap write Set_TextWrap;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Range: WordRange read Get_Range;
  end;

// *********************************************************************//
// DispIntf:  FrameDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002092A-0000-0000-C000-000000000046}
// *********************************************************************//
  FrameDisp = dispinterface
    ['{0002092A-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property HeightRule: WdFrameSizeRule dispid 1;
    property WidthRule: WdFrameSizeRule dispid 2;
    property HorizontalDistanceFromText: Single dispid 3;
    property Height: Single dispid 4;
    property HorizontalPosition: Single dispid 5;
    property LockAnchor: WordBool dispid 6;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition dispid 7;
    property RelativeVerticalPosition: WdRelativeVerticalPosition dispid 8;
    property VerticalDistanceFromText: Single dispid 9;
    property VerticalPosition: Single dispid 10;
    property Width: Single dispid 11;
    property TextWrap: WordBool dispid 12;
    property Shading: Shading readonly dispid 13;
    property Borders: Borders dispid 1100;
    property Range: WordRange readonly dispid 15;
    procedure Delete; dispid 100;
    procedure Select; dispid 65535;
    procedure Copy; dispid 101;
    procedure Cut; dispid 102;
  end;

// *********************************************************************//
// Interface: FormFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020929-0000-0000-C000-000000000046}
// *********************************************************************//
  FormFields = interface(IDispatch)
    ['{00020929-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get_Shaded: WordBool; safecall;
    procedure Set_Shaded(prop: WordBool); safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(var Index: OleVariant): FormField; safecall;
    function Add(const Range: WordRange; Type_: WdFieldType): FormField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Shaded: WordBool read Get_Shaded write Set_Shaded;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  FormFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020929-0000-0000-C000-000000000046}
// *********************************************************************//
  FormFieldsDisp = dispinterface
    ['{00020929-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property Shaded: WordBool dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(var Index: OleVariant): FormField; dispid 0;
    function Add(const Range: WordRange; Type_: WdFieldType): FormField; dispid 101;
  end;

// *********************************************************************//
// Interface: FormField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020928-0000-0000-C000-000000000046}
// *********************************************************************//
  FormField = interface(IDispatch)
    ['{00020928-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_type_: WdFieldType; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_EntryMacro: WideString; safecall;
    procedure Set_EntryMacro(const prop: WideString); safecall;
    function Get_ExitMacro: WideString; safecall;
    procedure Set_ExitMacro(const prop: WideString); safecall;
    function Get_OwnHelp: WordBool; safecall;
    procedure Set_OwnHelp(prop: WordBool); safecall;
    function Get_OwnStatus: WordBool; safecall;
    procedure Set_OwnStatus(prop: WordBool); safecall;
    function Get_HelpText: WideString; safecall;
    procedure Set_HelpText(const prop: WideString); safecall;
    function Get_StatusText: WideString; safecall;
    procedure Set_StatusText(const prop: WideString); safecall;
    function Get_Enabled: WordBool; safecall;
    procedure Set_Enabled(prop: WordBool); safecall;
    function Get_Result: WideString; safecall;
    procedure Set_Result(const prop: WideString); safecall;
    function Get_TextInput: TextInput; safecall;
    function Get_CheckBox: CheckBox; safecall;
    function Get_DropDown: DropDown; safecall;
    function Get_Next: FormField; safecall;
    function Get_Previous: FormField; safecall;
    function Get_CalculateOnExit: WordBool; safecall;
    procedure Set_CalculateOnExit(prop: WordBool); safecall;
    function Get_Range: WordRange; safecall;
    procedure Select; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property type_: WdFieldType read Get_type_;
    property Name: WideString read Get_Name write Set_Name;
    property EntryMacro: WideString read Get_EntryMacro write Set_EntryMacro;
    property ExitMacro: WideString read Get_ExitMacro write Set_ExitMacro;
    property OwnHelp: WordBool read Get_OwnHelp write Set_OwnHelp;
    property OwnStatus: WordBool read Get_OwnStatus write Set_OwnStatus;
    property HelpText: WideString read Get_HelpText write Set_HelpText;
    property StatusText: WideString read Get_StatusText write Set_StatusText;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property Result: WideString read Get_Result write Set_Result;
    property TextInput: TextInput read Get_TextInput;
    property CheckBox: CheckBox read Get_CheckBox;
    property DropDown: DropDown read Get_DropDown;
    property Next: FormField read Get_Next;
    property Previous: FormField read Get_Previous;
    property CalculateOnExit: WordBool read Get_CalculateOnExit write Set_CalculateOnExit;
    property Range: WordRange read Get_Range;
  end;

// *********************************************************************//
// DispIntf:  FormFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020928-0000-0000-C000-000000000046}
// *********************************************************************//
  FormFieldDisp = dispinterface
    ['{00020928-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property type_: WdFieldType readonly dispid 0;
    property Name: WideString dispid 2;
    property EntryMacro: WideString dispid 3;
    property ExitMacro: WideString dispid 4;
    property OwnHelp: WordBool dispid 5;
    property OwnStatus: WordBool dispid 6;
    property HelpText: WideString dispid 7;
    property StatusText: WideString dispid 8;
    property Enabled: WordBool dispid 9;
    property Result: WideString dispid 10;
    property TextInput: TextInput readonly dispid 11;
    property CheckBox: CheckBox readonly dispid 12;
    property DropDown: DropDown readonly dispid 13;
    property Next: FormField readonly dispid 14;
    property Previous: FormField readonly dispid 15;
    property CalculateOnExit: WordBool dispid 16;
    property Range: WordRange readonly dispid 17;
    procedure Select; dispid 65535;
    procedure Copy; dispid 101;
    procedure Cut; dispid 102;
    procedure Delete; dispid 103;
  end;

// *********************************************************************//
// Interface: TextInput
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020927-0000-0000-C000-000000000046}
// *********************************************************************//
  TextInput = interface(IDispatch)
    ['{00020927-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Valid: WordBool; safecall;
    function Get_Default: WideString; safecall;
    procedure Set_Default(const prop: WideString); safecall;
    function Get_type_: WdTextFormFieldType; safecall;
    function Get_Format: WideString; safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(prop: Integer); safecall;
    procedure Clear; safecall;
    procedure EditType(Type_: WdTextFormFieldType; var Default: OleVariant; var Format: OleVariant; 
                       var Enabled: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Valid: WordBool read Get_Valid;
    property Default: WideString read Get_Default write Set_Default;
    property type_: WdTextFormFieldType read Get_type_;
    property Format: WideString read Get_Format;
    property Width: Integer read Get_Width write Set_Width;
  end;

// *********************************************************************//
// DispIntf:  TextInputDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020927-0000-0000-C000-000000000046}
// *********************************************************************//
  TextInputDisp = dispinterface
    ['{00020927-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Valid: WordBool readonly dispid 0;
    property Default: WideString dispid 1;
    property type_: WdTextFormFieldType readonly dispid 2;
    property Format: WideString readonly dispid 3;
    property Width: Integer dispid 4;
    procedure Clear; dispid 101;
    procedure EditType(Type_: WdTextFormFieldType; var Default: OleVariant; var Format: OleVariant; 
                       var Enabled: OleVariant); dispid 102;
  end;

// *********************************************************************//
// Interface: CheckBox
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020926-0000-0000-C000-000000000046}
// *********************************************************************//
  CheckBox = interface(IDispatch)
    ['{00020926-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Valid: WordBool; safecall;
    function Get_AutoSize: WordBool; safecall;
    procedure Set_AutoSize(prop: WordBool); safecall;
    function Get_Size: Single; safecall;
    procedure Set_Size(prop: Single); safecall;
    function Get_Default: WordBool; safecall;
    procedure Set_Default(prop: WordBool); safecall;
    function Get_Value: WordBool; safecall;
    procedure Set_Value(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Valid: WordBool read Get_Valid;
    property AutoSize: WordBool read Get_AutoSize write Set_AutoSize;
    property Size: Single read Get_Size write Set_Size;
    property Default: WordBool read Get_Default write Set_Default;
    property Value: WordBool read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  CheckBoxDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020926-0000-0000-C000-000000000046}
// *********************************************************************//
  CheckBoxDisp = dispinterface
    ['{00020926-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Valid: WordBool readonly dispid 0;
    property AutoSize: WordBool dispid 1;
    property Size: Single dispid 2;
    property Default: WordBool dispid 3;
    property Value: WordBool dispid 4;
  end;

// *********************************************************************//
// Interface: DropDown
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020925-0000-0000-C000-000000000046}
// *********************************************************************//
  DropDown = interface(IDispatch)
    ['{00020925-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Valid: WordBool; safecall;
    function Get_Default: Integer; safecall;
    procedure Set_Default(prop: Integer); safecall;
    function Get_Value: Integer; safecall;
    procedure Set_Value(prop: Integer); safecall;
    function Get_ListEntries: ListEntries; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Valid: WordBool read Get_Valid;
    property Default: Integer read Get_Default write Set_Default;
    property Value: Integer read Get_Value write Set_Value;
    property ListEntries: ListEntries read Get_ListEntries;
  end;

// *********************************************************************//
// DispIntf:  DropDownDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020925-0000-0000-C000-000000000046}
// *********************************************************************//
  DropDownDisp = dispinterface
    ['{00020925-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Valid: WordBool readonly dispid 0;
    property Default: Integer dispid 1;
    property Value: Integer dispid 2;
    property ListEntries: ListEntries readonly dispid 3;
  end;

// *********************************************************************//
// Interface: ListEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020924-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntries = interface(IDispatch)
    ['{00020924-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): ListEntry; safecall;
    function Add(const Name: WideString; var Index: OleVariant): ListEntry; safecall;
    procedure Clear; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ListEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020924-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntriesDisp = dispinterface
    ['{00020924-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): ListEntry; dispid 0;
    function Add(const Name: WideString; var Index: OleVariant): ListEntry; dispid 101;
    procedure Clear; dispid 102;
  end;

// *********************************************************************//
// Interface: ListEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020923-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntry = interface(IDispatch)
    ['{00020923-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  ListEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020923-0000-0000-C000-000000000046}
// *********************************************************************//
  ListEntryDisp = dispinterface
    ['{00020923-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString dispid 2;
    procedure Delete; dispid 11;
  end;

// *********************************************************************//
// Interface: TablesOfFigures
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020922-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfFigures = interface(IDispatch)
    ['{00020922-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Format: WdTofFormat; safecall;
    procedure Set_Format(prop: WdTofFormat); safecall;
    function Item(Index: Integer): TableOfFigures; safecall;
    function AddOld(const Range: WordRange; var Caption: OleVariant; var IncludeLabel: OleVariant; 
                    var UseHeadingStyles: OleVariant; var UpperHeadingLevel: OleVariant; 
                    var LowerHeadingLevel: OleVariant; var UseFields: OleVariant; 
                    var TableID: OleVariant; var RightAlignPageNumbers: OleVariant; 
                    var IncludePageNumbers: OleVariant; var AddedStyles: OleVariant): TableOfFigures; safecall;
    function MarkEntry(const Range: WordRange; var Entry: OleVariant; 
                       var EntryAutoText: OleVariant; var TableID: OleVariant; var Level: OleVariant): Field; safecall;
    function Add(const Range: WordRange; var Caption: OleVariant; var IncludeLabel: OleVariant; 
                 var UseHeadingStyles: OleVariant; var UpperHeadingLevel: OleVariant; 
                 var LowerHeadingLevel: OleVariant; var UseFields: OleVariant; 
                 var TableID: OleVariant; var RightAlignPageNumbers: OleVariant; 
                 var IncludePageNumbers: OleVariant; var AddedStyles: OleVariant; 
                 var UseHyperlinks: OleVariant; var HidePageNumbersInWeb: OleVariant): TableOfFigures; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdTofFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  TablesOfFiguresDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020922-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfFiguresDisp = dispinterface
    ['{00020922-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Format: WdTofFormat dispid 2;
    function Item(Index: Integer): TableOfFigures; dispid 0;
    function AddOld(const Range: WordRange; var Caption: OleVariant; var IncludeLabel: OleVariant; 
                    var UseHeadingStyles: OleVariant; var UpperHeadingLevel: OleVariant; 
                    var LowerHeadingLevel: OleVariant; var UseFields: OleVariant; 
                    var TableID: OleVariant; var RightAlignPageNumbers: OleVariant; 
                    var IncludePageNumbers: OleVariant; var AddedStyles: OleVariant): TableOfFigures; dispid 100;
    function MarkEntry(const Range: WordRange; var Entry: OleVariant; 
                       var EntryAutoText: OleVariant; var TableID: OleVariant; var Level: OleVariant): Field; dispid 101;
    function Add(const Range: WordRange; var Caption: OleVariant; var IncludeLabel: OleVariant; 
                 var UseHeadingStyles: OleVariant; var UpperHeadingLevel: OleVariant; 
                 var LowerHeadingLevel: OleVariant; var UseFields: OleVariant; 
                 var TableID: OleVariant; var RightAlignPageNumbers: OleVariant; 
                 var IncludePageNumbers: OleVariant; var AddedStyles: OleVariant; 
                 var UseHyperlinks: OleVariant; var HidePageNumbersInWeb: OleVariant): TableOfFigures; dispid 444;
  end;

// *********************************************************************//
// Interface: TableOfFigures
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020921-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfFigures = interface(IDispatch)
    ['{00020921-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_IncludeLabel: WordBool; safecall;
    procedure Set_IncludeLabel(prop: WordBool); safecall;
    function Get_RightAlignPageNumbers: WordBool; safecall;
    procedure Set_RightAlignPageNumbers(prop: WordBool); safecall;
    function Get_UseHeadingStyles: WordBool; safecall;
    procedure Set_UseHeadingStyles(prop: WordBool); safecall;
    function Get_LowerHeadingLevel: Integer; safecall;
    procedure Set_LowerHeadingLevel(prop: Integer); safecall;
    function Get_UpperHeadingLevel: Integer; safecall;
    procedure Set_UpperHeadingLevel(prop: Integer); safecall;
    function Get_IncludePageNumbers: WordBool; safecall;
    procedure Set_IncludePageNumbers(prop: WordBool); safecall;
    function Get_Range: WordRange; safecall;
    function Get_UseFields: WordBool; safecall;
    procedure Set_UseFields(prop: WordBool); safecall;
    function Get_TableID: WideString; safecall;
    procedure Set_TableID(const prop: WideString); safecall;
    function Get_HeadingStyles: HeadingStyles; safecall;
    function Get_TabLeader: WdTabLeader; safecall;
    procedure Set_TabLeader(prop: WdTabLeader); safecall;
    procedure Delete; safecall;
    procedure UpdatePageNumbers; safecall;
    procedure Update; safecall;
    function Get_UseHyperlinks: WordBool; safecall;
    procedure Set_UseHyperlinks(prop: WordBool); safecall;
    function Get_HidePageNumbersInWeb: WordBool; safecall;
    procedure Set_HidePageNumbersInWeb(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Caption: WideString read Get_Caption write Set_Caption;
    property IncludeLabel: WordBool read Get_IncludeLabel write Set_IncludeLabel;
    property RightAlignPageNumbers: WordBool read Get_RightAlignPageNumbers write Set_RightAlignPageNumbers;
    property UseHeadingStyles: WordBool read Get_UseHeadingStyles write Set_UseHeadingStyles;
    property LowerHeadingLevel: Integer read Get_LowerHeadingLevel write Set_LowerHeadingLevel;
    property UpperHeadingLevel: Integer read Get_UpperHeadingLevel write Set_UpperHeadingLevel;
    property IncludePageNumbers: WordBool read Get_IncludePageNumbers write Set_IncludePageNumbers;
    property Range: WordRange read Get_Range;
    property UseFields: WordBool read Get_UseFields write Set_UseFields;
    property TableID: WideString read Get_TableID write Set_TableID;
    property HeadingStyles: HeadingStyles read Get_HeadingStyles;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
    property UseHyperlinks: WordBool read Get_UseHyperlinks write Set_UseHyperlinks;
    property HidePageNumbersInWeb: WordBool read Get_HidePageNumbersInWeb write Set_HidePageNumbersInWeb;
  end;

// *********************************************************************//
// DispIntf:  TableOfFiguresDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020921-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfFiguresDisp = dispinterface
    ['{00020921-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Caption: WideString dispid 1;
    property IncludeLabel: WordBool dispid 2;
    property RightAlignPageNumbers: WordBool dispid 3;
    property UseHeadingStyles: WordBool dispid 4;
    property LowerHeadingLevel: Integer dispid 5;
    property UpperHeadingLevel: Integer dispid 6;
    property IncludePageNumbers: WordBool dispid 7;
    property Range: WordRange readonly dispid 8;
    property UseFields: WordBool dispid 9;
    property TableID: WideString dispid 10;
    property HeadingStyles: HeadingStyles readonly dispid 11;
    property TabLeader: WdTabLeader dispid 12;
    procedure Delete; dispid 100;
    procedure UpdatePageNumbers; dispid 101;
    procedure Update; dispid 102;
    property UseHyperlinks: WordBool dispid 13;
    property HidePageNumbersInWeb: WordBool dispid 14;
  end;

// *********************************************************************//
// Interface: MailMerge
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020920-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMerge = interface(IDispatch)
    ['{00020920-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_MainDocumentType: WdMailMergeMainDocType; safecall;
    procedure Set_MainDocumentType(prop: WdMailMergeMainDocType); safecall;
    function Get_State: WdMailMergeState; safecall;
    function Get_Destination: WdMailMergeDestination; safecall;
    procedure Set_Destination(prop: WdMailMergeDestination); safecall;
    function Get_DataSource: MailMergeDataSource; safecall;
    function Get_Fields: MailMergeFields; safecall;
    function Get_ViewMailMergeFieldCodes: Integer; safecall;
    procedure Set_ViewMailMergeFieldCodes(prop: Integer); safecall;
    function Get_SuppressBlankLines: WordBool; safecall;
    procedure Set_SuppressBlankLines(prop: WordBool); safecall;
    function Get_MailAsAttachment: WordBool; safecall;
    procedure Set_MailAsAttachment(prop: WordBool); safecall;
    function Get_MailAddressFieldName: WideString; safecall;
    procedure Set_MailAddressFieldName(const prop: WideString); safecall;
    function Get_MailSubject: WideString; safecall;
    procedure Set_MailSubject(const prop: WideString); safecall;
    procedure CreateDataSource(var Name: OleVariant; var PasswordDocument: OleVariant; 
                               var WritePasswordDocument: OleVariant; var HeaderRecord: OleVariant; 
                               var MSQuery: OleVariant; var SQLStatement: OleVariant; 
                               var SQLStatement1: OleVariant; var Connection: OleVariant; 
                               var LinkToSource: OleVariant); safecall;
    procedure CreateHeaderSource(const Name: WideString; var PasswordDocument: OleVariant; 
                                 var WritePasswordDocument: OleVariant; var HeaderRecord: OleVariant); safecall;
    procedure OpenDataSource2000(const Name: WideString; var Format: OleVariant; 
                                 var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                                 var LinkToSource: OleVariant; var AddToRecentFiles: OleVariant; 
                                 var PasswordDocument: OleVariant; 
                                 var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                                 var WritePasswordDocument: OleVariant; 
                                 var WritePasswordTemplate: OleVariant; var Connection: OleVariant; 
                                 var SQLStatement: OleVariant; var SQLStatement1: OleVariant); safecall;
    procedure OpenHeaderSource2000(const Name: WideString; var Format: OleVariant; 
                                   var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                                   var AddToRecentFiles: OleVariant; 
                                   var PasswordDocument: OleVariant; 
                                   var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                                   var WritePasswordDocument: OleVariant; 
                                   var WritePasswordTemplate: OleVariant); safecall;
    procedure Execute(var Pause: OleVariant); safecall;
    procedure Check; safecall;
    procedure EditDataSource; safecall;
    procedure EditHeaderSource; safecall;
    procedure EditMainDocument; safecall;
    procedure UseAddressBook(const Type_: WideString); safecall;
    function Get_HighlightMergeFields: WordBool; safecall;
    procedure Set_HighlightMergeFields(prop: WordBool); safecall;
    function Get_MailFormat: WdMailMergeMailFormat; safecall;
    procedure Set_MailFormat(prop: WdMailMergeMailFormat); safecall;
    function Get_ShowSendToCustom: WideString; safecall;
    procedure Set_ShowSendToCustom(const prop: WideString); safecall;
    function Get_WizardState: Integer; safecall;
    procedure Set_WizardState(prop: Integer); safecall;
    procedure OpenDataSource(const Name: WideString; var Format: OleVariant; 
                             var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                             var LinkToSource: OleVariant; var AddToRecentFiles: OleVariant; 
                             var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                             var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                             var WritePasswordTemplate: OleVariant; var Connection: OleVariant; 
                             var SQLStatement: OleVariant; var SQLStatement1: OleVariant; 
                             var OpenExclusive: OleVariant; var SubType: OleVariant); safecall;
    procedure OpenHeaderSource(const Name: WideString; var Format: OleVariant; 
                               var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                               var AddToRecentFiles: OleVariant; var PasswordDocument: OleVariant; 
                               var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                               var WritePasswordDocument: OleVariant; 
                               var WritePasswordTemplate: OleVariant; var OpenExclusive: OleVariant); safecall;
    procedure ShowWizard(var InitialState: OleVariant; var ShowDocumentStep: OleVariant; 
                         var ShowTemplateStep: OleVariant; var ShowDataStep: OleVariant; 
                         var ShowWriteStep: OleVariant; var ShowPreviewStep: OleVariant; 
                         var ShowMergeStep: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property MainDocumentType: WdMailMergeMainDocType read Get_MainDocumentType write Set_MainDocumentType;
    property State: WdMailMergeState read Get_State;
    property Destination: WdMailMergeDestination read Get_Destination write Set_Destination;
    property DataSource: MailMergeDataSource read Get_DataSource;
    property Fields: MailMergeFields read Get_Fields;
    property ViewMailMergeFieldCodes: Integer read Get_ViewMailMergeFieldCodes write Set_ViewMailMergeFieldCodes;
    property SuppressBlankLines: WordBool read Get_SuppressBlankLines write Set_SuppressBlankLines;
    property MailAsAttachment: WordBool read Get_MailAsAttachment write Set_MailAsAttachment;
    property MailAddressFieldName: WideString read Get_MailAddressFieldName write Set_MailAddressFieldName;
    property MailSubject: WideString read Get_MailSubject write Set_MailSubject;
    property HighlightMergeFields: WordBool read Get_HighlightMergeFields write Set_HighlightMergeFields;
    property MailFormat: WdMailMergeMailFormat read Get_MailFormat write Set_MailFormat;
    property ShowSendToCustom: WideString read Get_ShowSendToCustom write Set_ShowSendToCustom;
    property WizardState: Integer read Get_WizardState write Set_WizardState;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020920-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDisp = dispinterface
    ['{00020920-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property MainDocumentType: WdMailMergeMainDocType dispid 1;
    property State: WdMailMergeState readonly dispid 2;
    property Destination: WdMailMergeDestination dispid 3;
    property DataSource: MailMergeDataSource readonly dispid 4;
    property Fields: MailMergeFields readonly dispid 5;
    property ViewMailMergeFieldCodes: Integer dispid 6;
    property SuppressBlankLines: WordBool dispid 7;
    property MailAsAttachment: WordBool dispid 8;
    property MailAddressFieldName: WideString dispid 9;
    property MailSubject: WideString dispid 10;
    procedure CreateDataSource(var Name: OleVariant; var PasswordDocument: OleVariant; 
                               var WritePasswordDocument: OleVariant; var HeaderRecord: OleVariant; 
                               var MSQuery: OleVariant; var SQLStatement: OleVariant; 
                               var SQLStatement1: OleVariant; var Connection: OleVariant; 
                               var LinkToSource: OleVariant); dispid 101;
    procedure CreateHeaderSource(const Name: WideString; var PasswordDocument: OleVariant; 
                                 var WritePasswordDocument: OleVariant; var HeaderRecord: OleVariant); dispid 102;
    procedure OpenDataSource2000(const Name: WideString; var Format: OleVariant; 
                                 var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                                 var LinkToSource: OleVariant; var AddToRecentFiles: OleVariant; 
                                 var PasswordDocument: OleVariant; 
                                 var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                                 var WritePasswordDocument: OleVariant; 
                                 var WritePasswordTemplate: OleVariant; var Connection: OleVariant; 
                                 var SQLStatement: OleVariant; var SQLStatement1: OleVariant); dispid 103;
    procedure OpenHeaderSource2000(const Name: WideString; var Format: OleVariant; 
                                   var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                                   var AddToRecentFiles: OleVariant; 
                                   var PasswordDocument: OleVariant; 
                                   var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                                   var WritePasswordDocument: OleVariant; 
                                   var WritePasswordTemplate: OleVariant); dispid 104;
    procedure Execute(var Pause: OleVariant); dispid 105;
    procedure Check; dispid 106;
    procedure EditDataSource; dispid 107;
    procedure EditHeaderSource; dispid 108;
    procedure EditMainDocument; dispid 109;
    procedure UseAddressBook(const Type_: WideString); dispid 111;
    property HighlightMergeFields: WordBool dispid 11;
    property MailFormat: WdMailMergeMailFormat dispid 12;
    property ShowSendToCustom: WideString dispid 13;
    property WizardState: Integer dispid 14;
    procedure OpenDataSource(const Name: WideString; var Format: OleVariant; 
                             var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                             var LinkToSource: OleVariant; var AddToRecentFiles: OleVariant; 
                             var PasswordDocument: OleVariant; var PasswordTemplate: OleVariant; 
                             var Revert: OleVariant; var WritePasswordDocument: OleVariant; 
                             var WritePasswordTemplate: OleVariant; var Connection: OleVariant; 
                             var SQLStatement: OleVariant; var SQLStatement1: OleVariant; 
                             var OpenExclusive: OleVariant; var SubType: OleVariant); dispid 112;
    procedure OpenHeaderSource(const Name: WideString; var Format: OleVariant; 
                               var ConfirmConversions: OleVariant; var ReadOnly: OleVariant; 
                               var AddToRecentFiles: OleVariant; var PasswordDocument: OleVariant; 
                               var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                               var WritePasswordDocument: OleVariant; 
                               var WritePasswordTemplate: OleVariant; var OpenExclusive: OleVariant); dispid 113;
    procedure ShowWizard(var InitialState: OleVariant; var ShowDocumentStep: OleVariant; 
                         var ShowTemplateStep: OleVariant; var ShowDataStep: OleVariant; 
                         var ShowWriteStep: OleVariant; var ShowPreviewStep: OleVariant; 
                         var ShowMergeStep: OleVariant); dispid 114;
  end;

// *********************************************************************//
// Interface: MailMergeFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091F-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFields = interface(IDispatch)
    ['{0002091F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): MailMergeField; safecall;
    function Add(const Range: WordRange; const Name: WideString): MailMergeField; safecall;
    function AddAsk(const Range: WordRange; const Name: WideString; var Prompt: OleVariant; 
                    var DefaultAskText: OleVariant; var AskOnce: OleVariant): MailMergeField; safecall;
    function AddFillIn(const Range: WordRange; var Prompt: OleVariant; 
                       var DefaultFillInText: OleVariant; var AskOnce: OleVariant): MailMergeField; safecall;
    function AddIf(const Range: WordRange; const MergeField: WideString; 
                   Comparison: WdMailMergeComparison; var CompareTo: OleVariant; 
                   var TrueAutoText: OleVariant; var TrueText: OleVariant; 
                   var FalseAutoText: OleVariant; var FalseText: OleVariant): MailMergeField; safecall;
    function AddMergeRec(const Range: WordRange): MailMergeField; safecall;
    function AddMergeSeq(const Range: WordRange): MailMergeField; safecall;
    function AddNext(const Range: WordRange): MailMergeField; safecall;
    function AddNextIf(const Range: WordRange; const MergeField: WideString; 
                       Comparison: WdMailMergeComparison; var CompareTo: OleVariant): MailMergeField; safecall;
    function AddSet(const Range: WordRange; const Name: WideString; var ValueText: OleVariant; 
                    var ValueAutoText: OleVariant): MailMergeField; safecall;
    function AddSkipIf(const Range: WordRange; const MergeField: WideString; 
                       Comparison: WdMailMergeComparison; var CompareTo: OleVariant): MailMergeField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091F-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldsDisp = dispinterface
    ['{0002091F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(Index: Integer): MailMergeField; dispid 0;
    function Add(const Range: WordRange; const Name: WideString): MailMergeField; dispid 101;
    function AddAsk(const Range: WordRange; const Name: WideString; var Prompt: OleVariant; 
                    var DefaultAskText: OleVariant; var AskOnce: OleVariant): MailMergeField; dispid 102;
    function AddFillIn(const Range: WordRange; var Prompt: OleVariant; 
                       var DefaultFillInText: OleVariant; var AskOnce: OleVariant): MailMergeField; dispid 103;
    function AddIf(const Range: WordRange; const MergeField: WideString; 
                   Comparison: WdMailMergeComparison; var CompareTo: OleVariant; 
                   var TrueAutoText: OleVariant; var TrueText: OleVariant; 
                   var FalseAutoText: OleVariant; var FalseText: OleVariant): MailMergeField; dispid 104;
    function AddMergeRec(const Range: WordRange): MailMergeField; dispid 105;
    function AddMergeSeq(const Range: WordRange): MailMergeField; dispid 106;
    function AddNext(const Range: WordRange): MailMergeField; dispid 107;
    function AddNextIf(const Range: WordRange; const MergeField: WideString; 
                       Comparison: WdMailMergeComparison; var CompareTo: OleVariant): MailMergeField; dispid 108;
    function AddSet(const Range: WordRange; const Name: WideString; var ValueText: OleVariant; 
                    var ValueAutoText: OleVariant): MailMergeField; dispid 109;
    function AddSkipIf(const Range: WordRange; const MergeField: WideString; 
                       Comparison: WdMailMergeComparison; var CompareTo: OleVariant): MailMergeField; dispid 110;
  end;

// *********************************************************************//
// Interface: MailMergeField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091E-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeField = interface(IDispatch)
    ['{0002091E-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_type_: WdFieldType; safecall;
    function Get_Locked: WordBool; safecall;
    procedure Set_Locked(prop: WordBool); safecall;
    function Get_Code: WordRange; safecall;
    procedure Set_Code(const prop: WordRange); safecall;
    function Get_Next: MailMergeField; safecall;
    function Get_Previous: MailMergeField; safecall;
    procedure Select; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property type_: WdFieldType read Get_type_;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Code: WordRange read Get_Code write Set_Code;
    property Next: MailMergeField read Get_Next;
    property Previous: MailMergeField read Get_Previous;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091E-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldDisp = dispinterface
    ['{0002091E-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property type_: WdFieldType readonly dispid 0;
    property Locked: WordBool dispid 3;
    property Code: WordRange dispid 5;
    property Next: MailMergeField readonly dispid 8;
    property Previous: MailMergeField readonly dispid 9;
    procedure Select; dispid 65535;
    procedure Copy; dispid 105;
    procedure Cut; dispid 106;
    procedure Delete; dispid 107;
  end;

// *********************************************************************//
// Interface: MailMergeDataSource
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091D-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataSource = interface(IDispatch)
    ['{0002091D-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_HeaderSourceName: WideString; safecall;
    function Get_type_: WdMailMergeDataSource; safecall;
    function Get_HeaderSourceType: WdMailMergeDataSource; safecall;
    function Get_ConnectString: WideString; safecall;
    function Get_QueryString: WideString; safecall;
    procedure Set_QueryString(const prop: WideString); safecall;
    function Get_ActiveRecord: WdMailMergeActiveRecord; safecall;
    procedure Set_ActiveRecord(prop: WdMailMergeActiveRecord); safecall;
    function Get_FirstRecord: Integer; safecall;
    procedure Set_FirstRecord(prop: Integer); safecall;
    function Get_LastRecord: Integer; safecall;
    procedure Set_LastRecord(prop: Integer); safecall;
    function Get_FieldNames: MailMergeFieldNames; safecall;
    function Get_DataFields: MailMergeDataFields; safecall;
    function FindRecord2000(const FindText: WideString; const Field: WideString): WordBool; safecall;
    function Get_RecordCount: Integer; safecall;
    function Get_Included: WordBool; safecall;
    procedure Set_Included(prop: WordBool); safecall;
    function Get_InvalidAddress: WordBool; safecall;
    procedure Set_InvalidAddress(prop: WordBool); safecall;
    function Get_InvalidComments: WideString; safecall;
    procedure Set_InvalidComments(const prop: WideString); safecall;
    function Get_MappedDataFields: MappedDataFields; safecall;
    function Get_TableName: WideString; safecall;
    function FindRecord(const FindText: WideString; var Field: OleVariant): WordBool; safecall;
    procedure SetAllIncludedFlags(Included: WordBool); safecall;
    procedure SetAllErrorFlags(Invalid: WordBool; const InvalidComment: WideString); safecall;
    procedure Close; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property HeaderSourceName: WideString read Get_HeaderSourceName;
    property type_: WdMailMergeDataSource read Get_type_;
    property HeaderSourceType: WdMailMergeDataSource read Get_HeaderSourceType;
    property ConnectString: WideString read Get_ConnectString;
    property QueryString: WideString read Get_QueryString write Set_QueryString;
    property ActiveRecord: WdMailMergeActiveRecord read Get_ActiveRecord write Set_ActiveRecord;
    property FirstRecord: Integer read Get_FirstRecord write Set_FirstRecord;
    property LastRecord: Integer read Get_LastRecord write Set_LastRecord;
    property FieldNames: MailMergeFieldNames read Get_FieldNames;
    property DataFields: MailMergeDataFields read Get_DataFields;
    property RecordCount: Integer read Get_RecordCount;
    property Included: WordBool read Get_Included write Set_Included;
    property InvalidAddress: WordBool read Get_InvalidAddress write Set_InvalidAddress;
    property InvalidComments: WideString read Get_InvalidComments write Set_InvalidComments;
    property MappedDataFields: MappedDataFields read Get_MappedDataFields;
    property TableName: WideString read Get_TableName;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDataSourceDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091D-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataSourceDisp = dispinterface
    ['{0002091D-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 1;
    property HeaderSourceName: WideString readonly dispid 2;
    property type_: WdMailMergeDataSource readonly dispid 3;
    property HeaderSourceType: WdMailMergeDataSource readonly dispid 4;
    property ConnectString: WideString readonly dispid 5;
    property QueryString: WideString dispid 6;
    property ActiveRecord: WdMailMergeActiveRecord dispid 7;
    property FirstRecord: Integer dispid 8;
    property LastRecord: Integer dispid 9;
    property FieldNames: MailMergeFieldNames readonly dispid 10;
    property DataFields: MailMergeDataFields readonly dispid 11;
    function FindRecord2000(const FindText: WideString; const Field: WideString): WordBool; dispid 101;
    property RecordCount: Integer readonly dispid 12;
    property Included: WordBool dispid 13;
    property InvalidAddress: WordBool dispid 14;
    property InvalidComments: WideString dispid 15;
    property MappedDataFields: MappedDataFields readonly dispid 16;
    property TableName: WideString readonly dispid 17;
    function FindRecord(const FindText: WideString; var Field: OleVariant): WordBool; dispid 102;
    procedure SetAllIncludedFlags(Included: WordBool); dispid 103;
    procedure SetAllErrorFlags(Invalid: WordBool; const InvalidComment: WideString); dispid 104;
    procedure Close; dispid 105;
  end;

// *********************************************************************//
// Interface: MailMergeFieldNames
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091C-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldNames = interface(IDispatch)
    ['{0002091C-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): MailMergeFieldName; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldNamesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091C-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldNamesDisp = dispinterface
    ['{0002091C-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): MailMergeFieldName; dispid 0;
  end;

// *********************************************************************//
// Interface: MailMergeFieldName
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091B-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldName = interface(IDispatch)
    ['{0002091B-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Index: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  MailMergeFieldNameDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091B-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeFieldNameDisp = dispinterface
    ['{0002091B-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Index: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: MailMergeDataFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091A-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataFields = interface(IDispatch)
    ['{0002091A-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): MailMergeDataField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDataFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002091A-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataFieldsDisp = dispinterface
    ['{0002091A-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): MailMergeDataField; dispid 0;
  end;

// *********************************************************************//
// Interface: MailMergeDataField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020919-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataField = interface(IDispatch)
    ['{00020919-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Value: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_Index: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Value: WideString read Get_Value;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  MailMergeDataFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020919-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMergeDataFieldDisp = dispinterface
    ['{00020919-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Value: WideString readonly dispid 0;
    property Name: WideString readonly dispid 1;
    property Index: Integer readonly dispid 2;
  end;

// *********************************************************************//
// Interface: Envelope
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020918-0000-0000-C000-000000000046}
// *********************************************************************//
  Envelope = interface(IDispatch)
    ['{00020918-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Address: WordRange; safecall;
    function Get_ReturnAddress: WordRange; safecall;
    function Get_DefaultPrintBarCode: WordBool; safecall;
    procedure Set_DefaultPrintBarCode(prop: WordBool); safecall;
    function Get_DefaultPrintFIMA: WordBool; safecall;
    procedure Set_DefaultPrintFIMA(prop: WordBool); safecall;
    function Get_DefaultHeight: Single; safecall;
    procedure Set_DefaultHeight(prop: Single); safecall;
    function Get_DefaultWidth: Single; safecall;
    procedure Set_DefaultWidth(prop: Single); safecall;
    function Get_DefaultSize: WideString; safecall;
    procedure Set_DefaultSize(const prop: WideString); safecall;
    function Get_DefaultOmitReturnAddress: WordBool; safecall;
    procedure Set_DefaultOmitReturnAddress(prop: WordBool); safecall;
    function Get_FeedSource: WdPaperTray; safecall;
    procedure Set_FeedSource(prop: WdPaperTray); safecall;
    function Get_AddressFromLeft: Single; safecall;
    procedure Set_AddressFromLeft(prop: Single); safecall;
    function Get_AddressFromTop: Single; safecall;
    procedure Set_AddressFromTop(prop: Single); safecall;
    function Get_ReturnAddressFromLeft: Single; safecall;
    procedure Set_ReturnAddressFromLeft(prop: Single); safecall;
    function Get_ReturnAddressFromTop: Single; safecall;
    procedure Set_ReturnAddressFromTop(prop: Single); safecall;
    function Get_AddressStyle: Style; safecall;
    function Get_ReturnAddressStyle: Style; safecall;
    function Get_DefaultOrientation: WdEnvelopeOrientation; safecall;
    procedure Set_DefaultOrientation(prop: WdEnvelopeOrientation); safecall;
    function Get_DefaultFaceUp: WordBool; safecall;
    procedure Set_DefaultFaceUp(prop: WordBool); safecall;
    procedure Insert2000(var ExtractAddress: OleVariant; var Address: OleVariant; 
                         var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                         var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                         var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; 
                         var Size: OleVariant; var Height: OleVariant; var Width: OleVariant; 
                         var FeedSource: OleVariant; var AddressFromLeft: OleVariant; 
                         var AddressFromTop: OleVariant; var ReturnAddressFromLeft: OleVariant; 
                         var ReturnAddressFromTop: OleVariant; var DefaultFaceUp: OleVariant; 
                         var DefaultOrientation: OleVariant); safecall;
    procedure PrintOut2000(var ExtractAddress: OleVariant; var Address: OleVariant; 
                           var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                           var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                           var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; 
                           var Size: OleVariant; var Height: OleVariant; var Width: OleVariant; 
                           var FeedSource: OleVariant; var AddressFromLeft: OleVariant; 
                           var AddressFromTop: OleVariant; var ReturnAddressFromLeft: OleVariant; 
                           var ReturnAddressFromTop: OleVariant; var DefaultFaceUp: OleVariant; 
                           var DefaultOrientation: OleVariant); safecall;
    procedure UpdateDocument; safecall;
    procedure Options; safecall;
    function Get_Vertical: WordBool; safecall;
    procedure Set_Vertical(prop: WordBool); safecall;
    function Get_RecipientNamefromLeft: Single; safecall;
    procedure Set_RecipientNamefromLeft(prop: Single); safecall;
    function Get_RecipientNamefromTop: Single; safecall;
    procedure Set_RecipientNamefromTop(prop: Single); safecall;
    function Get_RecipientPostalfromLeft: Single; safecall;
    procedure Set_RecipientPostalfromLeft(prop: Single); safecall;
    function Get_RecipientPostalfromTop: Single; safecall;
    procedure Set_RecipientPostalfromTop(prop: Single); safecall;
    function Get_SenderNamefromLeft: Single; safecall;
    procedure Set_SenderNamefromLeft(prop: Single); safecall;
    function Get_SenderNamefromTop: Single; safecall;
    procedure Set_SenderNamefromTop(prop: Single); safecall;
    function Get_SenderPostalfromLeft: Single; safecall;
    procedure Set_SenderPostalfromLeft(prop: Single); safecall;
    function Get_SenderPostalfromTop: Single; safecall;
    procedure Set_SenderPostalfromTop(prop: Single); safecall;
    procedure Insert(var ExtractAddress: OleVariant; var Address: OleVariant; 
                     var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                     var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                     var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; var Size: OleVariant; 
                     var Height: OleVariant; var Width: OleVariant; var FeedSource: OleVariant; 
                     var AddressFromLeft: OleVariant; var AddressFromTop: OleVariant; 
                     var ReturnAddressFromLeft: OleVariant; var ReturnAddressFromTop: OleVariant; 
                     var DefaultFaceUp: OleVariant; var DefaultOrientation: OleVariant; 
                     var PrintEPostage: OleVariant; var Vertical: OleVariant; 
                     var RecipientNamefromLeft: OleVariant; var RecipientNamefromTop: OleVariant; 
                     var RecipientPostalfromLeft: OleVariant; 
                     var RecipientPostalfromTop: OleVariant; var SenderNamefromLeft: OleVariant; 
                     var SenderNamefromTop: OleVariant; var SenderPostalfromLeft: OleVariant; 
                     var SenderPostalfromTop: OleVariant); safecall;
    procedure PrintOut(var ExtractAddress: OleVariant; var Address: OleVariant; 
                       var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                       var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                       var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; 
                       var Size: OleVariant; var Height: OleVariant; var Width: OleVariant; 
                       var FeedSource: OleVariant; var AddressFromLeft: OleVariant; 
                       var AddressFromTop: OleVariant; var ReturnAddressFromLeft: OleVariant; 
                       var ReturnAddressFromTop: OleVariant; var DefaultFaceUp: OleVariant; 
                       var DefaultOrientation: OleVariant; var PrintEPostage: OleVariant; 
                       var Vertical: OleVariant; var RecipientNamefromLeft: OleVariant; 
                       var RecipientNamefromTop: OleVariant; 
                       var RecipientPostalfromLeft: OleVariant; 
                       var RecipientPostalfromTop: OleVariant; var SenderNamefromLeft: OleVariant; 
                       var SenderNamefromTop: OleVariant; var SenderPostalfromLeft: OleVariant; 
                       var SenderPostalfromTop: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Address: WordRange read Get_Address;
    property ReturnAddress: WordRange read Get_ReturnAddress;
    property DefaultPrintBarCode: WordBool read Get_DefaultPrintBarCode write Set_DefaultPrintBarCode;
    property DefaultPrintFIMA: WordBool read Get_DefaultPrintFIMA write Set_DefaultPrintFIMA;
    property DefaultHeight: Single read Get_DefaultHeight write Set_DefaultHeight;
    property DefaultWidth: Single read Get_DefaultWidth write Set_DefaultWidth;
    property DefaultSize: WideString read Get_DefaultSize write Set_DefaultSize;
    property DefaultOmitReturnAddress: WordBool read Get_DefaultOmitReturnAddress write Set_DefaultOmitReturnAddress;
    property FeedSource: WdPaperTray read Get_FeedSource write Set_FeedSource;
    property AddressFromLeft: Single read Get_AddressFromLeft write Set_AddressFromLeft;
    property AddressFromTop: Single read Get_AddressFromTop write Set_AddressFromTop;
    property ReturnAddressFromLeft: Single read Get_ReturnAddressFromLeft write Set_ReturnAddressFromLeft;
    property ReturnAddressFromTop: Single read Get_ReturnAddressFromTop write Set_ReturnAddressFromTop;
    property AddressStyle: Style read Get_AddressStyle;
    property ReturnAddressStyle: Style read Get_ReturnAddressStyle;
    property DefaultOrientation: WdEnvelopeOrientation read Get_DefaultOrientation write Set_DefaultOrientation;
    property DefaultFaceUp: WordBool read Get_DefaultFaceUp write Set_DefaultFaceUp;
    property Vertical: WordBool read Get_Vertical write Set_Vertical;
    property RecipientNamefromLeft: Single read Get_RecipientNamefromLeft write Set_RecipientNamefromLeft;
    property RecipientNamefromTop: Single read Get_RecipientNamefromTop write Set_RecipientNamefromTop;
    property RecipientPostalfromLeft: Single read Get_RecipientPostalfromLeft write Set_RecipientPostalfromLeft;
    property RecipientPostalfromTop: Single read Get_RecipientPostalfromTop write Set_RecipientPostalfromTop;
    property SenderNamefromLeft: Single read Get_SenderNamefromLeft write Set_SenderNamefromLeft;
    property SenderNamefromTop: Single read Get_SenderNamefromTop write Set_SenderNamefromTop;
    property SenderPostalfromLeft: Single read Get_SenderPostalfromLeft write Set_SenderPostalfromLeft;
    property SenderPostalfromTop: Single read Get_SenderPostalfromTop write Set_SenderPostalfromTop;
  end;

// *********************************************************************//
// DispIntf:  EnvelopeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020918-0000-0000-C000-000000000046}
// *********************************************************************//
  EnvelopeDisp = dispinterface
    ['{00020918-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Address: WordRange readonly dispid 1;
    property ReturnAddress: WordRange readonly dispid 2;
    property DefaultPrintBarCode: WordBool dispid 4;
    property DefaultPrintFIMA: WordBool dispid 5;
    property DefaultHeight: Single dispid 6;
    property DefaultWidth: Single dispid 7;
    property DefaultSize: WideString dispid 0;
    property DefaultOmitReturnAddress: WordBool dispid 9;
    property FeedSource: WdPaperTray dispid 12;
    property AddressFromLeft: Single dispid 13;
    property AddressFromTop: Single dispid 14;
    property ReturnAddressFromLeft: Single dispid 15;
    property ReturnAddressFromTop: Single dispid 16;
    property AddressStyle: Style readonly dispid 17;
    property ReturnAddressStyle: Style readonly dispid 18;
    property DefaultOrientation: WdEnvelopeOrientation dispid 19;
    property DefaultFaceUp: WordBool dispid 20;
    procedure Insert2000(var ExtractAddress: OleVariant; var Address: OleVariant; 
                         var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                         var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                         var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; 
                         var Size: OleVariant; var Height: OleVariant; var Width: OleVariant; 
                         var FeedSource: OleVariant; var AddressFromLeft: OleVariant; 
                         var AddressFromTop: OleVariant; var ReturnAddressFromLeft: OleVariant; 
                         var ReturnAddressFromTop: OleVariant; var DefaultFaceUp: OleVariant; 
                         var DefaultOrientation: OleVariant); dispid 101;
    procedure PrintOut2000(var ExtractAddress: OleVariant; var Address: OleVariant; 
                           var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                           var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                           var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; 
                           var Size: OleVariant; var Height: OleVariant; var Width: OleVariant; 
                           var FeedSource: OleVariant; var AddressFromLeft: OleVariant; 
                           var AddressFromTop: OleVariant; var ReturnAddressFromLeft: OleVariant; 
                           var ReturnAddressFromTop: OleVariant; var DefaultFaceUp: OleVariant; 
                           var DefaultOrientation: OleVariant); dispid 102;
    procedure UpdateDocument; dispid 103;
    procedure Options; dispid 104;
    property Vertical: WordBool dispid 22;
    property RecipientNamefromLeft: Single dispid 23;
    property RecipientNamefromTop: Single dispid 24;
    property RecipientPostalfromLeft: Single dispid 25;
    property RecipientPostalfromTop: Single dispid 26;
    property SenderNamefromLeft: Single dispid 27;
    property SenderNamefromTop: Single dispid 28;
    property SenderPostalfromLeft: Single dispid 29;
    property SenderPostalfromTop: Single dispid 30;
    procedure Insert(var ExtractAddress: OleVariant; var Address: OleVariant; 
                     var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                     var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                     var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; var Size: OleVariant; 
                     var Height: OleVariant; var Width: OleVariant; var FeedSource: OleVariant; 
                     var AddressFromLeft: OleVariant; var AddressFromTop: OleVariant; 
                     var ReturnAddressFromLeft: OleVariant; var ReturnAddressFromTop: OleVariant; 
                     var DefaultFaceUp: OleVariant; var DefaultOrientation: OleVariant; 
                     var PrintEPostage: OleVariant; var Vertical: OleVariant; 
                     var RecipientNamefromLeft: OleVariant; var RecipientNamefromTop: OleVariant; 
                     var RecipientPostalfromLeft: OleVariant; 
                     var RecipientPostalfromTop: OleVariant; var SenderNamefromLeft: OleVariant; 
                     var SenderNamefromTop: OleVariant; var SenderPostalfromLeft: OleVariant; 
                     var SenderPostalfromTop: OleVariant); dispid 105;
    procedure PrintOut(var ExtractAddress: OleVariant; var Address: OleVariant; 
                       var AutoText: OleVariant; var OmitReturnAddress: OleVariant; 
                       var ReturnAddress: OleVariant; var ReturnAutoText: OleVariant; 
                       var PrintBarCode: OleVariant; var PrintFIMA: OleVariant; 
                       var Size: OleVariant; var Height: OleVariant; var Width: OleVariant; 
                       var FeedSource: OleVariant; var AddressFromLeft: OleVariant; 
                       var AddressFromTop: OleVariant; var ReturnAddressFromLeft: OleVariant; 
                       var ReturnAddressFromTop: OleVariant; var DefaultFaceUp: OleVariant; 
                       var DefaultOrientation: OleVariant; var PrintEPostage: OleVariant; 
                       var Vertical: OleVariant; var RecipientNamefromLeft: OleVariant; 
                       var RecipientNamefromTop: OleVariant; 
                       var RecipientPostalfromLeft: OleVariant; 
                       var RecipientPostalfromTop: OleVariant; var SenderNamefromLeft: OleVariant; 
                       var SenderNamefromTop: OleVariant; var SenderPostalfromLeft: OleVariant; 
                       var SenderPostalfromTop: OleVariant); dispid 106;
  end;

// *********************************************************************//
// Interface: MailingLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020917-0000-0000-C000-000000000046}
// *********************************************************************//
  MailingLabel = interface(IDispatch)
    ['{00020917-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_DefaultPrintBarCode: WordBool; safecall;
    procedure Set_DefaultPrintBarCode(prop: WordBool); safecall;
    function Get_DefaultLaserTray: WdPaperTray; safecall;
    procedure Set_DefaultLaserTray(prop: WdPaperTray); safecall;
    function Get_CustomLabels: CustomLabels; safecall;
    function Get_DefaultLabelName: WideString; safecall;
    procedure Set_DefaultLabelName(const prop: WideString); safecall;
    function CreateNewDocument2000(var Name: OleVariant; var Address: OleVariant; 
                                   var AutoText: OleVariant; var ExtractAddress: OleVariant; 
                                   var LaserTray: OleVariant): WordDocument; safecall;
    procedure PrintOut2000(var Name: OleVariant; var Address: OleVariant; 
                           var ExtractAddress: OleVariant; var LaserTray: OleVariant; 
                           var SingleLabel: OleVariant; var Row: OleVariant; var Column: OleVariant); safecall;
    procedure LabelOptions; safecall;
    function CreateNewDocument(var Name: OleVariant; var Address: OleVariant; 
                               var AutoText: OleVariant; var ExtractAddress: OleVariant; 
                               var LaserTray: OleVariant; var PrintEPostageLabel: OleVariant; 
                               var Vertical: OleVariant): WordDocument; safecall;
    procedure PrintOut(var Name: OleVariant; var Address: OleVariant; 
                       var ExtractAddress: OleVariant; var LaserTray: OleVariant; 
                       var SingleLabel: OleVariant; var Row: OleVariant; var Column: OleVariant; 
                       var PrintEPostageLabel: OleVariant; var Vertical: OleVariant); safecall;
    function Get_Vertical: WordBool; safecall;
    procedure Set_Vertical(prop: WordBool); safecall;
    function CreateNewDocumentByID(var LabelID: OleVariant; var Address: OleVariant; 
                                   var AutoText: OleVariant; var ExtractAddress: OleVariant; 
                                   var LaserTray: OleVariant; var PrintEPostageLabel: OleVariant; 
                                   var Vertical: OleVariant): WordDocument; safecall;
    procedure PrintOutByID(var LabelID: OleVariant; var Address: OleVariant; 
                           var ExtractAddress: OleVariant; var LaserTray: OleVariant; 
                           var SingleLabel: OleVariant; var Row: OleVariant; 
                           var Column: OleVariant; var PrintEPostageLabel: OleVariant; 
                           var Vertical: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property DefaultPrintBarCode: WordBool read Get_DefaultPrintBarCode write Set_DefaultPrintBarCode;
    property DefaultLaserTray: WdPaperTray read Get_DefaultLaserTray write Set_DefaultLaserTray;
    property CustomLabels: CustomLabels read Get_CustomLabels;
    property DefaultLabelName: WideString read Get_DefaultLabelName write Set_DefaultLabelName;
    property Vertical: WordBool read Get_Vertical write Set_Vertical;
  end;

// *********************************************************************//
// DispIntf:  MailingLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020917-0000-0000-C000-000000000046}
// *********************************************************************//
  MailingLabelDisp = dispinterface
    ['{00020917-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property DefaultPrintBarCode: WordBool dispid 2;
    property DefaultLaserTray: WdPaperTray dispid 4;
    property CustomLabels: CustomLabels readonly dispid 8;
    property DefaultLabelName: WideString dispid 9;
    function CreateNewDocument2000(var Name: OleVariant; var Address: OleVariant; 
                                   var AutoText: OleVariant; var ExtractAddress: OleVariant; 
                                   var LaserTray: OleVariant): WordDocument; dispid 101;
    procedure PrintOut2000(var Name: OleVariant; var Address: OleVariant; 
                           var ExtractAddress: OleVariant; var LaserTray: OleVariant; 
                           var SingleLabel: OleVariant; var Row: OleVariant; var Column: OleVariant); dispid 102;
    procedure LabelOptions; dispid 103;
    function CreateNewDocument(var Name: OleVariant; var Address: OleVariant; 
                               var AutoText: OleVariant; var ExtractAddress: OleVariant; 
                               var LaserTray: OleVariant; var PrintEPostageLabel: OleVariant; 
                               var Vertical: OleVariant): WordDocument; dispid 104;
    procedure PrintOut(var Name: OleVariant; var Address: OleVariant; 
                       var ExtractAddress: OleVariant; var LaserTray: OleVariant; 
                       var SingleLabel: OleVariant; var Row: OleVariant; var Column: OleVariant; 
                       var PrintEPostageLabel: OleVariant; var Vertical: OleVariant); dispid 105;
    property Vertical: WordBool dispid 10;
    function CreateNewDocumentByID(var LabelID: OleVariant; var Address: OleVariant; 
                                   var AutoText: OleVariant; var ExtractAddress: OleVariant; 
                                   var LaserTray: OleVariant; var PrintEPostageLabel: OleVariant; 
                                   var Vertical: OleVariant): WordDocument; dispid 106;
    procedure PrintOutByID(var LabelID: OleVariant; var Address: OleVariant; 
                           var ExtractAddress: OleVariant; var LaserTray: OleVariant; 
                           var SingleLabel: OleVariant; var Row: OleVariant; 
                           var Column: OleVariant; var PrintEPostageLabel: OleVariant; 
                           var Vertical: OleVariant); dispid 107;
  end;

// *********************************************************************//
// Interface: CustomLabels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020916-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabels = interface(IDispatch)
    ['{00020916-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): CustomLabel; safecall;
    function Add(const Name: WideString; var DotMatrix: OleVariant): CustomLabel; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  CustomLabelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020916-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabelsDisp = dispinterface
    ['{00020916-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): CustomLabel; dispid 0;
    function Add(const Name: WideString; var DotMatrix: OleVariant): CustomLabel; dispid 101;
  end;

// *********************************************************************//
// Interface: CustomLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020915-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabel = interface(IDispatch)
    ['{00020915-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_TopMargin: Single; safecall;
    procedure Set_TopMargin(prop: Single); safecall;
    function Get_SideMargin: Single; safecall;
    procedure Set_SideMargin(prop: Single); safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_VerticalPitch: Single; safecall;
    procedure Set_VerticalPitch(prop: Single); safecall;
    function Get_HorizontalPitch: Single; safecall;
    procedure Set_HorizontalPitch(prop: Single); safecall;
    function Get_NumberAcross: Integer; safecall;
    procedure Set_NumberAcross(prop: Integer); safecall;
    function Get_NumberDown: Integer; safecall;
    procedure Set_NumberDown(prop: Integer); safecall;
    function Get_DotMatrix: WordBool; safecall;
    function Get_PageSize: WdCustomLabelPageSize; safecall;
    procedure Set_PageSize(prop: WdCustomLabelPageSize); safecall;
    function Get_Valid: WordBool; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property TopMargin: Single read Get_TopMargin write Set_TopMargin;
    property SideMargin: Single read Get_SideMargin write Set_SideMargin;
    property Height: Single read Get_Height write Set_Height;
    property Width: Single read Get_Width write Set_Width;
    property VerticalPitch: Single read Get_VerticalPitch write Set_VerticalPitch;
    property HorizontalPitch: Single read Get_HorizontalPitch write Set_HorizontalPitch;
    property NumberAcross: Integer read Get_NumberAcross write Set_NumberAcross;
    property NumberDown: Integer read Get_NumberDown write Set_NumberDown;
    property DotMatrix: WordBool read Get_DotMatrix;
    property PageSize: WdCustomLabelPageSize read Get_PageSize write Set_PageSize;
    property Valid: WordBool read Get_Valid;
  end;

// *********************************************************************//
// DispIntf:  CustomLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020915-0000-0000-C000-000000000046}
// *********************************************************************//
  CustomLabelDisp = dispinterface
    ['{00020915-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString dispid 2;
    property TopMargin: Single dispid 3;
    property SideMargin: Single dispid 4;
    property Height: Single dispid 5;
    property Width: Single dispid 6;
    property VerticalPitch: Single dispid 7;
    property HorizontalPitch: Single dispid 8;
    property NumberAcross: Integer dispid 9;
    property NumberDown: Integer dispid 10;
    property DotMatrix: WordBool readonly dispid 11;
    property PageSize: WdCustomLabelPageSize dispid 12;
    property Valid: WordBool readonly dispid 13;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: TablesOfContents
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020914-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfContents = interface(IDispatch)
    ['{00020914-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Format: WdTocFormat; safecall;
    procedure Set_Format(prop: WdTocFormat); safecall;
    function Item(Index: Integer): TableOfContents; safecall;
    function AddOld(const Range: WordRange; var UseHeadingStyles: OleVariant; 
                    var UpperHeadingLevel: OleVariant; var LowerHeadingLevel: OleVariant; 
                    var UseFields: OleVariant; var TableID: OleVariant; 
                    var RightAlignPageNumbers: OleVariant; var IncludePageNumbers: OleVariant; 
                    var AddedStyles: OleVariant): TableOfContents; safecall;
    function MarkEntry(const Range: WordRange; var Entry: OleVariant; 
                       var EntryAutoText: OleVariant; var TableID: OleVariant; var Level: OleVariant): Field; safecall;
    function Add2000(const Range: WordRange; var UseHeadingStyles: OleVariant; 
                     var UpperHeadingLevel: OleVariant; var LowerHeadingLevel: OleVariant; 
                     var UseFields: OleVariant; var TableID: OleVariant; 
                     var RightAlignPageNumbers: OleVariant; var IncludePageNumbers: OleVariant; 
                     var AddedStyles: OleVariant; var UseHyperlinks: OleVariant; 
                     var HidePageNumbersInWeb: OleVariant): TableOfContents; safecall;
    function Add(const Range: WordRange; var UseHeadingStyles: OleVariant; 
                 var UpperHeadingLevel: OleVariant; var LowerHeadingLevel: OleVariant; 
                 var UseFields: OleVariant; var TableID: OleVariant; 
                 var RightAlignPageNumbers: OleVariant; var IncludePageNumbers: OleVariant; 
                 var AddedStyles: OleVariant; var UseHyperlinks: OleVariant; 
                 var HidePageNumbersInWeb: OleVariant; var UseOutlineLevels: OleVariant): TableOfContents; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdTocFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  TablesOfContentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020914-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfContentsDisp = dispinterface
    ['{00020914-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Format: WdTocFormat dispid 2;
    function Item(Index: Integer): TableOfContents; dispid 0;
    function AddOld(const Range: WordRange; var UseHeadingStyles: OleVariant; 
                    var UpperHeadingLevel: OleVariant; var LowerHeadingLevel: OleVariant; 
                    var UseFields: OleVariant; var TableID: OleVariant; 
                    var RightAlignPageNumbers: OleVariant; var IncludePageNumbers: OleVariant; 
                    var AddedStyles: OleVariant): TableOfContents; dispid 100;
    function MarkEntry(const Range: WordRange; var Entry: OleVariant; 
                       var EntryAutoText: OleVariant; var TableID: OleVariant; var Level: OleVariant): Field; dispid 101;
    function Add2000(const Range: WordRange; var UseHeadingStyles: OleVariant; 
                     var UpperHeadingLevel: OleVariant; var LowerHeadingLevel: OleVariant; 
                     var UseFields: OleVariant; var TableID: OleVariant; 
                     var RightAlignPageNumbers: OleVariant; var IncludePageNumbers: OleVariant; 
                     var AddedStyles: OleVariant; var UseHyperlinks: OleVariant; 
                     var HidePageNumbersInWeb: OleVariant): TableOfContents; dispid 102;
    function Add(const Range: WordRange; var UseHeadingStyles: OleVariant; 
                 var UpperHeadingLevel: OleVariant; var LowerHeadingLevel: OleVariant; 
                 var UseFields: OleVariant; var TableID: OleVariant; 
                 var RightAlignPageNumbers: OleVariant; var IncludePageNumbers: OleVariant; 
                 var AddedStyles: OleVariant; var UseHyperlinks: OleVariant; 
                 var HidePageNumbersInWeb: OleVariant; var UseOutlineLevels: OleVariant): TableOfContents; dispid 103;
  end;

// *********************************************************************//
// Interface: TableOfContents
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020913-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfContents = interface(IDispatch)
    ['{00020913-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_UseHeadingStyles: WordBool; safecall;
    procedure Set_UseHeadingStyles(prop: WordBool); safecall;
    function Get_UseFields: WordBool; safecall;
    procedure Set_UseFields(prop: WordBool); safecall;
    function Get_UpperHeadingLevel: Integer; safecall;
    procedure Set_UpperHeadingLevel(prop: Integer); safecall;
    function Get_LowerHeadingLevel: Integer; safecall;
    procedure Set_LowerHeadingLevel(prop: Integer); safecall;
    function Get_TableID: WideString; safecall;
    procedure Set_TableID(const prop: WideString); safecall;
    function Get_HeadingStyles: HeadingStyles; safecall;
    function Get_RightAlignPageNumbers: WordBool; safecall;
    procedure Set_RightAlignPageNumbers(prop: WordBool); safecall;
    function Get_IncludePageNumbers: WordBool; safecall;
    procedure Set_IncludePageNumbers(prop: WordBool); safecall;
    function Get_Range: WordRange; safecall;
    function Get_TabLeader: WdTabLeader; safecall;
    procedure Set_TabLeader(prop: WdTabLeader); safecall;
    procedure Delete; safecall;
    procedure UpdatePageNumbers; safecall;
    procedure Update; safecall;
    function Get_UseHyperlinks: WordBool; safecall;
    procedure Set_UseHyperlinks(prop: WordBool); safecall;
    function Get_HidePageNumbersInWeb: WordBool; safecall;
    procedure Set_HidePageNumbersInWeb(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property UseHeadingStyles: WordBool read Get_UseHeadingStyles write Set_UseHeadingStyles;
    property UseFields: WordBool read Get_UseFields write Set_UseFields;
    property UpperHeadingLevel: Integer read Get_UpperHeadingLevel write Set_UpperHeadingLevel;
    property LowerHeadingLevel: Integer read Get_LowerHeadingLevel write Set_LowerHeadingLevel;
    property TableID: WideString read Get_TableID write Set_TableID;
    property HeadingStyles: HeadingStyles read Get_HeadingStyles;
    property RightAlignPageNumbers: WordBool read Get_RightAlignPageNumbers write Set_RightAlignPageNumbers;
    property IncludePageNumbers: WordBool read Get_IncludePageNumbers write Set_IncludePageNumbers;
    property Range: WordRange read Get_Range;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
    property UseHyperlinks: WordBool read Get_UseHyperlinks write Set_UseHyperlinks;
    property HidePageNumbersInWeb: WordBool read Get_HidePageNumbersInWeb write Set_HidePageNumbersInWeb;
  end;

// *********************************************************************//
// DispIntf:  TableOfContentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020913-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfContentsDisp = dispinterface
    ['{00020913-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property UseHeadingStyles: WordBool dispid 1;
    property UseFields: WordBool dispid 2;
    property UpperHeadingLevel: Integer dispid 3;
    property LowerHeadingLevel: Integer dispid 4;
    property TableID: WideString dispid 5;
    property HeadingStyles: HeadingStyles readonly dispid 6;
    property RightAlignPageNumbers: WordBool dispid 7;
    property IncludePageNumbers: WordBool dispid 8;
    property Range: WordRange readonly dispid 9;
    property TabLeader: WdTabLeader dispid 10;
    procedure Delete; dispid 100;
    procedure UpdatePageNumbers; dispid 101;
    procedure Update; dispid 102;
    property UseHyperlinks: WordBool dispid 11;
    property HidePageNumbersInWeb: WordBool dispid 12;
  end;

// *********************************************************************//
// Interface: TablesOfAuthorities
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020912-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthorities = interface(IDispatch)
    ['{00020912-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Format: WdToaFormat; safecall;
    procedure Set_Format(prop: WdToaFormat); safecall;
    function Item(Index: Integer): TableOfAuthorities; safecall;
    function Add(const Range: WordRange; var Category: OleVariant; var Bookmark: OleVariant; 
                 var Passim: OleVariant; var KeepEntryFormatting: OleVariant; 
                 var Separator: OleVariant; var IncludeSequenceName: OleVariant; 
                 var EntrySeparator: OleVariant; var PageRangeSeparator: OleVariant; 
                 var IncludeCategoryHeader: OleVariant; var PageNumberSeparator: OleVariant): TableOfAuthorities; safecall;
    procedure NextCitation(const ShortCitation: WideString); safecall;
    function MarkCitation(const Range: WordRange; const ShortCitation: WideString; 
                          var LongCitation: OleVariant; var LongCitationAutoText: OleVariant; 
                          var Category: OleVariant): Field; safecall;
    procedure MarkAllCitations(const ShortCitation: WideString; var LongCitation: OleVariant; 
                               var LongCitationAutoText: OleVariant; var Category: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdToaFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  TablesOfAuthoritiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020912-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthoritiesDisp = dispinterface
    ['{00020912-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Format: WdToaFormat dispid 2;
    function Item(Index: Integer): TableOfAuthorities; dispid 0;
    function Add(const Range: WordRange; var Category: OleVariant; var Bookmark: OleVariant; 
                 var Passim: OleVariant; var KeepEntryFormatting: OleVariant; 
                 var Separator: OleVariant; var IncludeSequenceName: OleVariant; 
                 var EntrySeparator: OleVariant; var PageRangeSeparator: OleVariant; 
                 var IncludeCategoryHeader: OleVariant; var PageNumberSeparator: OleVariant): TableOfAuthorities; dispid 100;
    procedure NextCitation(const ShortCitation: WideString); dispid 103;
    function MarkCitation(const Range: WordRange; const ShortCitation: WideString; 
                          var LongCitation: OleVariant; var LongCitationAutoText: OleVariant; 
                          var Category: OleVariant): Field; dispid 101;
    procedure MarkAllCitations(const ShortCitation: WideString; var LongCitation: OleVariant; 
                               var LongCitationAutoText: OleVariant; var Category: OleVariant); dispid 102;
  end;

// *********************************************************************//
// Interface: TableOfAuthorities
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020911-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthorities = interface(IDispatch)
    ['{00020911-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Passim: WordBool; safecall;
    procedure Set_Passim(prop: WordBool); safecall;
    function Get_KeepEntryFormatting: WordBool; safecall;
    procedure Set_KeepEntryFormatting(prop: WordBool); safecall;
    function Get_Category: Integer; safecall;
    procedure Set_Category(prop: Integer); safecall;
    function Get_Bookmark: WideString; safecall;
    procedure Set_Bookmark(const prop: WideString); safecall;
    function Get_Separator: WideString; safecall;
    procedure Set_Separator(const prop: WideString); safecall;
    function Get_IncludeSequenceName: WideString; safecall;
    procedure Set_IncludeSequenceName(const prop: WideString); safecall;
    function Get_EntrySeparator: WideString; safecall;
    procedure Set_EntrySeparator(const prop: WideString); safecall;
    function Get_PageRangeSeparator: WideString; safecall;
    procedure Set_PageRangeSeparator(const prop: WideString); safecall;
    function Get_IncludeCategoryHeader: WordBool; safecall;
    procedure Set_IncludeCategoryHeader(prop: WordBool); safecall;
    function Get_PageNumberSeparator: WideString; safecall;
    procedure Set_PageNumberSeparator(const prop: WideString); safecall;
    function Get_Range: WordRange; safecall;
    function Get_TabLeader: WdTabLeader; safecall;
    procedure Set_TabLeader(prop: WdTabLeader); safecall;
    procedure Delete; safecall;
    procedure Update; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Passim: WordBool read Get_Passim write Set_Passim;
    property KeepEntryFormatting: WordBool read Get_KeepEntryFormatting write Set_KeepEntryFormatting;
    property Category: Integer read Get_Category write Set_Category;
    property Bookmark: WideString read Get_Bookmark write Set_Bookmark;
    property Separator: WideString read Get_Separator write Set_Separator;
    property IncludeSequenceName: WideString read Get_IncludeSequenceName write Set_IncludeSequenceName;
    property EntrySeparator: WideString read Get_EntrySeparator write Set_EntrySeparator;
    property PageRangeSeparator: WideString read Get_PageRangeSeparator write Set_PageRangeSeparator;
    property IncludeCategoryHeader: WordBool read Get_IncludeCategoryHeader write Set_IncludeCategoryHeader;
    property PageNumberSeparator: WideString read Get_PageNumberSeparator write Set_PageNumberSeparator;
    property Range: WordRange read Get_Range;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
  end;

// *********************************************************************//
// DispIntf:  TableOfAuthoritiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020911-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthoritiesDisp = dispinterface
    ['{00020911-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Passim: WordBool dispid 1;
    property KeepEntryFormatting: WordBool dispid 2;
    property Category: Integer dispid 3;
    property Bookmark: WideString dispid 4;
    property Separator: WideString dispid 5;
    property IncludeSequenceName: WideString dispid 6;
    property EntrySeparator: WideString dispid 7;
    property PageRangeSeparator: WideString dispid 8;
    property IncludeCategoryHeader: WordBool dispid 9;
    property PageNumberSeparator: WideString dispid 10;
    property Range: WordRange readonly dispid 11;
    property TabLeader: WdTabLeader dispid 12;
    procedure Delete; dispid 100;
    procedure Update; dispid 101;
  end;

// *********************************************************************//
// Interface: Dialogs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020910-0000-0000-C000-000000000046}
// *********************************************************************//
  Dialogs = interface(IDispatch)
    ['{00020910-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: WdWordDialog): Dialog; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  DialogsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020910-0000-0000-C000-000000000046}
// *********************************************************************//
  DialogsDisp = dispinterface
    ['{00020910-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(Index: WdWordDialog): Dialog; dispid 0;
  end;

// *********************************************************************//
// Interface: Dialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000209B8-0000-0000-C000-000000000046}
// *********************************************************************//
  Dialog = interface(IDispatch)
    ['{000209B8-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_DefaultTab: WdWordDialogTab; safecall;
    procedure Set_DefaultTab(prop: WdWordDialogTab); safecall;
    function Get_type_: WdWordDialog; safecall;
    function Show(var TimeOut: OleVariant): Integer; safecall;
    function Display(var TimeOut: OleVariant): Integer; safecall;
    procedure Execute; safecall;
    procedure Update; safecall;
    function Get_CommandName: WideString; safecall;
    function Get_CommandBarId: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property DefaultTab: WdWordDialogTab read Get_DefaultTab write Set_DefaultTab;
    property type_: WdWordDialog read Get_type_;
    property CommandName: WideString read Get_CommandName;
    property CommandBarId: Integer read Get_CommandBarId;
  end;

// *********************************************************************//
// DispIntf:  DialogDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {000209B8-0000-0000-C000-000000000046}
// *********************************************************************//
  DialogDisp = dispinterface
    ['{000209B8-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 32003;
    property Creator: Integer readonly dispid 32004;
    property Parent: IDispatch readonly dispid 32005;
    property DefaultTab: WdWordDialogTab dispid 32002;
    property type_: WdWordDialog readonly dispid 0;
    function Show(var TimeOut: OleVariant): Integer; dispid 336;
    function Display(var TimeOut: OleVariant): Integer; dispid 338;
    procedure Execute; dispid 32001;
    procedure Update; dispid 302;
    property CommandName: WideString readonly dispid 32006;
    property CommandBarId: Integer readonly dispid 32007;
  end;

// *********************************************************************//
// Interface: PageSetup
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020971-0000-0000-C000-000000000046}
// *********************************************************************//
  PageSetup = interface(IDispatch)
    ['{00020971-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_TopMargin: Single; safecall;
    procedure Set_TopMargin(prop: Single); safecall;
    function Get_BottomMargin: Single; safecall;
    procedure Set_BottomMargin(prop: Single); safecall;
    function Get_LeftMargin: Single; safecall;
    procedure Set_LeftMargin(prop: Single); safecall;
    function Get_RightMargin: Single; safecall;
    procedure Set_RightMargin(prop: Single); safecall;
    function Get_Gutter: Single; safecall;
    procedure Set_Gutter(prop: Single); safecall;
    function Get_PageWidth: Single; safecall;
    procedure Set_PageWidth(prop: Single); safecall;
    function Get_PageHeight: Single; safecall;
    procedure Set_PageHeight(prop: Single); safecall;
    function Get_Orientation: WdOrientation; safecall;
    procedure Set_Orientation(prop: WdOrientation); safecall;
    function Get_FirstPageTray: WdPaperTray; safecall;
    procedure Set_FirstPageTray(prop: WdPaperTray); safecall;
    function Get_OtherPagesTray: WdPaperTray; safecall;
    procedure Set_OtherPagesTray(prop: WdPaperTray); safecall;
    function Get_VerticalAlignment: WdVerticalAlignment; safecall;
    procedure Set_VerticalAlignment(prop: WdVerticalAlignment); safecall;
    function Get_MirrorMargins: Integer; safecall;
    procedure Set_MirrorMargins(prop: Integer); safecall;
    function Get_HeaderDistance: Single; safecall;
    procedure Set_HeaderDistance(prop: Single); safecall;
    function Get_FooterDistance: Single; safecall;
    procedure Set_FooterDistance(prop: Single); safecall;
    function Get_SectionStart: WdSectionStart; safecall;
    procedure Set_SectionStart(prop: WdSectionStart); safecall;
    function Get_OddAndEvenPagesHeaderFooter: Integer; safecall;
    procedure Set_OddAndEvenPagesHeaderFooter(prop: Integer); safecall;
    function Get_DifferentFirstPageHeaderFooter: Integer; safecall;
    procedure Set_DifferentFirstPageHeaderFooter(prop: Integer); safecall;
    function Get_SuppressEndnotes: Integer; safecall;
    procedure Set_SuppressEndnotes(prop: Integer); safecall;
    function Get_LineNumbering: LineNumbering; safecall;
    procedure Set_LineNumbering(const prop: LineNumbering); safecall;
    function Get_TextColumns: TextColumns; safecall;
    procedure Set_TextColumns(const prop: TextColumns); safecall;
    function Get_PaperSize: WdPaperSize; safecall;
    procedure Set_PaperSize(prop: WdPaperSize); safecall;
    function Get_TwoPagesOnOne: WordBool; safecall;
    procedure Set_TwoPagesOnOne(prop: WordBool); safecall;
    function Get_GutterOnTop: WordBool; safecall;
    procedure Set_GutterOnTop(prop: WordBool); safecall;
    function Get_CharsLine: Single; safecall;
    procedure Set_CharsLine(prop: Single); safecall;
    function Get_LinesPage: Single; safecall;
    procedure Set_LinesPage(prop: Single); safecall;
    function Get_ShowGrid: WordBool; safecall;
    procedure Set_ShowGrid(prop: WordBool); safecall;
    procedure TogglePortrait; safecall;
    procedure SetAsTemplateDefault; safecall;
    function Get_GutterStyle: WdGutterStyleOld; safecall;
    procedure Set_GutterStyle(prop: WdGutterStyleOld); safecall;
    function Get_SectionDirection: WdSectionDirection; safecall;
    procedure Set_SectionDirection(prop: WdSectionDirection); safecall;
    function Get_LayoutMode: WdLayoutMode; safecall;
    procedure Set_LayoutMode(prop: WdLayoutMode); safecall;
    function Get_GutterPos: WdGutterStyle; safecall;
    procedure Set_GutterPos(prop: WdGutterStyle); safecall;
    function Get_BookFoldPrinting: WordBool; safecall;
    procedure Set_BookFoldPrinting(prop: WordBool); safecall;
    function Get_BookFoldRevPrinting: WordBool; safecall;
    procedure Set_BookFoldRevPrinting(prop: WordBool); safecall;
    function Get_BookFoldPrintingSheets: Integer; safecall;
    procedure Set_BookFoldPrintingSheets(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property TopMargin: Single read Get_TopMargin write Set_TopMargin;
    property BottomMargin: Single read Get_BottomMargin write Set_BottomMargin;
    property LeftMargin: Single read Get_LeftMargin write Set_LeftMargin;
    property RightMargin: Single read Get_RightMargin write Set_RightMargin;
    property Gutter: Single read Get_Gutter write Set_Gutter;
    property PageWidth: Single read Get_PageWidth write Set_PageWidth;
    property PageHeight: Single read Get_PageHeight write Set_PageHeight;
    property Orientation: WdOrientation read Get_Orientation write Set_Orientation;
    property FirstPageTray: WdPaperTray read Get_FirstPageTray write Set_FirstPageTray;
    property OtherPagesTray: WdPaperTray read Get_OtherPagesTray write Set_OtherPagesTray;
    property VerticalAlignment: WdVerticalAlignment read Get_VerticalAlignment write Set_VerticalAlignment;
    property MirrorMargins: Integer read Get_MirrorMargins write Set_MirrorMargins;
    property HeaderDistance: Single read Get_HeaderDistance write Set_HeaderDistance;
    property FooterDistance: Single read Get_FooterDistance write Set_FooterDistance;
    property SectionStart: WdSectionStart read Get_SectionStart write Set_SectionStart;
    property OddAndEvenPagesHeaderFooter: Integer read Get_OddAndEvenPagesHeaderFooter write Set_OddAndEvenPagesHeaderFooter;
    property DifferentFirstPageHeaderFooter: Integer read Get_DifferentFirstPageHeaderFooter write Set_DifferentFirstPageHeaderFooter;
    property SuppressEndnotes: Integer read Get_SuppressEndnotes write Set_SuppressEndnotes;
    property LineNumbering: LineNumbering read Get_LineNumbering write Set_LineNumbering;
    property TextColumns: TextColumns read Get_TextColumns write Set_TextColumns;
    property PaperSize: WdPaperSize read Get_PaperSize write Set_PaperSize;
    property TwoPagesOnOne: WordBool read Get_TwoPagesOnOne write Set_TwoPagesOnOne;
    property GutterOnTop: WordBool read Get_GutterOnTop write Set_GutterOnTop;
    property CharsLine: Single read Get_CharsLine write Set_CharsLine;
    property LinesPage: Single read Get_LinesPage write Set_LinesPage;
    property ShowGrid: WordBool read Get_ShowGrid write Set_ShowGrid;
    property GutterStyle: WdGutterStyleOld read Get_GutterStyle write Set_GutterStyle;
    property SectionDirection: WdSectionDirection read Get_SectionDirection write Set_SectionDirection;
    property LayoutMode: WdLayoutMode read Get_LayoutMode write Set_LayoutMode;
    property GutterPos: WdGutterStyle read Get_GutterPos write Set_GutterPos;
    property BookFoldPrinting: WordBool read Get_BookFoldPrinting write Set_BookFoldPrinting;
    property BookFoldRevPrinting: WordBool read Get_BookFoldRevPrinting write Set_BookFoldRevPrinting;
    property BookFoldPrintingSheets: Integer read Get_BookFoldPrintingSheets write Set_BookFoldPrintingSheets;
  end;

// *********************************************************************//
// DispIntf:  PageSetupDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020971-0000-0000-C000-000000000046}
// *********************************************************************//
  PageSetupDisp = dispinterface
    ['{00020971-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property TopMargin: Single dispid 100;
    property BottomMargin: Single dispid 101;
    property LeftMargin: Single dispid 102;
    property RightMargin: Single dispid 103;
    property Gutter: Single dispid 104;
    property PageWidth: Single dispid 105;
    property PageHeight: Single dispid 106;
    property Orientation: WdOrientation dispid 107;
    property FirstPageTray: WdPaperTray dispid 108;
    property OtherPagesTray: WdPaperTray dispid 109;
    property VerticalAlignment: WdVerticalAlignment dispid 110;
    property MirrorMargins: Integer dispid 111;
    property HeaderDistance: Single dispid 112;
    property FooterDistance: Single dispid 113;
    property SectionStart: WdSectionStart dispid 114;
    property OddAndEvenPagesHeaderFooter: Integer dispid 115;
    property DifferentFirstPageHeaderFooter: Integer dispid 116;
    property SuppressEndnotes: Integer dispid 117;
    property LineNumbering: LineNumbering dispid 118;
    property TextColumns: TextColumns dispid 119;
    property PaperSize: WdPaperSize dispid 120;
    property TwoPagesOnOne: WordBool dispid 121;
    property GutterOnTop: WordBool dispid 122;
    property CharsLine: Single dispid 123;
    property LinesPage: Single dispid 124;
    property ShowGrid: WordBool dispid 128;
    procedure TogglePortrait; dispid 201;
    procedure SetAsTemplateDefault; dispid 202;
    property GutterStyle: WdGutterStyleOld dispid 129;
    property SectionDirection: WdSectionDirection dispid 130;
    property LayoutMode: WdLayoutMode dispid 131;
    property GutterPos: WdGutterStyle dispid 1222;
    property BookFoldPrinting: WordBool dispid 1223;
    property BookFoldRevPrinting: WordBool dispid 1224;
    property BookFoldPrintingSheets: Integer dispid 1225;
  end;

// *********************************************************************//
// Interface: LineNumbering
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020972-0000-0000-C000-000000000046}
// *********************************************************************//
  LineNumbering = interface(IDispatch)
    ['{00020972-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_RestartMode: WdNumberingRule; safecall;
    procedure Set_RestartMode(prop: WdNumberingRule); safecall;
    function Get_StartingNumber: Integer; safecall;
    procedure Set_StartingNumber(prop: Integer); safecall;
    function Get_DistanceFromText: Single; safecall;
    procedure Set_DistanceFromText(prop: Single); safecall;
    function Get_CountBy: Integer; safecall;
    procedure Set_CountBy(prop: Integer); safecall;
    function Get_Active: Integer; safecall;
    procedure Set_Active(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RestartMode: WdNumberingRule read Get_RestartMode write Set_RestartMode;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property DistanceFromText: Single read Get_DistanceFromText write Set_DistanceFromText;
    property CountBy: Integer read Get_CountBy write Set_CountBy;
    property Active: Integer read Get_Active write Set_Active;
  end;

// *********************************************************************//
// DispIntf:  LineNumberingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020972-0000-0000-C000-000000000046}
// *********************************************************************//
  LineNumberingDisp = dispinterface
    ['{00020972-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property RestartMode: WdNumberingRule dispid 100;
    property StartingNumber: Integer dispid 101;
    property DistanceFromText: Single dispid 102;
    property CountBy: Integer dispid 103;
    property Active: Integer dispid 104;
  end;

// *********************************************************************//
// Interface: TextColumns
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020973-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumns = interface(IDispatch)
    ['{00020973-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_EvenlySpaced: Integer; safecall;
    procedure Set_EvenlySpaced(prop: Integer); safecall;
    function Get_LineBetween: Integer; safecall;
    procedure Set_LineBetween(prop: Integer); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_Spacing: Single; safecall;
    procedure Set_Spacing(prop: Single); safecall;
    function Item(Index: Integer): TextColumn; safecall;
    function Add(var Width: OleVariant; var Spacing: OleVariant; var EvenlySpaced: OleVariant): TextColumn; safecall;
    procedure SetCount(NumColumns: Integer); safecall;
    function Get_FlowDirection: WdFlowDirection; safecall;
    procedure Set_FlowDirection(prop: WdFlowDirection); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property EvenlySpaced: Integer read Get_EvenlySpaced write Set_EvenlySpaced;
    property LineBetween: Integer read Get_LineBetween write Set_LineBetween;
    property Width: Single read Get_Width write Set_Width;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property FlowDirection: WdFlowDirection read Get_FlowDirection write Set_FlowDirection;
  end;

// *********************************************************************//
// DispIntf:  TextColumnsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020973-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumnsDisp = dispinterface
    ['{00020973-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property EvenlySpaced: Integer dispid 100;
    property LineBetween: Integer dispid 101;
    property Width: Single dispid 102;
    property Spacing: Single dispid 103;
    function Item(Index: Integer): TextColumn; dispid 0;
    function Add(var Width: OleVariant; var Spacing: OleVariant; var EvenlySpaced: OleVariant): TextColumn; dispid 201;
    procedure SetCount(NumColumns: Integer); dispid 202;
    property FlowDirection: WdFlowDirection dispid 104;
  end;

// *********************************************************************//
// Interface: TextColumn
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020974-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumn = interface(IDispatch)
    ['{00020974-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_SpaceAfter: Single; safecall;
    procedure Set_SpaceAfter(prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Width: Single read Get_Width write Set_Width;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
  end;

// *********************************************************************//
// DispIntf:  TextColumnDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020974-0000-0000-C000-000000000046}
// *********************************************************************//
  TextColumnDisp = dispinterface
    ['{00020974-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Width: Single dispid 100;
    property SpaceAfter: Single dispid 101;
  end;

// *********************************************************************//
// Interface: WordSelection
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020975-0000-0000-C000-000000000046}
// *********************************************************************//
  WordSelection = interface(IDispatch)
    ['{00020975-0000-0000-C000-000000000046}']
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_FormattedText: WordRange; safecall;
    procedure Set_FormattedText(const prop: WordRange); safecall;
    function Get_Start: Integer; safecall;
    procedure Set_Start(prop: Integer); safecall;
    function Get_End_: Integer; safecall;
    procedure Set_End_(prop: Integer); safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    function Get_type_: WdSelectionType; safecall;
    function Get_StoryType: WdStoryType; safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Tables: Tables; safecall;
    function Get_Words: Words; safecall;
    function Get_Sentences: Sentences; safecall;
    function Get_Characters: Characters; safecall;
    function Get_Footnotes: Footnotes; safecall;
    function Get_Endnotes: Endnotes; safecall;
    function Get_Comments: Comments; safecall;
    function Get_Cells: Cells; safecall;
    function Get_Sections: Sections; safecall;
    function Get_Paragraphs: Paragraphs; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Shading: Shading; safecall;
    function Get_Fields: Fields; safecall;
    function Get_FormFields: FormFields; safecall;
    function Get_Frames: Frames; safecall;
    function Get_ParagraphFormat: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat(const prop: WordParagraphFormat); safecall;
    function Get_PageSetup: PageSetup; safecall;
    procedure Set_PageSetup(const prop: PageSetup); safecall;
    function Get_Bookmarks: Bookmarks; safecall;
    function Get_StoryLength: Integer; safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_LanguageIDFarEast: WdLanguageID; safecall;
    procedure Set_LanguageIDFarEast(prop: WdLanguageID); safecall;
    function Get_LanguageIDOther: WdLanguageID; safecall;
    procedure Set_LanguageIDOther(prop: WdLanguageID); safecall;
    function Get_Hyperlinks: Hyperlinks; safecall;
    function Get_Columns: Columns; safecall;
    function Get_Rows: Rows; safecall;
    function Get_HeaderFooter: HeaderFooter; safecall;
    function Get_IsEndOfRowMark: WordBool; safecall;
    function Get_BookmarkID: Integer; safecall;
    function Get_PreviousBookmarkID: Integer; safecall;
    function Get_Find: Find; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Information(Type_: WdInformation): OleVariant; safecall;
    function Get_Flags: WdSelectionFlags; safecall;
    procedure Set_Flags(prop: WdSelectionFlags); safecall;
    function Get_Active: WordBool; safecall;
    function Get_StartIsActive: WordBool; safecall;
    procedure Set_StartIsActive(prop: WordBool); safecall;
    function Get_IPAtEndOfLine: WordBool; safecall;
    function Get_ExtendMode: WordBool; safecall;
    procedure Set_ExtendMode(prop: WordBool); safecall;
    function Get_ColumnSelectMode: WordBool; safecall;
    procedure Set_ColumnSelectMode(prop: WordBool); safecall;
    function Get_Orientation: WdTextOrientation; safecall;
    procedure Set_Orientation(prop: WdTextOrientation); safecall;
    function Get_InlineShapes: InlineShapes; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Document: WordDocument; safecall;
    function Get_ShapeRange: ShapeRange; safecall;
    procedure Select; safecall;
    procedure SetRange(Start: Integer; End_: Integer); safecall;
    procedure Collapse(var Direction: OleVariant); safecall;
    procedure InsertBefore(const Text: WideString); safecall;
    procedure InsertAfter(const Text: WideString); safecall;
    function Next(var Unit_: OleVariant; var Count: OleVariant): WordRange; safecall;
    function Previous(var Unit_: OleVariant; var Count: OleVariant): WordRange; safecall;
    function StartOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; safecall;
    function EndOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; safecall;
    function Move(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveStart(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveEnd(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveWhile(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveStartWhile(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveEndWhile(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveUntil(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveStartUntil(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    function MoveEndUntil(var Cset: OleVariant; var Count: OleVariant): Integer; safecall;
    procedure Cut; safecall;
    procedure Copy; safecall;
    procedure Paste; safecall;
    procedure InsertBreak(var Type_: OleVariant); safecall;
    procedure InsertFile(const FileName: WideString; var Range: OleVariant; 
                         var ConfirmConversions: OleVariant; var Link: OleVariant; 
                         var Attachment: OleVariant); safecall;
    function InStory(const Range: WordRange): WordBool; safecall;
    function InRange(const Range: WordRange): WordBool; safecall;
    function Delete(var Unit_: OleVariant; var Count: OleVariant): Integer; safecall;
    function Expand(var Unit_: OleVariant): Integer; safecall;
    procedure InsertParagraph; safecall;
    procedure InsertParagraphAfter; safecall;
    function ConvertToTableOld(var Separator: OleVariant; var NumRows: OleVariant; 
                               var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                               var Format: OleVariant; var ApplyBorders: OleVariant; 
                               var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                               var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                               var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                               var ApplyLastColumn: OleVariant; var AutoFit: OleVariant): Table; safecall;
    procedure InsertDateTimeOld(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                                var InsertAsFullWidth: OleVariant); safecall;
    procedure InsertSymbol(CharacterNumber: Integer; var Font: OleVariant; var Unicode: OleVariant; 
                           var Bias: OleVariant); safecall;
    procedure InsertCrossReference_2002(var ReferenceType: OleVariant; 
                                        ReferenceKind: WdReferenceKind; 
                                        var ReferenceItem: OleVariant; 
                                        var InsertAsHyperlink: OleVariant; 
                                        var IncludePosition: OleVariant); safecall;
    procedure InsertCaptionXP(var Label_: OleVariant; var Title: OleVariant; 
                              var TitleAutoText: OleVariant; var Position: OleVariant); safecall;
    procedure CopyAsPicture; safecall;
    procedure SortOld(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                      var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                      var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                      var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                      var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                      var SortColumn: OleVariant; var Separator: OleVariant; 
                      var CaseSensitive: OleVariant; var LanguageID: OleVariant); safecall;
    procedure SortAscending; safecall;
    procedure SortDescending; safecall;
    function IsEqual(const Range: WordRange): WordBool; safecall;
    function Calculate: Single; safecall;
    function GoTo_(var What: OleVariant; var Which: OleVariant; var Count: OleVariant; 
                   var Name: OleVariant): WordRange; safecall;
    function GoToNext(What: WdGoToItem): WordRange; safecall;
    function GoToPrevious(What: WdGoToItem): WordRange; safecall;
    procedure PasteSpecial(var IconIndex: OleVariant; var Link: OleVariant; 
                           var Placement: OleVariant; var DisplayAsIcon: OleVariant; 
                           var DataType: OleVariant; var IconFileName: OleVariant; 
                           var IconLabel: OleVariant); safecall;
    function PreviousField: Field; safecall;
    function NextField: Field; safecall;
    procedure InsertParagraphBefore; safecall;
    procedure InsertCells(var ShiftCells: OleVariant); safecall;
    procedure Extend(var Character: OleVariant); safecall;
    procedure Shrink; safecall;
    function MoveLeft(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; safecall;
    function MoveRight(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; safecall;
    function MoveUp(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; safecall;
    function MoveDown(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; safecall;
    function HomeKey(var Unit_: OleVariant; var Extend: OleVariant): Integer; safecall;
    function EndKey(var Unit_: OleVariant; var Extend: OleVariant): Integer; safecall;
    procedure EscapeKey; safecall;
    procedure TypeText(const Text: WideString); safecall;
    procedure CopyFormat; safecall;
    procedure PasteFormat; safecall;
    procedure TypeParagraph; safecall;
    procedure TypeBackspace; safecall;
    procedure NextSubdocument; safecall;
    procedure PreviousSubdocument; safecall;
    procedure SelectColumn; safecall;
    procedure SelectCurrentFont; safecall;
    procedure SelectCurrentAlignment; safecall;
    procedure SelectCurrentSpacing; safecall;
    procedure SelectCurrentIndent; safecall;
    procedure SelectCurrentTabs; safecall;
    procedure SelectCurrentColor; safecall;
    procedure CreateTextbox; safecall;
    procedure WholeStory; safecall;
    procedure SelectRow; safecall;
    procedure SplitTable; safecall;
    procedure InsertRows(var NumRows: OleVariant); safecall;
    procedure InsertColumns; safecall;
    procedure InsertFormula(var Formula: OleVariant; var NumberFormat: OleVariant); safecall;
    function NextRevision(var Wrap: OleVariant): Revision; safecall;
    function PreviousRevision(var Wrap: OleVariant): Revision; safecall;
    procedure PasteAsNestedTable; safecall;
    function CreateAutoTextEntry(const Name: WideString; const StyleName: WideString): AutoTextEntry; safecall;
    procedure DetectLanguage; safecall;
    procedure SelectCell; safecall;
    procedure InsertRowsBelow(var NumRows: OleVariant); safecall;
    procedure InsertColumnsRight; safecall;
    procedure InsertRowsAbove(var NumRows: OleVariant); safecall;
    procedure RtlRun; safecall;
    procedure LtrRun; safecall;
    procedure BoldRun; safecall;
    procedure ItalicRun; safecall;
    procedure RtlPara; safecall;
    procedure LtrPara; safecall;
    procedure InsertDateTime(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                             var InsertAsFullWidth: OleVariant; var DateLanguage: OleVariant; 
                             var CalendarType: OleVariant); safecall;
    procedure Sort2000(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                       var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                       var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                       var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                       var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                       var SortColumn: OleVariant; var Separator: OleVariant; 
                       var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                       var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                       var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                       var LanguageID: OleVariant); safecall;
    function ConvertToTable(var Separator: OleVariant; var NumRows: OleVariant; 
                            var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                            var Format: OleVariant; var ApplyBorders: OleVariant; 
                            var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                            var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                            var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                            var ApplyLastColumn: OleVariant; var AutoFit: OleVariant; 
                            var AutoFitBehavior: OleVariant; var DefaultTableBehavior: OleVariant): Table; safecall;
    function Get_NoProofing: Integer; safecall;
    procedure Set_NoProofing(prop: Integer); safecall;
    function Get_TopLevelTables: Tables; safecall;
    function Get_LanguageDetected: WordBool; safecall;
    procedure Set_LanguageDetected(prop: WordBool); safecall;
    function Get_FitTextWidth: Single; safecall;
    procedure Set_FitTextWidth(prop: Single); safecall;
    procedure ClearFormatting; safecall;
    procedure PasteAppendTable; safecall;
    function Get_HTMLDivisions: HTMLDivisions; safecall;
    function Get_SmartTags: SmartTags; safecall;
    function Get_ChildShapeRange: ShapeRange; safecall;
    function Get_HasChildShapeRange: WordBool; safecall;
    function Get_FootnoteOptions: FootnoteOptions; safecall;
    function Get_EndnoteOptions: EndnoteOptions; safecall;
    procedure ToggleCharacterCode; safecall;
    procedure PasteAndFormat(Type_: WdRecoveryType); safecall;
    procedure PasteExcelTable(LinkedToExcel: WordBool; WordFormatting: WordBool; RTF: WordBool); safecall;
    procedure ShrinkDiscontiguousSelection; safecall;
    procedure InsertStyleSeparator; safecall;
    procedure Sort(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                   var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                   var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                   var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                   var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                   var SortColumn: OleVariant; var Separator: OleVariant; 
                   var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                   var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                   var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                   var LanguageID: OleVariant; var SubFieldNumber: OleVariant; 
                   var SubFieldNumber2: OleVariant; var SubFieldNumber3: OleVariant); safecall;
    function Get_XMLNodes: XMLNodes; safecall;
    function Get_XMLParentNode: XMLNode; safecall;
    function Get_Editors: Editors; safecall;
    function Get_XML(DataOnly: WordBool): WideString; safecall;
    function Get_EnhMetaFileBits: OleVariant; safecall;
    function GoToEditableRange(var EditorID: OleVariant): WordRange; safecall;
    procedure InsertXML(const XML: WideString; var Transform: OleVariant); safecall;
    procedure InsertCaption(var Label_: OleVariant; var Title: OleVariant; 
                            var TitleAutoText: OleVariant; var Position: OleVariant; 
                            var ExcludeLabel: OleVariant); safecall;
    procedure InsertCrossReference(var ReferenceType: OleVariant; ReferenceKind: WdReferenceKind; 
                                   var ReferenceItem: OleVariant; 
                                   var InsertAsHyperlink: OleVariant; 
                                   var IncludePosition: OleVariant; 
                                   var SeparateNumbers: OleVariant; var SeparatorString: OleVariant); safecall;
    function Get_OMaths: OMaths; safecall;
    function Get_WordOpenXML: WideString; safecall;
    procedure ClearParagraphStyle; safecall;
    procedure ClearCharacterAllFormatting; safecall;
    procedure ClearCharacterStyle; safecall;
    procedure ClearCharacterDirectFormatting; safecall;
    function Get_ContentControls: ContentControls; safecall;
    function Get_ParentContentControl: ContentControl; safecall;
    procedure ExportAsFixedFormat(const OutputFileName: WideString; ExportFormat: WdExportFormat; 
                                  OpenAfterExport: WordBool; OptimizeFor: WdExportOptimizeFor; 
                                  ExportCurrentPage: WordBool; Item: WdExportItem; 
                                  IncludeDocProps: WordBool; KeepIRM: WordBool; 
                                  CreateBookmarks: WdExportCreateBookmarks; 
                                  DocStructureTags: WordBool; BitmapMissingFonts: WordBool; 
                                  UseISO19005_1: WordBool; var FixedFormatExtClassPtr: OleVariant); safecall;
    procedure ReadingModeGrowFont; safecall;
    procedure ReadingModeShrinkFont; safecall;
    procedure ClearParagraphAllFormatting; safecall;
    procedure ClearParagraphDirectFormatting; safecall;
    procedure InsertNewPage; safecall;
    property Text: WideString read Get_Text write Set_Text;
    property FormattedText: WordRange read Get_FormattedText write Set_FormattedText;
    property Start: Integer read Get_Start write Set_Start;
    property End_: Integer read Get_End_ write Set_End_;
    property Font: WordFont read Get_Font write Set_Font;
    property type_: WdSelectionType read Get_type_;
    property StoryType: WdStoryType read Get_StoryType;
    property Tables: Tables read Get_Tables;
    property Words: Words read Get_Words;
    property Sentences: Sentences read Get_Sentences;
    property Characters: Characters read Get_Characters;
    property Footnotes: Footnotes read Get_Footnotes;
    property Endnotes: Endnotes read Get_Endnotes;
    property Comments: Comments read Get_Comments;
    property Cells: Cells read Get_Cells;
    property Sections: Sections read Get_Sections;
    property Paragraphs: Paragraphs read Get_Paragraphs;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Shading: Shading read Get_Shading;
    property Fields: Fields read Get_Fields;
    property FormFields: FormFields read Get_FormFields;
    property Frames: Frames read Get_Frames;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property PageSetup: PageSetup read Get_PageSetup write Set_PageSetup;
    property Bookmarks: Bookmarks read Get_Bookmarks;
    property StoryLength: Integer read Get_StoryLength;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property LanguageIDFarEast: WdLanguageID read Get_LanguageIDFarEast write Set_LanguageIDFarEast;
    property LanguageIDOther: WdLanguageID read Get_LanguageIDOther write Set_LanguageIDOther;
    property Hyperlinks: Hyperlinks read Get_Hyperlinks;
    property Columns: Columns read Get_Columns;
    property Rows: Rows read Get_Rows;
    property HeaderFooter: HeaderFooter read Get_HeaderFooter;
    property IsEndOfRowMark: WordBool read Get_IsEndOfRowMark;
    property BookmarkID: Integer read Get_BookmarkID;
    property PreviousBookmarkID: Integer read Get_PreviousBookmarkID;
    property Find: Find read Get_Find;
    property Range: WordRange read Get_Range;
    property Information[Type_: WdInformation]: OleVariant read Get_Information;
    property Flags: WdSelectionFlags read Get_Flags write Set_Flags;
    property Active: WordBool read Get_Active;
    property StartIsActive: WordBool read Get_StartIsActive write Set_StartIsActive;
    property IPAtEndOfLine: WordBool read Get_IPAtEndOfLine;
    property ExtendMode: WordBool read Get_ExtendMode write Set_ExtendMode;
    property ColumnSelectMode: WordBool read Get_ColumnSelectMode write Set_ColumnSelectMode;
    property Orientation: WdTextOrientation read Get_Orientation write Set_Orientation;
    property InlineShapes: InlineShapes read Get_InlineShapes;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Document: WordDocument read Get_Document;
    property ShapeRange: ShapeRange read Get_ShapeRange;
    property NoProofing: Integer read Get_NoProofing write Set_NoProofing;
    property TopLevelTables: Tables read Get_TopLevelTables;
    property LanguageDetected: WordBool read Get_LanguageDetected write Set_LanguageDetected;
    property FitTextWidth: Single read Get_FitTextWidth write Set_FitTextWidth;
    property HTMLDivisions: HTMLDivisions read Get_HTMLDivisions;
    property SmartTags: SmartTags read Get_SmartTags;
    property ChildShapeRange: ShapeRange read Get_ChildShapeRange;
    property HasChildShapeRange: WordBool read Get_HasChildShapeRange;
    property FootnoteOptions: FootnoteOptions read Get_FootnoteOptions;
    property EndnoteOptions: EndnoteOptions read Get_EndnoteOptions;
    property XMLNodes: XMLNodes read Get_XMLNodes;
    property XMLParentNode: XMLNode read Get_XMLParentNode;
    property Editors: Editors read Get_Editors;
    property XML[DataOnly: WordBool]: WideString read Get_XML;
    property EnhMetaFileBits: OleVariant read Get_EnhMetaFileBits;
    property OMaths: OMaths read Get_OMaths;
    property WordOpenXML: WideString read Get_WordOpenXML;
    property ContentControls: ContentControls read Get_ContentControls;
    property ParentContentControl: ContentControl read Get_ParentContentControl;
  end;

// *********************************************************************//
// DispIntf:  WordSelectionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020975-0000-0000-C000-000000000046}
// *********************************************************************//
  WordSelectionDisp = dispinterface
    ['{00020975-0000-0000-C000-000000000046}']
    property Text: WideString dispid 0;
    property FormattedText: WordRange dispid 2;
    property Start: Integer dispid 3;
    property End_: Integer dispid 4;
    property Font: WordFont dispid 5;
    property type_: WdSelectionType readonly dispid 6;
    property StoryType: WdStoryType readonly dispid 7;
    function Style: OleVariant; dispid 8;
    property Tables: Tables readonly dispid 50;
    property Words: Words readonly dispid 51;
    property Sentences: Sentences readonly dispid 52;
    property Characters: Characters readonly dispid 53;
    property Footnotes: Footnotes readonly dispid 54;
    property Endnotes: Endnotes readonly dispid 55;
    property Comments: Comments readonly dispid 56;
    property Cells: Cells readonly dispid 57;
    property Sections: Sections readonly dispid 58;
    property Paragraphs: Paragraphs readonly dispid 59;
    property Borders: Borders dispid 1100;
    property Shading: Shading readonly dispid 61;
    property Fields: Fields readonly dispid 64;
    property FormFields: FormFields readonly dispid 65;
    property Frames: Frames readonly dispid 66;
    property ParagraphFormat: WordParagraphFormat dispid 1102;
    property PageSetup: PageSetup dispid 1101;
    property Bookmarks: Bookmarks readonly dispid 75;
    property StoryLength: Integer readonly dispid 152;
    property LanguageID: WdLanguageID dispid 153;
    property LanguageIDFarEast: WdLanguageID dispid 154;
    property LanguageIDOther: WdLanguageID dispid 155;
    property Hyperlinks: Hyperlinks readonly dispid 156;
    property Columns: Columns readonly dispid 302;
    property Rows: Rows readonly dispid 303;
    property HeaderFooter: HeaderFooter readonly dispid 306;
    property IsEndOfRowMark: WordBool readonly dispid 307;
    property BookmarkID: Integer readonly dispid 308;
    property PreviousBookmarkID: Integer readonly dispid 309;
    property Find: Find readonly dispid 262;
    property Range: WordRange readonly dispid 400;
    property Information[Type_: WdInformation]: OleVariant readonly dispid 401;
    property Flags: WdSelectionFlags dispid 402;
    property Active: WordBool readonly dispid 403;
    property StartIsActive: WordBool dispid 404;
    property IPAtEndOfLine: WordBool readonly dispid 405;
    property ExtendMode: WordBool dispid 406;
    property ColumnSelectMode: WordBool dispid 407;
    property Orientation: WdTextOrientation dispid 410;
    property InlineShapes: InlineShapes readonly dispid 411;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Document: WordDocument readonly dispid 1003;
    property ShapeRange: ShapeRange readonly dispid 1004;
    procedure Select; dispid 65535;
    procedure SetRange(Start: Integer; End_: Integer); dispid 100;
    procedure Collapse(var Direction: OleVariant); dispid 101;
    procedure InsertBefore(const Text: WideString); dispid 102;
    procedure InsertAfter(const Text: WideString); dispid 104;
    function Next(var Unit_: OleVariant; var Count: OleVariant): WordRange; dispid 105;
    function Previous(var Unit_: OleVariant; var Count: OleVariant): WordRange; dispid 106;
    function StartOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; dispid 107;
    function EndOf(var Unit_: OleVariant; var Extend: OleVariant): Integer; dispid 108;
    function Move(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 109;
    function MoveStart(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 110;
    function MoveEnd(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 111;
    function MoveWhile(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 112;
    function MoveStartWhile(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 113;
    function MoveEndWhile(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 114;
    function MoveUntil(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 115;
    function MoveStartUntil(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 116;
    function MoveEndUntil(var Cset: OleVariant; var Count: OleVariant): Integer; dispid 117;
    procedure Cut; dispid 119;
    procedure Copy; dispid 120;
    procedure Paste; dispid 121;
    procedure InsertBreak(var Type_: OleVariant); dispid 122;
    procedure InsertFile(const FileName: WideString; var Range: OleVariant; 
                         var ConfirmConversions: OleVariant; var Link: OleVariant; 
                         var Attachment: OleVariant); dispid 123;
    function InStory(const Range: WordRange): WordBool; dispid 125;
    function InRange(const Range: WordRange): WordBool; dispid 126;
    function Delete(var Unit_: OleVariant; var Count: OleVariant): Integer; dispid 127;
    function Expand(var Unit_: OleVariant): Integer; dispid 129;
    procedure InsertParagraph; dispid 160;
    procedure InsertParagraphAfter; dispid 161;
    function ConvertToTableOld(var Separator: OleVariant; var NumRows: OleVariant; 
                               var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                               var Format: OleVariant; var ApplyBorders: OleVariant; 
                               var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                               var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                               var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                               var ApplyLastColumn: OleVariant; var AutoFit: OleVariant): Table; dispid 162;
    procedure InsertDateTimeOld(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                                var InsertAsFullWidth: OleVariant); dispid 163;
    procedure InsertSymbol(CharacterNumber: Integer; var Font: OleVariant; var Unicode: OleVariant; 
                           var Bias: OleVariant); dispid 164;
    procedure InsertCrossReference_2002(var ReferenceType: OleVariant; 
                                        ReferenceKind: WdReferenceKind; 
                                        var ReferenceItem: OleVariant; 
                                        var InsertAsHyperlink: OleVariant; 
                                        var IncludePosition: OleVariant); dispid 165;
    procedure InsertCaptionXP(var Label_: OleVariant; var Title: OleVariant; 
                              var TitleAutoText: OleVariant; var Position: OleVariant); dispid 166;
    procedure CopyAsPicture; dispid 167;
    procedure SortOld(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                      var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                      var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                      var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                      var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                      var SortColumn: OleVariant; var Separator: OleVariant; 
                      var CaseSensitive: OleVariant; var LanguageID: OleVariant); dispid 168;
    procedure SortAscending; dispid 169;
    procedure SortDescending; dispid 170;
    function IsEqual(const Range: WordRange): WordBool; dispid 171;
    function Calculate: Single; dispid 172;
    function GoTo_(var What: OleVariant; var Which: OleVariant; var Count: OleVariant; 
                   var Name: OleVariant): WordRange; dispid 173;
    function GoToNext(What: WdGoToItem): WordRange; dispid 174;
    function GoToPrevious(What: WdGoToItem): WordRange; dispid 175;
    procedure PasteSpecial(var IconIndex: OleVariant; var Link: OleVariant; 
                           var Placement: OleVariant; var DisplayAsIcon: OleVariant; 
                           var DataType: OleVariant; var IconFileName: OleVariant; 
                           var IconLabel: OleVariant); dispid 176;
    function PreviousField: Field; dispid 177;
    function NextField: Field; dispid 178;
    procedure InsertParagraphBefore; dispid 212;
    procedure InsertCells(var ShiftCells: OleVariant); dispid 214;
    procedure Extend(var Character: OleVariant); dispid 300;
    procedure Shrink; dispid 301;
    function MoveLeft(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; dispid 500;
    function MoveRight(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; dispid 501;
    function MoveUp(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; dispid 502;
    function MoveDown(var Unit_: OleVariant; var Count: OleVariant; var Extend: OleVariant): Integer; dispid 503;
    function HomeKey(var Unit_: OleVariant; var Extend: OleVariant): Integer; dispid 504;
    function EndKey(var Unit_: OleVariant; var Extend: OleVariant): Integer; dispid 505;
    procedure EscapeKey; dispid 506;
    procedure TypeText(const Text: WideString); dispid 507;
    procedure CopyFormat; dispid 509;
    procedure PasteFormat; dispid 510;
    procedure TypeParagraph; dispid 512;
    procedure TypeBackspace; dispid 513;
    procedure NextSubdocument; dispid 514;
    procedure PreviousSubdocument; dispid 515;
    procedure SelectColumn; dispid 516;
    procedure SelectCurrentFont; dispid 517;
    procedure SelectCurrentAlignment; dispid 518;
    procedure SelectCurrentSpacing; dispid 519;
    procedure SelectCurrentIndent; dispid 520;
    procedure SelectCurrentTabs; dispid 521;
    procedure SelectCurrentColor; dispid 522;
    procedure CreateTextbox; dispid 523;
    procedure WholeStory; dispid 524;
    procedure SelectRow; dispid 525;
    procedure SplitTable; dispid 526;
    procedure InsertRows(var NumRows: OleVariant); dispid 528;
    procedure InsertColumns; dispid 529;
    procedure InsertFormula(var Formula: OleVariant; var NumberFormat: OleVariant); dispid 530;
    function NextRevision(var Wrap: OleVariant): Revision; dispid 531;
    function PreviousRevision(var Wrap: OleVariant): Revision; dispid 532;
    procedure PasteAsNestedTable; dispid 533;
    function CreateAutoTextEntry(const Name: WideString; const StyleName: WideString): AutoTextEntry; dispid 534;
    procedure DetectLanguage; dispid 535;
    procedure SelectCell; dispid 536;
    procedure InsertRowsBelow(var NumRows: OleVariant); dispid 537;
    procedure InsertColumnsRight; dispid 538;
    procedure InsertRowsAbove(var NumRows: OleVariant); dispid 539;
    procedure RtlRun; dispid 600;
    procedure LtrRun; dispid 601;
    procedure BoldRun; dispid 602;
    procedure ItalicRun; dispid 603;
    procedure RtlPara; dispid 605;
    procedure LtrPara; dispid 606;
    procedure InsertDateTime(var DateTimeFormat: OleVariant; var InsertAsField: OleVariant; 
                             var InsertAsFullWidth: OleVariant; var DateLanguage: OleVariant; 
                             var CalendarType: OleVariant); dispid 444;
    procedure Sort2000(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                       var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                       var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                       var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                       var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                       var SortColumn: OleVariant; var Separator: OleVariant; 
                       var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                       var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                       var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                       var LanguageID: OleVariant); dispid 445;
    function ConvertToTable(var Separator: OleVariant; var NumRows: OleVariant; 
                            var NumColumns: OleVariant; var InitialColumnWidth: OleVariant; 
                            var Format: OleVariant; var ApplyBorders: OleVariant; 
                            var ApplyShading: OleVariant; var ApplyFont: OleVariant; 
                            var ApplyColor: OleVariant; var ApplyHeadingRows: OleVariant; 
                            var ApplyLastRow: OleVariant; var ApplyFirstColumn: OleVariant; 
                            var ApplyLastColumn: OleVariant; var AutoFit: OleVariant; 
                            var AutoFitBehavior: OleVariant; var DefaultTableBehavior: OleVariant): Table; dispid 457;
    property NoProofing: Integer dispid 1005;
    property TopLevelTables: Tables readonly dispid 1006;
    property LanguageDetected: WordBool dispid 1007;
    property FitTextWidth: Single dispid 1008;
    procedure ClearFormatting; dispid 1009;
    procedure PasteAppendTable; dispid 1010;
    property HTMLDivisions: HTMLDivisions readonly dispid 1011;
    property SmartTags: SmartTags readonly dispid 1015;
    property ChildShapeRange: ShapeRange readonly dispid 1021;
    property HasChildShapeRange: WordBool readonly dispid 1022;
    property FootnoteOptions: FootnoteOptions readonly dispid 1024;
    property EndnoteOptions: EndnoteOptions readonly dispid 1025;
    procedure ToggleCharacterCode; dispid 1012;
    procedure PasteAndFormat(Type_: WdRecoveryType); dispid 1013;
    procedure PasteExcelTable(LinkedToExcel: WordBool; WordFormatting: WordBool; RTF: WordBool); dispid 1014;
    procedure ShrinkDiscontiguousSelection; dispid 1019;
    procedure InsertStyleSeparator; dispid 1020;
    procedure Sort(var ExcludeHeader: OleVariant; var FieldNumber: OleVariant; 
                   var SortFieldType: OleVariant; var SortOrder: OleVariant; 
                   var FieldNumber2: OleVariant; var SortFieldType2: OleVariant; 
                   var SortOrder2: OleVariant; var FieldNumber3: OleVariant; 
                   var SortFieldType3: OleVariant; var SortOrder3: OleVariant; 
                   var SortColumn: OleVariant; var Separator: OleVariant; 
                   var CaseSensitive: OleVariant; var BidiSort: OleVariant; 
                   var IgnoreThe: OleVariant; var IgnoreKashida: OleVariant; 
                   var IgnoreDiacritics: OleVariant; var IgnoreHe: OleVariant; 
                   var LanguageID: OleVariant; var SubFieldNumber: OleVariant; 
                   var SubFieldNumber2: OleVariant; var SubFieldNumber3: OleVariant); dispid 1023;
    property XMLNodes: XMLNodes readonly dispid 310;
    property XMLParentNode: XMLNode readonly dispid 311;
    property Editors: Editors readonly dispid 313;
    property XML[DataOnly: WordBool]: WideString readonly dispid 314;
    property EnhMetaFileBits: OleVariant readonly dispid 315;
    function GoToEditableRange(var EditorID: OleVariant): WordRange; dispid 1027;
    procedure InsertXML(const XML: WideString; var Transform: OleVariant); dispid 1028;
    procedure InsertCaption(var Label_: OleVariant; var Title: OleVariant; 
                            var TitleAutoText: OleVariant; var Position: OleVariant; 
                            var ExcludeLabel: OleVariant); dispid 417;
    procedure InsertCrossReference(var ReferenceType: OleVariant; ReferenceKind: WdReferenceKind; 
                                   var ReferenceItem: OleVariant; 
                                   var InsertAsHyperlink: OleVariant; 
                                   var IncludePosition: OleVariant; 
                                   var SeparateNumbers: OleVariant; var SeparatorString: OleVariant); dispid 418;
    property OMaths: OMaths readonly dispid 316;
    property WordOpenXML: WideString readonly dispid 317;
    procedure ClearParagraphStyle; dispid 1030;
    procedure ClearCharacterAllFormatting; dispid 1031;
    procedure ClearCharacterStyle; dispid 1032;
    procedure ClearCharacterDirectFormatting; dispid 1033;
    property ContentControls: ContentControls readonly dispid 1034;
    property ParentContentControl: ContentControl readonly dispid 1035;
    procedure ExportAsFixedFormat(const OutputFileName: WideString; ExportFormat: WdExportFormat; 
                                  OpenAfterExport: WordBool; OptimizeFor: WdExportOptimizeFor; 
                                  ExportCurrentPage: WordBool; Item: WdExportItem; 
                                  IncludeDocProps: WordBool; KeepIRM: WordBool; 
                                  CreateBookmarks: WdExportCreateBookmarks; 
                                  DocStructureTags: WordBool; BitmapMissingFonts: WordBool; 
                                  UseISO19005_1: WordBool; var FixedFormatExtClassPtr: OleVariant); dispid 1036;
    procedure ReadingModeGrowFont; dispid 1037;
    procedure ReadingModeShrinkFont; dispid 1038;
    procedure ClearParagraphAllFormatting; dispid 1039;
    procedure ClearParagraphDirectFormatting; dispid 1040;
    procedure InsertNewPage; dispid 1041;
  end;

// *********************************************************************//
// Interface: TablesOfAuthoritiesCategories
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020976-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthoritiesCategories = interface(IDispatch)
    ['{00020976-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): TableOfAuthoritiesCategory; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  TablesOfAuthoritiesCategoriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020976-0000-0000-C000-000000000046}
// *********************************************************************//
  TablesOfAuthoritiesCategoriesDisp = dispinterface
    ['{00020976-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): TableOfAuthoritiesCategory; dispid 0;
  end;

// *********************************************************************//
// Interface: TableOfAuthoritiesCategory
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020977-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthoritiesCategory = interface(IDispatch)
    ['{00020977-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Index: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name write Set_Name;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  TableOfAuthoritiesCategoryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020977-0000-0000-C000-000000000046}
// *********************************************************************//
  TableOfAuthoritiesCategoryDisp = dispinterface
    ['{00020977-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString dispid 0;
    property Index: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: CaptionLabels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020978-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabels = interface(IDispatch)
    ['{00020978-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): CaptionLabel; safecall;
    function Add(const Name: WideString): CaptionLabel; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  CaptionLabelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020978-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabelsDisp = dispinterface
    ['{00020978-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): CaptionLabel; dispid 0;
    function Add(const Name: WideString): CaptionLabel; dispid 100;
  end;

// *********************************************************************//
// Interface: CaptionLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020979-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabel = interface(IDispatch)
    ['{00020979-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_BuiltIn: WordBool; safecall;
    function Get_ID: WdCaptionLabelID; safecall;
    function Get_IncludeChapterNumber: WordBool; safecall;
    procedure Set_IncludeChapterNumber(prop: WordBool); safecall;
    function Get_NumberStyle: WdCaptionNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdCaptionNumberStyle); safecall;
    function Get_ChapterStyleLevel: Integer; safecall;
    procedure Set_ChapterStyleLevel(prop: Integer); safecall;
    function Get_Separator: WdSeparatorType; safecall;
    procedure Set_Separator(prop: WdSeparatorType); safecall;
    function Get_Position: WdCaptionPosition; safecall;
    procedure Set_Position(prop: WdCaptionPosition); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property BuiltIn: WordBool read Get_BuiltIn;
    property ID: WdCaptionLabelID read Get_ID;
    property IncludeChapterNumber: WordBool read Get_IncludeChapterNumber write Set_IncludeChapterNumber;
    property NumberStyle: WdCaptionNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property ChapterStyleLevel: Integer read Get_ChapterStyleLevel write Set_ChapterStyleLevel;
    property Separator: WdSeparatorType read Get_Separator write Set_Separator;
    property Position: WdCaptionPosition read Get_Position write Set_Position;
  end;

// *********************************************************************//
// DispIntf:  CaptionLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020979-0000-0000-C000-000000000046}
// *********************************************************************//
  CaptionLabelDisp = dispinterface
    ['{00020979-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property BuiltIn: WordBool readonly dispid 1;
    property ID: WdCaptionLabelID readonly dispid 2;
    property IncludeChapterNumber: WordBool dispid 3;
    property NumberStyle: WdCaptionNumberStyle dispid 4;
    property ChapterStyleLevel: Integer dispid 5;
    property Separator: WdSeparatorType dispid 6;
    property Position: WdCaptionPosition dispid 7;
    procedure Delete; dispid 100;
  end;

// *********************************************************************//
// Interface: AutoCaptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097A-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaptions = interface(IDispatch)
    ['{0002097A-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): AutoCaption; safecall;
    procedure CancelAutoInsert; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AutoCaptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097A-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaptionsDisp = dispinterface
    ['{0002097A-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): AutoCaption; dispid 0;
    procedure CancelAutoInsert; dispid 100;
  end;

// *********************************************************************//
// Interface: AutoCaption
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097B-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaption = interface(IDispatch)
    ['{0002097B-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_AutoInsert: WordBool; safecall;
    procedure Set_AutoInsert(prop: WordBool); safecall;
    function Get_Index: Integer; safecall;
    function Get_CaptionLabel: OleVariant; safecall;
    procedure Set_CaptionLabel(var prop: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property AutoInsert: WordBool read Get_AutoInsert write Set_AutoInsert;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  AutoCaptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097B-0000-0000-C000-000000000046}
// *********************************************************************//
  AutoCaptionDisp = dispinterface
    ['{0002097B-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property AutoInsert: WordBool dispid 1;
    property Index: Integer readonly dispid 2;
    function CaptionLabel: OleVariant; dispid 3;
  end;

// *********************************************************************//
// Interface: Indexes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097C-0000-0000-C000-000000000046}
// *********************************************************************//
  Indexes = interface(IDispatch)
    ['{0002097C-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Format: WdIndexFormat; safecall;
    procedure Set_Format(prop: WdIndexFormat); safecall;
    function Item(Index: Integer): Index; safecall;
    function AddOld(const Range: WordRange; var HeadingSeparator: OleVariant; 
                    var RightAlignPageNumbers: OleVariant; var Type_: OleVariant; 
                    var NumberOfColumns: OleVariant; var AccentedLetters: OleVariant): Index; safecall;
    function MarkEntry(const Range: WordRange; var Entry: OleVariant; 
                       var EntryAutoText: OleVariant; var CrossReference: OleVariant; 
                       var CrossReferenceAutoText: OleVariant; var BookmarkName: OleVariant; 
                       var Bold: OleVariant; var Italic: OleVariant; var Reading: OleVariant): Field; safecall;
    procedure MarkAllEntries(const Range: WordRange; var Entry: OleVariant; 
                             var EntryAutoText: OleVariant; var CrossReference: OleVariant; 
                             var CrossReferenceAutoText: OleVariant; var BookmarkName: OleVariant; 
                             var Bold: OleVariant; var Italic: OleVariant); safecall;
    procedure AutoMarkEntries(const ConcordanceFileName: WideString); safecall;
    function Add(const Range: WordRange; var HeadingSeparator: OleVariant; 
                 var RightAlignPageNumbers: OleVariant; var Type_: OleVariant; 
                 var NumberOfColumns: OleVariant; var AccentedLetters: OleVariant; 
                 var SortBy: OleVariant; var IndexLanguage: OleVariant): Index; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Format: WdIndexFormat read Get_Format write Set_Format;
  end;

// *********************************************************************//
// DispIntf:  IndexesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097C-0000-0000-C000-000000000046}
// *********************************************************************//
  IndexesDisp = dispinterface
    ['{0002097C-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Format: WdIndexFormat dispid 2;
    function Item(Index: Integer): Index; dispid 0;
    function AddOld(const Range: WordRange; var HeadingSeparator: OleVariant; 
                    var RightAlignPageNumbers: OleVariant; var Type_: OleVariant; 
                    var NumberOfColumns: OleVariant; var AccentedLetters: OleVariant): Index; dispid 100;
    function MarkEntry(const Range: WordRange; var Entry: OleVariant; 
                       var EntryAutoText: OleVariant; var CrossReference: OleVariant; 
                       var CrossReferenceAutoText: OleVariant; var BookmarkName: OleVariant; 
                       var Bold: OleVariant; var Italic: OleVariant; var Reading: OleVariant): Field; dispid 101;
    procedure MarkAllEntries(const Range: WordRange; var Entry: OleVariant; 
                             var EntryAutoText: OleVariant; var CrossReference: OleVariant; 
                             var CrossReferenceAutoText: OleVariant; var BookmarkName: OleVariant; 
                             var Bold: OleVariant; var Italic: OleVariant); dispid 102;
    procedure AutoMarkEntries(const ConcordanceFileName: WideString); dispid 103;
    function Add(const Range: WordRange; var HeadingSeparator: OleVariant; 
                 var RightAlignPageNumbers: OleVariant; var Type_: OleVariant; 
                 var NumberOfColumns: OleVariant; var AccentedLetters: OleVariant; 
                 var SortBy: OleVariant; var IndexLanguage: OleVariant): Index; dispid 104;
  end;

// *********************************************************************//
// Interface: Index
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097D-0000-0000-C000-000000000046}
// *********************************************************************//
  Index = interface(IDispatch)
    ['{0002097D-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_HeadingSeparator: WdHeadingSeparator; safecall;
    procedure Set_HeadingSeparator(prop: WdHeadingSeparator); safecall;
    function Get_RightAlignPageNumbers: WordBool; safecall;
    procedure Set_RightAlignPageNumbers(prop: WordBool); safecall;
    function Get_type_: WdIndexType; safecall;
    procedure Set_type_(prop: WdIndexType); safecall;
    function Get_NumberOfColumns: Integer; safecall;
    procedure Set_NumberOfColumns(prop: Integer); safecall;
    function Get_Range: WordRange; safecall;
    function Get_TabLeader: WdTabLeader; safecall;
    procedure Set_TabLeader(prop: WdTabLeader); safecall;
    function Get_AccentedLetters: WordBool; safecall;
    procedure Set_AccentedLetters(prop: WordBool); safecall;
    function Get_SortBy: WdIndexSortBy; safecall;
    procedure Set_SortBy(prop: WdIndexSortBy); safecall;
    function Get_Filter: WdIndexFilter; safecall;
    procedure Set_Filter(prop: WdIndexFilter); safecall;
    procedure Delete; safecall;
    procedure Update; safecall;
    function Get_IndexLanguage: WdLanguageID; safecall;
    procedure Set_IndexLanguage(prop: WdLanguageID); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property HeadingSeparator: WdHeadingSeparator read Get_HeadingSeparator write Set_HeadingSeparator;
    property RightAlignPageNumbers: WordBool read Get_RightAlignPageNumbers write Set_RightAlignPageNumbers;
    property type_: WdIndexType read Get_type_ write Set_type_;
    property NumberOfColumns: Integer read Get_NumberOfColumns write Set_NumberOfColumns;
    property Range: WordRange read Get_Range;
    property TabLeader: WdTabLeader read Get_TabLeader write Set_TabLeader;
    property AccentedLetters: WordBool read Get_AccentedLetters write Set_AccentedLetters;
    property SortBy: WdIndexSortBy read Get_SortBy write Set_SortBy;
    property Filter: WdIndexFilter read Get_Filter write Set_Filter;
    property IndexLanguage: WdLanguageID read Get_IndexLanguage write Set_IndexLanguage;
  end;

// *********************************************************************//
// DispIntf:  IndexDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097D-0000-0000-C000-000000000046}
// *********************************************************************//
  IndexDisp = dispinterface
    ['{0002097D-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property HeadingSeparator: WdHeadingSeparator dispid 1;
    property RightAlignPageNumbers: WordBool dispid 2;
    property type_: WdIndexType dispid 3;
    property NumberOfColumns: Integer dispid 4;
    property Range: WordRange readonly dispid 5;
    property TabLeader: WdTabLeader dispid 6;
    property AccentedLetters: WordBool dispid 7;
    property SortBy: WdIndexSortBy dispid 8;
    property Filter: WdIndexFilter dispid 9;
    procedure Delete; dispid 100;
    procedure Update; dispid 102;
    property IndexLanguage: WdLanguageID dispid 10;
  end;

// *********************************************************************//
// Interface: AddIn
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097E-0000-0000-C000-000000000046}
// *********************************************************************//
  AddIn = interface(IDispatch)
    ['{0002097E-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Index: Integer; safecall;
    function Get_Path: WideString; safecall;
    function Get_Installed: WordBool; safecall;
    procedure Set_Installed(prop: WordBool); safecall;
    function Get_Compiled: WordBool; safecall;
    function Get_Autoload: WordBool; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Index: Integer read Get_Index;
    property Path: WideString read Get_Path;
    property Installed: WordBool read Get_Installed write Set_Installed;
    property Compiled: WordBool read Get_Compiled;
    property Autoload: WordBool read Get_Autoload;
  end;

// *********************************************************************//
// DispIntf:  AddInDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097E-0000-0000-C000-000000000046}
// *********************************************************************//
  AddInDisp = dispinterface
    ['{0002097E-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Index: Integer readonly dispid 1;
    property Path: WideString readonly dispid 3;
    property Installed: WordBool dispid 4;
    property Compiled: WordBool readonly dispid 5;
    property Autoload: WordBool readonly dispid 6;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: AddIns
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097F-0000-0000-C000-000000000046}
// *********************************************************************//
  AddIns = interface(IDispatch)
    ['{0002097F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): AddIn; safecall;
    function Add(const FileName: WideString; var Install: OleVariant): AddIn; safecall;
    procedure Unload(RemoveFromList: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  AddInsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002097F-0000-0000-C000-000000000046}
// *********************************************************************//
  AddInsDisp = dispinterface
    ['{0002097F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): AddIn; dispid 0;
    function Add(const FileName: WideString; var Install: OleVariant): AddIn; dispid 2;
    procedure Unload(RemoveFromList: WordBool); dispid 3;
  end;

// *********************************************************************//
// Interface: Revisions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020980-0000-0000-C000-000000000046}
// *********************************************************************//
  Revisions = interface(IDispatch)
    ['{00020980-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): Revision; safecall;
    procedure AcceptAll; safecall;
    procedure RejectAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  RevisionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020980-0000-0000-C000-000000000046}
// *********************************************************************//
  RevisionsDisp = dispinterface
    ['{00020980-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 5;
    function Item(Index: Integer): Revision; dispid 0;
    procedure AcceptAll; dispid 101;
    procedure RejectAll; dispid 102;
  end;

// *********************************************************************//
// Interface: Revision
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020981-0000-0000-C000-000000000046}
// *********************************************************************//
  Revision = interface(IDispatch)
    ['{00020981-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Author: WideString; safecall;
    function Get_Date: TDateTime; safecall;
    function Get_Range: WordRange; safecall;
    function Get_type_: WdRevisionType; safecall;
    function Get_Index: Integer; safecall;
    procedure Accept; safecall;
    procedure Reject; safecall;
    function Get_Style: Style; safecall;
    function Get_FormatDescription: WideString; safecall;
    function Get_MovedRange: WordRange; safecall;
    function Get_Cells: Cells; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Author: WideString read Get_Author;
    property Date: TDateTime read Get_Date;
    property Range: WordRange read Get_Range;
    property type_: WdRevisionType read Get_type_;
    property Index: Integer read Get_Index;
    property Style: Style read Get_Style;
    property FormatDescription: WideString read Get_FormatDescription;
    property MovedRange: WordRange read Get_MovedRange;
    property Cells: Cells read Get_Cells;
  end;

// *********************************************************************//
// DispIntf:  RevisionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020981-0000-0000-C000-000000000046}
// *********************************************************************//
  RevisionDisp = dispinterface
    ['{00020981-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Author: WideString readonly dispid 1;
    property Date: TDateTime readonly dispid 2;
    property Range: WordRange readonly dispid 3;
    property type_: WdRevisionType readonly dispid 4;
    property Index: Integer readonly dispid 5;
    procedure Accept; dispid 101;
    procedure Reject; dispid 102;
    property Style: Style readonly dispid 8;
    property FormatDescription: WideString readonly dispid 9;
    property MovedRange: WordRange readonly dispid 10;
    property Cells: Cells readonly dispid 11;
  end;

// *********************************************************************//
// Interface: Task
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020982-0000-0000-C000-000000000046}
// *********************************************************************//
  Task = interface(IDispatch)
    ['{00020982-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(prop: Integer); safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(prop: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(prop: Integer); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(prop: Integer); safecall;
    function Get_WindowState: WdWindowState; safecall;
    procedure Set_WindowState(prop: WdWindowState); safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    procedure Activate(var Wait: OleVariant); safecall;
    procedure Close; safecall;
    procedure Move(Left: Integer; Top: Integer); safecall;
    procedure Resize(Width: Integer; Height: Integer); safecall;
    procedure SendWindowMessage(Message: Integer; wParam: Integer; lParam: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property Visible: WordBool read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  TaskDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020982-0000-0000-C000-000000000046}
// *********************************************************************//
  TaskDisp = dispinterface
    ['{00020982-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Left: Integer dispid 1;
    property Top: Integer dispid 2;
    property Width: Integer dispid 3;
    property Height: Integer dispid 4;
    property WindowState: WdWindowState dispid 5;
    property Visible: WordBool dispid 6;
    procedure Activate(var Wait: OleVariant); dispid 10;
    procedure Close; dispid 11;
    procedure Move(Left: Integer; Top: Integer); dispid 12;
    procedure Resize(Width: Integer; Height: Integer); dispid 13;
    procedure SendWindowMessage(Message: Integer; wParam: Integer; lParam: Integer); dispid 14;
  end;

// *********************************************************************//
// Interface: Tasks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020983-0000-0000-C000-000000000046}
// *********************************************************************//
  Tasks = interface(IDispatch)
    ['{00020983-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): Task; safecall;
    function Exists(const Name: WideString): WordBool; safecall;
    procedure ExitWindows; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  TasksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020983-0000-0000-C000-000000000046}
// *********************************************************************//
  TasksDisp = dispinterface
    ['{00020983-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): Task; dispid 0;
    function Exists(const Name: WideString): WordBool; dispid 2;
    procedure ExitWindows; dispid 3;
  end;

// *********************************************************************//
// Interface: HeadersFooters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020984-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadersFooters = interface(IDispatch)
    ['{00020984-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: WdHeaderFooterIndex): HeaderFooter; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  HeadersFootersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020984-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadersFootersDisp = dispinterface
    ['{00020984-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(Index: WdHeaderFooterIndex): HeaderFooter; dispid 0;
  end;

// *********************************************************************//
// Interface: HeaderFooter
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020985-0000-0000-C000-000000000046}
// *********************************************************************//
  HeaderFooter = interface(IDispatch)
    ['{00020985-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Index: WdHeaderFooterIndex; safecall;
    function Get_IsHeader: WordBool; safecall;
    function Get_Exists: WordBool; safecall;
    procedure Set_Exists(prop: WordBool); safecall;
    function Get_PageNumbers: PageNumbers; safecall;
    function Get_LinkToPrevious: WordBool; safecall;
    procedure Set_LinkToPrevious(prop: WordBool); safecall;
    function Get_Shapes: Shapes; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Index: WdHeaderFooterIndex read Get_Index;
    property IsHeader: WordBool read Get_IsHeader;
    property Exists: WordBool read Get_Exists write Set_Exists;
    property PageNumbers: PageNumbers read Get_PageNumbers;
    property LinkToPrevious: WordBool read Get_LinkToPrevious write Set_LinkToPrevious;
    property Shapes: Shapes read Get_Shapes;
  end;

// *********************************************************************//
// DispIntf:  HeaderFooterDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020985-0000-0000-C000-000000000046}
// *********************************************************************//
  HeaderFooterDisp = dispinterface
    ['{00020985-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 0;
    property Index: WdHeaderFooterIndex readonly dispid 2;
    property IsHeader: WordBool readonly dispid 3;
    property Exists: WordBool dispid 4;
    property PageNumbers: PageNumbers readonly dispid 5;
    property LinkToPrevious: WordBool dispid 6;
    property Shapes: Shapes readonly dispid 7;
  end;

// *********************************************************************//
// Interface: PageNumbers
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020986-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumbers = interface(IDispatch)
    ['{00020986-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_NumberStyle: WdPageNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdPageNumberStyle); safecall;
    function Get_IncludeChapterNumber: WordBool; safecall;
    procedure Set_IncludeChapterNumber(prop: WordBool); safecall;
    function Get_HeadingLevelForChapter: Integer; safecall;
    procedure Set_HeadingLevelForChapter(prop: Integer); safecall;
    function Get_ChapterPageSeparator: WdSeparatorType; safecall;
    procedure Set_ChapterPageSeparator(prop: WdSeparatorType); safecall;
    function Get_RestartNumberingAtSection: WordBool; safecall;
    procedure Set_RestartNumberingAtSection(prop: WordBool); safecall;
    function Get_StartingNumber: Integer; safecall;
    procedure Set_StartingNumber(prop: Integer); safecall;
    function Get_ShowFirstPageNumber: WordBool; safecall;
    procedure Set_ShowFirstPageNumber(prop: WordBool); safecall;
    function Item(Index: Integer): PageNumber; safecall;
    function Add(var PageNumberAlignment: OleVariant; var FirstPage: OleVariant): PageNumber; safecall;
    function Get_DoubleQuote: WordBool; safecall;
    procedure Set_DoubleQuote(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property NumberStyle: WdPageNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property IncludeChapterNumber: WordBool read Get_IncludeChapterNumber write Set_IncludeChapterNumber;
    property HeadingLevelForChapter: Integer read Get_HeadingLevelForChapter write Set_HeadingLevelForChapter;
    property ChapterPageSeparator: WdSeparatorType read Get_ChapterPageSeparator write Set_ChapterPageSeparator;
    property RestartNumberingAtSection: WordBool read Get_RestartNumberingAtSection write Set_RestartNumberingAtSection;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property ShowFirstPageNumber: WordBool read Get_ShowFirstPageNumber write Set_ShowFirstPageNumber;
    property DoubleQuote: WordBool read Get_DoubleQuote write Set_DoubleQuote;
  end;

// *********************************************************************//
// DispIntf:  PageNumbersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020986-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumbersDisp = dispinterface
    ['{00020986-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property NumberStyle: WdPageNumberStyle dispid 2;
    property IncludeChapterNumber: WordBool dispid 3;
    property HeadingLevelForChapter: Integer dispid 4;
    property ChapterPageSeparator: WdSeparatorType dispid 5;
    property RestartNumberingAtSection: WordBool dispid 6;
    property StartingNumber: Integer dispid 7;
    property ShowFirstPageNumber: WordBool dispid 8;
    function Item(Index: Integer): PageNumber; dispid 0;
    function Add(var PageNumberAlignment: OleVariant; var FirstPage: OleVariant): PageNumber; dispid 101;
    property DoubleQuote: WordBool dispid 10;
  end;

// *********************************************************************//
// Interface: PageNumber
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020987-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumber = interface(IDispatch)
    ['{00020987-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Alignment: WdPageNumberAlignment; safecall;
    procedure Set_Alignment(prop: WdPageNumberAlignment); safecall;
    procedure Select; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Alignment: WdPageNumberAlignment read Get_Alignment write Set_Alignment;
  end;

// *********************************************************************//
// DispIntf:  PageNumberDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020987-0000-0000-C000-000000000046}
// *********************************************************************//
  PageNumberDisp = dispinterface
    ['{00020987-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Alignment: WdPageNumberAlignment dispid 3;
    procedure Select; dispid 65535;
    procedure Copy; dispid 101;
    procedure Cut; dispid 102;
    procedure Delete; dispid 103;
  end;

// *********************************************************************//
// Interface: Subdocuments
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020988-0000-0000-C000-000000000046}
// *********************************************************************//
  Subdocuments = interface(IDispatch)
    ['{00020988-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Expanded: WordBool; safecall;
    procedure Set_Expanded(prop: WordBool); safecall;
    function Item(Index: Integer): Subdocument; safecall;
    function AddFromFile(var Name: OleVariant; var ConfirmConversions: OleVariant; 
                         var ReadOnly: OleVariant; var PasswordDocument: OleVariant; 
                         var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                         var WritePasswordDocument: OleVariant; 
                         var WritePasswordTemplate: OleVariant): Subdocument; safecall;
    function AddFromRange(const Range: WordRange): Subdocument; safecall;
    procedure Merge(var FirstSubdocument: OleVariant; var LastSubdocument: OleVariant); safecall;
    procedure Delete; safecall;
    procedure Select; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Expanded: WordBool read Get_Expanded write Set_Expanded;
  end;

// *********************************************************************//
// DispIntf:  SubdocumentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020988-0000-0000-C000-000000000046}
// *********************************************************************//
  SubdocumentsDisp = dispinterface
    ['{00020988-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    property Expanded: WordBool dispid 2;
    function Item(Index: Integer): Subdocument; dispid 0;
    function AddFromFile(var Name: OleVariant; var ConfirmConversions: OleVariant; 
                         var ReadOnly: OleVariant; var PasswordDocument: OleVariant; 
                         var PasswordTemplate: OleVariant; var Revert: OleVariant; 
                         var WritePasswordDocument: OleVariant; 
                         var WritePasswordTemplate: OleVariant): Subdocument; dispid 100;
    function AddFromRange(const Range: WordRange): Subdocument; dispid 101;
    procedure Merge(var FirstSubdocument: OleVariant; var LastSubdocument: OleVariant); dispid 102;
    procedure Delete; dispid 103;
    procedure Select; dispid 104;
  end;

// *********************************************************************//
// Interface: Subdocument
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020989-0000-0000-C000-000000000046}
// *********************************************************************//
  Subdocument = interface(IDispatch)
    ['{00020989-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Locked: WordBool; safecall;
    procedure Set_Locked(prop: WordBool); safecall;
    function Get_Range: WordRange; safecall;
    function Get_Name: WideString; safecall;
    function Get_Path: WideString; safecall;
    function Get_HasFile: WordBool; safecall;
    function Get_Level: Integer; safecall;
    procedure Delete; safecall;
    procedure Split(const Range: WordRange); safecall;
    function Open: WordDocument; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Locked: WordBool read Get_Locked write Set_Locked;
    property Range: WordRange read Get_Range;
    property Name: WideString read Get_Name;
    property Path: WideString read Get_Path;
    property HasFile: WordBool read Get_HasFile;
    property Level: Integer read Get_Level;
  end;

// *********************************************************************//
// DispIntf:  SubdocumentDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020989-0000-0000-C000-000000000046}
// *********************************************************************//
  SubdocumentDisp = dispinterface
    ['{00020989-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Locked: WordBool dispid 1;
    property Range: WordRange readonly dispid 2;
    property Name: WideString readonly dispid 3;
    property Path: WideString readonly dispid 4;
    property HasFile: WordBool readonly dispid 5;
    property Level: Integer readonly dispid 6;
    procedure Delete; dispid 100;
    procedure Split(const Range: WordRange); dispid 101;
    function Open: WordDocument; dispid 102;
  end;

// *********************************************************************//
// Interface: HeadingStyles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098A-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStyles = interface(IDispatch)
    ['{0002098A-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): HeadingStyle; safecall;
    function Add(var Style: OleVariant; Level: Smallint): HeadingStyle; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  HeadingStylesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098A-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStylesDisp = dispinterface
    ['{0002098A-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(Index: Integer): HeadingStyle; dispid 0;
    function Add(var Style: OleVariant; Level: Smallint): HeadingStyle; dispid 100;
  end;

// *********************************************************************//
// Interface: HeadingStyle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098B-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStyle = interface(IDispatch)
    ['{0002098B-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Style: OleVariant; safecall;
    procedure Set_Style(var prop: OleVariant); safecall;
    function Get_Level: Smallint; safecall;
    procedure Set_Level(prop: Smallint); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Level: Smallint read Get_Level write Set_Level;
  end;

// *********************************************************************//
// DispIntf:  HeadingStyleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098B-0000-0000-C000-000000000046}
// *********************************************************************//
  HeadingStyleDisp = dispinterface
    ['{0002098B-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Style: OleVariant; dispid 0;
    property Level: Smallint dispid 2;
    procedure Delete; dispid 100;
  end;

// *********************************************************************//
// Interface: StoryRanges
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098C-0000-0000-C000-000000000046}
// *********************************************************************//
  StoryRanges = interface(IDispatch)
    ['{0002098C-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: WdStoryType): WordRange; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  StoryRangesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098C-0000-0000-C000-000000000046}
// *********************************************************************//
  StoryRangesDisp = dispinterface
    ['{0002098C-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: WdStoryType): WordRange; dispid 0;
  end;

// *********************************************************************//
// Interface: ListLevel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098D-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevel = interface(IDispatch)
    ['{0002098D-0000-0000-C000-000000000046}']
    function Get_Index: Integer; safecall;
    function Get_NumberFormat: WideString; safecall;
    procedure Set_NumberFormat(const prop: WideString); safecall;
    function Get_TrailingCharacter: WdTrailingCharacter; safecall;
    procedure Set_TrailingCharacter(prop: WdTrailingCharacter); safecall;
    function Get_NumberStyle: WdListNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdListNumberStyle); safecall;
    function Get_NumberPosition: Single; safecall;
    procedure Set_NumberPosition(prop: Single); safecall;
    function Get_Alignment: WdListLevelAlignment; safecall;
    procedure Set_Alignment(prop: WdListLevelAlignment); safecall;
    function Get_TextPosition: Single; safecall;
    procedure Set_TextPosition(prop: Single); safecall;
    function Get_TabPosition: Single; safecall;
    procedure Set_TabPosition(prop: Single); safecall;
    function Get_ResetOnHigherOld: WordBool; safecall;
    procedure Set_ResetOnHigherOld(prop: WordBool); safecall;
    function Get_StartAt: Integer; safecall;
    procedure Set_StartAt(prop: Integer); safecall;
    function Get_LinkedStyle: WideString; safecall;
    procedure Set_LinkedStyle(const prop: WideString); safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ResetOnHigher: Integer; safecall;
    procedure Set_ResetOnHigher(prop: Integer); safecall;
    function Get_PictureBullet: InlineShape; safecall;
    function ApplyPictureBullet(const FileName: WideString): InlineShape; safecall;
    property Index: Integer read Get_Index;
    property NumberFormat: WideString read Get_NumberFormat write Set_NumberFormat;
    property TrailingCharacter: WdTrailingCharacter read Get_TrailingCharacter write Set_TrailingCharacter;
    property NumberStyle: WdListNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property NumberPosition: Single read Get_NumberPosition write Set_NumberPosition;
    property Alignment: WdListLevelAlignment read Get_Alignment write Set_Alignment;
    property TextPosition: Single read Get_TextPosition write Set_TextPosition;
    property TabPosition: Single read Get_TabPosition write Set_TabPosition;
    property ResetOnHigherOld: WordBool read Get_ResetOnHigherOld write Set_ResetOnHigherOld;
    property StartAt: Integer read Get_StartAt write Set_StartAt;
    property LinkedStyle: WideString read Get_LinkedStyle write Set_LinkedStyle;
    property Font: WordFont read Get_Font write Set_Font;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ResetOnHigher: Integer read Get_ResetOnHigher write Set_ResetOnHigher;
    property PictureBullet: InlineShape read Get_PictureBullet;
  end;

// *********************************************************************//
// DispIntf:  ListLevelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098D-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevelDisp = dispinterface
    ['{0002098D-0000-0000-C000-000000000046}']
    property Index: Integer readonly dispid 1;
    property NumberFormat: WideString dispid 2;
    property TrailingCharacter: WdTrailingCharacter dispid 3;
    property NumberStyle: WdListNumberStyle dispid 4;
    property NumberPosition: Single dispid 5;
    property Alignment: WdListLevelAlignment dispid 6;
    property TextPosition: Single dispid 7;
    property TabPosition: Single dispid 8;
    property ResetOnHigherOld: WordBool dispid 9;
    property StartAt: Integer dispid 10;
    property LinkedStyle: WideString dispid 11;
    property Font: WordFont dispid 12;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ResetOnHigher: Integer dispid 13;
    property PictureBullet: InlineShape readonly dispid 14;
    function ApplyPictureBullet(const FileName: WideString): InlineShape; dispid 0;
  end;

// *********************************************************************//
// Interface: ListLevels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098E-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevels = interface(IDispatch)
    ['{0002098E-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): ListLevel; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListLevelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098E-0000-0000-C000-000000000046}
// *********************************************************************//
  ListLevelsDisp = dispinterface
    ['{0002098E-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): ListLevel; dispid 0;
  end;

// *********************************************************************//
// Interface: ListTemplate
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098F-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplate = interface(IDispatch)
    ['{0002098F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_OutlineNumbered: WordBool; safecall;
    procedure Set_OutlineNumbered(prop: WordBool); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_ListLevels: ListLevels; safecall;
    function Convert(var Level: OleVariant): ListTemplate; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OutlineNumbered: WordBool read Get_OutlineNumbered write Set_OutlineNumbered;
    property Name: WideString read Get_Name write Set_Name;
    property ListLevels: ListLevels read Get_ListLevels;
  end;

// *********************************************************************//
// DispIntf:  ListTemplateDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002098F-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplateDisp = dispinterface
    ['{0002098F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property OutlineNumbered: WordBool dispid 1;
    property Name: WideString dispid 3;
    property ListLevels: ListLevels readonly dispid 2;
    function Convert(var Level: OleVariant): ListTemplate; dispid 101;
  end;

// *********************************************************************//
// Interface: ListTemplates
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020990-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplates = interface(IDispatch)
    ['{00020990-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): ListTemplate; safecall;
    function Add(var OutlineNumbered: OleVariant; var Name: OleVariant): ListTemplate; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListTemplatesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020990-0000-0000-C000-000000000046}
// *********************************************************************//
  ListTemplatesDisp = dispinterface
    ['{00020990-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): ListTemplate; dispid 0;
    function Add(var OutlineNumbered: OleVariant; var Name: OleVariant): ListTemplate; dispid 100;
  end;

// *********************************************************************//
// Interface: ListParagraphs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020991-0000-0000-C000-000000000046}
// *********************************************************************//
  ListParagraphs = interface(IDispatch)
    ['{00020991-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Paragraph; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListParagraphsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020991-0000-0000-C000-000000000046}
// *********************************************************************//
  ListParagraphsDisp = dispinterface
    ['{00020991-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Paragraph; dispid 0;
  end;

// *********************************************************************//
// Interface: List
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020992-0000-0000-C000-000000000046}
// *********************************************************************//
  List = interface(IDispatch)
    ['{00020992-0000-0000-C000-000000000046}']
    function Get_Range: WordRange; safecall;
    function Get_ListParagraphs: ListParagraphs; safecall;
    function Get_SingleListTemplate: WordBool; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure ConvertNumbersToText(var NumberType: OleVariant); safecall;
    procedure RemoveNumbers(var NumberType: OleVariant); safecall;
    function CountNumberedItems(var NumberType: OleVariant; var Level: OleVariant): Integer; safecall;
    procedure ApplyListTemplateOld(const ListTemplate: ListTemplate; 
                                   var ContinuePreviousList: OleVariant); safecall;
    function CanContinuePreviousList(const ListTemplate: ListTemplate): WdContinue; safecall;
    procedure ApplyListTemplate(const ListTemplate: ListTemplate; 
                                var ContinuePreviousList: OleVariant; 
                                var DefaultListBehavior: OleVariant); safecall;
    function Get_StyleName: WideString; safecall;
    procedure ApplyListTemplateWithLevel(const ListTemplate: ListTemplate; 
                                         var ContinuePreviousList: OleVariant; 
                                         var DefaultListBehavior: OleVariant; 
                                         var ApplyLevel: OleVariant); safecall;
    property Range: WordRange read Get_Range;
    property ListParagraphs: ListParagraphs read Get_ListParagraphs;
    property SingleListTemplate: WordBool read Get_SingleListTemplate;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property StyleName: WideString read Get_StyleName;
  end;

// *********************************************************************//
// DispIntf:  ListDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020992-0000-0000-C000-000000000046}
// *********************************************************************//
  ListDisp = dispinterface
    ['{00020992-0000-0000-C000-000000000046}']
    property Range: WordRange readonly dispid 1;
    property ListParagraphs: ListParagraphs readonly dispid 2;
    property SingleListTemplate: WordBool readonly dispid 3;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure ConvertNumbersToText(var NumberType: OleVariant); dispid 101;
    procedure RemoveNumbers(var NumberType: OleVariant); dispid 102;
    function CountNumberedItems(var NumberType: OleVariant; var Level: OleVariant): Integer; dispid 103;
    procedure ApplyListTemplateOld(const ListTemplate: ListTemplate; 
                                   var ContinuePreviousList: OleVariant); dispid 104;
    function CanContinuePreviousList(const ListTemplate: ListTemplate): WdContinue; dispid 105;
    procedure ApplyListTemplate(const ListTemplate: ListTemplate; 
                                var ContinuePreviousList: OleVariant; 
                                var DefaultListBehavior: OleVariant); dispid 106;
    property StyleName: WideString readonly dispid 4;
    procedure ApplyListTemplateWithLevel(const ListTemplate: ListTemplate; 
                                         var ContinuePreviousList: OleVariant; 
                                         var DefaultListBehavior: OleVariant; 
                                         var ApplyLevel: OleVariant); dispid 107;
  end;

// *********************************************************************//
// Interface: Lists
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020993-0000-0000-C000-000000000046}
// *********************************************************************//
  Lists = interface(IDispatch)
    ['{00020993-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): List; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020993-0000-0000-C000-000000000046}
// *********************************************************************//
  ListsDisp = dispinterface
    ['{00020993-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): List; dispid 0;
  end;

// *********************************************************************//
// Interface: ListGallery
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020994-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGallery = interface(IDispatch)
    ['{00020994-0000-0000-C000-000000000046}']
    function Get_ListTemplates: ListTemplates; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Modified(Index: Integer): WordBool; safecall;
    procedure Reset(Index: Integer); safecall;
    property ListTemplates: ListTemplates read Get_ListTemplates;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Modified[Index: Integer]: WordBool read Get_Modified;
  end;

// *********************************************************************//
// DispIntf:  ListGalleryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020994-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGalleryDisp = dispinterface
    ['{00020994-0000-0000-C000-000000000046}']
    property ListTemplates: ListTemplates readonly dispid 1;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Modified[Index: Integer]: WordBool readonly dispid 101;
    procedure Reset(Index: Integer); dispid 100;
  end;

// *********************************************************************//
// Interface: ListGalleries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020995-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGalleries = interface(IDispatch)
    ['{00020995-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: WdListGalleryType): ListGallery; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ListGalleriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020995-0000-0000-C000-000000000046}
// *********************************************************************//
  ListGalleriesDisp = dispinterface
    ['{00020995-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: WdListGalleryType): ListGallery; dispid 0;
  end;

// *********************************************************************//
// Interface: KeyBindings
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020996-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBindings = interface(IDispatch)
    ['{00020996-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Context: IDispatch; safecall;
    function Item(Index: Integer): KeyBinding; safecall;
    function Add(KeyCategory: WdKeyCategory; const Command: WideString; KeyCode: Integer; 
                 var KeyCode2: OleVariant; var CommandParameter: OleVariant): KeyBinding; safecall;
    procedure ClearAll; safecall;
    function Key(KeyCode: Integer; var KeyCode2: OleVariant): KeyBinding; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Context: IDispatch read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  KeyBindingsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020996-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBindingsDisp = dispinterface
    ['{00020996-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Context: IDispatch readonly dispid 10;
    function Item(Index: Integer): KeyBinding; dispid 0;
    function Add(KeyCategory: WdKeyCategory; const Command: WideString; KeyCode: Integer; 
                 var KeyCode2: OleVariant; var CommandParameter: OleVariant): KeyBinding; dispid 101;
    procedure ClearAll; dispid 102;
    function Key(KeyCode: Integer; var KeyCode2: OleVariant): KeyBinding; dispid 110;
  end;

// *********************************************************************//
// Interface: KeysBoundTo
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020997-0000-0000-C000-000000000046}
// *********************************************************************//
  KeysBoundTo = interface(IDispatch)
    ['{00020997-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_KeyCategory: WdKeyCategory; safecall;
    function Get_Command: WideString; safecall;
    function Get_CommandParameter: WideString; safecall;
    function Get_Context: IDispatch; safecall;
    function Item(Index: Integer): KeyBinding; safecall;
    function Key(KeyCode: Integer; var KeyCode2: OleVariant): KeyBinding; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property KeyCategory: WdKeyCategory read Get_KeyCategory;
    property Command: WideString read Get_Command;
    property CommandParameter: WideString read Get_CommandParameter;
    property Context: IDispatch read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  KeysBoundToDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020997-0000-0000-C000-000000000046}
// *********************************************************************//
  KeysBoundToDisp = dispinterface
    ['{00020997-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property KeyCategory: WdKeyCategory readonly dispid 3;
    property Command: WideString readonly dispid 4;
    property CommandParameter: WideString readonly dispid 5;
    property Context: IDispatch readonly dispid 10;
    function Item(Index: Integer): KeyBinding; dispid 0;
    function Key(KeyCode: Integer; var KeyCode2: OleVariant): KeyBinding; dispid 1;
  end;

// *********************************************************************//
// Interface: KeyBinding
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020998-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBinding = interface(IDispatch)
    ['{00020998-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Command: WideString; safecall;
    function Get_KeyString: WideString; safecall;
    function Get_Protected_: WordBool; safecall;
    function Get_KeyCategory: WdKeyCategory; safecall;
    function Get_KeyCode: Integer; safecall;
    function Get_KeyCode2: Integer; safecall;
    function Get_CommandParameter: WideString; safecall;
    function Get_Context: IDispatch; safecall;
    procedure Clear; safecall;
    procedure Disable; safecall;
    procedure Execute; safecall;
    procedure Rebind(KeyCategory: WdKeyCategory; const Command: WideString; 
                     var CommandParameter: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Command: WideString read Get_Command;
    property KeyString: WideString read Get_KeyString;
    property Protected_: WordBool read Get_Protected_;
    property KeyCategory: WdKeyCategory read Get_KeyCategory;
    property KeyCode: Integer read Get_KeyCode;
    property KeyCode2: Integer read Get_KeyCode2;
    property CommandParameter: WideString read Get_CommandParameter;
    property Context: IDispatch read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  KeyBindingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020998-0000-0000-C000-000000000046}
// *********************************************************************//
  KeyBindingDisp = dispinterface
    ['{00020998-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Command: WideString readonly dispid 1;
    property KeyString: WideString readonly dispid 2;
    property Protected_: WordBool readonly dispid 3;
    property KeyCategory: WdKeyCategory readonly dispid 4;
    property KeyCode: Integer readonly dispid 6;
    property KeyCode2: Integer readonly dispid 7;
    property CommandParameter: WideString readonly dispid 8;
    property Context: IDispatch readonly dispid 10;
    procedure Clear; dispid 101;
    procedure Disable; dispid 102;
    procedure Execute; dispid 103;
    procedure Rebind(KeyCategory: WdKeyCategory; const Command: WideString; 
                     var CommandParameter: OleVariant); dispid 104;
  end;

// *********************************************************************//
// Interface: FileConverter
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020999-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConverter = interface(IDispatch)
    ['{00020999-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_FormatName: WideString; safecall;
    function Get__className: WideString; safecall;
    function Get_SaveFormat: Integer; safecall;
    function Get_OpenFormat: Integer; safecall;
    function Get_CanSave: WordBool; safecall;
    function Get_CanOpen: WordBool; safecall;
    function Get_Path: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_Extensions: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property FormatName: WideString read Get_FormatName;
    property _className: WideString read Get__className;
    property SaveFormat: Integer read Get_SaveFormat;
    property OpenFormat: Integer read Get_OpenFormat;
    property CanSave: WordBool read Get_CanSave;
    property CanOpen: WordBool read Get_CanOpen;
    property Path: WideString read Get_Path;
    property Name: WideString read Get_Name;
    property Extensions: WideString read Get_Extensions;
  end;

// *********************************************************************//
// DispIntf:  FileConverterDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020999-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConverterDisp = dispinterface
    ['{00020999-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property FormatName: WideString readonly dispid 0;
    property _className: WideString readonly dispid 1;
    property SaveFormat: Integer readonly dispid 2;
    property OpenFormat: Integer readonly dispid 3;
    property CanSave: WordBool readonly dispid 4;
    property CanOpen: WordBool readonly dispid 5;
    property Path: WideString readonly dispid 6;
    property Name: WideString readonly dispid 7;
    property Extensions: WideString readonly dispid 8;
  end;

// *********************************************************************//
// Interface: FileConverters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099A-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConverters = interface(IDispatch)
    ['{0002099A-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_ConvertMacWordChevrons: WdChevronConvertRule; safecall;
    procedure Set_ConvertMacWordChevrons(prop: WdChevronConvertRule); safecall;
    function Item(var Index: OleVariant): FileConverter; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property ConvertMacWordChevrons: WdChevronConvertRule read Get_ConvertMacWordChevrons write Set_ConvertMacWordChevrons;
  end;

// *********************************************************************//
// DispIntf:  FileConvertersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099A-0000-0000-C000-000000000046}
// *********************************************************************//
  FileConvertersDisp = dispinterface
    ['{0002099A-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    property ConvertMacWordChevrons: WdChevronConvertRule dispid 2;
    function Item(var Index: OleVariant): FileConverter; dispid 0;
  end;

// *********************************************************************//
// Interface: SynonymInfo
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099B-0000-0000-C000-000000000046}
// *********************************************************************//
  SynonymInfo = interface(IDispatch)
    ['{0002099B-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Word: WideString; safecall;
    function Get_Found: WordBool; safecall;
    function Get_MeaningCount: Integer; safecall;
    function Get_MeaningList: OleVariant; safecall;
    function Get_PartOfSpeechList: OleVariant; safecall;
    function Get_SynonymList(var Meaning: OleVariant): OleVariant; safecall;
    function Get_AntonymList: OleVariant; safecall;
    function Get_RelatedExpressionList: OleVariant; safecall;
    function Get_RelatedWordList: OleVariant; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Word: WideString read Get_Word;
    property Found: WordBool read Get_Found;
    property MeaningCount: Integer read Get_MeaningCount;
    property MeaningList: OleVariant read Get_MeaningList;
    property PartOfSpeechList: OleVariant read Get_PartOfSpeechList;
    property SynonymList[var Meaning: OleVariant]: OleVariant read Get_SynonymList;
    property AntonymList: OleVariant read Get_AntonymList;
    property RelatedExpressionList: OleVariant read Get_RelatedExpressionList;
    property RelatedWordList: OleVariant read Get_RelatedWordList;
  end;

// *********************************************************************//
// DispIntf:  SynonymInfoDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099B-0000-0000-C000-000000000046}
// *********************************************************************//
  SynonymInfoDisp = dispinterface
    ['{0002099B-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Word: WideString readonly dispid 1;
    property Found: WordBool readonly dispid 2;
    property MeaningCount: Integer readonly dispid 3;
    property MeaningList: OleVariant readonly dispid 4;
    property PartOfSpeechList: OleVariant readonly dispid 5;
    property SynonymList[var Meaning: OleVariant]: OleVariant readonly dispid 7;
    property AntonymList: OleVariant readonly dispid 8;
    property RelatedExpressionList: OleVariant readonly dispid 9;
    property RelatedWordList: OleVariant readonly dispid 10;
  end;

// *********************************************************************//
// Interface: Hyperlinks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099C-0000-0000-C000-000000000046}
// *********************************************************************//
  Hyperlinks = interface(IDispatch)
    ['{0002099C-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(var Index: OleVariant): Hyperlink; safecall;
    function _Add(const Anchor: IDispatch; var Address: OleVariant; var SubAddress: OleVariant): Hyperlink; safecall;
    function Add(const Anchor: IDispatch; var Address: OleVariant; var SubAddress: OleVariant; 
                 var ScreenTip: OleVariant; var TextToDisplay: OleVariant; var Target: OleVariant): Hyperlink; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  HyperlinksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099C-0000-0000-C000-000000000046}
// *********************************************************************//
  HyperlinksDisp = dispinterface
    ['{0002099C-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(var Index: OleVariant): Hyperlink; dispid 0;
    function _Add(const Anchor: IDispatch; var Address: OleVariant; var SubAddress: OleVariant): Hyperlink; dispid 100;
    function Add(const Anchor: IDispatch; var Address: OleVariant; var SubAddress: OleVariant; 
                 var ScreenTip: OleVariant; var TextToDisplay: OleVariant; var Target: OleVariant): Hyperlink; dispid 101;
  end;

// *********************************************************************//
// Interface: Hyperlink
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099D-0000-0000-C000-000000000046}
// *********************************************************************//
  Hyperlink = interface(IDispatch)
    ['{0002099D-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_AddressOld: WideString; safecall;
    function Get_type_: MsoHyperlinkType; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Shape: Shape; safecall;
    function Get_SubAddressOld: WideString; safecall;
    function Get_ExtraInfoRequired: WordBool; safecall;
    procedure Delete; safecall;
    procedure Follow(var NewWindow: OleVariant; var AddHistory: OleVariant; 
                     var ExtraInfo: OleVariant; var Method: OleVariant; var HeaderInfo: OleVariant); safecall;
    procedure AddToFavorites; safecall;
    procedure CreateNewDocument(const FileName: WideString; EditNow: WordBool; Overwrite: WordBool); safecall;
    function Get_Address: WideString; safecall;
    procedure Set_Address(const prop: WideString); safecall;
    function Get_SubAddress: WideString; safecall;
    procedure Set_SubAddress(const prop: WideString); safecall;
    function Get_EmailSubject: WideString; safecall;
    procedure Set_EmailSubject(const prop: WideString); safecall;
    function Get_ScreenTip: WideString; safecall;
    procedure Set_ScreenTip(const prop: WideString); safecall;
    function Get_TextToDisplay: WideString; safecall;
    procedure Set_TextToDisplay(const prop: WideString); safecall;
    function Get_Target: WideString; safecall;
    procedure Set_Target(const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property AddressOld: WideString read Get_AddressOld;
    property type_: MsoHyperlinkType read Get_type_;
    property Range: WordRange read Get_Range;
    property Shape: Shape read Get_Shape;
    property SubAddressOld: WideString read Get_SubAddressOld;
    property ExtraInfoRequired: WordBool read Get_ExtraInfoRequired;
    property Address: WideString read Get_Address write Set_Address;
    property SubAddress: WideString read Get_SubAddress write Set_SubAddress;
    property EmailSubject: WideString read Get_EmailSubject write Set_EmailSubject;
    property ScreenTip: WideString read Get_ScreenTip write Set_ScreenTip;
    property TextToDisplay: WideString read Get_TextToDisplay write Set_TextToDisplay;
    property Target: WideString read Get_Target write Set_Target;
  end;

// *********************************************************************//
// DispIntf:  HyperlinkDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099D-0000-0000-C000-000000000046}
// *********************************************************************//
  HyperlinkDisp = dispinterface
    ['{0002099D-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 1003;
    property AddressOld: WideString readonly dispid 1004;
    property type_: MsoHyperlinkType readonly dispid 1005;
    property Range: WordRange readonly dispid 1006;
    property Shape: Shape readonly dispid 1007;
    property SubAddressOld: WideString readonly dispid 1008;
    property ExtraInfoRequired: WordBool readonly dispid 1009;
    procedure Delete; dispid 103;
    procedure Follow(var NewWindow: OleVariant; var AddHistory: OleVariant; 
                     var ExtraInfo: OleVariant; var Method: OleVariant; var HeaderInfo: OleVariant); dispid 104;
    procedure AddToFavorites; dispid 105;
    procedure CreateNewDocument(const FileName: WideString; EditNow: WordBool; Overwrite: WordBool); dispid 106;
    property Address: WideString dispid 1100;
    property SubAddress: WideString dispid 1101;
    property EmailSubject: WideString dispid 1010;
    property ScreenTip: WideString dispid 1011;
    property TextToDisplay: WideString dispid 1012;
    property Target: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: Shapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099F-0000-0000-C000-000000000046}
// *********************************************************************//
  Shapes = interface(IDispatch)
    ['{0002099F-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(var Index: OleVariant): Shape; safecall;
    function AddCallout(Type_: MsoCalloutType; Left: Single; Top: Single; Width: Single; 
                        Height: Single; var Anchor: OleVariant): Shape; safecall;
    function AddConnector(Type_: MsoConnectorType; BeginX: Single; BeginY: Single; EndX: Single; 
                          EndY: Single): Shape; safecall;
    function AddCurve(var SafeArrayOfPoints: OleVariant; var Anchor: OleVariant): Shape; safecall;
    function AddLabel(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                      Height: Single; var Anchor: OleVariant): Shape; safecall;
    function AddLine(BeginX: Single; BeginY: Single; EndX: Single; EndY: Single; 
                     var Anchor: OleVariant): Shape; safecall;
    function AddPicture(const FileName: WideString; var LinkToFile: OleVariant; 
                        var SaveWithDocument: OleVariant; var Left: OleVariant; 
                        var Top: OleVariant; var Width: OleVariant; var Height: OleVariant; 
                        var Anchor: OleVariant): Shape; safecall;
    function AddPolyline(var SafeArrayOfPoints: OleVariant; var Anchor: OleVariant): Shape; safecall;
    function AddShape(Type_: Integer; Left: Single; Top: Single; Width: Single; Height: Single; 
                      var Anchor: OleVariant): Shape; safecall;
    function AddTextEffect(PresetTextEffect: MsoPresetTextEffect; const Text: WideString; 
                           const FontName: WideString; FontSize: Single; FontBold: MsoTriState; 
                           FontItalic: MsoTriState; Left: Single; Top: Single; 
                           var Anchor: OleVariant): Shape; safecall;
    function AddTextbox(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                        Height: Single; var Anchor: OleVariant): Shape; safecall;
    function BuildFreeform(EditingType: MsoEditingType; X1: Single; Y1: Single): FreeformBuilder; safecall;
    function Range(var Index: OleVariant): ShapeRange; safecall;
    procedure SelectAll; safecall;
    function AddOLEObject(var ClassType: OleVariant; var FileName: OleVariant; 
                          var LinkToFile: OleVariant; var DisplayAsIcon: OleVariant; 
                          var IconFileName: OleVariant; var IconIndex: OleVariant; 
                          var IconLabel: OleVariant; var Left: OleVariant; var Top: OleVariant; 
                          var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; safecall;
    function AddOLEControl(var ClassType: OleVariant; var Left: OleVariant; var Top: OleVariant; 
                           var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; safecall;
    function AddDiagram(Type_: MsoDiagramType; Left: Single; Top: Single; Width: Single; 
                        Height: Single; var Anchor: OleVariant): Shape; safecall;
    function AddCanvas(Left: Single; Top: Single; Width: Single; Height: Single; 
                       var Anchor: OleVariant): Shape; safecall;
    function AddChart(Type_: XlChartType; var Left: OleVariant; var Top: OleVariant; 
                      var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; safecall;
    function AddSmartArt(const Layout: SmartArtLayout; var Left: OleVariant; var Top: OleVariant; 
                         var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  ShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0002099F-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapesDisp = dispinterface
    ['{0002099F-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 8000;
    property Creator: Integer readonly dispid 8001;
    property Parent: IDispatch readonly dispid 1;
    property Count: Integer readonly dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(var Index: OleVariant): Shape; dispid 0;
    function AddCallout(Type_: MsoCalloutType; Left: Single; Top: Single; Width: Single; 
                        Height: Single; var Anchor: OleVariant): Shape; dispid 10;
    function AddConnector(Type_: MsoConnectorType; BeginX: Single; BeginY: Single; EndX: Single; 
                          EndY: Single): Shape; dispid 11;
    function AddCurve(var SafeArrayOfPoints: OleVariant; var Anchor: OleVariant): Shape; dispid 12;
    function AddLabel(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                      Height: Single; var Anchor: OleVariant): Shape; dispid 13;
    function AddLine(BeginX: Single; BeginY: Single; EndX: Single; EndY: Single; 
                     var Anchor: OleVariant): Shape; dispid 14;
    function AddPicture(const FileName: WideString; var LinkToFile: OleVariant; 
                        var SaveWithDocument: OleVariant; var Left: OleVariant; 
                        var Top: OleVariant; var Width: OleVariant; var Height: OleVariant; 
                        var Anchor: OleVariant): Shape; dispid 15;
    function AddPolyline(var SafeArrayOfPoints: OleVariant; var Anchor: OleVariant): Shape; dispid 16;
    function AddShape(Type_: Integer; Left: Single; Top: Single; Width: Single; Height: Single; 
                      var Anchor: OleVariant): Shape; dispid 17;
    function AddTextEffect(PresetTextEffect: MsoPresetTextEffect; const Text: WideString; 
                           const FontName: WideString; FontSize: Single; FontBold: MsoTriState; 
                           FontItalic: MsoTriState; Left: Single; Top: Single; 
                           var Anchor: OleVariant): Shape; dispid 18;
    function AddTextbox(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                        Height: Single; var Anchor: OleVariant): Shape; dispid 19;
    function BuildFreeform(EditingType: MsoEditingType; X1: Single; Y1: Single): FreeformBuilder; dispid 20;
    function Range(var Index: OleVariant): ShapeRange; dispid 21;
    procedure SelectAll; dispid 22;
    function AddOLEObject(var ClassType: OleVariant; var FileName: OleVariant; 
                          var LinkToFile: OleVariant; var DisplayAsIcon: OleVariant; 
                          var IconFileName: OleVariant; var IconIndex: OleVariant; 
                          var IconLabel: OleVariant; var Left: OleVariant; var Top: OleVariant; 
                          var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; dispid 24;
    function AddOLEControl(var ClassType: OleVariant; var Left: OleVariant; var Top: OleVariant; 
                           var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; dispid 102;
    function AddDiagram(Type_: MsoDiagramType; Left: Single; Top: Single; Width: Single; 
                        Height: Single; var Anchor: OleVariant): Shape; dispid 23;
    function AddCanvas(Left: Single; Top: Single; Width: Single; Height: Single; 
                       var Anchor: OleVariant): Shape; dispid 25;
    function AddChart(Type_: XlChartType; var Left: OleVariant; var Top: OleVariant; 
                      var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; dispid 103;
    function AddSmartArt(const Layout: SmartArtLayout; var Left: OleVariant; var Top: OleVariant; 
                         var Width: OleVariant; var Height: OleVariant; var Anchor: OleVariant): Shape; dispid 28;
  end;

// *********************************************************************//
// Interface: ShapeRange
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B5-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeRange = interface(IDispatch)
    ['{000209B5-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Adjustments: Adjustments; safecall;
    function Get_AutoShapeType: MsoAutoShapeType; safecall;
    procedure Set_AutoShapeType(prop: MsoAutoShapeType); safecall;
    function Get_Callout: CalloutFormat; safecall;
    function Get_ConnectionSiteCount: Integer; safecall;
    function Get_Connector: MsoTriState; safecall;
    function Get_ConnectorFormat: ConnectorFormat; safecall;
    function Get_Fill: FillFormat; safecall;
    function Get_GroupItems: GroupShapes; safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HorizontalFlip: MsoTriState; safecall;
    function Get_Left: Single; safecall;
    procedure Set_Left(prop: Single); safecall;
    function Get_Line: LineFormat; safecall;
    function Get_LockAspectRatio: MsoTriState; safecall;
    procedure Set_LockAspectRatio(prop: MsoTriState); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Nodes: ShapeNodes; safecall;
    function Get_Rotation: Single; safecall;
    procedure Set_Rotation(prop: Single); safecall;
    function Get_PictureFormat: PictureFormat; safecall;
    function Get_Shadow: ShadowFormat; safecall;
    function Get_TextEffect: TextEffectFormat; safecall;
    function Get_TextFrame: TextFrame; safecall;
    function Get_ThreeD: ThreeDFormat; safecall;
    function Get_Top: Single; safecall;
    procedure Set_Top(prop: Single); safecall;
    function Get_type_: MsoShapeType; safecall;
    function Get_VerticalFlip: MsoTriState; safecall;
    function Get_Vertices: OleVariant; safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_ZOrderPosition: Integer; safecall;
    function Get_Hyperlink: Hyperlink; safecall;
    function Get_RelativeHorizontalPosition: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition(prop: WdRelativeHorizontalPosition); safecall;
    function Get_RelativeVerticalPosition: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition(prop: WdRelativeVerticalPosition); safecall;
    function Get_LockAnchor: Integer; safecall;
    procedure Set_LockAnchor(prop: Integer); safecall;
    function Get_WrapFormat: WrapFormat; safecall;
    function Get_Anchor: WordRange; safecall;
    function Item(var Index: OleVariant): Shape; safecall;
    procedure Align(Align: MsoAlignCmd; RelativeTo: Integer); safecall;
    procedure Apply; safecall;
    procedure Delete; safecall;
    procedure Distribute(Distribute: MsoDistributeCmd; RelativeTo: Integer); safecall;
    function Duplicate: ShapeRange; safecall;
    procedure Flip(FlipCmd: MsoFlipCmd); safecall;
    procedure IncrementLeft(Increment: Single); safecall;
    procedure IncrementRotation(Increment: Single); safecall;
    procedure IncrementTop(Increment: Single); safecall;
    function Group: Shape; safecall;
    procedure PickUp; safecall;
    function Regroup: Shape; safecall;
    procedure RerouteConnections; safecall;
    procedure ScaleHeight(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); safecall;
    procedure ScaleWidth(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); safecall;
    procedure Select(var Replace: OleVariant); safecall;
    procedure SetShapesDefaultProperties; safecall;
    function Ungroup: ShapeRange; safecall;
    procedure ZOrder(ZOrderCmd: MsoZOrderCmd); safecall;
    function ConvertToFrame: Frame; safecall;
    function ConvertToInlineShape: InlineShape; safecall;
    procedure Activate; safecall;
    function Get_AlternativeText: WideString; safecall;
    procedure Set_AlternativeText(const prop: WideString); safecall;
    function Get_HasDiagram: MsoTriState; safecall;
    function Get_Diagram: IMsoDiagram; safecall;
    function Get_HasDiagramNode: MsoTriState; safecall;
    function Get_DiagramNode: DiagramNode; safecall;
    function Get_Child: MsoTriState; safecall;
    function Get_ParentGroup: Shape; safecall;
    function Get_CanvasItems: CanvasShapes; safecall;
    function Get_ID: Integer; safecall;
    procedure CanvasCropLeft(Increment: Single); safecall;
    procedure CanvasCropTop(Increment: Single); safecall;
    procedure CanvasCropRight(Increment: Single); safecall;
    procedure CanvasCropBottom(Increment: Single); safecall;
    procedure Set_RTF(const Param1: WideString); safecall;
    function Get_LayoutInCell: Integer; safecall;
    procedure Set_LayoutInCell(prop: Integer); safecall;
    function Get_LeftRelative: Single; safecall;
    procedure Set_LeftRelative(prop: Single); safecall;
    function Get_TopRelative: Single; safecall;
    procedure Set_TopRelative(prop: Single); safecall;
    function Get_WidthRelative: Single; safecall;
    procedure Set_WidthRelative(prop: Single); safecall;
    function Get_HeightRelative: Single; safecall;
    procedure Set_HeightRelative(prop: Single); safecall;
    function Get_RelativeHorizontalSize: WdRelativeHorizontalSize; safecall;
    procedure Set_RelativeHorizontalSize(prop: WdRelativeHorizontalSize); safecall;
    function Get_RelativeVerticalSize: WdRelativeVerticalSize; safecall;
    procedure Set_RelativeVerticalSize(prop: WdRelativeVerticalSize); safecall;
    function Get_SoftEdge: SoftEdgeFormat; safecall;
    function Get_Glow: GlowFormat; safecall;
    function Get_Reflection: ReflectionFormat; safecall;
    function Get_TextFrame2: TextFrame2; safecall;
    function Get_ShapeStyle: MsoShapeStyleIndex; safecall;
    procedure Set_ShapeStyle(prop: MsoShapeStyleIndex); safecall;
    function Get_BackgroundStyle: MsoBackgroundStyleIndex; safecall;
    procedure Set_BackgroundStyle(prop: MsoBackgroundStyleIndex); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Adjustments: Adjustments read Get_Adjustments;
    property AutoShapeType: MsoAutoShapeType read Get_AutoShapeType write Set_AutoShapeType;
    property Callout: CalloutFormat read Get_Callout;
    property ConnectionSiteCount: Integer read Get_ConnectionSiteCount;
    property Connector: MsoTriState read Get_Connector;
    property ConnectorFormat: ConnectorFormat read Get_ConnectorFormat;
    property Fill: FillFormat read Get_Fill;
    property GroupItems: GroupShapes read Get_GroupItems;
    property Height: Single read Get_Height write Set_Height;
    property HorizontalFlip: MsoTriState read Get_HorizontalFlip;
    property Left: Single read Get_Left write Set_Left;
    property Line: LineFormat read Get_Line;
    property LockAspectRatio: MsoTriState read Get_LockAspectRatio write Set_LockAspectRatio;
    property Name: WideString read Get_Name write Set_Name;
    property Nodes: ShapeNodes read Get_Nodes;
    property Rotation: Single read Get_Rotation write Set_Rotation;
    property PictureFormat: PictureFormat read Get_PictureFormat;
    property Shadow: ShadowFormat read Get_Shadow;
    property TextEffect: TextEffectFormat read Get_TextEffect;
    property TextFrame: TextFrame read Get_TextFrame;
    property ThreeD: ThreeDFormat read Get_ThreeD;
    property Top: Single read Get_Top write Set_Top;
    property type_: MsoShapeType read Get_type_;
    property VerticalFlip: MsoTriState read Get_VerticalFlip;
    property Vertices: OleVariant read Get_Vertices;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Width: Single read Get_Width write Set_Width;
    property ZOrderPosition: Integer read Get_ZOrderPosition;
    property Hyperlink: Hyperlink read Get_Hyperlink;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property LockAnchor: Integer read Get_LockAnchor write Set_LockAnchor;
    property WrapFormat: WrapFormat read Get_WrapFormat;
    property Anchor: WordRange read Get_Anchor;
    property AlternativeText: WideString read Get_AlternativeText write Set_AlternativeText;
    property HasDiagram: MsoTriState read Get_HasDiagram;
    property Diagram: IMsoDiagram read Get_Diagram;
    property HasDiagramNode: MsoTriState read Get_HasDiagramNode;
    property DiagramNode: DiagramNode read Get_DiagramNode;
    property Child: MsoTriState read Get_Child;
    property ParentGroup: Shape read Get_ParentGroup;
    property CanvasItems: CanvasShapes read Get_CanvasItems;
    property ID: Integer read Get_ID;
    property RTF: WideString write Set_RTF;
    property LayoutInCell: Integer read Get_LayoutInCell write Set_LayoutInCell;
    property LeftRelative: Single read Get_LeftRelative write Set_LeftRelative;
    property TopRelative: Single read Get_TopRelative write Set_TopRelative;
    property WidthRelative: Single read Get_WidthRelative write Set_WidthRelative;
    property HeightRelative: Single read Get_HeightRelative write Set_HeightRelative;
    property RelativeHorizontalSize: WdRelativeHorizontalSize read Get_RelativeHorizontalSize write Set_RelativeHorizontalSize;
    property RelativeVerticalSize: WdRelativeVerticalSize read Get_RelativeVerticalSize write Set_RelativeVerticalSize;
    property SoftEdge: SoftEdgeFormat read Get_SoftEdge;
    property Glow: GlowFormat read Get_Glow;
    property Reflection: ReflectionFormat read Get_Reflection;
    property TextFrame2: TextFrame2 read Get_TextFrame2;
    property ShapeStyle: MsoShapeStyleIndex read Get_ShapeStyle write Set_ShapeStyle;
    property BackgroundStyle: MsoBackgroundStyleIndex read Get_BackgroundStyle write Set_BackgroundStyle;
    property Title: WideString read Get_Title write Set_Title;
  end;

// *********************************************************************//
// DispIntf:  ShapeRangeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B5-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeRangeDisp = dispinterface
    ['{000209B5-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 8000;
    property Creator: Integer readonly dispid 8001;
    property Parent: IDispatch readonly dispid 1;
    property Count: Integer readonly dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    property Adjustments: Adjustments readonly dispid 100;
    property AutoShapeType: MsoAutoShapeType dispid 101;
    property Callout: CalloutFormat readonly dispid 103;
    property ConnectionSiteCount: Integer readonly dispid 104;
    property Connector: MsoTriState readonly dispid 105;
    property ConnectorFormat: ConnectorFormat readonly dispid 106;
    property Fill: FillFormat readonly dispid 107;
    property GroupItems: GroupShapes readonly dispid 108;
    property Height: Single dispid 109;
    property HorizontalFlip: MsoTriState readonly dispid 110;
    property Left: Single dispid 111;
    property Line: LineFormat readonly dispid 112;
    property LockAspectRatio: MsoTriState dispid 113;
    property Name: WideString dispid 115;
    property Nodes: ShapeNodes readonly dispid 116;
    property Rotation: Single dispid 117;
    property PictureFormat: PictureFormat readonly dispid 118;
    property Shadow: ShadowFormat readonly dispid 119;
    property TextEffect: TextEffectFormat readonly dispid 120;
    property TextFrame: TextFrame readonly dispid 121;
    property ThreeD: ThreeDFormat readonly dispid 122;
    property Top: Single dispid 123;
    property type_: MsoShapeType readonly dispid 124;
    property VerticalFlip: MsoTriState readonly dispid 125;
    property Vertices: OleVariant readonly dispid 126;
    property Visible: MsoTriState dispid 127;
    property Width: Single dispid 128;
    property ZOrderPosition: Integer readonly dispid 129;
    property Hyperlink: Hyperlink readonly dispid 1001;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition dispid 300;
    property RelativeVerticalPosition: WdRelativeVerticalPosition dispid 301;
    property LockAnchor: Integer dispid 302;
    property WrapFormat: WrapFormat readonly dispid 303;
    property Anchor: WordRange readonly dispid 304;
    function Item(var Index: OleVariant): Shape; dispid 0;
    procedure Align(Align: MsoAlignCmd; RelativeTo: Integer); dispid 10;
    procedure Apply; dispid 11;
    procedure Delete; dispid 12;
    procedure Distribute(Distribute: MsoDistributeCmd; RelativeTo: Integer); dispid 13;
    function Duplicate: ShapeRange; dispid 14;
    procedure Flip(FlipCmd: MsoFlipCmd); dispid 15;
    procedure IncrementLeft(Increment: Single); dispid 16;
    procedure IncrementRotation(Increment: Single); dispid 17;
    procedure IncrementTop(Increment: Single); dispid 18;
    function Group: Shape; dispid 19;
    procedure PickUp; dispid 20;
    function Regroup: Shape; dispid 21;
    procedure RerouteConnections; dispid 22;
    procedure ScaleHeight(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); dispid 23;
    procedure ScaleWidth(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); dispid 24;
    procedure Select(var Replace: OleVariant); dispid 25;
    procedure SetShapesDefaultProperties; dispid 26;
    function Ungroup: ShapeRange; dispid 27;
    procedure ZOrder(ZOrderCmd: MsoZOrderCmd); dispid 28;
    function ConvertToFrame: Frame; dispid 29;
    function ConvertToInlineShape: InlineShape; dispid 30;
    procedure Activate; dispid 50;
    property AlternativeText: WideString dispid 131;
    property HasDiagram: MsoTriState readonly dispid 132;
    property Diagram: IMsoDiagram readonly dispid 133;
    property HasDiagramNode: MsoTriState readonly dispid 134;
    property DiagramNode: DiagramNode readonly dispid 135;
    property Child: MsoTriState readonly dispid 136;
    property ParentGroup: Shape readonly dispid 137;
    property CanvasItems: CanvasShapes readonly dispid 138;
    property ID: Integer readonly dispid 139;
    procedure CanvasCropLeft(Increment: Single); dispid 140;
    procedure CanvasCropTop(Increment: Single); dispid 141;
    procedure CanvasCropRight(Increment: Single); dispid 142;
    procedure CanvasCropBottom(Increment: Single); dispid 143;
    property RTF: WideString writeonly dispid 144;
    property LayoutInCell: Integer dispid 145;
    property LeftRelative: Single dispid 200;
    property TopRelative: Single dispid 201;
    property WidthRelative: Single dispid 202;
    property HeightRelative: Single dispid 203;
    property RelativeHorizontalSize: WdRelativeHorizontalSize dispid 204;
    property RelativeVerticalSize: WdRelativeVerticalSize dispid 205;
    property SoftEdge: SoftEdgeFormat readonly dispid 152;
    property Glow: GlowFormat readonly dispid 153;
    property Reflection: ReflectionFormat readonly dispid 154;
    property TextFrame2: TextFrame2 readonly dispid 155;
    property ShapeStyle: MsoShapeStyleIndex dispid 150;
    property BackgroundStyle: MsoBackgroundStyleIndex dispid 151;
    property Title: WideString dispid 206;
  end;

// *********************************************************************//
// Interface: GroupShapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B6-0000-0000-C000-000000000046}
// *********************************************************************//
  GroupShapes = interface(IDispatch)
    ['{000209B6-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(var Index: OleVariant): Shape; safecall;
    function Range(var Index: OleVariant): ShapeRange; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  GroupShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B6-0000-0000-C000-000000000046}
// *********************************************************************//
  GroupShapesDisp = dispinterface
    ['{000209B6-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 8000;
    property Creator: Integer readonly dispid 8001;
    property Parent: IDispatch readonly dispid 1;
    property Count: Integer readonly dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(var Index: OleVariant): Shape; dispid 0;
    function Range(var Index: OleVariant): ShapeRange; dispid 10;
  end;

// *********************************************************************//
// Interface: Shape
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A0-0000-0000-C000-000000000046}
// *********************************************************************//
  Shape = interface(IDispatch)
    ['{000209A0-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Adjustments: Adjustments; safecall;
    function Get_AutoShapeType: MsoAutoShapeType; safecall;
    procedure Set_AutoShapeType(prop: MsoAutoShapeType); safecall;
    function Get_Callout: CalloutFormat; safecall;
    function Get_ConnectionSiteCount: Integer; safecall;
    function Get_Connector: MsoTriState; safecall;
    function Get_ConnectorFormat: ConnectorFormat; safecall;
    function Get_Fill: FillFormat; safecall;
    function Get_GroupItems: GroupShapes; safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_HorizontalFlip: MsoTriState; safecall;
    function Get_Left: Single; safecall;
    procedure Set_Left(prop: Single); safecall;
    function Get_Line: LineFormat; safecall;
    function Get_LockAspectRatio: MsoTriState; safecall;
    procedure Set_LockAspectRatio(prop: MsoTriState); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Nodes: ShapeNodes; safecall;
    function Get_Rotation: Single; safecall;
    procedure Set_Rotation(prop: Single); safecall;
    function Get_PictureFormat: PictureFormat; safecall;
    function Get_Shadow: ShadowFormat; safecall;
    function Get_TextEffect: TextEffectFormat; safecall;
    function Get_TextFrame: TextFrame; safecall;
    function Get_ThreeD: ThreeDFormat; safecall;
    function Get_Top: Single; safecall;
    procedure Set_Top(prop: Single); safecall;
    function Get_type_: MsoShapeType; safecall;
    function Get_VerticalFlip: MsoTriState; safecall;
    function Get_Vertices: OleVariant; safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_ZOrderPosition: Integer; safecall;
    function Get_Hyperlink: Hyperlink; safecall;
    function Get_RelativeHorizontalPosition: WdRelativeHorizontalPosition; safecall;
    procedure Set_RelativeHorizontalPosition(prop: WdRelativeHorizontalPosition); safecall;
    function Get_RelativeVerticalPosition: WdRelativeVerticalPosition; safecall;
    procedure Set_RelativeVerticalPosition(prop: WdRelativeVerticalPosition); safecall;
    function Get_LockAnchor: Integer; safecall;
    procedure Set_LockAnchor(prop: Integer); safecall;
    function Get_WrapFormat: WrapFormat; safecall;
    function Get_OLEFormat: OLEFormat; safecall;
    function Get_Anchor: WordRange; safecall;
    function Get_LinkFormat: LinkFormat; safecall;
    procedure Apply; safecall;
    procedure Delete; safecall;
    function Duplicate: Shape; safecall;
    procedure Flip(FlipCmd: MsoFlipCmd); safecall;
    procedure IncrementLeft(Increment: Single); safecall;
    procedure IncrementRotation(Increment: Single); safecall;
    procedure IncrementTop(Increment: Single); safecall;
    procedure PickUp; safecall;
    procedure RerouteConnections; safecall;
    procedure ScaleHeight(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); safecall;
    procedure ScaleWidth(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); safecall;
    procedure Select(var Replace: OleVariant); safecall;
    procedure SetShapesDefaultProperties; safecall;
    function Ungroup: ShapeRange; safecall;
    procedure ZOrder(ZOrderCmd: MsoZOrderCmd); safecall;
    function ConvertToInlineShape: InlineShape; safecall;
    function ConvertToFrame: Frame; safecall;
    procedure Activate; safecall;
    function Get_AlternativeText: WideString; safecall;
    procedure Set_AlternativeText(const prop: WideString); safecall;
    function Get_Script: Script; safecall;
    function Get_HasDiagram: MsoTriState; safecall;
    function Get_Diagram: IMsoDiagram; safecall;
    function Get_HasDiagramNode: MsoTriState; safecall;
    function Get_DiagramNode: DiagramNode; safecall;
    function Get_Child: MsoTriState; safecall;
    function Get_ParentGroup: Shape; safecall;
    function Get_CanvasItems: CanvasShapes; safecall;
    function Get_ID: Integer; safecall;
    procedure CanvasCropLeft(Increment: Single); safecall;
    procedure CanvasCropTop(Increment: Single); safecall;
    procedure CanvasCropRight(Increment: Single); safecall;
    procedure CanvasCropBottom(Increment: Single); safecall;
    procedure Set_RTF(const Param1: WideString); safecall;
    function Get_LayoutInCell: Integer; safecall;
    procedure Set_LayoutInCell(prop: Integer); safecall;
    function Get_HasChart: MsoTriState; safecall;
    function Get_Chart: Chart; safecall;
    function Get_LeftRelative: Single; safecall;
    procedure Set_LeftRelative(prop: Single); safecall;
    function Get_TopRelative: Single; safecall;
    procedure Set_TopRelative(prop: Single); safecall;
    function Get_WidthRelative: Single; safecall;
    procedure Set_WidthRelative(prop: Single); safecall;
    function Get_HeightRelative: Single; safecall;
    procedure Set_HeightRelative(prop: Single); safecall;
    function Get_RelativeHorizontalSize: WdRelativeHorizontalSize; safecall;
    procedure Set_RelativeHorizontalSize(prop: WdRelativeHorizontalSize); safecall;
    function Get_RelativeVerticalSize: WdRelativeVerticalSize; safecall;
    procedure Set_RelativeVerticalSize(prop: WdRelativeVerticalSize); safecall;
    function Get_SoftEdge: SoftEdgeFormat; safecall;
    function Get_Glow: GlowFormat; safecall;
    function Get_Reflection: ReflectionFormat; safecall;
    function Get_TextFrame2: TextFrame2; safecall;
    function Get_HasSmartArt: MsoTriState; safecall;
    function Get_SmartArt: SmartArt; safecall;
    function Get_ShapeStyle: MsoShapeStyleIndex; safecall;
    procedure Set_ShapeStyle(prop: MsoShapeStyleIndex); safecall;
    function Get_BackgroundStyle: MsoBackgroundStyleIndex; safecall;
    procedure Set_BackgroundStyle(prop: MsoBackgroundStyleIndex); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const prop: WideString); safecall;
    function Get_AnchorID: Integer; safecall;
    function Get_EditID: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Adjustments: Adjustments read Get_Adjustments;
    property AutoShapeType: MsoAutoShapeType read Get_AutoShapeType write Set_AutoShapeType;
    property Callout: CalloutFormat read Get_Callout;
    property ConnectionSiteCount: Integer read Get_ConnectionSiteCount;
    property Connector: MsoTriState read Get_Connector;
    property ConnectorFormat: ConnectorFormat read Get_ConnectorFormat;
    property Fill: FillFormat read Get_Fill;
    property GroupItems: GroupShapes read Get_GroupItems;
    property Height: Single read Get_Height write Set_Height;
    property HorizontalFlip: MsoTriState read Get_HorizontalFlip;
    property Left: Single read Get_Left write Set_Left;
    property Line: LineFormat read Get_Line;
    property LockAspectRatio: MsoTriState read Get_LockAspectRatio write Set_LockAspectRatio;
    property Name: WideString read Get_Name write Set_Name;
    property Nodes: ShapeNodes read Get_Nodes;
    property Rotation: Single read Get_Rotation write Set_Rotation;
    property PictureFormat: PictureFormat read Get_PictureFormat;
    property Shadow: ShadowFormat read Get_Shadow;
    property TextEffect: TextEffectFormat read Get_TextEffect;
    property TextFrame: TextFrame read Get_TextFrame;
    property ThreeD: ThreeDFormat read Get_ThreeD;
    property Top: Single read Get_Top write Set_Top;
    property type_: MsoShapeType read Get_type_;
    property VerticalFlip: MsoTriState read Get_VerticalFlip;
    property Vertices: OleVariant read Get_Vertices;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Width: Single read Get_Width write Set_Width;
    property ZOrderPosition: Integer read Get_ZOrderPosition;
    property Hyperlink: Hyperlink read Get_Hyperlink;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition read Get_RelativeHorizontalPosition write Set_RelativeHorizontalPosition;
    property RelativeVerticalPosition: WdRelativeVerticalPosition read Get_RelativeVerticalPosition write Set_RelativeVerticalPosition;
    property LockAnchor: Integer read Get_LockAnchor write Set_LockAnchor;
    property WrapFormat: WrapFormat read Get_WrapFormat;
    property OLEFormat: OLEFormat read Get_OLEFormat;
    property Anchor: WordRange read Get_Anchor;
    property LinkFormat: LinkFormat read Get_LinkFormat;
    property AlternativeText: WideString read Get_AlternativeText write Set_AlternativeText;
    property Script: Script read Get_Script;
    property HasDiagram: MsoTriState read Get_HasDiagram;
    property Diagram: IMsoDiagram read Get_Diagram;
    property HasDiagramNode: MsoTriState read Get_HasDiagramNode;
    property DiagramNode: DiagramNode read Get_DiagramNode;
    property Child: MsoTriState read Get_Child;
    property ParentGroup: Shape read Get_ParentGroup;
    property CanvasItems: CanvasShapes read Get_CanvasItems;
    property ID: Integer read Get_ID;
    property RTF: WideString write Set_RTF;
    property LayoutInCell: Integer read Get_LayoutInCell write Set_LayoutInCell;
    property HasChart: MsoTriState read Get_HasChart;
    property Chart: Chart read Get_Chart;
    property LeftRelative: Single read Get_LeftRelative write Set_LeftRelative;
    property TopRelative: Single read Get_TopRelative write Set_TopRelative;
    property WidthRelative: Single read Get_WidthRelative write Set_WidthRelative;
    property HeightRelative: Single read Get_HeightRelative write Set_HeightRelative;
    property RelativeHorizontalSize: WdRelativeHorizontalSize read Get_RelativeHorizontalSize write Set_RelativeHorizontalSize;
    property RelativeVerticalSize: WdRelativeVerticalSize read Get_RelativeVerticalSize write Set_RelativeVerticalSize;
    property SoftEdge: SoftEdgeFormat read Get_SoftEdge;
    property Glow: GlowFormat read Get_Glow;
    property Reflection: ReflectionFormat read Get_Reflection;
    property TextFrame2: TextFrame2 read Get_TextFrame2;
    property HasSmartArt: MsoTriState read Get_HasSmartArt;
    property SmartArt: SmartArt read Get_SmartArt;
    property ShapeStyle: MsoShapeStyleIndex read Get_ShapeStyle write Set_ShapeStyle;
    property BackgroundStyle: MsoBackgroundStyleIndex read Get_BackgroundStyle write Set_BackgroundStyle;
    property Title: WideString read Get_Title write Set_Title;
    property AnchorID: Integer read Get_AnchorID;
    property EditID: Integer read Get_EditID;
  end;

// *********************************************************************//
// DispIntf:  ShapeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A0-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeDisp = dispinterface
    ['{000209A0-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 8000;
    property Creator: Integer readonly dispid 8001;
    property Parent: IDispatch readonly dispid 1;
    property Adjustments: Adjustments readonly dispid 100;
    property AutoShapeType: MsoAutoShapeType dispid 101;
    property Callout: CalloutFormat readonly dispid 103;
    property ConnectionSiteCount: Integer readonly dispid 104;
    property Connector: MsoTriState readonly dispid 105;
    property ConnectorFormat: ConnectorFormat readonly dispid 106;
    property Fill: FillFormat readonly dispid 107;
    property GroupItems: GroupShapes readonly dispid 108;
    property Height: Single dispid 109;
    property HorizontalFlip: MsoTriState readonly dispid 110;
    property Left: Single dispid 111;
    property Line: LineFormat readonly dispid 112;
    property LockAspectRatio: MsoTriState dispid 113;
    property Name: WideString dispid 115;
    property Nodes: ShapeNodes readonly dispid 116;
    property Rotation: Single dispid 117;
    property PictureFormat: PictureFormat readonly dispid 118;
    property Shadow: ShadowFormat readonly dispid 119;
    property TextEffect: TextEffectFormat readonly dispid 120;
    property TextFrame: TextFrame readonly dispid 121;
    property ThreeD: ThreeDFormat readonly dispid 122;
    property Top: Single dispid 123;
    property type_: MsoShapeType readonly dispid 124;
    property VerticalFlip: MsoTriState readonly dispid 125;
    property Vertices: OleVariant readonly dispid 126;
    property Visible: MsoTriState dispid 127;
    property Width: Single dispid 128;
    property ZOrderPosition: Integer readonly dispid 129;
    property Hyperlink: Hyperlink readonly dispid 1001;
    property RelativeHorizontalPosition: WdRelativeHorizontalPosition dispid 300;
    property RelativeVerticalPosition: WdRelativeVerticalPosition dispid 301;
    property LockAnchor: Integer dispid 302;
    property WrapFormat: WrapFormat readonly dispid 303;
    property OLEFormat: OLEFormat readonly dispid 500;
    property Anchor: WordRange readonly dispid 501;
    property LinkFormat: LinkFormat readonly dispid 502;
    procedure Apply; dispid 10;
    procedure Delete; dispid 11;
    function Duplicate: Shape; dispid 12;
    procedure Flip(FlipCmd: MsoFlipCmd); dispid 13;
    procedure IncrementLeft(Increment: Single); dispid 14;
    procedure IncrementRotation(Increment: Single); dispid 15;
    procedure IncrementTop(Increment: Single); dispid 16;
    procedure PickUp; dispid 17;
    procedure RerouteConnections; dispid 18;
    procedure ScaleHeight(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); dispid 19;
    procedure ScaleWidth(Factor: Single; RelativeToOriginalSize: MsoTriState; Scale: MsoScaleFrom); dispid 20;
    procedure Select(var Replace: OleVariant); dispid 21;
    procedure SetShapesDefaultProperties; dispid 22;
    function Ungroup: ShapeRange; dispid 23;
    procedure ZOrder(ZOrderCmd: MsoZOrderCmd); dispid 24;
    function ConvertToInlineShape: InlineShape; dispid 25;
    function ConvertToFrame: Frame; dispid 29;
    procedure Activate; dispid 50;
    property AlternativeText: WideString dispid 131;
    property Script: Script readonly dispid 503;
    property HasDiagram: MsoTriState readonly dispid 132;
    property Diagram: IMsoDiagram readonly dispid 133;
    property HasDiagramNode: MsoTriState readonly dispid 134;
    property DiagramNode: DiagramNode readonly dispid 135;
    property Child: MsoTriState readonly dispid 136;
    property ParentGroup: Shape readonly dispid 137;
    property CanvasItems: CanvasShapes readonly dispid 138;
    property ID: Integer readonly dispid 139;
    procedure CanvasCropLeft(Increment: Single); dispid 140;
    procedure CanvasCropTop(Increment: Single); dispid 141;
    procedure CanvasCropRight(Increment: Single); dispid 142;
    procedure CanvasCropBottom(Increment: Single); dispid 143;
    property RTF: WideString writeonly dispid 144;
    property LayoutInCell: Integer dispid 145;
    property HasChart: MsoTriState readonly dispid 148;
    property Chart: Chart readonly dispid 149;
    property LeftRelative: Single dispid 200;
    property TopRelative: Single dispid 201;
    property WidthRelative: Single dispid 202;
    property HeightRelative: Single dispid 203;
    property RelativeHorizontalSize: WdRelativeHorizontalSize dispid 204;
    property RelativeVerticalSize: WdRelativeVerticalSize dispid 205;
    property SoftEdge: SoftEdgeFormat readonly dispid 152;
    property Glow: GlowFormat readonly dispid 153;
    property Reflection: ReflectionFormat readonly dispid 154;
    property TextFrame2: TextFrame2 readonly dispid 155;
    property HasSmartArt: MsoTriState readonly dispid 206;
    property SmartArt: SmartArt readonly dispid 156;
    property ShapeStyle: MsoShapeStyleIndex dispid 150;
    property BackgroundStyle: MsoBackgroundStyleIndex dispid 151;
    property Title: WideString dispid 158;
    property AnchorID: Integer readonly dispid 207;
    property EditID: Integer readonly dispid 208;
  end;

// *********************************************************************//
// Interface: TextFrame
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B2-0000-0000-C000-000000000046}
// *********************************************************************//
  TextFrame = interface(IDispatch)
    ['{000209B2-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: Shape; safecall;
    function Get_MarginBottom: Single; safecall;
    procedure Set_MarginBottom(prop: Single); safecall;
    function Get_MarginLeft: Single; safecall;
    procedure Set_MarginLeft(prop: Single); safecall;
    function Get_MarginRight: Single; safecall;
    procedure Set_MarginRight(prop: Single); safecall;
    function Get_MarginTop: Single; safecall;
    procedure Set_MarginTop(prop: Single); safecall;
    function Get_Orientation: MsoTextOrientation; safecall;
    procedure Set_Orientation(prop: MsoTextOrientation); safecall;
    function Get_TextRange: WordRange; safecall;
    function Get_ContainingRange: WordRange; safecall;
    function Get_Next: TextFrame; safecall;
    procedure Set_Next(const prop: TextFrame); safecall;
    function Get_Previous: TextFrame; safecall;
    procedure Set_Previous(const prop: TextFrame); safecall;
    function Get_Overflowing: WordBool; safecall;
    function Get_HasText: Integer; safecall;
    procedure BreakForwardLink; safecall;
    function ValidLinkTarget(const TargetTextFrame: TextFrame): WordBool; safecall;
    function Get_AutoSize: Integer; safecall;
    procedure Set_AutoSize(prop: Integer); safecall;
    function Get_WordWrap: Integer; safecall;
    procedure Set_WordWrap(prop: Integer); safecall;
    function Get_VerticalAnchor: MsoVerticalAnchor; safecall;
    procedure Set_VerticalAnchor(prop: MsoVerticalAnchor); safecall;
    function Get_HorizontalAnchor: MsoHorizontalAnchor; safecall;
    procedure Set_HorizontalAnchor(prop: MsoHorizontalAnchor); safecall;
    function Get_PathFormat: MsoPathFormat; safecall;
    procedure Set_PathFormat(prop: MsoPathFormat); safecall;
    function Get_WarpFormat: MsoWarpFormat; safecall;
    procedure Set_WarpFormat(prop: MsoWarpFormat); safecall;
    function Get_Column: TextColumn2; safecall;
    function Get_ThreeD: ThreeDFormat; safecall;
    function Get_NoTextRotation: MsoTriState; safecall;
    procedure Set_NoTextRotation(prop: MsoTriState); safecall;
    procedure DeleteText; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: Shape read Get_Parent;
    property MarginBottom: Single read Get_MarginBottom write Set_MarginBottom;
    property MarginLeft: Single read Get_MarginLeft write Set_MarginLeft;
    property MarginRight: Single read Get_MarginRight write Set_MarginRight;
    property MarginTop: Single read Get_MarginTop write Set_MarginTop;
    property Orientation: MsoTextOrientation read Get_Orientation write Set_Orientation;
    property TextRange: WordRange read Get_TextRange;
    property ContainingRange: WordRange read Get_ContainingRange;
    property Next: TextFrame read Get_Next write Set_Next;
    property Previous: TextFrame read Get_Previous write Set_Previous;
    property Overflowing: WordBool read Get_Overflowing;
    property HasText: Integer read Get_HasText;
    property AutoSize: Integer read Get_AutoSize write Set_AutoSize;
    property WordWrap: Integer read Get_WordWrap write Set_WordWrap;
    property VerticalAnchor: MsoVerticalAnchor read Get_VerticalAnchor write Set_VerticalAnchor;
    property HorizontalAnchor: MsoHorizontalAnchor read Get_HorizontalAnchor write Set_HorizontalAnchor;
    property PathFormat: MsoPathFormat read Get_PathFormat write Set_PathFormat;
    property WarpFormat: MsoWarpFormat read Get_WarpFormat write Set_WarpFormat;
    property Column: TextColumn2 read Get_Column;
    property ThreeD: ThreeDFormat read Get_ThreeD;
    property NoTextRotation: MsoTriState read Get_NoTextRotation write Set_NoTextRotation;
  end;

// *********************************************************************//
// DispIntf:  TextFrameDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B2-0000-0000-C000-000000000046}
// *********************************************************************//
  TextFrameDisp = dispinterface
    ['{000209B2-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 8000;
    property Creator: Integer readonly dispid 8001;
    property Parent: Shape readonly dispid 1;
    property MarginBottom: Single dispid 100;
    property MarginLeft: Single dispid 101;
    property MarginRight: Single dispid 102;
    property MarginTop: Single dispid 103;
    property Orientation: MsoTextOrientation dispid 104;
    property TextRange: WordRange readonly dispid 1001;
    property ContainingRange: WordRange readonly dispid 1002;
    property Next: TextFrame dispid 5001;
    property Previous: TextFrame dispid 5002;
    property Overflowing: WordBool readonly dispid 5003;
    property HasText: Integer readonly dispid 5008;
    procedure BreakForwardLink; dispid 5004;
    function ValidLinkTarget(const TargetTextFrame: TextFrame): WordBool; dispid 5006;
    property AutoSize: Integer dispid 5009;
    property WordWrap: Integer dispid 5010;
    property VerticalAnchor: MsoVerticalAnchor dispid 5011;
    property HorizontalAnchor: MsoHorizontalAnchor dispid 5012;
    property PathFormat: MsoPathFormat dispid 5013;
    property WarpFormat: MsoWarpFormat dispid 5014;
    property Column: TextColumn2 readonly dispid 5015;
    property ThreeD: ThreeDFormat readonly dispid 5016;
    property NoTextRotation: MsoTriState dispid 5017;
    procedure DeleteText; dispid 5018;
  end;

// *********************************************************************//
// Interface: _LetterContent
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A1-0000-0000-C000-000000000046}
// *********************************************************************//
  _LetterContent = interface(IDispatch)
    ['{000209A1-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Duplicate: WordLetterContent; safecall;
    function Get_DateFormat: WideString; safecall;
    procedure Set_DateFormat(const prop: WideString); safecall;
    function Get_IncludeHeaderFooter: WordBool; safecall;
    procedure Set_IncludeHeaderFooter(prop: WordBool); safecall;
    function Get_PageDesign: WideString; safecall;
    procedure Set_PageDesign(const prop: WideString); safecall;
    function Get_LetterStyle: WdLetterStyle; safecall;
    procedure Set_LetterStyle(prop: WdLetterStyle); safecall;
    function Get_Letterhead: WordBool; safecall;
    procedure Set_Letterhead(prop: WordBool); safecall;
    function Get_LetterheadLocation: WdLetterheadLocation; safecall;
    procedure Set_LetterheadLocation(prop: WdLetterheadLocation); safecall;
    function Get_LetterheadSize: Single; safecall;
    procedure Set_LetterheadSize(prop: Single); safecall;
    function Get_RecipientName: WideString; safecall;
    procedure Set_RecipientName(const prop: WideString); safecall;
    function Get_RecipientAddress: WideString; safecall;
    procedure Set_RecipientAddress(const prop: WideString); safecall;
    function Get_Salutation: WideString; safecall;
    procedure Set_Salutation(const prop: WideString); safecall;
    function Get_SalutationType: WdSalutationType; safecall;
    procedure Set_SalutationType(prop: WdSalutationType); safecall;
    function Get_RecipientReference: WideString; safecall;
    procedure Set_RecipientReference(const prop: WideString); safecall;
    function Get_MailingInstructions: WideString; safecall;
    procedure Set_MailingInstructions(const prop: WideString); safecall;
    function Get_AttentionLine: WideString; safecall;
    procedure Set_AttentionLine(const prop: WideString); safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const prop: WideString); safecall;
    function Get_EnclosureNumber: Integer; safecall;
    procedure Set_EnclosureNumber(prop: Integer); safecall;
    function Get_CCList: WideString; safecall;
    procedure Set_CCList(const prop: WideString); safecall;
    function Get_ReturnAddress: WideString; safecall;
    procedure Set_ReturnAddress(const prop: WideString); safecall;
    function Get_SenderName: WideString; safecall;
    procedure Set_SenderName(const prop: WideString); safecall;
    function Get_Closing: WideString; safecall;
    procedure Set_Closing(const prop: WideString); safecall;
    function Get_SenderCompany: WideString; safecall;
    procedure Set_SenderCompany(const prop: WideString); safecall;
    function Get_SenderJobTitle: WideString; safecall;
    procedure Set_SenderJobTitle(const prop: WideString); safecall;
    function Get_SenderInitials: WideString; safecall;
    procedure Set_SenderInitials(const prop: WideString); safecall;
    function Get_InfoBlock: WordBool; safecall;
    procedure Set_InfoBlock(prop: WordBool); safecall;
    function Get_RecipientCode: WideString; safecall;
    procedure Set_RecipientCode(const prop: WideString); safecall;
    function Get_RecipientGender: WdSalutationGender; safecall;
    procedure Set_RecipientGender(prop: WdSalutationGender); safecall;
    function Get_ReturnAddressShortForm: WideString; safecall;
    procedure Set_ReturnAddressShortForm(const prop: WideString); safecall;
    function Get_SenderCity: WideString; safecall;
    procedure Set_SenderCity(const prop: WideString); safecall;
    function Get_SenderCode: WideString; safecall;
    procedure Set_SenderCode(const prop: WideString); safecall;
    function Get_SenderGender: WdSalutationGender; safecall;
    procedure Set_SenderGender(prop: WdSalutationGender); safecall;
    function Get_SenderReference: WideString; safecall;
    procedure Set_SenderReference(const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Duplicate: WordLetterContent read Get_Duplicate;
    property DateFormat: WideString read Get_DateFormat write Set_DateFormat;
    property IncludeHeaderFooter: WordBool read Get_IncludeHeaderFooter write Set_IncludeHeaderFooter;
    property PageDesign: WideString read Get_PageDesign write Set_PageDesign;
    property LetterStyle: WdLetterStyle read Get_LetterStyle write Set_LetterStyle;
    property Letterhead: WordBool read Get_Letterhead write Set_Letterhead;
    property LetterheadLocation: WdLetterheadLocation read Get_LetterheadLocation write Set_LetterheadLocation;
    property LetterheadSize: Single read Get_LetterheadSize write Set_LetterheadSize;
    property RecipientName: WideString read Get_RecipientName write Set_RecipientName;
    property RecipientAddress: WideString read Get_RecipientAddress write Set_RecipientAddress;
    property Salutation: WideString read Get_Salutation write Set_Salutation;
    property SalutationType: WdSalutationType read Get_SalutationType write Set_SalutationType;
    property RecipientReference: WideString read Get_RecipientReference write Set_RecipientReference;
    property MailingInstructions: WideString read Get_MailingInstructions write Set_MailingInstructions;
    property AttentionLine: WideString read Get_AttentionLine write Set_AttentionLine;
    property Subject: WideString read Get_Subject write Set_Subject;
    property EnclosureNumber: Integer read Get_EnclosureNumber write Set_EnclosureNumber;
    property CCList: WideString read Get_CCList write Set_CCList;
    property ReturnAddress: WideString read Get_ReturnAddress write Set_ReturnAddress;
    property SenderName: WideString read Get_SenderName write Set_SenderName;
    property Closing: WideString read Get_Closing write Set_Closing;
    property SenderCompany: WideString read Get_SenderCompany write Set_SenderCompany;
    property SenderJobTitle: WideString read Get_SenderJobTitle write Set_SenderJobTitle;
    property SenderInitials: WideString read Get_SenderInitials write Set_SenderInitials;
    property InfoBlock: WordBool read Get_InfoBlock write Set_InfoBlock;
    property RecipientCode: WideString read Get_RecipientCode write Set_RecipientCode;
    property RecipientGender: WdSalutationGender read Get_RecipientGender write Set_RecipientGender;
    property ReturnAddressShortForm: WideString read Get_ReturnAddressShortForm write Set_ReturnAddressShortForm;
    property SenderCity: WideString read Get_SenderCity write Set_SenderCity;
    property SenderCode: WideString read Get_SenderCode write Set_SenderCode;
    property SenderGender: WdSalutationGender read Get_SenderGender write Set_SenderGender;
    property SenderReference: WideString read Get_SenderReference write Set_SenderReference;
  end;

// *********************************************************************//
// DispIntf:  _LetterContentDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A1-0000-0000-C000-000000000046}
// *********************************************************************//
  _LetterContentDisp = dispinterface
    ['{000209A1-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Duplicate: WordLetterContent readonly dispid 10;
    property DateFormat: WideString dispid 101;
    property IncludeHeaderFooter: WordBool dispid 102;
    property PageDesign: WideString dispid 103;
    property LetterStyle: WdLetterStyle dispid 104;
    property Letterhead: WordBool dispid 105;
    property LetterheadLocation: WdLetterheadLocation dispid 106;
    property LetterheadSize: Single dispid 107;
    property RecipientName: WideString dispid 108;
    property RecipientAddress: WideString dispid 109;
    property Salutation: WideString dispid 110;
    property SalutationType: WdSalutationType dispid 111;
    property RecipientReference: WideString dispid 112;
    property MailingInstructions: WideString dispid 114;
    property AttentionLine: WideString dispid 115;
    property Subject: WideString dispid 116;
    property EnclosureNumber: Integer dispid 117;
    property CCList: WideString dispid 118;
    property ReturnAddress: WideString dispid 119;
    property SenderName: WideString dispid 120;
    property Closing: WideString dispid 121;
    property SenderCompany: WideString dispid 122;
    property SenderJobTitle: WideString dispid 123;
    property SenderInitials: WideString dispid 124;
    property InfoBlock: WordBool dispid 125;
    property RecipientCode: WideString dispid 126;
    property RecipientGender: WdSalutationGender dispid 127;
    property ReturnAddressShortForm: WideString dispid 128;
    property SenderCity: WideString dispid 129;
    property SenderCode: WideString dispid 130;
    property SenderGender: WdSalutationGender dispid 131;
    property SenderReference: WideString dispid 132;
  end;

// *********************************************************************//
// Interface: View
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A5-0000-0000-C000-000000000046}
// *********************************************************************//
  View = interface(IDispatch)
    ['{000209A5-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_type_: WdViewType; safecall;
    procedure Set_type_(prop: WdViewType); safecall;
    function Get_FullScreen: WordBool; safecall;
    procedure Set_FullScreen(prop: WordBool); safecall;
    function Get_Draft: WordBool; safecall;
    procedure Set_Draft(prop: WordBool); safecall;
    function Get_ShowAll: WordBool; safecall;
    procedure Set_ShowAll(prop: WordBool); safecall;
    function Get_ShowFieldCodes: WordBool; safecall;
    procedure Set_ShowFieldCodes(prop: WordBool); safecall;
    function Get_MailMergeDataView: WordBool; safecall;
    procedure Set_MailMergeDataView(prop: WordBool); safecall;
    function Get_Magnifier: WordBool; safecall;
    procedure Set_Magnifier(prop: WordBool); safecall;
    function Get_ShowFirstLineOnly: WordBool; safecall;
    procedure Set_ShowFirstLineOnly(prop: WordBool); safecall;
    function Get_ShowFormat: WordBool; safecall;
    procedure Set_ShowFormat(prop: WordBool); safecall;
    function Get_Zoom: Zoom; safecall;
    function Get_ShowObjectAnchors: WordBool; safecall;
    procedure Set_ShowObjectAnchors(prop: WordBool); safecall;
    function Get_ShowTextBoundaries: WordBool; safecall;
    procedure Set_ShowTextBoundaries(prop: WordBool); safecall;
    function Get_ShowHighlight: WordBool; safecall;
    procedure Set_ShowHighlight(prop: WordBool); safecall;
    function Get_ShowDrawings: WordBool; safecall;
    procedure Set_ShowDrawings(prop: WordBool); safecall;
    function Get_ShowTabs: WordBool; safecall;
    procedure Set_ShowTabs(prop: WordBool); safecall;
    function Get_ShowSpaces: WordBool; safecall;
    procedure Set_ShowSpaces(prop: WordBool); safecall;
    function Get_ShowParagraphs: WordBool; safecall;
    procedure Set_ShowParagraphs(prop: WordBool); safecall;
    function Get_ShowHyphens: WordBool; safecall;
    procedure Set_ShowHyphens(prop: WordBool); safecall;
    function Get_ShowHiddenText: WordBool; safecall;
    procedure Set_ShowHiddenText(prop: WordBool); safecall;
    function Get_WrapToWindow: WordBool; safecall;
    procedure Set_WrapToWindow(prop: WordBool); safecall;
    function Get_ShowPicturePlaceHolders: WordBool; safecall;
    procedure Set_ShowPicturePlaceHolders(prop: WordBool); safecall;
    function Get_ShowBookmarks: WordBool; safecall;
    procedure Set_ShowBookmarks(prop: WordBool); safecall;
    function Get_FieldShading: WdFieldShading; safecall;
    procedure Set_FieldShading(prop: WdFieldShading); safecall;
    function Get_ShowAnimation: WordBool; safecall;
    procedure Set_ShowAnimation(prop: WordBool); safecall;
    function Get_TableGridlines: WordBool; safecall;
    procedure Set_TableGridlines(prop: WordBool); safecall;
    function Get_EnlargeFontsLessThan: Integer; safecall;
    procedure Set_EnlargeFontsLessThan(prop: Integer); safecall;
    function Get_ShowMainTextLayer: WordBool; safecall;
    procedure Set_ShowMainTextLayer(prop: WordBool); safecall;
    function Get_SeekView: WdSeekView; safecall;
    procedure Set_SeekView(prop: WdSeekView); safecall;
    function Get_SplitSpecial: WdSpecialPane; safecall;
    procedure Set_SplitSpecial(prop: WdSpecialPane); safecall;
    function Get_BrowseToWindow: Integer; safecall;
    procedure Set_BrowseToWindow(prop: Integer); safecall;
    function Get_ShowOptionalBreaks: WordBool; safecall;
    procedure Set_ShowOptionalBreaks(prop: WordBool); safecall;
    procedure CollapseOutline(var Range: OleVariant); safecall;
    procedure ExpandOutline(var Range: OleVariant); safecall;
    procedure ShowAllHeadings; safecall;
    procedure ShowHeading(Level: Integer); safecall;
    procedure PreviousHeaderFooter; safecall;
    procedure NextHeaderFooter; safecall;
    function Get_DisplayPageBoundaries: WordBool; safecall;
    procedure Set_DisplayPageBoundaries(prop: WordBool); safecall;
    function Get_DisplaySmartTags: WordBool; safecall;
    procedure Set_DisplaySmartTags(prop: WordBool); safecall;
    function Get_ShowRevisionsAndComments: WordBool; safecall;
    procedure Set_ShowRevisionsAndComments(prop: WordBool); safecall;
    function Get_ShowComments: WordBool; safecall;
    procedure Set_ShowComments(prop: WordBool); safecall;
    function Get_ShowInsertionsAndDeletions: WordBool; safecall;
    procedure Set_ShowInsertionsAndDeletions(prop: WordBool); safecall;
    function Get_ShowFormatChanges: WordBool; safecall;
    procedure Set_ShowFormatChanges(prop: WordBool); safecall;
    function Get_RevisionsView: WdRevisionsView; safecall;
    procedure Set_RevisionsView(prop: WdRevisionsView); safecall;
    function Get_RevisionsMode: WdRevisionsMode; safecall;
    procedure Set_RevisionsMode(prop: WdRevisionsMode); safecall;
    function Get_RevisionsBalloonWidth: Single; safecall;
    procedure Set_RevisionsBalloonWidth(prop: Single); safecall;
    function Get_RevisionsBalloonWidthType: WdRevisionsBalloonWidthType; safecall;
    procedure Set_RevisionsBalloonWidthType(prop: WdRevisionsBalloonWidthType); safecall;
    function Get_RevisionsBalloonSide: WdRevisionsBalloonMargin; safecall;
    procedure Set_RevisionsBalloonSide(prop: WdRevisionsBalloonMargin); safecall;
    function Get_Reviewers: Reviewers; safecall;
    function Get_RevisionsBalloonShowConnectingLines: WordBool; safecall;
    procedure Set_RevisionsBalloonShowConnectingLines(prop: WordBool); safecall;
    function Get_ReadingLayout: WordBool; safecall;
    procedure Set_ReadingLayout(prop: WordBool); safecall;
    function Get_ShowXMLMarkup: Integer; safecall;
    procedure Set_ShowXMLMarkup(prop: Integer); safecall;
    function Get_ShadeEditableRanges: Integer; safecall;
    procedure Set_ShadeEditableRanges(prop: Integer); safecall;
    function Get_ShowInkAnnotations: WordBool; safecall;
    procedure Set_ShowInkAnnotations(prop: WordBool); safecall;
    function Get_DisplayBackgrounds: WordBool; safecall;
    procedure Set_DisplayBackgrounds(prop: WordBool); safecall;
    function Get_ReadingLayoutActualView: WordBool; safecall;
    procedure Set_ReadingLayoutActualView(prop: WordBool); safecall;
    function Get_ReadingLayoutAllowMultiplePages: WordBool; safecall;
    procedure Set_ReadingLayoutAllowMultiplePages(prop: WordBool); safecall;
    function Get_ReadingLayoutAllowEditing: WordBool; safecall;
    procedure Set_ReadingLayoutAllowEditing(prop: WordBool); safecall;
    function Get_ReadingLayoutTruncateMargins: WdReadingLayoutMargin; safecall;
    procedure Set_ReadingLayoutTruncateMargins(prop: WdReadingLayoutMargin); safecall;
    function Get_ShowMarkupAreaHighlight: WordBool; safecall;
    procedure Set_ShowMarkupAreaHighlight(prop: WordBool); safecall;
    function Get_Panning: WordBool; safecall;
    procedure Set_Panning(prop: WordBool); safecall;
    function Get_ShowCropMarks: WordBool; safecall;
    procedure Set_ShowCropMarks(prop: WordBool); safecall;
    function Get_MarkupMode: WdRevisionsMode; safecall;
    procedure Set_MarkupMode(prop: WdRevisionsMode); safecall;
    function Get_ConflictMode: WordBool; safecall;
    procedure Set_ConflictMode(prop: WordBool); safecall;
    function Get_ShowOtherAuthors: WordBool; safecall;
    procedure Set_ShowOtherAuthors(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property type_: WdViewType read Get_type_ write Set_type_;
    property FullScreen: WordBool read Get_FullScreen write Set_FullScreen;
    property Draft: WordBool read Get_Draft write Set_Draft;
    property ShowAll: WordBool read Get_ShowAll write Set_ShowAll;
    property ShowFieldCodes: WordBool read Get_ShowFieldCodes write Set_ShowFieldCodes;
    property MailMergeDataView: WordBool read Get_MailMergeDataView write Set_MailMergeDataView;
    property Magnifier: WordBool read Get_Magnifier write Set_Magnifier;
    property ShowFirstLineOnly: WordBool read Get_ShowFirstLineOnly write Set_ShowFirstLineOnly;
    property ShowFormat: WordBool read Get_ShowFormat write Set_ShowFormat;
    property Zoom: Zoom read Get_Zoom;
    property ShowObjectAnchors: WordBool read Get_ShowObjectAnchors write Set_ShowObjectAnchors;
    property ShowTextBoundaries: WordBool read Get_ShowTextBoundaries write Set_ShowTextBoundaries;
    property ShowHighlight: WordBool read Get_ShowHighlight write Set_ShowHighlight;
    property ShowDrawings: WordBool read Get_ShowDrawings write Set_ShowDrawings;
    property ShowTabs: WordBool read Get_ShowTabs write Set_ShowTabs;
    property ShowSpaces: WordBool read Get_ShowSpaces write Set_ShowSpaces;
    property ShowParagraphs: WordBool read Get_ShowParagraphs write Set_ShowParagraphs;
    property ShowHyphens: WordBool read Get_ShowHyphens write Set_ShowHyphens;
    property ShowHiddenText: WordBool read Get_ShowHiddenText write Set_ShowHiddenText;
    property WrapToWindow: WordBool read Get_WrapToWindow write Set_WrapToWindow;
    property ShowPicturePlaceHolders: WordBool read Get_ShowPicturePlaceHolders write Set_ShowPicturePlaceHolders;
    property ShowBookmarks: WordBool read Get_ShowBookmarks write Set_ShowBookmarks;
    property FieldShading: WdFieldShading read Get_FieldShading write Set_FieldShading;
    property ShowAnimation: WordBool read Get_ShowAnimation write Set_ShowAnimation;
    property TableGridlines: WordBool read Get_TableGridlines write Set_TableGridlines;
    property EnlargeFontsLessThan: Integer read Get_EnlargeFontsLessThan write Set_EnlargeFontsLessThan;
    property ShowMainTextLayer: WordBool read Get_ShowMainTextLayer write Set_ShowMainTextLayer;
    property SeekView: WdSeekView read Get_SeekView write Set_SeekView;
    property SplitSpecial: WdSpecialPane read Get_SplitSpecial write Set_SplitSpecial;
    property BrowseToWindow: Integer read Get_BrowseToWindow write Set_BrowseToWindow;
    property ShowOptionalBreaks: WordBool read Get_ShowOptionalBreaks write Set_ShowOptionalBreaks;
    property DisplayPageBoundaries: WordBool read Get_DisplayPageBoundaries write Set_DisplayPageBoundaries;
    property DisplaySmartTags: WordBool read Get_DisplaySmartTags write Set_DisplaySmartTags;
    property ShowRevisionsAndComments: WordBool read Get_ShowRevisionsAndComments write Set_ShowRevisionsAndComments;
    property ShowComments: WordBool read Get_ShowComments write Set_ShowComments;
    property ShowInsertionsAndDeletions: WordBool read Get_ShowInsertionsAndDeletions write Set_ShowInsertionsAndDeletions;
    property ShowFormatChanges: WordBool read Get_ShowFormatChanges write Set_ShowFormatChanges;
    property RevisionsView: WdRevisionsView read Get_RevisionsView write Set_RevisionsView;
    property RevisionsMode: WdRevisionsMode read Get_RevisionsMode write Set_RevisionsMode;
    property RevisionsBalloonWidth: Single read Get_RevisionsBalloonWidth write Set_RevisionsBalloonWidth;
    property RevisionsBalloonWidthType: WdRevisionsBalloonWidthType read Get_RevisionsBalloonWidthType write Set_RevisionsBalloonWidthType;
    property RevisionsBalloonSide: WdRevisionsBalloonMargin read Get_RevisionsBalloonSide write Set_RevisionsBalloonSide;
    property Reviewers: Reviewers read Get_Reviewers;
    property RevisionsBalloonShowConnectingLines: WordBool read Get_RevisionsBalloonShowConnectingLines write Set_RevisionsBalloonShowConnectingLines;
    property ReadingLayout: WordBool read Get_ReadingLayout write Set_ReadingLayout;
    property ShowXMLMarkup: Integer read Get_ShowXMLMarkup write Set_ShowXMLMarkup;
    property ShadeEditableRanges: Integer read Get_ShadeEditableRanges write Set_ShadeEditableRanges;
    property ShowInkAnnotations: WordBool read Get_ShowInkAnnotations write Set_ShowInkAnnotations;
    property DisplayBackgrounds: WordBool read Get_DisplayBackgrounds write Set_DisplayBackgrounds;
    property ReadingLayoutActualView: WordBool read Get_ReadingLayoutActualView write Set_ReadingLayoutActualView;
    property ReadingLayoutAllowMultiplePages: WordBool read Get_ReadingLayoutAllowMultiplePages write Set_ReadingLayoutAllowMultiplePages;
    property ReadingLayoutAllowEditing: WordBool read Get_ReadingLayoutAllowEditing write Set_ReadingLayoutAllowEditing;
    property ReadingLayoutTruncateMargins: WdReadingLayoutMargin read Get_ReadingLayoutTruncateMargins write Set_ReadingLayoutTruncateMargins;
    property ShowMarkupAreaHighlight: WordBool read Get_ShowMarkupAreaHighlight write Set_ShowMarkupAreaHighlight;
    property Panning: WordBool read Get_Panning write Set_Panning;
    property ShowCropMarks: WordBool read Get_ShowCropMarks write Set_ShowCropMarks;
    property MarkupMode: WdRevisionsMode read Get_MarkupMode write Set_MarkupMode;
    property ConflictMode: WordBool read Get_ConflictMode write Set_ConflictMode;
    property ShowOtherAuthors: WordBool read Get_ShowOtherAuthors write Set_ShowOtherAuthors;
  end;

// *********************************************************************//
// DispIntf:  ViewDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A5-0000-0000-C000-000000000046}
// *********************************************************************//
  ViewDisp = dispinterface
    ['{000209A5-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property type_: WdViewType dispid 0;
    property FullScreen: WordBool dispid 1;
    property Draft: WordBool dispid 2;
    property ShowAll: WordBool dispid 3;
    property ShowFieldCodes: WordBool dispid 4;
    property MailMergeDataView: WordBool dispid 5;
    property Magnifier: WordBool dispid 7;
    property ShowFirstLineOnly: WordBool dispid 8;
    property ShowFormat: WordBool dispid 9;
    property Zoom: Zoom readonly dispid 10;
    property ShowObjectAnchors: WordBool dispid 11;
    property ShowTextBoundaries: WordBool dispid 12;
    property ShowHighlight: WordBool dispid 13;
    property ShowDrawings: WordBool dispid 14;
    property ShowTabs: WordBool dispid 15;
    property ShowSpaces: WordBool dispid 16;
    property ShowParagraphs: WordBool dispid 17;
    property ShowHyphens: WordBool dispid 18;
    property ShowHiddenText: WordBool dispid 19;
    property WrapToWindow: WordBool dispid 20;
    property ShowPicturePlaceHolders: WordBool dispid 21;
    property ShowBookmarks: WordBool dispid 22;
    property FieldShading: WdFieldShading dispid 23;
    property ShowAnimation: WordBool dispid 24;
    property TableGridlines: WordBool dispid 25;
    property EnlargeFontsLessThan: Integer dispid 26;
    property ShowMainTextLayer: WordBool dispid 27;
    property SeekView: WdSeekView dispid 28;
    property SplitSpecial: WdSpecialPane dispid 29;
    property BrowseToWindow: Integer dispid 30;
    property ShowOptionalBreaks: WordBool dispid 31;
    procedure CollapseOutline(var Range: OleVariant); dispid 101;
    procedure ExpandOutline(var Range: OleVariant); dispid 102;
    procedure ShowAllHeadings; dispid 103;
    procedure ShowHeading(Level: Integer); dispid 104;
    procedure PreviousHeaderFooter; dispid 105;
    procedure NextHeaderFooter; dispid 106;
    property DisplayPageBoundaries: WordBool dispid 32;
    property DisplaySmartTags: WordBool dispid 33;
    property ShowRevisionsAndComments: WordBool dispid 34;
    property ShowComments: WordBool dispid 35;
    property ShowInsertionsAndDeletions: WordBool dispid 36;
    property ShowFormatChanges: WordBool dispid 37;
    property RevisionsView: WdRevisionsView dispid 38;
    property RevisionsMode: WdRevisionsMode dispid 39;
    property RevisionsBalloonWidth: Single dispid 40;
    property RevisionsBalloonWidthType: WdRevisionsBalloonWidthType dispid 41;
    property RevisionsBalloonSide: WdRevisionsBalloonMargin dispid 42;
    property Reviewers: Reviewers readonly dispid 43;
    property RevisionsBalloonShowConnectingLines: WordBool dispid 44;
    property ReadingLayout: WordBool dispid 45;
    property ShowXMLMarkup: Integer dispid 46;
    property ShadeEditableRanges: Integer dispid 47;
    property ShowInkAnnotations: WordBool dispid 48;
    property DisplayBackgrounds: WordBool dispid 49;
    property ReadingLayoutActualView: WordBool dispid 50;
    property ReadingLayoutAllowMultiplePages: WordBool dispid 51;
    property ReadingLayoutAllowEditing: WordBool dispid 53;
    property ReadingLayoutTruncateMargins: WdReadingLayoutMargin dispid 54;
    property ShowMarkupAreaHighlight: WordBool dispid 52;
    property Panning: WordBool dispid 55;
    property ShowCropMarks: WordBool dispid 56;
    property MarkupMode: WdRevisionsMode dispid 57;
    property ConflictMode: WordBool dispid 58;
    property ShowOtherAuthors: WordBool dispid 59;
  end;

// *********************************************************************//
// Interface: Zoom
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A6-0000-0000-C000-000000000046}
// *********************************************************************//
  Zoom = interface(IDispatch)
    ['{000209A6-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Percentage: Integer; safecall;
    procedure Set_Percentage(prop: Integer); safecall;
    function Get_PageFit: WdPageFit; safecall;
    procedure Set_PageFit(prop: WdPageFit); safecall;
    function Get_PageRows: Integer; safecall;
    procedure Set_PageRows(prop: Integer); safecall;
    function Get_PageColumns: Integer; safecall;
    procedure Set_PageColumns(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Percentage: Integer read Get_Percentage write Set_Percentage;
    property PageFit: WdPageFit read Get_PageFit write Set_PageFit;
    property PageRows: Integer read Get_PageRows write Set_PageRows;
    property PageColumns: Integer read Get_PageColumns write Set_PageColumns;
  end;

// *********************************************************************//
// DispIntf:  ZoomDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A6-0000-0000-C000-000000000046}
// *********************************************************************//
  ZoomDisp = dispinterface
    ['{000209A6-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Percentage: Integer dispid 0;
    property PageFit: WdPageFit dispid 1;
    property PageRows: Integer dispid 2;
    property PageColumns: Integer dispid 3;
  end;

// *********************************************************************//
// Interface: Zooms
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A7-0000-0000-C000-000000000046}
// *********************************************************************//
  Zooms = interface(IDispatch)
    ['{000209A7-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: WdViewType): Zoom; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ZoomsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A7-0000-0000-C000-000000000046}
// *********************************************************************//
  ZoomsDisp = dispinterface
    ['{000209A7-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: WdViewType): Zoom; dispid 0;
  end;

// *********************************************************************//
// Interface: InlineShape
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A8-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShape = interface(IDispatch)
    ['{000209A8-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_Range: WordRange; safecall;
    function Get_LinkFormat: LinkFormat; safecall;
    function Get_Field: Field; safecall;
    function Get_OLEFormat: OLEFormat; safecall;
    function Get_type_: WdInlineShapeType; safecall;
    function Get_Hyperlink: Hyperlink; safecall;
    function Get_Height: Single; safecall;
    procedure Set_Height(prop: Single); safecall;
    function Get_Width: Single; safecall;
    procedure Set_Width(prop: Single); safecall;
    function Get_ScaleHeight: Single; safecall;
    procedure Set_ScaleHeight(prop: Single); safecall;
    function Get_ScaleWidth: Single; safecall;
    procedure Set_ScaleWidth(prop: Single); safecall;
    function Get_LockAspectRatio: MsoTriState; safecall;
    procedure Set_LockAspectRatio(prop: MsoTriState); safecall;
    function Get_Line: LineFormat; safecall;
    function Get_Fill: FillFormat; safecall;
    function Get_PictureFormat: PictureFormat; safecall;
    procedure Set_PictureFormat(const prop: PictureFormat); safecall;
    procedure Activate; safecall;
    procedure Reset; safecall;
    procedure Delete; safecall;
    procedure Select; safecall;
    function ConvertToShape: Shape; safecall;
    function Get_HorizontalLineFormat: HorizontalLineFormat; safecall;
    function Get_Script: Script; safecall;
    function Get_OWSAnchor: Integer; safecall;
    function Get_TextEffect: TextEffectFormat; safecall;
    procedure Set_TextEffect(const prop: TextEffectFormat); safecall;
    function Get_AlternativeText: WideString; safecall;
    procedure Set_AlternativeText(const prop: WideString); safecall;
    function Get_IsPictureBullet: WordBool; safecall;
    function Get_GroupItems: GroupShapes; safecall;
    function Get_HasChart: MsoTriState; safecall;
    function Get_Chart: Chart; safecall;
    function Get_SoftEdge: SoftEdgeFormat; safecall;
    function Get_Glow: GlowFormat; safecall;
    function Get_Reflection: ReflectionFormat; safecall;
    function Get_Shadow: ShadowFormat; safecall;
    function Get_HasSmartArt: MsoTriState; safecall;
    function Get_SmartArt: SmartArt; safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const prop: WideString); safecall;
    function Get_AnchorID: Integer; safecall;
    function Get_EditID: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Borders: Borders read Get_Borders write Set_Borders;
    property Range: WordRange read Get_Range;
    property LinkFormat: LinkFormat read Get_LinkFormat;
    property Field: Field read Get_Field;
    property OLEFormat: OLEFormat read Get_OLEFormat;
    property type_: WdInlineShapeType read Get_type_;
    property Hyperlink: Hyperlink read Get_Hyperlink;
    property Height: Single read Get_Height write Set_Height;
    property Width: Single read Get_Width write Set_Width;
    property ScaleHeight: Single read Get_ScaleHeight write Set_ScaleHeight;
    property ScaleWidth: Single read Get_ScaleWidth write Set_ScaleWidth;
    property LockAspectRatio: MsoTriState read Get_LockAspectRatio write Set_LockAspectRatio;
    property Line: LineFormat read Get_Line;
    property Fill: FillFormat read Get_Fill;
    property PictureFormat: PictureFormat read Get_PictureFormat write Set_PictureFormat;
    property HorizontalLineFormat: HorizontalLineFormat read Get_HorizontalLineFormat;
    property Script: Script read Get_Script;
    property OWSAnchor: Integer read Get_OWSAnchor;
    property TextEffect: TextEffectFormat read Get_TextEffect write Set_TextEffect;
    property AlternativeText: WideString read Get_AlternativeText write Set_AlternativeText;
    property IsPictureBullet: WordBool read Get_IsPictureBullet;
    property GroupItems: GroupShapes read Get_GroupItems;
    property HasChart: MsoTriState read Get_HasChart;
    property Chart: Chart read Get_Chart;
    property SoftEdge: SoftEdgeFormat read Get_SoftEdge;
    property Glow: GlowFormat read Get_Glow;
    property Reflection: ReflectionFormat read Get_Reflection;
    property Shadow: ShadowFormat read Get_Shadow;
    property HasSmartArt: MsoTriState read Get_HasSmartArt;
    property SmartArt: SmartArt read Get_SmartArt;
    property Title: WideString read Get_Title write Set_Title;
    property AnchorID: Integer read Get_AnchorID;
    property EditID: Integer read Get_EditID;
  end;

// *********************************************************************//
// DispIntf:  InlineShapeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A8-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShapeDisp = dispinterface
    ['{000209A8-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Borders: Borders dispid 1100;
    property Range: WordRange readonly dispid 2;
    property LinkFormat: LinkFormat readonly dispid 3;
    property Field: Field readonly dispid 4;
    property OLEFormat: OLEFormat readonly dispid 5;
    property type_: WdInlineShapeType readonly dispid 6;
    property Hyperlink: Hyperlink readonly dispid 7;
    property Height: Single dispid 8;
    property Width: Single dispid 9;
    property ScaleHeight: Single dispid 10;
    property ScaleWidth: Single dispid 11;
    property LockAspectRatio: MsoTriState dispid 12;
    property Line: LineFormat readonly dispid 112;
    property Fill: FillFormat readonly dispid 107;
    property PictureFormat: PictureFormat dispid 118;
    procedure Activate; dispid 100;
    procedure Reset; dispid 101;
    procedure Delete; dispid 102;
    procedure Select; dispid 65535;
    function ConvertToShape: Shape; dispid 104;
    property HorizontalLineFormat: HorizontalLineFormat readonly dispid 119;
    property Script: Script readonly dispid 122;
    property OWSAnchor: Integer readonly dispid 130;
    property TextEffect: TextEffectFormat dispid 120;
    property AlternativeText: WideString dispid 131;
    property IsPictureBullet: WordBool readonly dispid 132;
    property GroupItems: GroupShapes readonly dispid 133;
    property HasChart: MsoTriState readonly dispid 148;
    property Chart: Chart readonly dispid 149;
    property SoftEdge: SoftEdgeFormat readonly dispid 152;
    property Glow: GlowFormat readonly dispid 153;
    property Reflection: ReflectionFormat readonly dispid 154;
    property Shadow: ShadowFormat readonly dispid 1101;
    property HasSmartArt: MsoTriState readonly dispid 155;
    property SmartArt: SmartArt readonly dispid 156;
    property Title: WideString dispid 158;
    property AnchorID: Integer readonly dispid 207;
    property EditID: Integer readonly dispid 208;
  end;

// *********************************************************************//
// Interface: InlineShapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A9-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShapes = interface(IDispatch)
    ['{000209A9-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(Index: Integer): InlineShape; safecall;
    function AddPicture(const FileName: WideString; var LinkToFile: OleVariant; 
                        var SaveWithDocument: OleVariant; var Range: OleVariant): InlineShape; safecall;
    function AddOLEObject(var ClassType: OleVariant; var FileName: OleVariant; 
                          var LinkToFile: OleVariant; var DisplayAsIcon: OleVariant; 
                          var IconFileName: OleVariant; var IconIndex: OleVariant; 
                          var IconLabel: OleVariant; var Range: OleVariant): InlineShape; safecall;
    function AddOLEControl(var ClassType: OleVariant; var Range: OleVariant): InlineShape; safecall;
    function New(const Range: WordRange): InlineShape; safecall;
    function AddHorizontalLine(const FileName: WideString; var Range: OleVariant): InlineShape; safecall;
    function AddHorizontalLineStandard(var Range: OleVariant): InlineShape; safecall;
    function AddPictureBullet(const FileName: WideString; var Range: OleVariant): InlineShape; safecall;
    function AddChart(Type_: XlChartType; var Range: OleVariant): InlineShape; safecall;
    function AddSmartArt(const Layout: SmartArtLayout; var Range: OleVariant): InlineShape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  InlineShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209A9-0000-0000-C000-000000000046}
// *********************************************************************//
  InlineShapesDisp = dispinterface
    ['{000209A9-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(Index: Integer): InlineShape; dispid 0;
    function AddPicture(const FileName: WideString; var LinkToFile: OleVariant; 
                        var SaveWithDocument: OleVariant; var Range: OleVariant): InlineShape; dispid 100;
    function AddOLEObject(var ClassType: OleVariant; var FileName: OleVariant; 
                          var LinkToFile: OleVariant; var DisplayAsIcon: OleVariant; 
                          var IconFileName: OleVariant; var IconIndex: OleVariant; 
                          var IconLabel: OleVariant; var Range: OleVariant): InlineShape; dispid 24;
    function AddOLEControl(var ClassType: OleVariant; var Range: OleVariant): InlineShape; dispid 102;
    function New(const Range: WordRange): InlineShape; dispid 200;
    function AddHorizontalLine(const FileName: WideString; var Range: OleVariant): InlineShape; dispid 104;
    function AddHorizontalLineStandard(var Range: OleVariant): InlineShape; dispid 105;
    function AddPictureBullet(const FileName: WideString; var Range: OleVariant): InlineShape; dispid 106;
    function AddChart(Type_: XlChartType; var Range: OleVariant): InlineShape; dispid 107;
    function AddSmartArt(const Layout: SmartArtLayout; var Range: OleVariant): InlineShape; dispid 108;
  end;

// *********************************************************************//
// Interface: SpellingSuggestions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AA-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestions = interface(IDispatch)
    ['{000209AA-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_SpellingErrorType: WdSpellingErrorType; safecall;
    function Item(Index: Integer): SpellingSuggestion; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property SpellingErrorType: WdSpellingErrorType read Get_SpellingErrorType;
  end;

// *********************************************************************//
// DispIntf:  SpellingSuggestionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AA-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestionsDisp = dispinterface
    ['{000209AA-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property SpellingErrorType: WdSpellingErrorType readonly dispid 2;
    function Item(Index: Integer): SpellingSuggestion; dispid 0;
  end;

// *********************************************************************//
// Interface: SpellingSuggestion
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AB-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestion = interface(IDispatch)
    ['{000209AB-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  SpellingSuggestionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AB-0000-0000-C000-000000000046}
// *********************************************************************//
  SpellingSuggestionDisp = dispinterface
    ['{000209AB-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
  end;

// *********************************************************************//
// Interface: Dictionaries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AC-0000-0000-C000-000000000046}
// *********************************************************************//
  Dictionaries = interface(IDispatch)
    ['{000209AC-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Maximum: Integer; safecall;
    function Get_ActiveCustomDictionary: Dictionary; safecall;
    procedure Set_ActiveCustomDictionary(const prop: Dictionary); safecall;
    function Item(var Index: OleVariant): Dictionary; safecall;
    function Add(const FileName: WideString): Dictionary; safecall;
    procedure ClearAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Maximum: Integer read Get_Maximum;
    property ActiveCustomDictionary: Dictionary read Get_ActiveCustomDictionary write Set_ActiveCustomDictionary;
  end;

// *********************************************************************//
// DispIntf:  DictionariesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AC-0000-0000-C000-000000000046}
// *********************************************************************//
  DictionariesDisp = dispinterface
    ['{000209AC-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Maximum: Integer readonly dispid 2;
    property ActiveCustomDictionary: Dictionary dispid 3;
    function Item(var Index: OleVariant): Dictionary; dispid 0;
    function Add(const FileName: WideString): Dictionary; dispid 101;
    procedure ClearAll; dispid 102;
  end;

// *********************************************************************//
// Interface: HangulHanjaConversionDictionaries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E0-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulHanjaConversionDictionaries = interface(IDispatch)
    ['{000209E0-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Maximum: Integer; safecall;
    function Get_ActiveCustomDictionary: Dictionary; safecall;
    procedure Set_ActiveCustomDictionary(const prop: Dictionary); safecall;
    function Get_BuiltinDictionary: Dictionary; safecall;
    function Item(var Index: OleVariant): Dictionary; safecall;
    function Add(const FileName: WideString): Dictionary; safecall;
    procedure ClearAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Maximum: Integer read Get_Maximum;
    property ActiveCustomDictionary: Dictionary read Get_ActiveCustomDictionary write Set_ActiveCustomDictionary;
    property BuiltinDictionary: Dictionary read Get_BuiltinDictionary;
  end;

// *********************************************************************//
// DispIntf:  HangulHanjaConversionDictionariesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E0-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulHanjaConversionDictionariesDisp = dispinterface
    ['{000209E0-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property Maximum: Integer readonly dispid 2;
    property ActiveCustomDictionary: Dictionary dispid 3;
    property BuiltinDictionary: Dictionary readonly dispid 4;
    function Item(var Index: OleVariant): Dictionary; dispid 0;
    function Add(const FileName: WideString): Dictionary; dispid 101;
    procedure ClearAll; dispid 102;
  end;

// *********************************************************************//
// Interface: Dictionary
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AD-0000-0000-C000-000000000046}
// *********************************************************************//
  Dictionary = interface(IDispatch)
    ['{000209AD-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Path: WideString; safecall;
    function Get_LanguageID: WdLanguageID; safecall;
    procedure Set_LanguageID(prop: WdLanguageID); safecall;
    function Get_ReadOnly: WordBool; safecall;
    function Get_type_: WdDictionaryType; safecall;
    function Get_LanguageSpecific: WordBool; safecall;
    procedure Set_LanguageSpecific(prop: WordBool); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Path: WideString read Get_Path;
    property LanguageID: WdLanguageID read Get_LanguageID write Set_LanguageID;
    property ReadOnly: WordBool read Get_ReadOnly;
    property type_: WdDictionaryType read Get_type_;
    property LanguageSpecific: WordBool read Get_LanguageSpecific write Set_LanguageSpecific;
  end;

// *********************************************************************//
// DispIntf:  DictionaryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AD-0000-0000-C000-000000000046}
// *********************************************************************//
  DictionaryDisp = dispinterface
    ['{000209AD-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Path: WideString readonly dispid 1;
    property LanguageID: WdLanguageID dispid 2;
    property ReadOnly: WordBool readonly dispid 3;
    property type_: WdDictionaryType readonly dispid 4;
    property LanguageSpecific: WordBool dispid 5;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: ReadabilityStatistics
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AE-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatistics = interface(IDispatch)
    ['{000209AE-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): ReadabilityStatistic; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ReadabilityStatisticsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AE-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatisticsDisp = dispinterface
    ['{000209AE-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): ReadabilityStatistic; dispid 0;
  end;

// *********************************************************************//
// Interface: ReadabilityStatistic
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AF-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatistic = interface(IDispatch)
    ['{000209AF-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Get_Value: Single; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Value: Single read Get_Value;
  end;

// *********************************************************************//
// DispIntf:  ReadabilityStatisticDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209AF-0000-0000-C000-000000000046}
// *********************************************************************//
  ReadabilityStatisticDisp = dispinterface
    ['{000209AF-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Name: WideString readonly dispid 0;
    property Value: Single readonly dispid 1;
  end;

// *********************************************************************//
// Interface: Versions
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B3-0000-0000-C000-000000000046}
// *********************************************************************//
  Versions = interface(IDispatch)
    ['{000209B3-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_AutoVersion: WdAutoVersions; safecall;
    procedure Set_AutoVersion(prop: WdAutoVersions); safecall;
    function Item(Index: Integer): Version; safecall;
    procedure Save(var Comment: OleVariant); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property AutoVersion: WdAutoVersions read Get_AutoVersion write Set_AutoVersion;
  end;

// *********************************************************************//
// DispIntf:  VersionsDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B3-0000-0000-C000-000000000046}
// *********************************************************************//
  VersionsDisp = dispinterface
    ['{000209B3-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property AutoVersion: WdAutoVersions dispid 3;
    function Item(Index: Integer): Version; dispid 0;
    procedure Save(var Comment: OleVariant); dispid 11;
  end;

// *********************************************************************//
// Interface: Version
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B4-0000-0000-C000-000000000046}
// *********************************************************************//
  Version = interface(IDispatch)
    ['{000209B4-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_SavedBy: WideString; safecall;
    function Get_Comment: WideString; safecall;
    function Get_Date: TDateTime; safecall;
    function Get_Index: Integer; safecall;
    procedure OpenOld; safecall;
    procedure Delete; safecall;
    function Open: WordDocument; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property SavedBy: WideString read Get_SavedBy;
    property Comment: WideString read Get_Comment;
    property Date: TDateTime read Get_Date;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  VersionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B4-0000-0000-C000-000000000046}
// *********************************************************************//
  VersionDisp = dispinterface
    ['{000209B4-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property SavedBy: WideString readonly dispid 1003;
    property Comment: WideString readonly dispid 1004;
    property Date: TDateTime readonly dispid 1005;
    property Index: Integer readonly dispid 2;
    procedure OpenOld; dispid 101;
    procedure Delete; dispid 102;
    function Open: WordDocument; dispid 103;
  end;

// *********************************************************************//
// Interface: Options
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B7-0000-0000-C000-000000000046}
// *********************************************************************//
  Options = interface(IDispatch)
    ['{000209B7-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AllowAccentedUppercase: WordBool; safecall;
    procedure Set_AllowAccentedUppercase(prop: WordBool); safecall;
    function Get_WPHelp: WordBool; safecall;
    procedure Set_WPHelp(prop: WordBool); safecall;
    function Get_WPDocNavKeys: WordBool; safecall;
    procedure Set_WPDocNavKeys(prop: WordBool); safecall;
    function Get_Pagination: WordBool; safecall;
    procedure Set_Pagination(prop: WordBool); safecall;
    function Get_BlueScreen: WordBool; safecall;
    procedure Set_BlueScreen(prop: WordBool); safecall;
    function Get_EnableSound: WordBool; safecall;
    procedure Set_EnableSound(prop: WordBool); safecall;
    function Get_ConfirmConversions: WordBool; safecall;
    procedure Set_ConfirmConversions(prop: WordBool); safecall;
    function Get_UpdateLinksAtOpen: WordBool; safecall;
    procedure Set_UpdateLinksAtOpen(prop: WordBool); safecall;
    function Get_SendMailAttach: WordBool; safecall;
    procedure Set_SendMailAttach(prop: WordBool); safecall;
    function Get_MeasurementUnit: WdMeasurementUnits; safecall;
    procedure Set_MeasurementUnit(prop: WdMeasurementUnits); safecall;
    function Get_ButtonFieldClicks: Integer; safecall;
    procedure Set_ButtonFieldClicks(prop: Integer); safecall;
    function Get_ShortMenuNames: WordBool; safecall;
    procedure Set_ShortMenuNames(prop: WordBool); safecall;
    function Get_RTFInClipboard: WordBool; safecall;
    procedure Set_RTFInClipboard(prop: WordBool); safecall;
    function Get_UpdateFieldsAtPrint: WordBool; safecall;
    procedure Set_UpdateFieldsAtPrint(prop: WordBool); safecall;
    function Get_PrintProperties: WordBool; safecall;
    procedure Set_PrintProperties(prop: WordBool); safecall;
    function Get_PrintFieldCodes: WordBool; safecall;
    procedure Set_PrintFieldCodes(prop: WordBool); safecall;
    function Get_PrintComments: WordBool; safecall;
    procedure Set_PrintComments(prop: WordBool); safecall;
    function Get_PrintHiddenText: WordBool; safecall;
    procedure Set_PrintHiddenText(prop: WordBool); safecall;
    function Get_EnvelopeFeederInstalled: WordBool; safecall;
    function Get_UpdateLinksAtPrint: WordBool; safecall;
    procedure Set_UpdateLinksAtPrint(prop: WordBool); safecall;
    function Get_PrintBackground: WordBool; safecall;
    procedure Set_PrintBackground(prop: WordBool); safecall;
    function Get_PrintDrawingObjects: WordBool; safecall;
    procedure Set_PrintDrawingObjects(prop: WordBool); safecall;
    function Get_DefaultTray: WideString; safecall;
    procedure Set_DefaultTray(const prop: WideString); safecall;
    function Get_DefaultTrayID: Integer; safecall;
    procedure Set_DefaultTrayID(prop: Integer); safecall;
    function Get_CreateBackup: WordBool; safecall;
    procedure Set_CreateBackup(prop: WordBool); safecall;
    function Get_AllowFastSave: WordBool; safecall;
    procedure Set_AllowFastSave(prop: WordBool); safecall;
    function Get_SavePropertiesPrompt: WordBool; safecall;
    procedure Set_SavePropertiesPrompt(prop: WordBool); safecall;
    function Get_SaveNormalPrompt: WordBool; safecall;
    procedure Set_SaveNormalPrompt(prop: WordBool); safecall;
    function Get_SaveInterval: Integer; safecall;
    procedure Set_SaveInterval(prop: Integer); safecall;
    function Get_BackgroundSave: WordBool; safecall;
    procedure Set_BackgroundSave(prop: WordBool); safecall;
    function Get_InsertedTextMark: WdInsertedTextMark; safecall;
    procedure Set_InsertedTextMark(prop: WdInsertedTextMark); safecall;
    function Get_DeletedTextMark: WdDeletedTextMark; safecall;
    procedure Set_DeletedTextMark(prop: WdDeletedTextMark); safecall;
    function Get_RevisedLinesMark: WdRevisedLinesMark; safecall;
    procedure Set_RevisedLinesMark(prop: WdRevisedLinesMark); safecall;
    function Get_InsertedTextColor: WdColorIndex; safecall;
    procedure Set_InsertedTextColor(prop: WdColorIndex); safecall;
    function Get_DeletedTextColor: WdColorIndex; safecall;
    procedure Set_DeletedTextColor(prop: WdColorIndex); safecall;
    function Get_RevisedLinesColor: WdColorIndex; safecall;
    procedure Set_RevisedLinesColor(prop: WdColorIndex); safecall;
    function Get_DefaultFilePath(Path: WdDefaultFilePath): WideString; safecall;
    procedure Set_DefaultFilePath(Path: WdDefaultFilePath; const prop: WideString); safecall;
    function Get_Overtype: WordBool; safecall;
    procedure Set_Overtype(prop: WordBool); safecall;
    function Get_ReplaceSelection: WordBool; safecall;
    procedure Set_ReplaceSelection(prop: WordBool); safecall;
    function Get_AllowDragAndDrop: WordBool; safecall;
    procedure Set_AllowDragAndDrop(prop: WordBool); safecall;
    function Get_AutoWordSelection: WordBool; safecall;
    procedure Set_AutoWordSelection(prop: WordBool); safecall;
    function Get_INSKeyForPaste: WordBool; safecall;
    procedure Set_INSKeyForPaste(prop: WordBool); safecall;
    function Get_SmartCutPaste: WordBool; safecall;
    procedure Set_SmartCutPaste(prop: WordBool); safecall;
    function Get_TabIndentKey: WordBool; safecall;
    procedure Set_TabIndentKey(prop: WordBool); safecall;
    function Get_PictureEditor: WideString; safecall;
    procedure Set_PictureEditor(const prop: WideString); safecall;
    function Get_AnimateScreenMovements: WordBool; safecall;
    procedure Set_AnimateScreenMovements(prop: WordBool); safecall;
    function Get_VirusProtection: WordBool; safecall;
    procedure Set_VirusProtection(prop: WordBool); safecall;
    function Get_RevisedPropertiesMark: WdRevisedPropertiesMark; safecall;
    procedure Set_RevisedPropertiesMark(prop: WdRevisedPropertiesMark); safecall;
    function Get_RevisedPropertiesColor: WdColorIndex; safecall;
    procedure Set_RevisedPropertiesColor(prop: WdColorIndex); safecall;
    function Get_SnapToGrid: WordBool; safecall;
    procedure Set_SnapToGrid(prop: WordBool); safecall;
    function Get_SnapToShapes: WordBool; safecall;
    procedure Set_SnapToShapes(prop: WordBool); safecall;
    function Get_GridDistanceHorizontal: Single; safecall;
    procedure Set_GridDistanceHorizontal(prop: Single); safecall;
    function Get_GridDistanceVertical: Single; safecall;
    procedure Set_GridDistanceVertical(prop: Single); safecall;
    function Get_GridOriginHorizontal: Single; safecall;
    procedure Set_GridOriginHorizontal(prop: Single); safecall;
    function Get_GridOriginVertical: Single; safecall;
    procedure Set_GridOriginVertical(prop: Single); safecall;
    function Get_InlineConversion: WordBool; safecall;
    procedure Set_InlineConversion(prop: WordBool); safecall;
    function Get_IMEAutomaticControl: WordBool; safecall;
    procedure Set_IMEAutomaticControl(prop: WordBool); safecall;
    function Get_AutoFormatApplyHeadings: WordBool; safecall;
    procedure Set_AutoFormatApplyHeadings(prop: WordBool); safecall;
    function Get_AutoFormatApplyLists: WordBool; safecall;
    procedure Set_AutoFormatApplyLists(prop: WordBool); safecall;
    function Get_AutoFormatApplyBulletedLists: WordBool; safecall;
    procedure Set_AutoFormatApplyBulletedLists(prop: WordBool); safecall;
    function Get_AutoFormatApplyOtherParas: WordBool; safecall;
    procedure Set_AutoFormatApplyOtherParas(prop: WordBool); safecall;
    function Get_AutoFormatReplaceQuotes: WordBool; safecall;
    procedure Set_AutoFormatReplaceQuotes(prop: WordBool); safecall;
    function Get_AutoFormatReplaceSymbols: WordBool; safecall;
    procedure Set_AutoFormatReplaceSymbols(prop: WordBool); safecall;
    function Get_AutoFormatReplaceOrdinals: WordBool; safecall;
    procedure Set_AutoFormatReplaceOrdinals(prop: WordBool); safecall;
    function Get_AutoFormatReplaceFractions: WordBool; safecall;
    procedure Set_AutoFormatReplaceFractions(prop: WordBool); safecall;
    function Get_AutoFormatReplacePlainTextEmphasis: WordBool; safecall;
    procedure Set_AutoFormatReplacePlainTextEmphasis(prop: WordBool); safecall;
    function Get_AutoFormatPreserveStyles: WordBool; safecall;
    procedure Set_AutoFormatPreserveStyles(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyHeadings: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyHeadings(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyBorders: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyBorders(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyBulletedLists: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyBulletedLists(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyNumberedLists: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyNumberedLists(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceQuotes: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceQuotes(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceSymbols: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceSymbols(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceOrdinals: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceOrdinals(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceFractions: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceFractions(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplacePlainTextEmphasis(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeFormatListItemBeginning: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeFormatListItemBeginning(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeDefineStyles: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeDefineStyles(prop: WordBool); safecall;
    function Get_AutoFormatPlainTextWordMail: WordBool; safecall;
    procedure Set_AutoFormatPlainTextWordMail(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceHyperlinks: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceHyperlinks(prop: WordBool); safecall;
    function Get_AutoFormatReplaceHyperlinks: WordBool; safecall;
    procedure Set_AutoFormatReplaceHyperlinks(prop: WordBool); safecall;
    function Get_DefaultHighlightColorIndex: WdColorIndex; safecall;
    procedure Set_DefaultHighlightColorIndex(prop: WdColorIndex); safecall;
    function Get_DefaultBorderLineStyle: WdLineStyle; safecall;
    procedure Set_DefaultBorderLineStyle(prop: WdLineStyle); safecall;
    function Get_CheckSpellingAsYouType: WordBool; safecall;
    procedure Set_CheckSpellingAsYouType(prop: WordBool); safecall;
    function Get_CheckGrammarAsYouType: WordBool; safecall;
    procedure Set_CheckGrammarAsYouType(prop: WordBool); safecall;
    function Get_IgnoreInternetAndFileAddresses: WordBool; safecall;
    procedure Set_IgnoreInternetAndFileAddresses(prop: WordBool); safecall;
    function Get_ShowReadabilityStatistics: WordBool; safecall;
    procedure Set_ShowReadabilityStatistics(prop: WordBool); safecall;
    function Get_IgnoreUppercase: WordBool; safecall;
    procedure Set_IgnoreUppercase(prop: WordBool); safecall;
    function Get_IgnoreMixedDigits: WordBool; safecall;
    procedure Set_IgnoreMixedDigits(prop: WordBool); safecall;
    function Get_SuggestFromMainDictionaryOnly: WordBool; safecall;
    procedure Set_SuggestFromMainDictionaryOnly(prop: WordBool); safecall;
    function Get_SuggestSpellingCorrections: WordBool; safecall;
    procedure Set_SuggestSpellingCorrections(prop: WordBool); safecall;
    function Get_DefaultBorderLineWidth: WdLineWidth; safecall;
    procedure Set_DefaultBorderLineWidth(prop: WdLineWidth); safecall;
    function Get_CheckGrammarWithSpelling: WordBool; safecall;
    procedure Set_CheckGrammarWithSpelling(prop: WordBool); safecall;
    function Get_DefaultOpenFormat: WdOpenFormat; safecall;
    procedure Set_DefaultOpenFormat(prop: WdOpenFormat); safecall;
    function Get_PrintDraft: WordBool; safecall;
    procedure Set_PrintDraft(prop: WordBool); safecall;
    function Get_PrintReverse: WordBool; safecall;
    procedure Set_PrintReverse(prop: WordBool); safecall;
    function Get_MapPaperSize: WordBool; safecall;
    procedure Set_MapPaperSize(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyTables: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyTables(prop: WordBool); safecall;
    function Get_AutoFormatApplyFirstIndents: WordBool; safecall;
    procedure Set_AutoFormatApplyFirstIndents(prop: WordBool); safecall;
    function Get_AutoFormatMatchParentheses: WordBool; safecall;
    procedure Set_AutoFormatMatchParentheses(prop: WordBool); safecall;
    function Get_AutoFormatReplaceFarEastDashes: WordBool; safecall;
    procedure Set_AutoFormatReplaceFarEastDashes(prop: WordBool); safecall;
    function Get_AutoFormatDeleteAutoSpaces: WordBool; safecall;
    procedure Set_AutoFormatDeleteAutoSpaces(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyFirstIndents: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyFirstIndents(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyDates: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyDates(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyClosings: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyClosings(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeMatchParentheses: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeMatchParentheses(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceFarEastDashes: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceFarEastDashes(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeDeleteAutoSpaces: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeDeleteAutoSpaces(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeInsertClosings: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeInsertClosings(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeAutoLetterWizard: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeAutoLetterWizard(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeInsertOvers: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeInsertOvers(prop: WordBool); safecall;
    function Get_DisplayGridLines: WordBool; safecall;
    procedure Set_DisplayGridLines(prop: WordBool); safecall;
    function Get_MatchFuzzyCase: WordBool; safecall;
    procedure Set_MatchFuzzyCase(prop: WordBool); safecall;
    function Get_MatchFuzzyByte: WordBool; safecall;
    procedure Set_MatchFuzzyByte(prop: WordBool); safecall;
    function Get_MatchFuzzyHiragana: WordBool; safecall;
    procedure Set_MatchFuzzyHiragana(prop: WordBool); safecall;
    function Get_MatchFuzzySmallKana: WordBool; safecall;
    procedure Set_MatchFuzzySmallKana(prop: WordBool); safecall;
    function Get_MatchFuzzyDash: WordBool; safecall;
    procedure Set_MatchFuzzyDash(prop: WordBool); safecall;
    function Get_MatchFuzzyIterationMark: WordBool; safecall;
    procedure Set_MatchFuzzyIterationMark(prop: WordBool); safecall;
    function Get_MatchFuzzyKanji: WordBool; safecall;
    procedure Set_MatchFuzzyKanji(prop: WordBool); safecall;
    function Get_MatchFuzzyOldKana: WordBool; safecall;
    procedure Set_MatchFuzzyOldKana(prop: WordBool); safecall;
    function Get_MatchFuzzyProlongedSoundMark: WordBool; safecall;
    procedure Set_MatchFuzzyProlongedSoundMark(prop: WordBool); safecall;
    function Get_MatchFuzzyDZ: WordBool; safecall;
    procedure Set_MatchFuzzyDZ(prop: WordBool); safecall;
    function Get_MatchFuzzyBV: WordBool; safecall;
    procedure Set_MatchFuzzyBV(prop: WordBool); safecall;
    function Get_MatchFuzzyTC: WordBool; safecall;
    procedure Set_MatchFuzzyTC(prop: WordBool); safecall;
    function Get_MatchFuzzyHF: WordBool; safecall;
    procedure Set_MatchFuzzyHF(prop: WordBool); safecall;
    function Get_MatchFuzzyZJ: WordBool; safecall;
    procedure Set_MatchFuzzyZJ(prop: WordBool); safecall;
    function Get_MatchFuzzyAY: WordBool; safecall;
    procedure Set_MatchFuzzyAY(prop: WordBool); safecall;
    function Get_MatchFuzzyKiKu: WordBool; safecall;
    procedure Set_MatchFuzzyKiKu(prop: WordBool); safecall;
    function Get_MatchFuzzyPunctuation: WordBool; safecall;
    procedure Set_MatchFuzzyPunctuation(prop: WordBool); safecall;
    function Get_MatchFuzzySpace: WordBool; safecall;
    procedure Set_MatchFuzzySpace(prop: WordBool); safecall;
    function Get_ApplyFarEastFontsToAscii: WordBool; safecall;
    procedure Set_ApplyFarEastFontsToAscii(prop: WordBool); safecall;
    function Get_ConvertHighAnsiToFarEast: WordBool; safecall;
    procedure Set_ConvertHighAnsiToFarEast(prop: WordBool); safecall;
    function Get_PrintOddPagesInAscendingOrder: WordBool; safecall;
    procedure Set_PrintOddPagesInAscendingOrder(prop: WordBool); safecall;
    function Get_PrintEvenPagesInAscendingOrder: WordBool; safecall;
    procedure Set_PrintEvenPagesInAscendingOrder(prop: WordBool); safecall;
    function Get_DefaultBorderColorIndex: WdColorIndex; safecall;
    procedure Set_DefaultBorderColorIndex(prop: WdColorIndex); safecall;
    function Get_EnableMisusedWordsDictionary: WordBool; safecall;
    procedure Set_EnableMisusedWordsDictionary(prop: WordBool); safecall;
    function Get_AllowCombinedAuxiliaryForms: WordBool; safecall;
    procedure Set_AllowCombinedAuxiliaryForms(prop: WordBool); safecall;
    function Get_HangulHanjaFastConversion: WordBool; safecall;
    procedure Set_HangulHanjaFastConversion(prop: WordBool); safecall;
    function Get_CheckHangulEndings: WordBool; safecall;
    procedure Set_CheckHangulEndings(prop: WordBool); safecall;
    function Get_EnableHangulHanjaRecentOrdering: WordBool; safecall;
    procedure Set_EnableHangulHanjaRecentOrdering(prop: WordBool); safecall;
    function Get_MultipleWordConversionsMode: WdMultipleWordConversionsMode; safecall;
    procedure Set_MultipleWordConversionsMode(prop: WdMultipleWordConversionsMode); safecall;
    procedure SetWPHelpOptions(var CommandKeyHelp: OleVariant; var DocNavigationKeys: OleVariant; 
                               var MouseSimulation: OleVariant; var DemoGuidance: OleVariant; 
                               var DemoSpeed: OleVariant; var HelpType: OleVariant); safecall;
    function Get_DefaultBorderColor: WdColor; safecall;
    procedure Set_DefaultBorderColor(prop: WdColor); safecall;
    function Get_AllowPixelUnits: WordBool; safecall;
    procedure Set_AllowPixelUnits(prop: WordBool); safecall;
    function Get_UseCharacterUnit: WordBool; safecall;
    procedure Set_UseCharacterUnit(prop: WordBool); safecall;
    function Get_AllowCompoundNounProcessing: WordBool; safecall;
    procedure Set_AllowCompoundNounProcessing(prop: WordBool); safecall;
    function Get_AutoKeyboardSwitching: WordBool; safecall;
    procedure Set_AutoKeyboardSwitching(prop: WordBool); safecall;
    function Get_DocumentViewDirection: WdDocumentViewDirection; safecall;
    procedure Set_DocumentViewDirection(prop: WdDocumentViewDirection); safecall;
    function Get_ArabicNumeral: WdArabicNumeral; safecall;
    procedure Set_ArabicNumeral(prop: WdArabicNumeral); safecall;
    function Get_MonthNames: WdMonthNames; safecall;
    procedure Set_MonthNames(prop: WdMonthNames); safecall;
    function Get_CursorMovement: WdCursorMovement; safecall;
    procedure Set_CursorMovement(prop: WdCursorMovement); safecall;
    function Get_VisualSelection: WdVisualSelection; safecall;
    procedure Set_VisualSelection(prop: WdVisualSelection); safecall;
    function Get_ShowDiacritics: WordBool; safecall;
    procedure Set_ShowDiacritics(prop: WordBool); safecall;
    function Get_ShowControlCharacters: WordBool; safecall;
    procedure Set_ShowControlCharacters(prop: WordBool); safecall;
    function Get_AddControlCharacters: WordBool; safecall;
    procedure Set_AddControlCharacters(prop: WordBool); safecall;
    function Get_AddBiDirectionalMarksWhenSavingTextFile: WordBool; safecall;
    procedure Set_AddBiDirectionalMarksWhenSavingTextFile(prop: WordBool); safecall;
    function Get_StrictInitialAlefHamza: WordBool; safecall;
    procedure Set_StrictInitialAlefHamza(prop: WordBool); safecall;
    function Get_StrictFinalYaa: WordBool; safecall;
    procedure Set_StrictFinalYaa(prop: WordBool); safecall;
    function Get_HebrewMode: WdHebSpellStart; safecall;
    procedure Set_HebrewMode(prop: WdHebSpellStart); safecall;
    function Get_ArabicMode: WdAraSpeller; safecall;
    procedure Set_ArabicMode(prop: WdAraSpeller); safecall;
    function Get_AllowClickAndTypeMouse: WordBool; safecall;
    procedure Set_AllowClickAndTypeMouse(prop: WordBool); safecall;
    function Get_UseGermanSpellingReform: WordBool; safecall;
    procedure Set_UseGermanSpellingReform(prop: WordBool); safecall;
    function Get_InterpretHighAnsi: WdHighAnsiText; safecall;
    procedure Set_InterpretHighAnsi(prop: WdHighAnsiText); safecall;
    function Get_AddHebDoubleQuote: WordBool; safecall;
    procedure Set_AddHebDoubleQuote(prop: WordBool); safecall;
    function Get_UseDiffDiacColor: WordBool; safecall;
    procedure Set_UseDiffDiacColor(prop: WordBool); safecall;
    function Get_DiacriticColorVal: WdColor; safecall;
    procedure Set_DiacriticColorVal(prop: WdColor); safecall;
    function Get_OptimizeForWord97byDefault: WordBool; safecall;
    procedure Set_OptimizeForWord97byDefault(prop: WordBool); safecall;
    function Get_LocalNetworkFile: WordBool; safecall;
    procedure Set_LocalNetworkFile(prop: WordBool); safecall;
    function Get_TypeNReplace: WordBool; safecall;
    procedure Set_TypeNReplace(prop: WordBool); safecall;
    function Get_SequenceCheck: WordBool; safecall;
    procedure Set_SequenceCheck(prop: WordBool); safecall;
    function Get_BackgroundOpen: WordBool; safecall;
    procedure Set_BackgroundOpen(prop: WordBool); safecall;
    function Get_DisableFeaturesbyDefault: WordBool; safecall;
    procedure Set_DisableFeaturesbyDefault(prop: WordBool); safecall;
    function Get_PasteAdjustWordSpacing: WordBool; safecall;
    procedure Set_PasteAdjustWordSpacing(prop: WordBool); safecall;
    function Get_PasteAdjustParagraphSpacing: WordBool; safecall;
    procedure Set_PasteAdjustParagraphSpacing(prop: WordBool); safecall;
    function Get_PasteAdjustTableFormatting: WordBool; safecall;
    procedure Set_PasteAdjustTableFormatting(prop: WordBool); safecall;
    function Get_PasteSmartStyleBehavior: WordBool; safecall;
    procedure Set_PasteSmartStyleBehavior(prop: WordBool); safecall;
    function Get_PasteMergeFromPPT: WordBool; safecall;
    procedure Set_PasteMergeFromPPT(prop: WordBool); safecall;
    function Get_PasteMergeFromXL: WordBool; safecall;
    procedure Set_PasteMergeFromXL(prop: WordBool); safecall;
    function Get_CtrlClickHyperlinkToOpen: WordBool; safecall;
    procedure Set_CtrlClickHyperlinkToOpen(prop: WordBool); safecall;
    function Get_PictureWrapType: WdWrapTypeMerged; safecall;
    procedure Set_PictureWrapType(prop: WdWrapTypeMerged); safecall;
    function Get_DisableFeaturesIntroducedAfterbyDefault: WdDisableFeaturesIntroducedAfter; safecall;
    procedure Set_DisableFeaturesIntroducedAfterbyDefault(prop: WdDisableFeaturesIntroducedAfter); safecall;
    function Get_PasteSmartCutPaste: WordBool; safecall;
    procedure Set_PasteSmartCutPaste(prop: WordBool); safecall;
    function Get_DisplayPasteOptions: WordBool; safecall;
    procedure Set_DisplayPasteOptions(prop: WordBool); safecall;
    function Get_PromptUpdateStyle: WordBool; safecall;
    procedure Set_PromptUpdateStyle(prop: WordBool); safecall;
    function Get_DefaultEPostageApp: WideString; safecall;
    procedure Set_DefaultEPostageApp(const prop: WideString); safecall;
    function Get_DefaultTextEncoding: MsoEncoding; safecall;
    procedure Set_DefaultTextEncoding(prop: MsoEncoding); safecall;
    function Get_LabelSmartTags: WordBool; safecall;
    procedure Set_LabelSmartTags(prop: WordBool); safecall;
    function Get_DisplaySmartTagButtons: WordBool; safecall;
    procedure Set_DisplaySmartTagButtons(prop: WordBool); safecall;
    function Get_WarnBeforeSavingPrintingSendingMarkup: WordBool; safecall;
    procedure Set_WarnBeforeSavingPrintingSendingMarkup(prop: WordBool); safecall;
    function Get_StoreRSIDOnSave: WordBool; safecall;
    procedure Set_StoreRSIDOnSave(prop: WordBool); safecall;
    function Get_ShowFormatError: WordBool; safecall;
    procedure Set_ShowFormatError(prop: WordBool); safecall;
    function Get_FormatScanning: WordBool; safecall;
    procedure Set_FormatScanning(prop: WordBool); safecall;
    function Get_PasteMergeLists: WordBool; safecall;
    procedure Set_PasteMergeLists(prop: WordBool); safecall;
    function Get_AutoCreateNewDrawings: WordBool; safecall;
    procedure Set_AutoCreateNewDrawings(prop: WordBool); safecall;
    function Get_SmartParaSelection: WordBool; safecall;
    procedure Set_SmartParaSelection(prop: WordBool); safecall;
    function Get_RevisionsBalloonPrintOrientation: WdRevisionsBalloonPrintOrientation; safecall;
    procedure Set_RevisionsBalloonPrintOrientation(prop: WdRevisionsBalloonPrintOrientation); safecall;
    function Get_CommentsColor: WdColorIndex; safecall;
    procedure Set_CommentsColor(prop: WdColorIndex); safecall;
    function Get_PrintXMLTag: WordBool; safecall;
    procedure Set_PrintXMLTag(prop: WordBool); safecall;
    function Get_PrintBackgrounds: WordBool; safecall;
    procedure Set_PrintBackgrounds(prop: WordBool); safecall;
    function Get_AllowReadingMode: WordBool; safecall;
    procedure Set_AllowReadingMode(prop: WordBool); safecall;
    function Get_ShowMarkupOpenSave: WordBool; safecall;
    procedure Set_ShowMarkupOpenSave(prop: WordBool); safecall;
    function Get_SmartCursoring: WordBool; safecall;
    procedure Set_SmartCursoring(prop: WordBool); safecall;
    function Get_MoveToTextMark: WdMoveToTextMark; safecall;
    procedure Set_MoveToTextMark(prop: WdMoveToTextMark); safecall;
    function Get_MoveFromTextMark: WdMoveFromTextMark; safecall;
    procedure Set_MoveFromTextMark(prop: WdMoveFromTextMark); safecall;
    function Get_BibliographyStyle: WideString; safecall;
    procedure Set_BibliographyStyle(const prop: WideString); safecall;
    function Get_BibliographySort: WideString; safecall;
    procedure Set_BibliographySort(const prop: WideString); safecall;
    function Get_InsertedCellColor: WdCellColor; safecall;
    procedure Set_InsertedCellColor(prop: WdCellColor); safecall;
    function Get_DeletedCellColor: WdCellColor; safecall;
    procedure Set_DeletedCellColor(prop: WdCellColor); safecall;
    function Get_MergedCellColor: WdCellColor; safecall;
    procedure Set_MergedCellColor(prop: WdCellColor); safecall;
    function Get_SplitCellColor: WdCellColor; safecall;
    procedure Set_SplitCellColor(prop: WdCellColor); safecall;
    function Get_ShowSelectionFloaties: WordBool; safecall;
    procedure Set_ShowSelectionFloaties(prop: WordBool); safecall;
    function Get_ShowMenuFloaties: WordBool; safecall;
    procedure Set_ShowMenuFloaties(prop: WordBool); safecall;
    function Get_ShowDevTools: WordBool; safecall;
    procedure Set_ShowDevTools(prop: WordBool); safecall;
    function Get_EnableLivePreview: WordBool; safecall;
    procedure Set_EnableLivePreview(prop: WordBool); safecall;
    function Get_OMathAutoBuildUp: WordBool; safecall;
    procedure Set_OMathAutoBuildUp(prop: WordBool); safecall;
    function Get_AlwaysUseClearType: WordBool; safecall;
    procedure Set_AlwaysUseClearType(prop: WordBool); safecall;
    function Get_PasteFormatWithinDocument: WdPasteOptions; safecall;
    procedure Set_PasteFormatWithinDocument(prop: WdPasteOptions); safecall;
    function Get_PasteFormatBetweenDocuments: WdPasteOptions; safecall;
    procedure Set_PasteFormatBetweenDocuments(prop: WdPasteOptions); safecall;
    function Get_PasteFormatBetweenStyledDocuments: WdPasteOptions; safecall;
    procedure Set_PasteFormatBetweenStyledDocuments(prop: WdPasteOptions); safecall;
    function Get_PasteFormatFromExternalSource: WdPasteOptions; safecall;
    procedure Set_PasteFormatFromExternalSource(prop: WdPasteOptions); safecall;
    function Get_PasteOptionKeepBulletsAndNumbers: WordBool; safecall;
    procedure Set_PasteOptionKeepBulletsAndNumbers(prop: WordBool); safecall;
    function Get_INSKeyForOvertype: WordBool; safecall;
    procedure Set_INSKeyForOvertype(prop: WordBool); safecall;
    function Get_RepeatWord: WordBool; safecall;
    procedure Set_RepeatWord(prop: WordBool); safecall;
    function Get_FrenchReform: WdFrenchSpeller; safecall;
    procedure Set_FrenchReform(prop: WdFrenchSpeller); safecall;
    function Get_ContextualSpeller: WordBool; safecall;
    procedure Set_ContextualSpeller(prop: WordBool); safecall;
    function Get_MoveToTextColor: WdColorIndex; safecall;
    procedure Set_MoveToTextColor(prop: WdColorIndex); safecall;
    function Get_MoveFromTextColor: WdColorIndex; safecall;
    procedure Set_MoveFromTextColor(prop: WdColorIndex); safecall;
    function Get_OMathCopyLF: WordBool; safecall;
    procedure Set_OMathCopyLF(prop: WordBool); safecall;
    function Get_UseNormalStyleForList: WordBool; safecall;
    procedure Set_UseNormalStyleForList(prop: WordBool); safecall;
    function Get_AllowOpenInDraftView: WordBool; safecall;
    procedure Set_AllowOpenInDraftView(prop: WordBool); safecall;
    function Get_EnableLegacyIMEMode: WordBool; safecall;
    procedure Set_EnableLegacyIMEMode(prop: WordBool); safecall;
    function Get_DoNotPromptForConvert: WordBool; safecall;
    procedure Set_DoNotPromptForConvert(prop: WordBool); safecall;
    function Get_PrecisePositioning: WordBool; safecall;
    procedure Set_PrecisePositioning(prop: WordBool); safecall;
    function Get_UpdateStyleListBehavior: WdUpdateStyleListBehavior; safecall;
    procedure Set_UpdateStyleListBehavior(prop: WdUpdateStyleListBehavior); safecall;
    function Get_StrictTaaMarboota: WordBool; safecall;
    procedure Set_StrictTaaMarboota(prop: WordBool); safecall;
    function Get_StrictRussianE: WordBool; safecall;
    procedure Set_StrictRussianE(prop: WordBool); safecall;
    function Get_SpanishMode: WdSpanishSpeller; safecall;
    procedure Set_SpanishMode(prop: WdSpanishSpeller); safecall;
    function Get_PortugalReform: WdPortugueseReform; safecall;
    procedure Set_PortugalReform(prop: WdPortugueseReform); safecall;
    function Get_BrazilReform: WdPortugueseReform; safecall;
    procedure Set_BrazilReform(prop: WdPortugueseReform); safecall;
    function Get_UpdateFieldsWithTrackedChangesAtPrint: WordBool; safecall;
    procedure Set_UpdateFieldsWithTrackedChangesAtPrint(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AllowAccentedUppercase: WordBool read Get_AllowAccentedUppercase write Set_AllowAccentedUppercase;
    property WPHelp: WordBool read Get_WPHelp write Set_WPHelp;
    property WPDocNavKeys: WordBool read Get_WPDocNavKeys write Set_WPDocNavKeys;
    property Pagination: WordBool read Get_Pagination write Set_Pagination;
    property BlueScreen: WordBool read Get_BlueScreen write Set_BlueScreen;
    property EnableSound: WordBool read Get_EnableSound write Set_EnableSound;
    property ConfirmConversions: WordBool read Get_ConfirmConversions write Set_ConfirmConversions;
    property UpdateLinksAtOpen: WordBool read Get_UpdateLinksAtOpen write Set_UpdateLinksAtOpen;
    property SendMailAttach: WordBool read Get_SendMailAttach write Set_SendMailAttach;
    property MeasurementUnit: WdMeasurementUnits read Get_MeasurementUnit write Set_MeasurementUnit;
    property ButtonFieldClicks: Integer read Get_ButtonFieldClicks write Set_ButtonFieldClicks;
    property ShortMenuNames: WordBool read Get_ShortMenuNames write Set_ShortMenuNames;
    property RTFInClipboard: WordBool read Get_RTFInClipboard write Set_RTFInClipboard;
    property UpdateFieldsAtPrint: WordBool read Get_UpdateFieldsAtPrint write Set_UpdateFieldsAtPrint;
    property PrintProperties: WordBool read Get_PrintProperties write Set_PrintProperties;
    property PrintFieldCodes: WordBool read Get_PrintFieldCodes write Set_PrintFieldCodes;
    property PrintComments: WordBool read Get_PrintComments write Set_PrintComments;
    property PrintHiddenText: WordBool read Get_PrintHiddenText write Set_PrintHiddenText;
    property EnvelopeFeederInstalled: WordBool read Get_EnvelopeFeederInstalled;
    property UpdateLinksAtPrint: WordBool read Get_UpdateLinksAtPrint write Set_UpdateLinksAtPrint;
    property PrintBackground: WordBool read Get_PrintBackground write Set_PrintBackground;
    property PrintDrawingObjects: WordBool read Get_PrintDrawingObjects write Set_PrintDrawingObjects;
    property DefaultTray: WideString read Get_DefaultTray write Set_DefaultTray;
    property DefaultTrayID: Integer read Get_DefaultTrayID write Set_DefaultTrayID;
    property CreateBackup: WordBool read Get_CreateBackup write Set_CreateBackup;
    property AllowFastSave: WordBool read Get_AllowFastSave write Set_AllowFastSave;
    property SavePropertiesPrompt: WordBool read Get_SavePropertiesPrompt write Set_SavePropertiesPrompt;
    property SaveNormalPrompt: WordBool read Get_SaveNormalPrompt write Set_SaveNormalPrompt;
    property SaveInterval: Integer read Get_SaveInterval write Set_SaveInterval;
    property BackgroundSave: WordBool read Get_BackgroundSave write Set_BackgroundSave;
    property InsertedTextMark: WdInsertedTextMark read Get_InsertedTextMark write Set_InsertedTextMark;
    property DeletedTextMark: WdDeletedTextMark read Get_DeletedTextMark write Set_DeletedTextMark;
    property RevisedLinesMark: WdRevisedLinesMark read Get_RevisedLinesMark write Set_RevisedLinesMark;
    property InsertedTextColor: WdColorIndex read Get_InsertedTextColor write Set_InsertedTextColor;
    property DeletedTextColor: WdColorIndex read Get_DeletedTextColor write Set_DeletedTextColor;
    property RevisedLinesColor: WdColorIndex read Get_RevisedLinesColor write Set_RevisedLinesColor;
    property DefaultFilePath[Path: WdDefaultFilePath]: WideString read Get_DefaultFilePath write Set_DefaultFilePath;
    property Overtype: WordBool read Get_Overtype write Set_Overtype;
    property ReplaceSelection: WordBool read Get_ReplaceSelection write Set_ReplaceSelection;
    property AllowDragAndDrop: WordBool read Get_AllowDragAndDrop write Set_AllowDragAndDrop;
    property AutoWordSelection: WordBool read Get_AutoWordSelection write Set_AutoWordSelection;
    property INSKeyForPaste: WordBool read Get_INSKeyForPaste write Set_INSKeyForPaste;
    property SmartCutPaste: WordBool read Get_SmartCutPaste write Set_SmartCutPaste;
    property TabIndentKey: WordBool read Get_TabIndentKey write Set_TabIndentKey;
    property PictureEditor: WideString read Get_PictureEditor write Set_PictureEditor;
    property AnimateScreenMovements: WordBool read Get_AnimateScreenMovements write Set_AnimateScreenMovements;
    property VirusProtection: WordBool read Get_VirusProtection write Set_VirusProtection;
    property RevisedPropertiesMark: WdRevisedPropertiesMark read Get_RevisedPropertiesMark write Set_RevisedPropertiesMark;
    property RevisedPropertiesColor: WdColorIndex read Get_RevisedPropertiesColor write Set_RevisedPropertiesColor;
    property SnapToGrid: WordBool read Get_SnapToGrid write Set_SnapToGrid;
    property SnapToShapes: WordBool read Get_SnapToShapes write Set_SnapToShapes;
    property GridDistanceHorizontal: Single read Get_GridDistanceHorizontal write Set_GridDistanceHorizontal;
    property GridDistanceVertical: Single read Get_GridDistanceVertical write Set_GridDistanceVertical;
    property GridOriginHorizontal: Single read Get_GridOriginHorizontal write Set_GridOriginHorizontal;
    property GridOriginVertical: Single read Get_GridOriginVertical write Set_GridOriginVertical;
    property InlineConversion: WordBool read Get_InlineConversion write Set_InlineConversion;
    property IMEAutomaticControl: WordBool read Get_IMEAutomaticControl write Set_IMEAutomaticControl;
    property AutoFormatApplyHeadings: WordBool read Get_AutoFormatApplyHeadings write Set_AutoFormatApplyHeadings;
    property AutoFormatApplyLists: WordBool read Get_AutoFormatApplyLists write Set_AutoFormatApplyLists;
    property AutoFormatApplyBulletedLists: WordBool read Get_AutoFormatApplyBulletedLists write Set_AutoFormatApplyBulletedLists;
    property AutoFormatApplyOtherParas: WordBool read Get_AutoFormatApplyOtherParas write Set_AutoFormatApplyOtherParas;
    property AutoFormatReplaceQuotes: WordBool read Get_AutoFormatReplaceQuotes write Set_AutoFormatReplaceQuotes;
    property AutoFormatReplaceSymbols: WordBool read Get_AutoFormatReplaceSymbols write Set_AutoFormatReplaceSymbols;
    property AutoFormatReplaceOrdinals: WordBool read Get_AutoFormatReplaceOrdinals write Set_AutoFormatReplaceOrdinals;
    property AutoFormatReplaceFractions: WordBool read Get_AutoFormatReplaceFractions write Set_AutoFormatReplaceFractions;
    property AutoFormatReplacePlainTextEmphasis: WordBool read Get_AutoFormatReplacePlainTextEmphasis write Set_AutoFormatReplacePlainTextEmphasis;
    property AutoFormatPreserveStyles: WordBool read Get_AutoFormatPreserveStyles write Set_AutoFormatPreserveStyles;
    property AutoFormatAsYouTypeApplyHeadings: WordBool read Get_AutoFormatAsYouTypeApplyHeadings write Set_AutoFormatAsYouTypeApplyHeadings;
    property AutoFormatAsYouTypeApplyBorders: WordBool read Get_AutoFormatAsYouTypeApplyBorders write Set_AutoFormatAsYouTypeApplyBorders;
    property AutoFormatAsYouTypeApplyBulletedLists: WordBool read Get_AutoFormatAsYouTypeApplyBulletedLists write Set_AutoFormatAsYouTypeApplyBulletedLists;
    property AutoFormatAsYouTypeApplyNumberedLists: WordBool read Get_AutoFormatAsYouTypeApplyNumberedLists write Set_AutoFormatAsYouTypeApplyNumberedLists;
    property AutoFormatAsYouTypeReplaceQuotes: WordBool read Get_AutoFormatAsYouTypeReplaceQuotes write Set_AutoFormatAsYouTypeReplaceQuotes;
    property AutoFormatAsYouTypeReplaceSymbols: WordBool read Get_AutoFormatAsYouTypeReplaceSymbols write Set_AutoFormatAsYouTypeReplaceSymbols;
    property AutoFormatAsYouTypeReplaceOrdinals: WordBool read Get_AutoFormatAsYouTypeReplaceOrdinals write Set_AutoFormatAsYouTypeReplaceOrdinals;
    property AutoFormatAsYouTypeReplaceFractions: WordBool read Get_AutoFormatAsYouTypeReplaceFractions write Set_AutoFormatAsYouTypeReplaceFractions;
    property AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool read Get_AutoFormatAsYouTypeReplacePlainTextEmphasis write Set_AutoFormatAsYouTypeReplacePlainTextEmphasis;
    property AutoFormatAsYouTypeFormatListItemBeginning: WordBool read Get_AutoFormatAsYouTypeFormatListItemBeginning write Set_AutoFormatAsYouTypeFormatListItemBeginning;
    property AutoFormatAsYouTypeDefineStyles: WordBool read Get_AutoFormatAsYouTypeDefineStyles write Set_AutoFormatAsYouTypeDefineStyles;
    property AutoFormatPlainTextWordMail: WordBool read Get_AutoFormatPlainTextWordMail write Set_AutoFormatPlainTextWordMail;
    property AutoFormatAsYouTypeReplaceHyperlinks: WordBool read Get_AutoFormatAsYouTypeReplaceHyperlinks write Set_AutoFormatAsYouTypeReplaceHyperlinks;
    property AutoFormatReplaceHyperlinks: WordBool read Get_AutoFormatReplaceHyperlinks write Set_AutoFormatReplaceHyperlinks;
    property DefaultHighlightColorIndex: WdColorIndex read Get_DefaultHighlightColorIndex write Set_DefaultHighlightColorIndex;
    property DefaultBorderLineStyle: WdLineStyle read Get_DefaultBorderLineStyle write Set_DefaultBorderLineStyle;
    property CheckSpellingAsYouType: WordBool read Get_CheckSpellingAsYouType write Set_CheckSpellingAsYouType;
    property CheckGrammarAsYouType: WordBool read Get_CheckGrammarAsYouType write Set_CheckGrammarAsYouType;
    property IgnoreInternetAndFileAddresses: WordBool read Get_IgnoreInternetAndFileAddresses write Set_IgnoreInternetAndFileAddresses;
    property ShowReadabilityStatistics: WordBool read Get_ShowReadabilityStatistics write Set_ShowReadabilityStatistics;
    property IgnoreUppercase: WordBool read Get_IgnoreUppercase write Set_IgnoreUppercase;
    property IgnoreMixedDigits: WordBool read Get_IgnoreMixedDigits write Set_IgnoreMixedDigits;
    property SuggestFromMainDictionaryOnly: WordBool read Get_SuggestFromMainDictionaryOnly write Set_SuggestFromMainDictionaryOnly;
    property SuggestSpellingCorrections: WordBool read Get_SuggestSpellingCorrections write Set_SuggestSpellingCorrections;
    property DefaultBorderLineWidth: WdLineWidth read Get_DefaultBorderLineWidth write Set_DefaultBorderLineWidth;
    property CheckGrammarWithSpelling: WordBool read Get_CheckGrammarWithSpelling write Set_CheckGrammarWithSpelling;
    property DefaultOpenFormat: WdOpenFormat read Get_DefaultOpenFormat write Set_DefaultOpenFormat;
    property PrintDraft: WordBool read Get_PrintDraft write Set_PrintDraft;
    property PrintReverse: WordBool read Get_PrintReverse write Set_PrintReverse;
    property MapPaperSize: WordBool read Get_MapPaperSize write Set_MapPaperSize;
    property AutoFormatAsYouTypeApplyTables: WordBool read Get_AutoFormatAsYouTypeApplyTables write Set_AutoFormatAsYouTypeApplyTables;
    property AutoFormatApplyFirstIndents: WordBool read Get_AutoFormatApplyFirstIndents write Set_AutoFormatApplyFirstIndents;
    property AutoFormatMatchParentheses: WordBool read Get_AutoFormatMatchParentheses write Set_AutoFormatMatchParentheses;
    property AutoFormatReplaceFarEastDashes: WordBool read Get_AutoFormatReplaceFarEastDashes write Set_AutoFormatReplaceFarEastDashes;
    property AutoFormatDeleteAutoSpaces: WordBool read Get_AutoFormatDeleteAutoSpaces write Set_AutoFormatDeleteAutoSpaces;
    property AutoFormatAsYouTypeApplyFirstIndents: WordBool read Get_AutoFormatAsYouTypeApplyFirstIndents write Set_AutoFormatAsYouTypeApplyFirstIndents;
    property AutoFormatAsYouTypeApplyDates: WordBool read Get_AutoFormatAsYouTypeApplyDates write Set_AutoFormatAsYouTypeApplyDates;
    property AutoFormatAsYouTypeApplyClosings: WordBool read Get_AutoFormatAsYouTypeApplyClosings write Set_AutoFormatAsYouTypeApplyClosings;
    property AutoFormatAsYouTypeMatchParentheses: WordBool read Get_AutoFormatAsYouTypeMatchParentheses write Set_AutoFormatAsYouTypeMatchParentheses;
    property AutoFormatAsYouTypeReplaceFarEastDashes: WordBool read Get_AutoFormatAsYouTypeReplaceFarEastDashes write Set_AutoFormatAsYouTypeReplaceFarEastDashes;
    property AutoFormatAsYouTypeDeleteAutoSpaces: WordBool read Get_AutoFormatAsYouTypeDeleteAutoSpaces write Set_AutoFormatAsYouTypeDeleteAutoSpaces;
    property AutoFormatAsYouTypeInsertClosings: WordBool read Get_AutoFormatAsYouTypeInsertClosings write Set_AutoFormatAsYouTypeInsertClosings;
    property AutoFormatAsYouTypeAutoLetterWizard: WordBool read Get_AutoFormatAsYouTypeAutoLetterWizard write Set_AutoFormatAsYouTypeAutoLetterWizard;
    property AutoFormatAsYouTypeInsertOvers: WordBool read Get_AutoFormatAsYouTypeInsertOvers write Set_AutoFormatAsYouTypeInsertOvers;
    property DisplayGridLines: WordBool read Get_DisplayGridLines write Set_DisplayGridLines;
    property MatchFuzzyCase: WordBool read Get_MatchFuzzyCase write Set_MatchFuzzyCase;
    property MatchFuzzyByte: WordBool read Get_MatchFuzzyByte write Set_MatchFuzzyByte;
    property MatchFuzzyHiragana: WordBool read Get_MatchFuzzyHiragana write Set_MatchFuzzyHiragana;
    property MatchFuzzySmallKana: WordBool read Get_MatchFuzzySmallKana write Set_MatchFuzzySmallKana;
    property MatchFuzzyDash: WordBool read Get_MatchFuzzyDash write Set_MatchFuzzyDash;
    property MatchFuzzyIterationMark: WordBool read Get_MatchFuzzyIterationMark write Set_MatchFuzzyIterationMark;
    property MatchFuzzyKanji: WordBool read Get_MatchFuzzyKanji write Set_MatchFuzzyKanji;
    property MatchFuzzyOldKana: WordBool read Get_MatchFuzzyOldKana write Set_MatchFuzzyOldKana;
    property MatchFuzzyProlongedSoundMark: WordBool read Get_MatchFuzzyProlongedSoundMark write Set_MatchFuzzyProlongedSoundMark;
    property MatchFuzzyDZ: WordBool read Get_MatchFuzzyDZ write Set_MatchFuzzyDZ;
    property MatchFuzzyBV: WordBool read Get_MatchFuzzyBV write Set_MatchFuzzyBV;
    property MatchFuzzyTC: WordBool read Get_MatchFuzzyTC write Set_MatchFuzzyTC;
    property MatchFuzzyHF: WordBool read Get_MatchFuzzyHF write Set_MatchFuzzyHF;
    property MatchFuzzyZJ: WordBool read Get_MatchFuzzyZJ write Set_MatchFuzzyZJ;
    property MatchFuzzyAY: WordBool read Get_MatchFuzzyAY write Set_MatchFuzzyAY;
    property MatchFuzzyKiKu: WordBool read Get_MatchFuzzyKiKu write Set_MatchFuzzyKiKu;
    property MatchFuzzyPunctuation: WordBool read Get_MatchFuzzyPunctuation write Set_MatchFuzzyPunctuation;
    property MatchFuzzySpace: WordBool read Get_MatchFuzzySpace write Set_MatchFuzzySpace;
    property ApplyFarEastFontsToAscii: WordBool read Get_ApplyFarEastFontsToAscii write Set_ApplyFarEastFontsToAscii;
    property ConvertHighAnsiToFarEast: WordBool read Get_ConvertHighAnsiToFarEast write Set_ConvertHighAnsiToFarEast;
    property PrintOddPagesInAscendingOrder: WordBool read Get_PrintOddPagesInAscendingOrder write Set_PrintOddPagesInAscendingOrder;
    property PrintEvenPagesInAscendingOrder: WordBool read Get_PrintEvenPagesInAscendingOrder write Set_PrintEvenPagesInAscendingOrder;
    property DefaultBorderColorIndex: WdColorIndex read Get_DefaultBorderColorIndex write Set_DefaultBorderColorIndex;
    property EnableMisusedWordsDictionary: WordBool read Get_EnableMisusedWordsDictionary write Set_EnableMisusedWordsDictionary;
    property AllowCombinedAuxiliaryForms: WordBool read Get_AllowCombinedAuxiliaryForms write Set_AllowCombinedAuxiliaryForms;
    property HangulHanjaFastConversion: WordBool read Get_HangulHanjaFastConversion write Set_HangulHanjaFastConversion;
    property CheckHangulEndings: WordBool read Get_CheckHangulEndings write Set_CheckHangulEndings;
    property EnableHangulHanjaRecentOrdering: WordBool read Get_EnableHangulHanjaRecentOrdering write Set_EnableHangulHanjaRecentOrdering;
    property MultipleWordConversionsMode: WdMultipleWordConversionsMode read Get_MultipleWordConversionsMode write Set_MultipleWordConversionsMode;
    property DefaultBorderColor: WdColor read Get_DefaultBorderColor write Set_DefaultBorderColor;
    property AllowPixelUnits: WordBool read Get_AllowPixelUnits write Set_AllowPixelUnits;
    property UseCharacterUnit: WordBool read Get_UseCharacterUnit write Set_UseCharacterUnit;
    property AllowCompoundNounProcessing: WordBool read Get_AllowCompoundNounProcessing write Set_AllowCompoundNounProcessing;
    property AutoKeyboardSwitching: WordBool read Get_AutoKeyboardSwitching write Set_AutoKeyboardSwitching;
    property DocumentViewDirection: WdDocumentViewDirection read Get_DocumentViewDirection write Set_DocumentViewDirection;
    property ArabicNumeral: WdArabicNumeral read Get_ArabicNumeral write Set_ArabicNumeral;
    property MonthNames: WdMonthNames read Get_MonthNames write Set_MonthNames;
    property CursorMovement: WdCursorMovement read Get_CursorMovement write Set_CursorMovement;
    property VisualSelection: WdVisualSelection read Get_VisualSelection write Set_VisualSelection;
    property ShowDiacritics: WordBool read Get_ShowDiacritics write Set_ShowDiacritics;
    property ShowControlCharacters: WordBool read Get_ShowControlCharacters write Set_ShowControlCharacters;
    property AddControlCharacters: WordBool read Get_AddControlCharacters write Set_AddControlCharacters;
    property AddBiDirectionalMarksWhenSavingTextFile: WordBool read Get_AddBiDirectionalMarksWhenSavingTextFile write Set_AddBiDirectionalMarksWhenSavingTextFile;
    property StrictInitialAlefHamza: WordBool read Get_StrictInitialAlefHamza write Set_StrictInitialAlefHamza;
    property StrictFinalYaa: WordBool read Get_StrictFinalYaa write Set_StrictFinalYaa;
    property HebrewMode: WdHebSpellStart read Get_HebrewMode write Set_HebrewMode;
    property ArabicMode: WdAraSpeller read Get_ArabicMode write Set_ArabicMode;
    property AllowClickAndTypeMouse: WordBool read Get_AllowClickAndTypeMouse write Set_AllowClickAndTypeMouse;
    property UseGermanSpellingReform: WordBool read Get_UseGermanSpellingReform write Set_UseGermanSpellingReform;
    property InterpretHighAnsi: WdHighAnsiText read Get_InterpretHighAnsi write Set_InterpretHighAnsi;
    property AddHebDoubleQuote: WordBool read Get_AddHebDoubleQuote write Set_AddHebDoubleQuote;
    property UseDiffDiacColor: WordBool read Get_UseDiffDiacColor write Set_UseDiffDiacColor;
    property DiacriticColorVal: WdColor read Get_DiacriticColorVal write Set_DiacriticColorVal;
    property OptimizeForWord97byDefault: WordBool read Get_OptimizeForWord97byDefault write Set_OptimizeForWord97byDefault;
    property LocalNetworkFile: WordBool read Get_LocalNetworkFile write Set_LocalNetworkFile;
    property TypeNReplace: WordBool read Get_TypeNReplace write Set_TypeNReplace;
    property SequenceCheck: WordBool read Get_SequenceCheck write Set_SequenceCheck;
    property BackgroundOpen: WordBool read Get_BackgroundOpen write Set_BackgroundOpen;
    property DisableFeaturesbyDefault: WordBool read Get_DisableFeaturesbyDefault write Set_DisableFeaturesbyDefault;
    property PasteAdjustWordSpacing: WordBool read Get_PasteAdjustWordSpacing write Set_PasteAdjustWordSpacing;
    property PasteAdjustParagraphSpacing: WordBool read Get_PasteAdjustParagraphSpacing write Set_PasteAdjustParagraphSpacing;
    property PasteAdjustTableFormatting: WordBool read Get_PasteAdjustTableFormatting write Set_PasteAdjustTableFormatting;
    property PasteSmartStyleBehavior: WordBool read Get_PasteSmartStyleBehavior write Set_PasteSmartStyleBehavior;
    property PasteMergeFromPPT: WordBool read Get_PasteMergeFromPPT write Set_PasteMergeFromPPT;
    property PasteMergeFromXL: WordBool read Get_PasteMergeFromXL write Set_PasteMergeFromXL;
    property CtrlClickHyperlinkToOpen: WordBool read Get_CtrlClickHyperlinkToOpen write Set_CtrlClickHyperlinkToOpen;
    property PictureWrapType: WdWrapTypeMerged read Get_PictureWrapType write Set_PictureWrapType;
    property DisableFeaturesIntroducedAfterbyDefault: WdDisableFeaturesIntroducedAfter read Get_DisableFeaturesIntroducedAfterbyDefault write Set_DisableFeaturesIntroducedAfterbyDefault;
    property PasteSmartCutPaste: WordBool read Get_PasteSmartCutPaste write Set_PasteSmartCutPaste;
    property DisplayPasteOptions: WordBool read Get_DisplayPasteOptions write Set_DisplayPasteOptions;
    property PromptUpdateStyle: WordBool read Get_PromptUpdateStyle write Set_PromptUpdateStyle;
    property DefaultEPostageApp: WideString read Get_DefaultEPostageApp write Set_DefaultEPostageApp;
    property DefaultTextEncoding: MsoEncoding read Get_DefaultTextEncoding write Set_DefaultTextEncoding;
    property LabelSmartTags: WordBool read Get_LabelSmartTags write Set_LabelSmartTags;
    property DisplaySmartTagButtons: WordBool read Get_DisplaySmartTagButtons write Set_DisplaySmartTagButtons;
    property WarnBeforeSavingPrintingSendingMarkup: WordBool read Get_WarnBeforeSavingPrintingSendingMarkup write Set_WarnBeforeSavingPrintingSendingMarkup;
    property StoreRSIDOnSave: WordBool read Get_StoreRSIDOnSave write Set_StoreRSIDOnSave;
    property ShowFormatError: WordBool read Get_ShowFormatError write Set_ShowFormatError;
    property FormatScanning: WordBool read Get_FormatScanning write Set_FormatScanning;
    property PasteMergeLists: WordBool read Get_PasteMergeLists write Set_PasteMergeLists;
    property AutoCreateNewDrawings: WordBool read Get_AutoCreateNewDrawings write Set_AutoCreateNewDrawings;
    property SmartParaSelection: WordBool read Get_SmartParaSelection write Set_SmartParaSelection;
    property RevisionsBalloonPrintOrientation: WdRevisionsBalloonPrintOrientation read Get_RevisionsBalloonPrintOrientation write Set_RevisionsBalloonPrintOrientation;
    property CommentsColor: WdColorIndex read Get_CommentsColor write Set_CommentsColor;
    property PrintXMLTag: WordBool read Get_PrintXMLTag write Set_PrintXMLTag;
    property PrintBackgrounds: WordBool read Get_PrintBackgrounds write Set_PrintBackgrounds;
    property AllowReadingMode: WordBool read Get_AllowReadingMode write Set_AllowReadingMode;
    property ShowMarkupOpenSave: WordBool read Get_ShowMarkupOpenSave write Set_ShowMarkupOpenSave;
    property SmartCursoring: WordBool read Get_SmartCursoring write Set_SmartCursoring;
    property MoveToTextMark: WdMoveToTextMark read Get_MoveToTextMark write Set_MoveToTextMark;
    property MoveFromTextMark: WdMoveFromTextMark read Get_MoveFromTextMark write Set_MoveFromTextMark;
    property BibliographyStyle: WideString read Get_BibliographyStyle write Set_BibliographyStyle;
    property BibliographySort: WideString read Get_BibliographySort write Set_BibliographySort;
    property InsertedCellColor: WdCellColor read Get_InsertedCellColor write Set_InsertedCellColor;
    property DeletedCellColor: WdCellColor read Get_DeletedCellColor write Set_DeletedCellColor;
    property MergedCellColor: WdCellColor read Get_MergedCellColor write Set_MergedCellColor;
    property SplitCellColor: WdCellColor read Get_SplitCellColor write Set_SplitCellColor;
    property ShowSelectionFloaties: WordBool read Get_ShowSelectionFloaties write Set_ShowSelectionFloaties;
    property ShowMenuFloaties: WordBool read Get_ShowMenuFloaties write Set_ShowMenuFloaties;
    property ShowDevTools: WordBool read Get_ShowDevTools write Set_ShowDevTools;
    property EnableLivePreview: WordBool read Get_EnableLivePreview write Set_EnableLivePreview;
    property OMathAutoBuildUp: WordBool read Get_OMathAutoBuildUp write Set_OMathAutoBuildUp;
    property AlwaysUseClearType: WordBool read Get_AlwaysUseClearType write Set_AlwaysUseClearType;
    property PasteFormatWithinDocument: WdPasteOptions read Get_PasteFormatWithinDocument write Set_PasteFormatWithinDocument;
    property PasteFormatBetweenDocuments: WdPasteOptions read Get_PasteFormatBetweenDocuments write Set_PasteFormatBetweenDocuments;
    property PasteFormatBetweenStyledDocuments: WdPasteOptions read Get_PasteFormatBetweenStyledDocuments write Set_PasteFormatBetweenStyledDocuments;
    property PasteFormatFromExternalSource: WdPasteOptions read Get_PasteFormatFromExternalSource write Set_PasteFormatFromExternalSource;
    property PasteOptionKeepBulletsAndNumbers: WordBool read Get_PasteOptionKeepBulletsAndNumbers write Set_PasteOptionKeepBulletsAndNumbers;
    property INSKeyForOvertype: WordBool read Get_INSKeyForOvertype write Set_INSKeyForOvertype;
    property RepeatWord: WordBool read Get_RepeatWord write Set_RepeatWord;
    property FrenchReform: WdFrenchSpeller read Get_FrenchReform write Set_FrenchReform;
    property ContextualSpeller: WordBool read Get_ContextualSpeller write Set_ContextualSpeller;
    property MoveToTextColor: WdColorIndex read Get_MoveToTextColor write Set_MoveToTextColor;
    property MoveFromTextColor: WdColorIndex read Get_MoveFromTextColor write Set_MoveFromTextColor;
    property OMathCopyLF: WordBool read Get_OMathCopyLF write Set_OMathCopyLF;
    property UseNormalStyleForList: WordBool read Get_UseNormalStyleForList write Set_UseNormalStyleForList;
    property AllowOpenInDraftView: WordBool read Get_AllowOpenInDraftView write Set_AllowOpenInDraftView;
    property EnableLegacyIMEMode: WordBool read Get_EnableLegacyIMEMode write Set_EnableLegacyIMEMode;
    property DoNotPromptForConvert: WordBool read Get_DoNotPromptForConvert write Set_DoNotPromptForConvert;
    property PrecisePositioning: WordBool read Get_PrecisePositioning write Set_PrecisePositioning;
    property UpdateStyleListBehavior: WdUpdateStyleListBehavior read Get_UpdateStyleListBehavior write Set_UpdateStyleListBehavior;
    property StrictTaaMarboota: WordBool read Get_StrictTaaMarboota write Set_StrictTaaMarboota;
    property StrictRussianE: WordBool read Get_StrictRussianE write Set_StrictRussianE;
    property SpanishMode: WdSpanishSpeller read Get_SpanishMode write Set_SpanishMode;
    property PortugalReform: WdPortugueseReform read Get_PortugalReform write Set_PortugalReform;
    property BrazilReform: WdPortugueseReform read Get_BrazilReform write Set_BrazilReform;
    property UpdateFieldsWithTrackedChangesAtPrint: WordBool read Get_UpdateFieldsWithTrackedChangesAtPrint write Set_UpdateFieldsWithTrackedChangesAtPrint;
  end;

// *********************************************************************//
// DispIntf:  OptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209B7-0000-0000-C000-000000000046}
// *********************************************************************//
  OptionsDisp = dispinterface
    ['{000209B7-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property AllowAccentedUppercase: WordBool dispid 1;
    property WPHelp: WordBool dispid 17;
    property WPDocNavKeys: WordBool dispid 18;
    property Pagination: WordBool dispid 19;
    property BlueScreen: WordBool dispid 20;
    property EnableSound: WordBool dispid 21;
    property ConfirmConversions: WordBool dispid 22;
    property UpdateLinksAtOpen: WordBool dispid 23;
    property SendMailAttach: WordBool dispid 24;
    property MeasurementUnit: WdMeasurementUnits dispid 26;
    property ButtonFieldClicks: Integer dispid 27;
    property ShortMenuNames: WordBool dispid 28;
    property RTFInClipboard: WordBool dispid 29;
    property UpdateFieldsAtPrint: WordBool dispid 30;
    property PrintProperties: WordBool dispid 31;
    property PrintFieldCodes: WordBool dispid 32;
    property PrintComments: WordBool dispid 33;
    property PrintHiddenText: WordBool dispid 34;
    property EnvelopeFeederInstalled: WordBool readonly dispid 35;
    property UpdateLinksAtPrint: WordBool dispid 36;
    property PrintBackground: WordBool dispid 37;
    property PrintDrawingObjects: WordBool dispid 38;
    property DefaultTray: WideString dispid 39;
    property DefaultTrayID: Integer dispid 40;
    property CreateBackup: WordBool dispid 41;
    property AllowFastSave: WordBool dispid 42;
    property SavePropertiesPrompt: WordBool dispid 43;
    property SaveNormalPrompt: WordBool dispid 44;
    property SaveInterval: Integer dispid 45;
    property BackgroundSave: WordBool dispid 46;
    property InsertedTextMark: WdInsertedTextMark dispid 57;
    property DeletedTextMark: WdDeletedTextMark dispid 58;
    property RevisedLinesMark: WdRevisedLinesMark dispid 59;
    property InsertedTextColor: WdColorIndex dispid 60;
    property DeletedTextColor: WdColorIndex dispid 61;
    property RevisedLinesColor: WdColorIndex dispid 62;
    property DefaultFilePath[Path: WdDefaultFilePath]: WideString dispid 65;
    property Overtype: WordBool dispid 66;
    property ReplaceSelection: WordBool dispid 67;
    property AllowDragAndDrop: WordBool dispid 68;
    property AutoWordSelection: WordBool dispid 69;
    property INSKeyForPaste: WordBool dispid 70;
    property SmartCutPaste: WordBool dispid 71;
    property TabIndentKey: WordBool dispid 72;
    property PictureEditor: WideString dispid 73;
    property AnimateScreenMovements: WordBool dispid 74;
    property VirusProtection: WordBool dispid 75;
    property RevisedPropertiesMark: WdRevisedPropertiesMark dispid 76;
    property RevisedPropertiesColor: WdColorIndex dispid 77;
    property SnapToGrid: WordBool dispid 79;
    property SnapToShapes: WordBool dispid 80;
    property GridDistanceHorizontal: Single dispid 81;
    property GridDistanceVertical: Single dispid 82;
    property GridOriginHorizontal: Single dispid 83;
    property GridOriginVertical: Single dispid 84;
    property InlineConversion: WordBool dispid 86;
    property IMEAutomaticControl: WordBool dispid 87;
    property AutoFormatApplyHeadings: WordBool dispid 250;
    property AutoFormatApplyLists: WordBool dispid 251;
    property AutoFormatApplyBulletedLists: WordBool dispid 252;
    property AutoFormatApplyOtherParas: WordBool dispid 253;
    property AutoFormatReplaceQuotes: WordBool dispid 254;
    property AutoFormatReplaceSymbols: WordBool dispid 255;
    property AutoFormatReplaceOrdinals: WordBool dispid 256;
    property AutoFormatReplaceFractions: WordBool dispid 257;
    property AutoFormatReplacePlainTextEmphasis: WordBool dispid 258;
    property AutoFormatPreserveStyles: WordBool dispid 259;
    property AutoFormatAsYouTypeApplyHeadings: WordBool dispid 260;
    property AutoFormatAsYouTypeApplyBorders: WordBool dispid 261;
    property AutoFormatAsYouTypeApplyBulletedLists: WordBool dispid 262;
    property AutoFormatAsYouTypeApplyNumberedLists: WordBool dispid 263;
    property AutoFormatAsYouTypeReplaceQuotes: WordBool dispid 264;
    property AutoFormatAsYouTypeReplaceSymbols: WordBool dispid 265;
    property AutoFormatAsYouTypeReplaceOrdinals: WordBool dispid 266;
    property AutoFormatAsYouTypeReplaceFractions: WordBool dispid 267;
    property AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool dispid 268;
    property AutoFormatAsYouTypeFormatListItemBeginning: WordBool dispid 269;
    property AutoFormatAsYouTypeDefineStyles: WordBool dispid 270;
    property AutoFormatPlainTextWordMail: WordBool dispid 271;
    property AutoFormatAsYouTypeReplaceHyperlinks: WordBool dispid 272;
    property AutoFormatReplaceHyperlinks: WordBool dispid 273;
    property DefaultHighlightColorIndex: WdColorIndex dispid 274;
    property DefaultBorderLineStyle: WdLineStyle dispid 275;
    property CheckSpellingAsYouType: WordBool dispid 276;
    property CheckGrammarAsYouType: WordBool dispid 277;
    property IgnoreInternetAndFileAddresses: WordBool dispid 278;
    property ShowReadabilityStatistics: WordBool dispid 279;
    property IgnoreUppercase: WordBool dispid 280;
    property IgnoreMixedDigits: WordBool dispid 281;
    property SuggestFromMainDictionaryOnly: WordBool dispid 282;
    property SuggestSpellingCorrections: WordBool dispid 283;
    property DefaultBorderLineWidth: WdLineWidth dispid 284;
    property CheckGrammarWithSpelling: WordBool dispid 285;
    property DefaultOpenFormat: WdOpenFormat dispid 286;
    property PrintDraft: WordBool dispid 287;
    property PrintReverse: WordBool dispid 288;
    property MapPaperSize: WordBool dispid 289;
    property AutoFormatAsYouTypeApplyTables: WordBool dispid 290;
    property AutoFormatApplyFirstIndents: WordBool dispid 291;
    property AutoFormatMatchParentheses: WordBool dispid 294;
    property AutoFormatReplaceFarEastDashes: WordBool dispid 295;
    property AutoFormatDeleteAutoSpaces: WordBool dispid 296;
    property AutoFormatAsYouTypeApplyFirstIndents: WordBool dispid 297;
    property AutoFormatAsYouTypeApplyDates: WordBool dispid 298;
    property AutoFormatAsYouTypeApplyClosings: WordBool dispid 299;
    property AutoFormatAsYouTypeMatchParentheses: WordBool dispid 300;
    property AutoFormatAsYouTypeReplaceFarEastDashes: WordBool dispid 301;
    property AutoFormatAsYouTypeDeleteAutoSpaces: WordBool dispid 302;
    property AutoFormatAsYouTypeInsertClosings: WordBool dispid 303;
    property AutoFormatAsYouTypeAutoLetterWizard: WordBool dispid 304;
    property AutoFormatAsYouTypeInsertOvers: WordBool dispid 305;
    property DisplayGridLines: WordBool dispid 306;
    property MatchFuzzyCase: WordBool dispid 309;
    property MatchFuzzyByte: WordBool dispid 310;
    property MatchFuzzyHiragana: WordBool dispid 311;
    property MatchFuzzySmallKana: WordBool dispid 312;
    property MatchFuzzyDash: WordBool dispid 313;
    property MatchFuzzyIterationMark: WordBool dispid 314;
    property MatchFuzzyKanji: WordBool dispid 315;
    property MatchFuzzyOldKana: WordBool dispid 316;
    property MatchFuzzyProlongedSoundMark: WordBool dispid 317;
    property MatchFuzzyDZ: WordBool dispid 318;
    property MatchFuzzyBV: WordBool dispid 319;
    property MatchFuzzyTC: WordBool dispid 320;
    property MatchFuzzyHF: WordBool dispid 321;
    property MatchFuzzyZJ: WordBool dispid 322;
    property MatchFuzzyAY: WordBool dispid 323;
    property MatchFuzzyKiKu: WordBool dispid 324;
    property MatchFuzzyPunctuation: WordBool dispid 325;
    property MatchFuzzySpace: WordBool dispid 326;
    property ApplyFarEastFontsToAscii: WordBool dispid 327;
    property ConvertHighAnsiToFarEast: WordBool dispid 328;
    property PrintOddPagesInAscendingOrder: WordBool dispid 330;
    property PrintEvenPagesInAscendingOrder: WordBool dispid 331;
    property DefaultBorderColorIndex: WdColorIndex dispid 337;
    property EnableMisusedWordsDictionary: WordBool dispid 338;
    property AllowCombinedAuxiliaryForms: WordBool dispid 339;
    property HangulHanjaFastConversion: WordBool dispid 340;
    property CheckHangulEndings: WordBool dispid 341;
    property EnableHangulHanjaRecentOrdering: WordBool dispid 342;
    property MultipleWordConversionsMode: WdMultipleWordConversionsMode dispid 343;
    procedure SetWPHelpOptions(var CommandKeyHelp: OleVariant; var DocNavigationKeys: OleVariant; 
                               var MouseSimulation: OleVariant; var DemoGuidance: OleVariant; 
                               var DemoSpeed: OleVariant; var HelpType: OleVariant); dispid 333;
    property DefaultBorderColor: WdColor dispid 344;
    property AllowPixelUnits: WordBool dispid 345;
    property UseCharacterUnit: WordBool dispid 346;
    property AllowCompoundNounProcessing: WordBool dispid 347;
    property AutoKeyboardSwitching: WordBool dispid 399;
    property DocumentViewDirection: WdDocumentViewDirection dispid 400;
    property ArabicNumeral: WdArabicNumeral dispid 401;
    property MonthNames: WdMonthNames dispid 402;
    property CursorMovement: WdCursorMovement dispid 403;
    property VisualSelection: WdVisualSelection dispid 404;
    property ShowDiacritics: WordBool dispid 405;
    property ShowControlCharacters: WordBool dispid 406;
    property AddControlCharacters: WordBool dispid 407;
    property AddBiDirectionalMarksWhenSavingTextFile: WordBool dispid 408;
    property StrictInitialAlefHamza: WordBool dispid 409;
    property StrictFinalYaa: WordBool dispid 410;
    property HebrewMode: WdHebSpellStart dispid 411;
    property ArabicMode: WdAraSpeller dispid 412;
    property AllowClickAndTypeMouse: WordBool dispid 413;
    property UseGermanSpellingReform: WordBool dispid 415;
    property InterpretHighAnsi: WdHighAnsiText dispid 418;
    property AddHebDoubleQuote: WordBool dispid 419;
    property UseDiffDiacColor: WordBool dispid 420;
    property DiacriticColorVal: WdColor dispid 421;
    property OptimizeForWord97byDefault: WordBool dispid 423;
    property LocalNetworkFile: WordBool dispid 424;
    property TypeNReplace: WordBool dispid 425;
    property SequenceCheck: WordBool dispid 426;
    property BackgroundOpen: WordBool dispid 427;
    property DisableFeaturesbyDefault: WordBool dispid 428;
    property PasteAdjustWordSpacing: WordBool dispid 429;
    property PasteAdjustParagraphSpacing: WordBool dispid 430;
    property PasteAdjustTableFormatting: WordBool dispid 431;
    property PasteSmartStyleBehavior: WordBool dispid 432;
    property PasteMergeFromPPT: WordBool dispid 433;
    property PasteMergeFromXL: WordBool dispid 434;
    property CtrlClickHyperlinkToOpen: WordBool dispid 435;
    property PictureWrapType: WdWrapTypeMerged dispid 436;
    property DisableFeaturesIntroducedAfterbyDefault: WdDisableFeaturesIntroducedAfter dispid 437;
    property PasteSmartCutPaste: WordBool dispid 438;
    property DisplayPasteOptions: WordBool dispid 439;
    property PromptUpdateStyle: WordBool dispid 441;
    property DefaultEPostageApp: WideString dispid 442;
    property DefaultTextEncoding: MsoEncoding dispid 443;
    property LabelSmartTags: WordBool dispid 444;
    property DisplaySmartTagButtons: WordBool dispid 445;
    property WarnBeforeSavingPrintingSendingMarkup: WordBool dispid 446;
    property StoreRSIDOnSave: WordBool dispid 447;
    property ShowFormatError: WordBool dispid 448;
    property FormatScanning: WordBool dispid 449;
    property PasteMergeLists: WordBool dispid 450;
    property AutoCreateNewDrawings: WordBool dispid 451;
    property SmartParaSelection: WordBool dispid 452;
    property RevisionsBalloonPrintOrientation: WdRevisionsBalloonPrintOrientation dispid 453;
    property CommentsColor: WdColorIndex dispid 454;
    property PrintXMLTag: WordBool dispid 455;
    property PrintBackgrounds: WordBool dispid 456;
    property AllowReadingMode: WordBool dispid 457;
    property ShowMarkupOpenSave: WordBool dispid 458;
    property SmartCursoring: WordBool dispid 459;
    property MoveToTextMark: WdMoveToTextMark dispid 460;
    property MoveFromTextMark: WdMoveFromTextMark dispid 461;
    property BibliographyStyle: WideString dispid 462;
    property BibliographySort: WideString dispid 463;
    property InsertedCellColor: WdCellColor dispid 464;
    property DeletedCellColor: WdCellColor dispid 465;
    property MergedCellColor: WdCellColor dispid 466;
    property SplitCellColor: WdCellColor dispid 467;
    property ShowSelectionFloaties: WordBool dispid 468;
    property ShowMenuFloaties: WordBool dispid 469;
    property ShowDevTools: WordBool dispid 470;
    property EnableLivePreview: WordBool dispid 472;
    property OMathAutoBuildUp: WordBool dispid 474;
    property AlwaysUseClearType: WordBool dispid 476;
    property PasteFormatWithinDocument: WdPasteOptions dispid 477;
    property PasteFormatBetweenDocuments: WdPasteOptions dispid 478;
    property PasteFormatBetweenStyledDocuments: WdPasteOptions dispid 479;
    property PasteFormatFromExternalSource: WdPasteOptions dispid 480;
    property PasteOptionKeepBulletsAndNumbers: WordBool dispid 481;
    property INSKeyForOvertype: WordBool dispid 482;
    property RepeatWord: WordBool dispid 483;
    property FrenchReform: WdFrenchSpeller dispid 484;
    property ContextualSpeller: WordBool dispid 485;
    property MoveToTextColor: WdColorIndex dispid 486;
    property MoveFromTextColor: WdColorIndex dispid 487;
    property OMathCopyLF: WordBool dispid 488;
    property UseNormalStyleForList: WordBool dispid 489;
    property AllowOpenInDraftView: WordBool dispid 490;
    property EnableLegacyIMEMode: WordBool dispid 492;
    property DoNotPromptForConvert: WordBool dispid 493;
    property PrecisePositioning: WordBool dispid 494;
    property UpdateStyleListBehavior: WdUpdateStyleListBehavior dispid 495;
    property StrictTaaMarboota: WordBool dispid 496;
    property StrictRussianE: WordBool dispid 497;
    property SpanishMode: WdSpanishSpeller dispid 498;
    property PortugalReform: WdPortugueseReform dispid 501;
    property BrazilReform: WdPortugueseReform dispid 502;
    property UpdateFieldsWithTrackedChangesAtPrint: WordBool dispid 503;
  end;

// *********************************************************************//
// Interface: MailMessage
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BA-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMessage = interface(IDispatch)
    ['{000209BA-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure CheckName; safecall;
    procedure Delete; safecall;
    procedure DisplayMoveDialog; safecall;
    procedure DisplayProperties; safecall;
    procedure DisplaySelectNamesDialog; safecall;
    procedure Forward; safecall;
    procedure GoToNext; safecall;
    procedure GoToPrevious; safecall;
    procedure Reply; safecall;
    procedure ReplyAll; safecall;
    procedure ToggleHeader; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  MailMessageDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BA-0000-0000-C000-000000000046}
// *********************************************************************//
  MailMessageDisp = dispinterface
    ['{000209BA-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure CheckName; dispid 334;
    procedure Delete; dispid 335;
    procedure DisplayMoveDialog; dispid 336;
    procedure DisplayProperties; dispid 337;
    procedure DisplaySelectNamesDialog; dispid 338;
    procedure Forward; dispid 339;
    procedure GoToNext; dispid 340;
    procedure GoToPrevious; dispid 341;
    procedure Reply; dispid 342;
    procedure ReplyAll; dispid 343;
    procedure ToggleHeader; dispid 344;
  end;

// *********************************************************************//
// Interface: ProofreadingErrors
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BB-0000-0000-C000-000000000046}
// *********************************************************************//
  ProofreadingErrors = interface(IDispatch)
    ['{000209BB-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_type_: WdProofreadingErrorType; safecall;
    function Item(Index: Integer): WordRange; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property type_: WdProofreadingErrorType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  ProofreadingErrorsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BB-0000-0000-C000-000000000046}
// *********************************************************************//
  ProofreadingErrorsDisp = dispinterface
    ['{000209BB-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property type_: WdProofreadingErrorType readonly dispid 2;
    function Item(Index: Integer): WordRange; dispid 0;
  end;

// *********************************************************************//
// Interface: Mailer
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BD-0000-0000-C000-000000000046}
// *********************************************************************//
  Mailer = interface(IDispatch)
    ['{000209BD-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_BCCRecipients: OleVariant; safecall;
    procedure Set_BCCRecipients(var prop: OleVariant); safecall;
    function Get_CCRecipients: OleVariant; safecall;
    procedure Set_CCRecipients(var prop: OleVariant); safecall;
    function Get_Recipients: OleVariant; safecall;
    procedure Set_Recipients(var prop: OleVariant); safecall;
    function Get_Enclosures: OleVariant; safecall;
    procedure Set_Enclosures(var prop: OleVariant); safecall;
    function Get_Sender: WideString; safecall;
    function Get_SendDateTime: TDateTime; safecall;
    function Get_Received: WordBool; safecall;
    function Get_Subject: WideString; safecall;
    procedure Set_Subject(const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Sender: WideString read Get_Sender;
    property SendDateTime: TDateTime read Get_SendDateTime;
    property Received: WordBool read Get_Received;
    property Subject: WideString read Get_Subject write Set_Subject;
  end;

// *********************************************************************//
// DispIntf:  MailerDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209BD-0000-0000-C000-000000000046}
// *********************************************************************//
  MailerDisp = dispinterface
    ['{000209BD-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function BCCRecipients: OleVariant; dispid 100;
    function CCRecipients: OleVariant; dispid 101;
    function Recipients: OleVariant; dispid 102;
    function Enclosures: OleVariant; dispid 103;
    property Sender: WideString readonly dispid 104;
    property SendDateTime: TDateTime readonly dispid 105;
    property Received: WordBool readonly dispid 106;
    property Subject: WideString dispid 107;
  end;

// *********************************************************************//
// Interface: WrapFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C3-0000-0000-C000-000000000046}
// *********************************************************************//
  WrapFormat = interface(IDispatch)
    ['{000209C3-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_type_: WdWrapType; safecall;
    procedure Set_type_(prop: WdWrapType); safecall;
    function Get_Side: WdWrapSideType; safecall;
    procedure Set_Side(prop: WdWrapSideType); safecall;
    function Get_DistanceTop: Single; safecall;
    procedure Set_DistanceTop(prop: Single); safecall;
    function Get_DistanceBottom: Single; safecall;
    procedure Set_DistanceBottom(prop: Single); safecall;
    function Get_DistanceLeft: Single; safecall;
    procedure Set_DistanceLeft(prop: Single); safecall;
    function Get_DistanceRight: Single; safecall;
    procedure Set_DistanceRight(prop: Single); safecall;
    function Get_AllowOverlap: Integer; safecall;
    procedure Set_AllowOverlap(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property type_: WdWrapType read Get_type_ write Set_type_;
    property Side: WdWrapSideType read Get_Side write Set_Side;
    property DistanceTop: Single read Get_DistanceTop write Set_DistanceTop;
    property DistanceBottom: Single read Get_DistanceBottom write Set_DistanceBottom;
    property DistanceLeft: Single read Get_DistanceLeft write Set_DistanceLeft;
    property DistanceRight: Single read Get_DistanceRight write Set_DistanceRight;
    property AllowOverlap: Integer read Get_AllowOverlap write Set_AllowOverlap;
  end;

// *********************************************************************//
// DispIntf:  WrapFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C3-0000-0000-C000-000000000046}
// *********************************************************************//
  WrapFormatDisp = dispinterface
    ['{000209C3-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property type_: WdWrapType dispid 100;
    property Side: WdWrapSideType dispid 101;
    property DistanceTop: Single dispid 102;
    property DistanceBottom: Single dispid 103;
    property DistanceLeft: Single dispid 104;
    property DistanceRight: Single dispid 105;
    property AllowOverlap: Integer dispid 106;
  end;

// *********************************************************************//
// Interface: HangulAndAlphabetExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D1-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetExceptions = interface(IDispatch)
    ['{000209D1-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): HangulAndAlphabetException; safecall;
    function Add(const Name: WideString): HangulAndAlphabetException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  HangulAndAlphabetExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D1-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetExceptionsDisp = dispinterface
    ['{000209D1-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): HangulAndAlphabetException; dispid 0;
    function Add(const Name: WideString): HangulAndAlphabetException; dispid 101;
  end;

// *********************************************************************//
// Interface: HangulAndAlphabetException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D2-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetException = interface(IDispatch)
    ['{000209D2-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  HangulAndAlphabetExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D2-0000-0000-C000-000000000046}
// *********************************************************************//
  HangulAndAlphabetExceptionDisp = dispinterface
    ['{000209D2-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString readonly dispid 2;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: Adjustments
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C4-0000-0000-C000-000000000046}
// *********************************************************************//
  Adjustments = interface(IDispatch)
    ['{000209C4-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get_Item(Index: Integer): Single; safecall;
    procedure Set_Item(Index: Integer; prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Item[Index: Integer]: Single read Get_Item write Set_Item; default;
  end;

// *********************************************************************//
// DispIntf:  AdjustmentsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C4-0000-0000-C000-000000000046}
// *********************************************************************//
  AdjustmentsDisp = dispinterface
    ['{000209C4-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property Count: Integer readonly dispid 2;
    property Item[Index: Integer]: Single dispid 0; default;
  end;

// *********************************************************************//
// Interface: CalloutFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C5-0000-0000-C000-000000000046}
// *********************************************************************//
  CalloutFormat = interface(IDispatch)
    ['{000209C5-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Accent: MsoTriState; safecall;
    procedure Set_Accent(prop: MsoTriState); safecall;
    function Get_Angle: MsoCalloutAngleType; safecall;
    procedure Set_Angle(prop: MsoCalloutAngleType); safecall;
    function Get_AutoAttach: MsoTriState; safecall;
    procedure Set_AutoAttach(prop: MsoTriState); safecall;
    function Get_AutoLength: MsoTriState; safecall;
    function Get_Border: MsoTriState; safecall;
    procedure Set_Border(prop: MsoTriState); safecall;
    function Get_Drop: Single; safecall;
    function Get_DropType: MsoCalloutDropType; safecall;
    function Get_Gap: Single; safecall;
    procedure Set_Gap(prop: Single); safecall;
    function Get_Length: Single; safecall;
    function Get_type_: MsoCalloutType; safecall;
    procedure Set_type_(prop: MsoCalloutType); safecall;
    procedure AutomaticLength; safecall;
    procedure CustomDrop(Drop: Single); safecall;
    procedure CustomLength(Length: Single); safecall;
    procedure PresetDrop(DropType: MsoCalloutDropType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Accent: MsoTriState read Get_Accent write Set_Accent;
    property Angle: MsoCalloutAngleType read Get_Angle write Set_Angle;
    property AutoAttach: MsoTriState read Get_AutoAttach write Set_AutoAttach;
    property AutoLength: MsoTriState read Get_AutoLength;
    property Border: MsoTriState read Get_Border write Set_Border;
    property Drop: Single read Get_Drop;
    property DropType: MsoCalloutDropType read Get_DropType;
    property Gap: Single read Get_Gap write Set_Gap;
    property Length: Single read Get_Length;
    property type_: MsoCalloutType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  CalloutFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C5-0000-0000-C000-000000000046}
// *********************************************************************//
  CalloutFormatDisp = dispinterface
    ['{000209C5-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property Accent: MsoTriState dispid 100;
    property Angle: MsoCalloutAngleType dispid 101;
    property AutoAttach: MsoTriState dispid 102;
    property AutoLength: MsoTriState readonly dispid 103;
    property Border: MsoTriState dispid 104;
    property Drop: Single readonly dispid 105;
    property DropType: MsoCalloutDropType readonly dispid 106;
    property Gap: Single dispid 107;
    property Length: Single readonly dispid 108;
    property type_: MsoCalloutType dispid 109;
    procedure AutomaticLength; dispid 10;
    procedure CustomDrop(Drop: Single); dispid 11;
    procedure CustomLength(Length: Single); dispid 12;
    procedure PresetDrop(DropType: MsoCalloutDropType); dispid 13;
  end;

// *********************************************************************//
// Interface: ColorFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C6-0000-0000-C000-000000000046}
// *********************************************************************//
  ColorFormat = interface(IDispatch)
    ['{000209C6-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_RGB: Integer; safecall;
    procedure Set_RGB(prop: Integer); safecall;
    function Get_SchemeColor: Integer; safecall;
    procedure Set_SchemeColor(prop: Integer); safecall;
    function Get_type_: MsoColorType; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_TintAndShade: Single; safecall;
    procedure Set_TintAndShade(prop: Single); safecall;
    function Get_OverPrint: MsoTriState; safecall;
    procedure Set_OverPrint(prop: MsoTriState); safecall;
    function Get_Ink(Index: Integer): Single; safecall;
    procedure Set_Ink(Index: Integer; prop: Single); safecall;
    function Get_Cyan: Integer; safecall;
    procedure Set_Cyan(prop: Integer); safecall;
    function Get_Magenta: Integer; safecall;
    procedure Set_Magenta(prop: Integer); safecall;
    function Get_Yellow: Integer; safecall;
    procedure Set_Yellow(prop: Integer); safecall;
    function Get_Black: Integer; safecall;
    procedure Set_Black(prop: Integer); safecall;
    procedure SetCMYK(Cyan: Integer; Magenta: Integer; Yellow: Integer; Black: Integer); safecall;
    function Get_ObjectThemeColor: WdThemeColorIndex; safecall;
    procedure Set_ObjectThemeColor(prop: WdThemeColorIndex); safecall;
    function Get_Brightness: Single; safecall;
    procedure Set_Brightness(prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RGB: Integer read Get_RGB write Set_RGB;
    property SchemeColor: Integer read Get_SchemeColor write Set_SchemeColor;
    property type_: MsoColorType read Get_type_;
    property Name: WideString read Get_Name write Set_Name;
    property TintAndShade: Single read Get_TintAndShade write Set_TintAndShade;
    property OverPrint: MsoTriState read Get_OverPrint write Set_OverPrint;
    property Ink[Index: Integer]: Single read Get_Ink write Set_Ink;
    property Cyan: Integer read Get_Cyan write Set_Cyan;
    property Magenta: Integer read Get_Magenta write Set_Magenta;
    property Yellow: Integer read Get_Yellow write Set_Yellow;
    property Black: Integer read Get_Black write Set_Black;
    property ObjectThemeColor: WdThemeColorIndex read Get_ObjectThemeColor write Set_ObjectThemeColor;
    property Brightness: Single read Get_Brightness write Set_Brightness;
  end;

// *********************************************************************//
// DispIntf:  ColorFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C6-0000-0000-C000-000000000046}
// *********************************************************************//
  ColorFormatDisp = dispinterface
    ['{000209C6-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property RGB: Integer dispid 0;
    property SchemeColor: Integer dispid 100;
    property type_: MsoColorType readonly dispid 101;
    property Name: WideString dispid 102;
    property TintAndShade: Single dispid 103;
    property OverPrint: MsoTriState dispid 104;
    property Ink[Index: Integer]: Single dispid 105;
    property Cyan: Integer dispid 106;
    property Magenta: Integer dispid 107;
    property Yellow: Integer dispid 108;
    property Black: Integer dispid 109;
    procedure SetCMYK(Cyan: Integer; Magenta: Integer; Yellow: Integer; Black: Integer); dispid 110;
    property ObjectThemeColor: WdThemeColorIndex dispid 200;
    property Brightness: Single dispid 201;
  end;

// *********************************************************************//
// Interface: ConnectorFormat
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C7-0000-0000-C000-000000000046}
// *********************************************************************//
  ConnectorFormat = interface(IDispatch)
    ['{000209C7-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_BeginConnected: MsoTriState; safecall;
    function Get_BeginConnectedShape: Shape; safecall;
    function Get_BeginConnectionSite: Integer; safecall;
    function Get_EndConnected: MsoTriState; safecall;
    function Get_EndConnectedShape: Shape; safecall;
    function Get_EndConnectionSite: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_type_: MsoConnectorType; safecall;
    procedure Set_type_(prop: MsoConnectorType); safecall;
    procedure BeginConnect(out ConnectedShape: Shape; ConnectionSite: Integer); safecall;
    procedure BeginDisconnect; safecall;
    procedure EndConnect(out ConnectedShape: Shape; ConnectionSite: Integer); safecall;
    procedure EndDisconnect; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property BeginConnected: MsoTriState read Get_BeginConnected;
    property BeginConnectedShape: Shape read Get_BeginConnectedShape;
    property BeginConnectionSite: Integer read Get_BeginConnectionSite;
    property EndConnected: MsoTriState read Get_EndConnected;
    property EndConnectedShape: Shape read Get_EndConnectedShape;
    property EndConnectionSite: Integer read Get_EndConnectionSite;
    property Parent: IDispatch read Get_Parent;
    property type_: MsoConnectorType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  ConnectorFormatDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C7-0000-0000-C000-000000000046}
// *********************************************************************//
  ConnectorFormatDisp = dispinterface
    ['{000209C7-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property BeginConnected: MsoTriState readonly dispid 100;
    property BeginConnectedShape: Shape readonly dispid 101;
    property BeginConnectionSite: Integer readonly dispid 102;
    property EndConnected: MsoTriState readonly dispid 103;
    property EndConnectedShape: Shape readonly dispid 104;
    property EndConnectionSite: Integer readonly dispid 105;
    property Parent: IDispatch readonly dispid 1;
    property type_: MsoConnectorType dispid 106;
    procedure BeginConnect(out ConnectedShape: Shape; ConnectionSite: Integer); dispid 10;
    procedure BeginDisconnect; dispid 11;
    procedure EndConnect(out ConnectedShape: Shape; ConnectionSite: Integer); dispid 12;
    procedure EndDisconnect; dispid 13;
  end;

// *********************************************************************//
// Interface: FillFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C8-0000-0000-C000-000000000046}
// *********************************************************************//
  FillFormat = interface(IDispatch)
    ['{000209C8-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_BackColor: ColorFormat; safecall;
    function Get_ForeColor: ColorFormat; safecall;
    function Get_GradientColorType: MsoGradientColorType; safecall;
    function Get_GradientDegree: Single; safecall;
    function Get_GradientStyle: MsoGradientStyle; safecall;
    function Get_GradientVariant: Integer; safecall;
    function Get_Pattern: MsoPatternType; safecall;
    function Get_PresetGradientType: MsoPresetGradientType; safecall;
    function Get_PresetTexture: MsoPresetTexture; safecall;
    function Get_TextureName: WideString; safecall;
    function Get_TextureType: MsoTextureType; safecall;
    function Get_Transparency: Single; safecall;
    procedure Set_Transparency(prop: Single); safecall;
    function Get_type_: MsoFillType; safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    procedure Background; safecall;
    procedure OneColorGradient(Style: MsoGradientStyle; Variant: Integer; Degree: Single); safecall;
    procedure Patterned(Pattern: MsoPatternType); safecall;
    procedure PresetGradient(Style: MsoGradientStyle; Variant: Integer; 
                             PresetGradientType: MsoPresetGradientType); safecall;
    procedure PresetTextured(PresetTexture: MsoPresetTexture); safecall;
    procedure Solid; safecall;
    procedure TwoColorGradient(Style: MsoGradientStyle; Variant: Integer); safecall;
    procedure UserPicture(const PictureFile: WideString); safecall;
    procedure UserTextured(const TextureFile: WideString); safecall;
    function Get_GradientStops: GradientStops; safecall;
    function Get_TextureOffsetX: Single; safecall;
    procedure Set_TextureOffsetX(prop: Single); safecall;
    function Get_TextureOffsetY: Single; safecall;
    procedure Set_TextureOffsetY(prop: Single); safecall;
    function Get_TextureAlignment: MsoTextureAlignment; safecall;
    procedure Set_TextureAlignment(prop: MsoTextureAlignment); safecall;
    function Get_TextureHorizontalScale: Single; safecall;
    procedure Set_TextureHorizontalScale(prop: Single); safecall;
    function Get_TextureVerticalScale: Single; safecall;
    procedure Set_TextureVerticalScale(prop: Single); safecall;
    function Get_TextureTile: MsoTriState; safecall;
    procedure Set_TextureTile(prop: MsoTriState); safecall;
    function Get_RotateWithObject: MsoTriState; safecall;
    procedure Set_RotateWithObject(prop: MsoTriState); safecall;
    function Get_PictureEffects: PictureEffects; safecall;
    function Get_GradientAngle: Single; safecall;
    procedure Set_GradientAngle(prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BackColor: ColorFormat read Get_BackColor;
    property ForeColor: ColorFormat read Get_ForeColor;
    property GradientColorType: MsoGradientColorType read Get_GradientColorType;
    property GradientDegree: Single read Get_GradientDegree;
    property GradientStyle: MsoGradientStyle read Get_GradientStyle;
    property GradientVariant: Integer read Get_GradientVariant;
    property Pattern: MsoPatternType read Get_Pattern;
    property PresetGradientType: MsoPresetGradientType read Get_PresetGradientType;
    property PresetTexture: MsoPresetTexture read Get_PresetTexture;
    property TextureName: WideString read Get_TextureName;
    property TextureType: MsoTextureType read Get_TextureType;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property type_: MsoFillType read Get_type_;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property GradientStops: GradientStops read Get_GradientStops;
    property TextureOffsetX: Single read Get_TextureOffsetX write Set_TextureOffsetX;
    property TextureOffsetY: Single read Get_TextureOffsetY write Set_TextureOffsetY;
    property TextureAlignment: MsoTextureAlignment read Get_TextureAlignment write Set_TextureAlignment;
    property TextureHorizontalScale: Single read Get_TextureHorizontalScale write Set_TextureHorizontalScale;
    property TextureVerticalScale: Single read Get_TextureVerticalScale write Set_TextureVerticalScale;
    property TextureTile: MsoTriState read Get_TextureTile write Set_TextureTile;
    property RotateWithObject: MsoTriState read Get_RotateWithObject write Set_RotateWithObject;
    property PictureEffects: PictureEffects read Get_PictureEffects;
    property GradientAngle: Single read Get_GradientAngle write Set_GradientAngle;
  end;

// *********************************************************************//
// DispIntf:  FillFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C8-0000-0000-C000-000000000046}
// *********************************************************************//
  FillFormatDisp = dispinterface
    ['{000209C8-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property BackColor: ColorFormat readonly dispid 100;
    property ForeColor: ColorFormat readonly dispid 101;
    property GradientColorType: MsoGradientColorType readonly dispid 102;
    property GradientDegree: Single readonly dispid 103;
    property GradientStyle: MsoGradientStyle readonly dispid 104;
    property GradientVariant: Integer readonly dispid 105;
    property Pattern: MsoPatternType readonly dispid 106;
    property PresetGradientType: MsoPresetGradientType readonly dispid 107;
    property PresetTexture: MsoPresetTexture readonly dispid 108;
    property TextureName: WideString readonly dispid 109;
    property TextureType: MsoTextureType readonly dispid 110;
    property Transparency: Single dispid 111;
    property type_: MsoFillType readonly dispid 112;
    property Visible: MsoTriState dispid 113;
    procedure Background; dispid 10;
    procedure OneColorGradient(Style: MsoGradientStyle; Variant: Integer; Degree: Single); dispid 11;
    procedure Patterned(Pattern: MsoPatternType); dispid 12;
    procedure PresetGradient(Style: MsoGradientStyle; Variant: Integer; 
                             PresetGradientType: MsoPresetGradientType); dispid 13;
    procedure PresetTextured(PresetTexture: MsoPresetTexture); dispid 14;
    procedure Solid; dispid 15;
    procedure TwoColorGradient(Style: MsoGradientStyle; Variant: Integer); dispid 16;
    procedure UserPicture(const PictureFile: WideString); dispid 17;
    procedure UserTextured(const TextureFile: WideString); dispid 18;
    property GradientStops: GradientStops readonly dispid 114;
    property TextureOffsetX: Single dispid 115;
    property TextureOffsetY: Single dispid 116;
    property TextureAlignment: MsoTextureAlignment dispid 117;
    property TextureHorizontalScale: Single dispid 118;
    property TextureVerticalScale: Single dispid 119;
    property TextureTile: MsoTriState dispid 120;
    property RotateWithObject: MsoTriState dispid 121;
    property PictureEffects: PictureEffects readonly dispid 122;
    property GradientAngle: Single dispid 123;
  end;

// *********************************************************************//
// Interface: FreeformBuilder
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C9-0000-0000-C000-000000000046}
// *********************************************************************//
  FreeformBuilder = interface(IDispatch)
    ['{000209C9-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure AddNodes(SegmentType: MsoSegmentType; EditingType: MsoEditingType; X1: Single; 
                       Y1: Single; X2: Single; Y2: Single; X3: Single; Y3: Single); safecall;
    function ConvertToShape(var Anchor: OleVariant): Shape; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  FreeformBuilderDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209C9-0000-0000-C000-000000000046}
// *********************************************************************//
  FreeformBuilderDisp = dispinterface
    ['{000209C9-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    procedure AddNodes(SegmentType: MsoSegmentType; EditingType: MsoEditingType; X1: Single; 
                       Y1: Single; X2: Single; Y2: Single; X3: Single; Y3: Single); dispid 10;
    function ConvertToShape(var Anchor: OleVariant): Shape; dispid 11;
  end;

// *********************************************************************//
// Interface: LineFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CA-0000-0000-C000-000000000046}
// *********************************************************************//
  LineFormat = interface(IDispatch)
    ['{000209CA-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_BackColor: ColorFormat; safecall;
    function Get_BeginArrowheadLength: MsoArrowheadLength; safecall;
    procedure Set_BeginArrowheadLength(prop: MsoArrowheadLength); safecall;
    function Get_BeginArrowheadStyle: MsoArrowheadStyle; safecall;
    procedure Set_BeginArrowheadStyle(prop: MsoArrowheadStyle); safecall;
    function Get_BeginArrowheadWidth: MsoArrowheadWidth; safecall;
    procedure Set_BeginArrowheadWidth(prop: MsoArrowheadWidth); safecall;
    function Get_DashStyle: MsoLineDashStyle; safecall;
    procedure Set_DashStyle(prop: MsoLineDashStyle); safecall;
    function Get_EndArrowheadLength: MsoArrowheadLength; safecall;
    procedure Set_EndArrowheadLength(prop: MsoArrowheadLength); safecall;
    function Get_EndArrowheadStyle: MsoArrowheadStyle; safecall;
    procedure Set_EndArrowheadStyle(prop: MsoArrowheadStyle); safecall;
    function Get_EndArrowheadWidth: MsoArrowheadWidth; safecall;
    procedure Set_EndArrowheadWidth(prop: MsoArrowheadWidth); safecall;
    function Get_ForeColor: ColorFormat; safecall;
    function Get_Pattern: MsoPatternType; safecall;
    procedure Set_Pattern(prop: MsoPatternType); safecall;
    function Get_Style: MsoLineStyle; safecall;
    procedure Set_Style(prop: MsoLineStyle); safecall;
    function Get_Transparency: Single; safecall;
    procedure Set_Transparency(prop: Single); safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    function Get_Weight: Single; safecall;
    procedure Set_Weight(prop: Single); safecall;
    function Get_InsetPen: MsoTriState; safecall;
    procedure Set_InsetPen(prop: MsoTriState); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BackColor: ColorFormat read Get_BackColor;
    property BeginArrowheadLength: MsoArrowheadLength read Get_BeginArrowheadLength write Set_BeginArrowheadLength;
    property BeginArrowheadStyle: MsoArrowheadStyle read Get_BeginArrowheadStyle write Set_BeginArrowheadStyle;
    property BeginArrowheadWidth: MsoArrowheadWidth read Get_BeginArrowheadWidth write Set_BeginArrowheadWidth;
    property DashStyle: MsoLineDashStyle read Get_DashStyle write Set_DashStyle;
    property EndArrowheadLength: MsoArrowheadLength read Get_EndArrowheadLength write Set_EndArrowheadLength;
    property EndArrowheadStyle: MsoArrowheadStyle read Get_EndArrowheadStyle write Set_EndArrowheadStyle;
    property EndArrowheadWidth: MsoArrowheadWidth read Get_EndArrowheadWidth write Set_EndArrowheadWidth;
    property ForeColor: ColorFormat read Get_ForeColor;
    property Pattern: MsoPatternType read Get_Pattern write Set_Pattern;
    property Style: MsoLineStyle read Get_Style write Set_Style;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Weight: Single read Get_Weight write Set_Weight;
    property InsetPen: MsoTriState read Get_InsetPen write Set_InsetPen;
  end;

// *********************************************************************//
// DispIntf:  LineFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CA-0000-0000-C000-000000000046}
// *********************************************************************//
  LineFormatDisp = dispinterface
    ['{000209CA-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property BackColor: ColorFormat readonly dispid 100;
    property BeginArrowheadLength: MsoArrowheadLength dispid 101;
    property BeginArrowheadStyle: MsoArrowheadStyle dispid 102;
    property BeginArrowheadWidth: MsoArrowheadWidth dispid 103;
    property DashStyle: MsoLineDashStyle dispid 104;
    property EndArrowheadLength: MsoArrowheadLength dispid 105;
    property EndArrowheadStyle: MsoArrowheadStyle dispid 106;
    property EndArrowheadWidth: MsoArrowheadWidth dispid 107;
    property ForeColor: ColorFormat readonly dispid 108;
    property Pattern: MsoPatternType dispid 109;
    property Style: MsoLineStyle dispid 110;
    property Transparency: Single dispid 111;
    property Visible: MsoTriState dispid 112;
    property Weight: Single dispid 113;
    property InsetPen: MsoTriState dispid 114;
  end;

// *********************************************************************//
// Interface: PictureFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CB-0000-0000-C000-000000000046}
// *********************************************************************//
  PictureFormat = interface(IDispatch)
    ['{000209CB-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Brightness: Single; safecall;
    procedure Set_Brightness(prop: Single); safecall;
    function Get_ColorType: MsoPictureColorType; safecall;
    procedure Set_ColorType(prop: MsoPictureColorType); safecall;
    function Get_Contrast: Single; safecall;
    procedure Set_Contrast(prop: Single); safecall;
    function Get_CropBottom: Single; safecall;
    procedure Set_CropBottom(prop: Single); safecall;
    function Get_CropLeft: Single; safecall;
    procedure Set_CropLeft(prop: Single); safecall;
    function Get_CropRight: Single; safecall;
    procedure Set_CropRight(prop: Single); safecall;
    function Get_CropTop: Single; safecall;
    procedure Set_CropTop(prop: Single); safecall;
    function Get_TransparencyColor: Integer; safecall;
    procedure Set_TransparencyColor(prop: Integer); safecall;
    function Get_TransparentBackground: MsoTriState; safecall;
    procedure Set_TransparentBackground(prop: MsoTriState); safecall;
    procedure IncrementBrightness(Increment: Single); safecall;
    procedure IncrementContrast(Increment: Single); safecall;
    function Get_Crop: Crop; safecall;
    procedure Set_Crop(const prop: Crop); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Brightness: Single read Get_Brightness write Set_Brightness;
    property ColorType: MsoPictureColorType read Get_ColorType write Set_ColorType;
    property Contrast: Single read Get_Contrast write Set_Contrast;
    property CropBottom: Single read Get_CropBottom write Set_CropBottom;
    property CropLeft: Single read Get_CropLeft write Set_CropLeft;
    property CropRight: Single read Get_CropRight write Set_CropRight;
    property CropTop: Single read Get_CropTop write Set_CropTop;
    property TransparencyColor: Integer read Get_TransparencyColor write Set_TransparencyColor;
    property TransparentBackground: MsoTriState read Get_TransparentBackground write Set_TransparentBackground;
    property Crop: Crop read Get_Crop write Set_Crop;
  end;

// *********************************************************************//
// DispIntf:  PictureFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CB-0000-0000-C000-000000000046}
// *********************************************************************//
  PictureFormatDisp = dispinterface
    ['{000209CB-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property Brightness: Single dispid 100;
    property ColorType: MsoPictureColorType dispid 101;
    property Contrast: Single dispid 102;
    property CropBottom: Single dispid 103;
    property CropLeft: Single dispid 104;
    property CropRight: Single dispid 105;
    property CropTop: Single dispid 106;
    property TransparencyColor: Integer dispid 107;
    property TransparentBackground: MsoTriState dispid 108;
    procedure IncrementBrightness(Increment: Single); dispid 10;
    procedure IncrementContrast(Increment: Single); dispid 11;
    property Crop: Crop dispid 109;
  end;

// *********************************************************************//
// Interface: ShadowFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CC-0000-0000-C000-000000000046}
// *********************************************************************//
  ShadowFormat = interface(IDispatch)
    ['{000209CC-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ForeColor: ColorFormat; safecall;
    function Get_Obscured: MsoTriState; safecall;
    procedure Set_Obscured(prop: MsoTriState); safecall;
    function Get_OffsetX: Single; safecall;
    procedure Set_OffsetX(prop: Single); safecall;
    function Get_OffsetY: Single; safecall;
    procedure Set_OffsetY(prop: Single); safecall;
    function Get_Transparency: Single; safecall;
    procedure Set_Transparency(prop: Single); safecall;
    function Get_type_: MsoShadowType; safecall;
    procedure Set_type_(prop: MsoShadowType); safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    procedure IncrementOffsetX(Increment: Single); safecall;
    procedure IncrementOffsetY(Increment: Single); safecall;
    function Get_Style: MsoShadowStyle; safecall;
    procedure Set_Style(prop: MsoShadowStyle); safecall;
    function Get_Blur: Single; safecall;
    procedure Set_Blur(prop: Single); safecall;
    function Get_Size: Single; safecall;
    procedure Set_Size(prop: Single); safecall;
    function Get_RotateWithShape: MsoTriState; safecall;
    procedure Set_RotateWithShape(prop: MsoTriState); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ForeColor: ColorFormat read Get_ForeColor;
    property Obscured: MsoTriState read Get_Obscured write Set_Obscured;
    property OffsetX: Single read Get_OffsetX write Set_OffsetX;
    property OffsetY: Single read Get_OffsetY write Set_OffsetY;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property type_: MsoShadowType read Get_type_ write Set_type_;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Style: MsoShadowStyle read Get_Style write Set_Style;
    property Blur: Single read Get_Blur write Set_Blur;
    property Size: Single read Get_Size write Set_Size;
    property RotateWithShape: MsoTriState read Get_RotateWithShape write Set_RotateWithShape;
  end;

// *********************************************************************//
// DispIntf:  ShadowFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CC-0000-0000-C000-000000000046}
// *********************************************************************//
  ShadowFormatDisp = dispinterface
    ['{000209CC-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property ForeColor: ColorFormat readonly dispid 100;
    property Obscured: MsoTriState dispid 101;
    property OffsetX: Single dispid 102;
    property OffsetY: Single dispid 103;
    property Transparency: Single dispid 104;
    property type_: MsoShadowType dispid 105;
    property Visible: MsoTriState dispid 106;
    procedure IncrementOffsetX(Increment: Single); dispid 10;
    procedure IncrementOffsetY(Increment: Single); dispid 11;
    property Style: MsoShadowStyle dispid 107;
    property Blur: Single dispid 108;
    property Size: Single dispid 109;
    property RotateWithShape: MsoTriState dispid 110;
  end;

// *********************************************************************//
// Interface: ShapeNode
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CD-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNode = interface(IDispatch)
    ['{000209CD-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_EditingType: MsoEditingType; safecall;
    function Get_Points: OleVariant; safecall;
    function Get_SegmentType: MsoSegmentType; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property EditingType: MsoEditingType read Get_EditingType;
    property Points: OleVariant read Get_Points;
    property SegmentType: MsoSegmentType read Get_SegmentType;
  end;

// *********************************************************************//
// DispIntf:  ShapeNodeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CD-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNodeDisp = dispinterface
    ['{000209CD-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property EditingType: MsoEditingType readonly dispid 100;
    property Points: OleVariant readonly dispid 101;
    property SegmentType: MsoSegmentType readonly dispid 102;
  end;

// *********************************************************************//
// Interface: ShapeNodes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CE-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNodes = interface(IDispatch)
    ['{000209CE-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    procedure Delete(Index: Integer); safecall;
    function Item(var Index: OleVariant): ShapeNode; safecall;
    procedure SetEditingType(Index: Integer; EditingType: MsoEditingType); safecall;
    procedure SetPosition(Index: Integer; X1: Single; Y1: Single); safecall;
    procedure SetSegmentType(Index: Integer; SegmentType: MsoSegmentType); safecall;
    procedure Insert(Index: Integer; SegmentType: MsoSegmentType; EditingType: MsoEditingType; 
                     X1: Single; Y1: Single; X2: Single; Y2: Single; X3: Single; Y3: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  ShapeNodesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CE-0000-0000-C000-000000000046}
// *********************************************************************//
  ShapeNodesDisp = dispinterface
    ['{000209CE-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property Count: Integer readonly dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    procedure Delete(Index: Integer); dispid 11;
    function Item(var Index: OleVariant): ShapeNode; dispid 0;
    procedure SetEditingType(Index: Integer; EditingType: MsoEditingType); dispid 13;
    procedure SetPosition(Index: Integer; X1: Single; Y1: Single); dispid 14;
    procedure SetSegmentType(Index: Integer; SegmentType: MsoSegmentType); dispid 15;
    procedure Insert(Index: Integer; SegmentType: MsoSegmentType; EditingType: MsoEditingType; 
                     X1: Single; Y1: Single; X2: Single; Y2: Single; X3: Single; Y3: Single); dispid 12;
  end;

// *********************************************************************//
// Interface: TextEffectFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CF-0000-0000-C000-000000000046}
// *********************************************************************//
  TextEffectFormat = interface(IDispatch)
    ['{000209CF-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Alignment: MsoTextEffectAlignment; safecall;
    procedure Set_Alignment(prop: MsoTextEffectAlignment); safecall;
    function Get_FontBold: MsoTriState; safecall;
    procedure Set_FontBold(prop: MsoTriState); safecall;
    function Get_FontItalic: MsoTriState; safecall;
    procedure Set_FontItalic(prop: MsoTriState); safecall;
    function Get_FontName: WideString; safecall;
    procedure Set_FontName(const prop: WideString); safecall;
    function Get_FontSize: Single; safecall;
    procedure Set_FontSize(prop: Single); safecall;
    function Get_KernedPairs: MsoTriState; safecall;
    procedure Set_KernedPairs(prop: MsoTriState); safecall;
    function Get_NormalizedHeight: MsoTriState; safecall;
    procedure Set_NormalizedHeight(prop: MsoTriState); safecall;
    function Get_PresetShape: MsoPresetTextEffectShape; safecall;
    procedure Set_PresetShape(prop: MsoPresetTextEffectShape); safecall;
    function Get_PresetTextEffect: MsoPresetTextEffect; safecall;
    procedure Set_PresetTextEffect(prop: MsoPresetTextEffect); safecall;
    function Get_RotatedChars: MsoTriState; safecall;
    procedure Set_RotatedChars(prop: MsoTriState); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_Tracking: Single; safecall;
    procedure Set_Tracking(prop: Single); safecall;
    procedure ToggleVerticalText; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Alignment: MsoTextEffectAlignment read Get_Alignment write Set_Alignment;
    property FontBold: MsoTriState read Get_FontBold write Set_FontBold;
    property FontItalic: MsoTriState read Get_FontItalic write Set_FontItalic;
    property FontName: WideString read Get_FontName write Set_FontName;
    property FontSize: Single read Get_FontSize write Set_FontSize;
    property KernedPairs: MsoTriState read Get_KernedPairs write Set_KernedPairs;
    property NormalizedHeight: MsoTriState read Get_NormalizedHeight write Set_NormalizedHeight;
    property PresetShape: MsoPresetTextEffectShape read Get_PresetShape write Set_PresetShape;
    property PresetTextEffect: MsoPresetTextEffect read Get_PresetTextEffect write Set_PresetTextEffect;
    property RotatedChars: MsoTriState read Get_RotatedChars write Set_RotatedChars;
    property Text: WideString read Get_Text write Set_Text;
    property Tracking: Single read Get_Tracking write Set_Tracking;
  end;

// *********************************************************************//
// DispIntf:  TextEffectFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209CF-0000-0000-C000-000000000046}
// *********************************************************************//
  TextEffectFormatDisp = dispinterface
    ['{000209CF-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property Alignment: MsoTextEffectAlignment dispid 100;
    property FontBold: MsoTriState dispid 101;
    property FontItalic: MsoTriState dispid 102;
    property FontName: WideString dispid 103;
    property FontSize: Single dispid 104;
    property KernedPairs: MsoTriState dispid 105;
    property NormalizedHeight: MsoTriState dispid 106;
    property PresetShape: MsoPresetTextEffectShape dispid 107;
    property PresetTextEffect: MsoPresetTextEffect dispid 108;
    property RotatedChars: MsoTriState dispid 109;
    property Text: WideString dispid 110;
    property Tracking: Single dispid 111;
    procedure ToggleVerticalText; dispid 10;
  end;

// *********************************************************************//
// Interface: ThreeDFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D0-0000-0000-C000-000000000046}
// *********************************************************************//
  ThreeDFormat = interface(IDispatch)
    ['{000209D0-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Depth: Single; safecall;
    procedure Set_Depth(prop: Single); safecall;
    function Get_ExtrusionColor: ColorFormat; safecall;
    function Get_ExtrusionColorType: MsoExtrusionColorType; safecall;
    procedure Set_ExtrusionColorType(prop: MsoExtrusionColorType); safecall;
    function Get_Perspective: MsoTriState; safecall;
    procedure Set_Perspective(prop: MsoTriState); safecall;
    function Get_PresetExtrusionDirection: MsoPresetExtrusionDirection; safecall;
    function Get_PresetLightingDirection: MsoPresetLightingDirection; safecall;
    procedure Set_PresetLightingDirection(prop: MsoPresetLightingDirection); safecall;
    function Get_PresetLightingSoftness: MsoPresetLightingSoftness; safecall;
    procedure Set_PresetLightingSoftness(prop: MsoPresetLightingSoftness); safecall;
    function Get_PresetMaterial: MsoPresetMaterial; safecall;
    procedure Set_PresetMaterial(prop: MsoPresetMaterial); safecall;
    function Get_PresetThreeDFormat: MsoPresetThreeDFormat; safecall;
    function Get_RotationX: Single; safecall;
    procedure Set_RotationX(prop: Single); safecall;
    function Get_RotationY: Single; safecall;
    procedure Set_RotationY(prop: Single); safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    procedure IncrementRotationX(Increment: Single); safecall;
    procedure IncrementRotationY(Increment: Single); safecall;
    procedure ResetRotation; safecall;
    procedure SetExtrusionDirection(PresetExtrusionDirection: MsoPresetExtrusionDirection); safecall;
    procedure SetThreeDFormat(PresetThreeDFormat: MsoPresetThreeDFormat); safecall;
    procedure SetPresetCamera(PresetCamera: MsoPresetCamera); safecall;
    procedure IncrementRotationZ(Increment: Single); safecall;
    procedure IncrementRotationHorizontal(Increment: Single); safecall;
    procedure IncrementRotationVertical(Increment: Single); safecall;
    function Get_PresetLighting: MsoLightRigType; safecall;
    procedure Set_PresetLighting(prop: MsoLightRigType); safecall;
    function Get_Z: Single; safecall;
    procedure Set_Z(prop: Single); safecall;
    function Get_BevelTopType: MsoBevelType; safecall;
    procedure Set_BevelTopType(prop: MsoBevelType); safecall;
    function Get_BevelTopInset: Single; safecall;
    procedure Set_BevelTopInset(prop: Single); safecall;
    function Get_BevelTopDepth: Single; safecall;
    procedure Set_BevelTopDepth(prop: Single); safecall;
    function Get_BevelBottomType: MsoBevelType; safecall;
    procedure Set_BevelBottomType(prop: MsoBevelType); safecall;
    function Get_BevelBottomInset: Single; safecall;
    procedure Set_BevelBottomInset(prop: Single); safecall;
    function Get_BevelBottomDepth: Single; safecall;
    procedure Set_BevelBottomDepth(prop: Single); safecall;
    function Get_PresetCamera: MsoPresetCamera; safecall;
    function Get_RotationZ: Single; safecall;
    procedure Set_RotationZ(prop: Single); safecall;
    function Get_ContourWidth: Single; safecall;
    procedure Set_ContourWidth(prop: Single); safecall;
    function Get_ContourColor: ColorFormat; safecall;
    function Get_FieldOfView: Single; safecall;
    procedure Set_FieldOfView(prop: Single); safecall;
    function Get_ProjectText: MsoTriState; safecall;
    procedure Set_ProjectText(prop: MsoTriState); safecall;
    function Get_LightAngle: Single; safecall;
    procedure Set_LightAngle(prop: Single); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Depth: Single read Get_Depth write Set_Depth;
    property ExtrusionColor: ColorFormat read Get_ExtrusionColor;
    property ExtrusionColorType: MsoExtrusionColorType read Get_ExtrusionColorType write Set_ExtrusionColorType;
    property Perspective: MsoTriState read Get_Perspective write Set_Perspective;
    property PresetExtrusionDirection: MsoPresetExtrusionDirection read Get_PresetExtrusionDirection;
    property PresetLightingDirection: MsoPresetLightingDirection read Get_PresetLightingDirection write Set_PresetLightingDirection;
    property PresetLightingSoftness: MsoPresetLightingSoftness read Get_PresetLightingSoftness write Set_PresetLightingSoftness;
    property PresetMaterial: MsoPresetMaterial read Get_PresetMaterial write Set_PresetMaterial;
    property PresetThreeDFormat: MsoPresetThreeDFormat read Get_PresetThreeDFormat;
    property RotationX: Single read Get_RotationX write Set_RotationX;
    property RotationY: Single read Get_RotationY write Set_RotationY;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property PresetLighting: MsoLightRigType read Get_PresetLighting write Set_PresetLighting;
    property Z: Single read Get_Z write Set_Z;
    property BevelTopType: MsoBevelType read Get_BevelTopType write Set_BevelTopType;
    property BevelTopInset: Single read Get_BevelTopInset write Set_BevelTopInset;
    property BevelTopDepth: Single read Get_BevelTopDepth write Set_BevelTopDepth;
    property BevelBottomType: MsoBevelType read Get_BevelBottomType write Set_BevelBottomType;
    property BevelBottomInset: Single read Get_BevelBottomInset write Set_BevelBottomInset;
    property BevelBottomDepth: Single read Get_BevelBottomDepth write Set_BevelBottomDepth;
    property PresetCamera: MsoPresetCamera read Get_PresetCamera;
    property RotationZ: Single read Get_RotationZ write Set_RotationZ;
    property ContourWidth: Single read Get_ContourWidth write Set_ContourWidth;
    property ContourColor: ColorFormat read Get_ContourColor;
    property FieldOfView: Single read Get_FieldOfView write Set_FieldOfView;
    property ProjectText: MsoTriState read Get_ProjectText write Set_ProjectText;
    property LightAngle: Single read Get_LightAngle write Set_LightAngle;
  end;

// *********************************************************************//
// DispIntf:  ThreeDFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D0-0000-0000-C000-000000000046}
// *********************************************************************//
  ThreeDFormatDisp = dispinterface
    ['{000209D0-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1;
    property Depth: Single dispid 100;
    property ExtrusionColor: ColorFormat readonly dispid 101;
    property ExtrusionColorType: MsoExtrusionColorType dispid 102;
    property Perspective: MsoTriState dispid 103;
    property PresetExtrusionDirection: MsoPresetExtrusionDirection readonly dispid 104;
    property PresetLightingDirection: MsoPresetLightingDirection dispid 105;
    property PresetLightingSoftness: MsoPresetLightingSoftness dispid 106;
    property PresetMaterial: MsoPresetMaterial dispid 107;
    property PresetThreeDFormat: MsoPresetThreeDFormat readonly dispid 108;
    property RotationX: Single dispid 109;
    property RotationY: Single dispid 110;
    property Visible: MsoTriState dispid 111;
    procedure IncrementRotationX(Increment: Single); dispid 10;
    procedure IncrementRotationY(Increment: Single); dispid 11;
    procedure ResetRotation; dispid 12;
    procedure SetExtrusionDirection(PresetExtrusionDirection: MsoPresetExtrusionDirection); dispid 14;
    procedure SetThreeDFormat(PresetThreeDFormat: MsoPresetThreeDFormat); dispid 13;
    procedure SetPresetCamera(PresetCamera: MsoPresetCamera); dispid 15;
    procedure IncrementRotationZ(Increment: Single); dispid 16;
    procedure IncrementRotationHorizontal(Increment: Single); dispid 17;
    procedure IncrementRotationVertical(Increment: Single); dispid 18;
    property PresetLighting: MsoLightRigType dispid 112;
    property Z: Single dispid 113;
    property BevelTopType: MsoBevelType dispid 114;
    property BevelTopInset: Single dispid 115;
    property BevelTopDepth: Single dispid 116;
    property BevelBottomType: MsoBevelType dispid 117;
    property BevelBottomInset: Single dispid 118;
    property BevelBottomDepth: Single dispid 119;
    property PresetCamera: MsoPresetCamera readonly dispid 120;
    property RotationZ: Single dispid 121;
    property ContourWidth: Single dispid 122;
    property ContourColor: ColorFormat readonly dispid 123;
    property FieldOfView: Single dispid 124;
    property ProjectText: MsoTriState dispid 125;
    property LightAngle: Single dispid 126;
  end;

// *********************************************************************//
// DispIntf:  ApplicationEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209F7-0000-0000-C000-000000000046}
// *********************************************************************//
  ApplicationEvents = dispinterface
    ['{000209F7-0000-0000-C000-000000000046}']
  end;

// *********************************************************************//
// DispIntf:  ApplicationEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209FE-0000-0000-C000-000000000046}
// *********************************************************************//
  ApplicationEvents2 = dispinterface
    ['{000209FE-0000-0000-C000-000000000046}']
    procedure Startup; dispid 1;
    procedure Quit; dispid 2;
    procedure DocumentChange; dispid 3;
    procedure DocumentOpen(const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); dispid 8;
    procedure NewDocument(const Doc: WordDocument); dispid 9;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); dispid 10;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); dispid 11;
    procedure WindowSelectionChange(const Sel: WordSelection); dispid 12;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); dispid 14;
  end;

// *********************************************************************//
// DispIntf:  DocumentEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209F6-0000-0000-C000-000000000046}
// *********************************************************************//
  DocumentEvents = dispinterface
    ['{000209F6-0000-0000-C000-000000000046}']
    procedure New; dispid 4;
    procedure Open; dispid 5;
    procedure Close; dispid 6;
  end;

// *********************************************************************//
// DispIntf:  DocumentEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00020A02-0000-0000-C000-000000000046}
// *********************************************************************//
  DocumentEvents2 = dispinterface
    ['{00020A02-0000-0000-C000-000000000046}']
    procedure New; dispid 4;
    procedure Open; dispid 5;
    procedure Close; dispid 6;
    procedure Sync(SyncEventType: MsoSyncEventType); dispid 7;
    procedure XMLAfterInsert(const NewXMLNode: XMLNode; InUndoRedo: WordBool); dispid 8;
    procedure XMLBeforeDelete(const DeletedRange: WordRange; const OldXMLNode: XMLNode; 
                              InUndoRedo: WordBool); dispid 9;
    procedure ContentControlAfterAdd(const NewContentControl: ContentControl; InUndoRedo: WordBool); dispid 12;
    procedure ContentControlBeforeDelete(const OldContentControl: ContentControl; 
                                         InUndoRedo: WordBool); dispid 13;
    procedure ContentControlOnExit(const ContentControl: ContentControl; var Cancel: WordBool); dispid 14;
    procedure ContentControlOnEnter(const ContentControl: ContentControl); dispid 15;
    procedure ContentControlBeforeStoreUpdate(const ContentControl: ContentControl; 
                                              var Content: WideString); dispid 16;
    procedure ContentControlBeforeContentUpdate(const ContentControl: ContentControl; 
                                                var Content: WideString); dispid 17;
    procedure BuildingBlockInsert(const Range: WordRange; const Name: WideString; 
                                  const Category: WideString; const BlockType: WideString; 
                                  const Template: WideString); dispid 18;
  end;

// *********************************************************************//
// DispIntf:  OCXEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {000209F3-0000-0000-C000-000000000046}
// *********************************************************************//
  OCXEvents = dispinterface
    ['{000209F3-0000-0000-C000-000000000046}']
    procedure GotFocus; dispid -2147417888;
    procedure LostFocus; dispid -2147417887;
  end;

// *********************************************************************//
// Interface: IApplicationEvents
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209F7-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents = interface(IDispatch)
    ['{000209F7-0001-0000-C000-000000000046}']
    procedure Startup; safecall;
    procedure Quit; safecall;
    procedure DocumentChange; safecall;
  end;

// *********************************************************************//
// DispIntf:  IApplicationEventsDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209F7-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEventsDisp = dispinterface
    ['{000209F7-0001-0000-C000-000000000046}']
    procedure Startup; dispid 1;
    procedure Quit; dispid 2;
    procedure DocumentChange; dispid 3;
  end;

// *********************************************************************//
// Interface: IApplicationEvents2
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209FE-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents2 = interface(IDispatch)
    ['{000209FE-0001-0000-C000-000000000046}']
    procedure Startup; safecall;
    procedure Quit; safecall;
    procedure DocumentChange; safecall;
    procedure DocumentOpen(const Doc: WordDocument); safecall;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); safecall;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); safecall;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); safecall;
    procedure NewDocument(const Doc: WordDocument); safecall;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); safecall;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); safecall;
    procedure WindowSelectionChange(const Sel: WordSelection); safecall;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); safecall;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); safecall;
  end;

// *********************************************************************//
// DispIntf:  IApplicationEvents2Disp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209FE-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents2Disp = dispinterface
    ['{000209FE-0001-0000-C000-000000000046}']
    procedure Startup; dispid 1;
    procedure Quit; dispid 2;
    procedure DocumentChange; dispid 3;
    procedure DocumentOpen(const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); dispid 8;
    procedure NewDocument(const Doc: WordDocument); dispid 9;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); dispid 10;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); dispid 11;
    procedure WindowSelectionChange(const Sel: WordSelection); dispid 12;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); dispid 14;
  end;

// *********************************************************************//
// DispIntf:  ApplicationEvents3
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00020A00-0000-0000-C000-000000000046}
// *********************************************************************//
  ApplicationEvents3 = dispinterface
    ['{00020A00-0000-0000-C000-000000000046}']
    procedure Startup; dispid 1;
    procedure Quit; dispid 2;
    procedure DocumentChange; dispid 3;
    procedure DocumentOpen(const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); dispid 8;
    procedure NewDocument(const Doc: WordDocument); dispid 9;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); dispid 10;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); dispid 11;
    procedure WindowSelectionChange(const Sel: WordSelection); dispid 12;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); dispid 14;
    procedure EPostagePropertyDialog(const Doc: WordDocument); dispid 15;
    procedure EPostageInsert(const Doc: WordDocument); dispid 16;
    procedure MailMergeAfterMerge(const Doc: WordDocument; const DocResult: WordDocument); dispid 17;
    procedure MailMergeAfterRecordMerge(const Doc: WordDocument); dispid 18;
    procedure MailMergeBeforeMerge(const Doc: WordDocument; StartRecord: Integer; 
                                   EndRecord: Integer; var Cancel: WordBool); dispid 19;
    procedure MailMergeBeforeRecordMerge(const Doc: WordDocument; var Cancel: WordBool); dispid 20;
    procedure MailMergeDataSourceLoad(const Doc: WordDocument); dispid 21;
    procedure MailMergeDataSourceValidate(const Doc: WordDocument; var Handled: WordBool); dispid 22;
    procedure MailMergeWizardSendToCustom(const Doc: WordDocument); dispid 23;
    procedure MailMergeWizardStateChange(const Doc: WordDocument; var FromState: SYSINT; 
                                         var ToState: SYSINT; var Handled: WordBool); dispid 24;
    procedure WindowSize(const Doc: WordDocument; const Wn: Window); dispid 25;
  end;

// *********************************************************************//
// Interface: EmailAuthor
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D7-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailAuthor = interface(IDispatch)
    ['{000209D7-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Style: Style; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Style: Style read Get_Style;
  end;

// *********************************************************************//
// DispIntf:  EmailAuthorDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209D7-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailAuthorDisp = dispinterface
    ['{000209D7-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Style: Style readonly dispid 103;
  end;

// *********************************************************************//
// Interface: EmailOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DB-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailOptions = interface(IDispatch)
    ['{000209DB-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_UseThemeStyle: WordBool; safecall;
    procedure Set_UseThemeStyle(prop: WordBool); safecall;
    function Get_MarkCommentsWith: WideString; safecall;
    procedure Set_MarkCommentsWith(const prop: WideString); safecall;
    function Get_MarkComments: WordBool; safecall;
    procedure Set_MarkComments(prop: WordBool); safecall;
    function Get_EmailSignature: EmailSignature; safecall;
    function Get_ComposeStyle: Style; safecall;
    function Get_ReplyStyle: Style; safecall;
    function Get_ThemeName: WideString; safecall;
    procedure Set_ThemeName(const prop: WideString); safecall;
    function Get_Dummy1: WordBool; safecall;
    function Get_Dummy2: WordBool; safecall;
    procedure Dummy3; safecall;
    function Get_NewColorOnReply: WordBool; safecall;
    procedure Set_NewColorOnReply(prop: WordBool); safecall;
    function Get_PlainTextStyle: Style; safecall;
    function Get_UseThemeStyleOnReply: WordBool; safecall;
    procedure Set_UseThemeStyleOnReply(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyHeadings: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyHeadings(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyBorders: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyBorders(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyBulletedLists: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyBulletedLists(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyNumberedLists: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyNumberedLists(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceQuotes: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceQuotes(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceSymbols: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceSymbols(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceOrdinals: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceOrdinals(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceFractions: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceFractions(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplacePlainTextEmphasis(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeFormatListItemBeginning: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeFormatListItemBeginning(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeDefineStyles: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeDefineStyles(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceHyperlinks: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceHyperlinks(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyTables: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyTables(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyFirstIndents: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyFirstIndents(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyDates: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyDates(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeApplyClosings: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeApplyClosings(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeMatchParentheses: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeMatchParentheses(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeReplaceFarEastDashes: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeReplaceFarEastDashes(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeDeleteAutoSpaces: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeDeleteAutoSpaces(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeInsertClosings: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeInsertClosings(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeAutoLetterWizard: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeAutoLetterWizard(prop: WordBool); safecall;
    function Get_AutoFormatAsYouTypeInsertOvers: WordBool; safecall;
    procedure Set_AutoFormatAsYouTypeInsertOvers(prop: WordBool); safecall;
    function Get_RelyOnCSS: WordBool; safecall;
    procedure Set_RelyOnCSS(prop: WordBool); safecall;
    function Get_HTMLFidelity: WdEmailHTMLFidelity; safecall;
    procedure Set_HTMLFidelity(prop: WdEmailHTMLFidelity); safecall;
    function Get_EmbedSmartTag: WordBool; safecall;
    procedure Set_EmbedSmartTag(prop: WordBool); safecall;
    function Get_TabIndentKey: WordBool; safecall;
    procedure Set_TabIndentKey(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property UseThemeStyle: WordBool read Get_UseThemeStyle write Set_UseThemeStyle;
    property MarkCommentsWith: WideString read Get_MarkCommentsWith write Set_MarkCommentsWith;
    property MarkComments: WordBool read Get_MarkComments write Set_MarkComments;
    property EmailSignature: EmailSignature read Get_EmailSignature;
    property ComposeStyle: Style read Get_ComposeStyle;
    property ReplyStyle: Style read Get_ReplyStyle;
    property ThemeName: WideString read Get_ThemeName write Set_ThemeName;
    property Dummy1: WordBool read Get_Dummy1;
    property Dummy2: WordBool read Get_Dummy2;
    property NewColorOnReply: WordBool read Get_NewColorOnReply write Set_NewColorOnReply;
    property PlainTextStyle: Style read Get_PlainTextStyle;
    property UseThemeStyleOnReply: WordBool read Get_UseThemeStyleOnReply write Set_UseThemeStyleOnReply;
    property AutoFormatAsYouTypeApplyHeadings: WordBool read Get_AutoFormatAsYouTypeApplyHeadings write Set_AutoFormatAsYouTypeApplyHeadings;
    property AutoFormatAsYouTypeApplyBorders: WordBool read Get_AutoFormatAsYouTypeApplyBorders write Set_AutoFormatAsYouTypeApplyBorders;
    property AutoFormatAsYouTypeApplyBulletedLists: WordBool read Get_AutoFormatAsYouTypeApplyBulletedLists write Set_AutoFormatAsYouTypeApplyBulletedLists;
    property AutoFormatAsYouTypeApplyNumberedLists: WordBool read Get_AutoFormatAsYouTypeApplyNumberedLists write Set_AutoFormatAsYouTypeApplyNumberedLists;
    property AutoFormatAsYouTypeReplaceQuotes: WordBool read Get_AutoFormatAsYouTypeReplaceQuotes write Set_AutoFormatAsYouTypeReplaceQuotes;
    property AutoFormatAsYouTypeReplaceSymbols: WordBool read Get_AutoFormatAsYouTypeReplaceSymbols write Set_AutoFormatAsYouTypeReplaceSymbols;
    property AutoFormatAsYouTypeReplaceOrdinals: WordBool read Get_AutoFormatAsYouTypeReplaceOrdinals write Set_AutoFormatAsYouTypeReplaceOrdinals;
    property AutoFormatAsYouTypeReplaceFractions: WordBool read Get_AutoFormatAsYouTypeReplaceFractions write Set_AutoFormatAsYouTypeReplaceFractions;
    property AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool read Get_AutoFormatAsYouTypeReplacePlainTextEmphasis write Set_AutoFormatAsYouTypeReplacePlainTextEmphasis;
    property AutoFormatAsYouTypeFormatListItemBeginning: WordBool read Get_AutoFormatAsYouTypeFormatListItemBeginning write Set_AutoFormatAsYouTypeFormatListItemBeginning;
    property AutoFormatAsYouTypeDefineStyles: WordBool read Get_AutoFormatAsYouTypeDefineStyles write Set_AutoFormatAsYouTypeDefineStyles;
    property AutoFormatAsYouTypeReplaceHyperlinks: WordBool read Get_AutoFormatAsYouTypeReplaceHyperlinks write Set_AutoFormatAsYouTypeReplaceHyperlinks;
    property AutoFormatAsYouTypeApplyTables: WordBool read Get_AutoFormatAsYouTypeApplyTables write Set_AutoFormatAsYouTypeApplyTables;
    property AutoFormatAsYouTypeApplyFirstIndents: WordBool read Get_AutoFormatAsYouTypeApplyFirstIndents write Set_AutoFormatAsYouTypeApplyFirstIndents;
    property AutoFormatAsYouTypeApplyDates: WordBool read Get_AutoFormatAsYouTypeApplyDates write Set_AutoFormatAsYouTypeApplyDates;
    property AutoFormatAsYouTypeApplyClosings: WordBool read Get_AutoFormatAsYouTypeApplyClosings write Set_AutoFormatAsYouTypeApplyClosings;
    property AutoFormatAsYouTypeMatchParentheses: WordBool read Get_AutoFormatAsYouTypeMatchParentheses write Set_AutoFormatAsYouTypeMatchParentheses;
    property AutoFormatAsYouTypeReplaceFarEastDashes: WordBool read Get_AutoFormatAsYouTypeReplaceFarEastDashes write Set_AutoFormatAsYouTypeReplaceFarEastDashes;
    property AutoFormatAsYouTypeDeleteAutoSpaces: WordBool read Get_AutoFormatAsYouTypeDeleteAutoSpaces write Set_AutoFormatAsYouTypeDeleteAutoSpaces;
    property AutoFormatAsYouTypeInsertClosings: WordBool read Get_AutoFormatAsYouTypeInsertClosings write Set_AutoFormatAsYouTypeInsertClosings;
    property AutoFormatAsYouTypeAutoLetterWizard: WordBool read Get_AutoFormatAsYouTypeAutoLetterWizard write Set_AutoFormatAsYouTypeAutoLetterWizard;
    property AutoFormatAsYouTypeInsertOvers: WordBool read Get_AutoFormatAsYouTypeInsertOvers write Set_AutoFormatAsYouTypeInsertOvers;
    property RelyOnCSS: WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
    property HTMLFidelity: WdEmailHTMLFidelity read Get_HTMLFidelity write Set_HTMLFidelity;
    property EmbedSmartTag: WordBool read Get_EmbedSmartTag write Set_EmbedSmartTag;
    property TabIndentKey: WordBool read Get_TabIndentKey write Set_TabIndentKey;
  end;

// *********************************************************************//
// DispIntf:  EmailOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DB-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailOptionsDisp = dispinterface
    ['{000209DB-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property UseThemeStyle: WordBool dispid 103;
    property MarkCommentsWith: WideString dispid 106;
    property MarkComments: WordBool dispid 107;
    property EmailSignature: EmailSignature readonly dispid 108;
    property ComposeStyle: Style readonly dispid 109;
    property ReplyStyle: Style readonly dispid 110;
    property ThemeName: WideString dispid 114;
    property Dummy1: WordBool readonly dispid 111;
    property Dummy2: WordBool readonly dispid 112;
    procedure Dummy3; dispid 113;
    property NewColorOnReply: WordBool dispid 116;
    property PlainTextStyle: Style readonly dispid 117;
    property UseThemeStyleOnReply: WordBool dispid 118;
    property AutoFormatAsYouTypeApplyHeadings: WordBool dispid 260;
    property AutoFormatAsYouTypeApplyBorders: WordBool dispid 261;
    property AutoFormatAsYouTypeApplyBulletedLists: WordBool dispid 262;
    property AutoFormatAsYouTypeApplyNumberedLists: WordBool dispid 263;
    property AutoFormatAsYouTypeReplaceQuotes: WordBool dispid 264;
    property AutoFormatAsYouTypeReplaceSymbols: WordBool dispid 265;
    property AutoFormatAsYouTypeReplaceOrdinals: WordBool dispid 266;
    property AutoFormatAsYouTypeReplaceFractions: WordBool dispid 267;
    property AutoFormatAsYouTypeReplacePlainTextEmphasis: WordBool dispid 268;
    property AutoFormatAsYouTypeFormatListItemBeginning: WordBool dispid 269;
    property AutoFormatAsYouTypeDefineStyles: WordBool dispid 270;
    property AutoFormatAsYouTypeReplaceHyperlinks: WordBool dispid 272;
    property AutoFormatAsYouTypeApplyTables: WordBool dispid 290;
    property AutoFormatAsYouTypeApplyFirstIndents: WordBool dispid 297;
    property AutoFormatAsYouTypeApplyDates: WordBool dispid 298;
    property AutoFormatAsYouTypeApplyClosings: WordBool dispid 299;
    property AutoFormatAsYouTypeMatchParentheses: WordBool dispid 300;
    property AutoFormatAsYouTypeReplaceFarEastDashes: WordBool dispid 301;
    property AutoFormatAsYouTypeDeleteAutoSpaces: WordBool dispid 302;
    property AutoFormatAsYouTypeInsertClosings: WordBool dispid 303;
    property AutoFormatAsYouTypeAutoLetterWizard: WordBool dispid 304;
    property AutoFormatAsYouTypeInsertOvers: WordBool dispid 305;
    property RelyOnCSS: WordBool dispid 306;
    property HTMLFidelity: WdEmailHTMLFidelity dispid 307;
    property EmbedSmartTag: WordBool dispid 308;
    property TabIndentKey: WordBool dispid 309;
  end;

// *********************************************************************//
// Interface: EmailSignature
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DC-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignature = interface(IDispatch)
    ['{000209DC-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_NewMessageSignature: WideString; safecall;
    procedure Set_NewMessageSignature(const prop: WideString); safecall;
    function Get_ReplyMessageSignature: WideString; safecall;
    procedure Set_ReplyMessageSignature(const prop: WideString); safecall;
    function Get_EmailSignatureEntries: EmailSignatureEntries; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NewMessageSignature: WideString read Get_NewMessageSignature write Set_NewMessageSignature;
    property ReplyMessageSignature: WideString read Get_ReplyMessageSignature write Set_ReplyMessageSignature;
    property EmailSignatureEntries: EmailSignatureEntries read Get_EmailSignatureEntries;
  end;

// *********************************************************************//
// DispIntf:  EmailSignatureDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DC-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignatureDisp = dispinterface
    ['{000209DC-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property NewMessageSignature: WideString dispid 103;
    property ReplyMessageSignature: WideString dispid 104;
    property EmailSignatureEntries: EmailSignatureEntries readonly dispid 105;
  end;

// *********************************************************************//
// Interface: Email
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DD-0000-0000-C000-000000000046}
// *********************************************************************//
  Email = interface(IDispatch)
    ['{000209DD-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_CurrentEmailAuthor: EmailAuthor; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property CurrentEmailAuthor: EmailAuthor read Get_CurrentEmailAuthor;
  end;

// *********************************************************************//
// DispIntf:  EmailDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DD-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailDisp = dispinterface
    ['{000209DD-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property CurrentEmailAuthor: EmailAuthor readonly dispid 105;
  end;

// *********************************************************************//
// Interface: HorizontalLineFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DE-0000-0000-C000-000000000046}
// *********************************************************************//
  HorizontalLineFormat = interface(IDispatch)
    ['{000209DE-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_PercentWidth: Single; safecall;
    procedure Set_PercentWidth(prop: Single); safecall;
    function Get_NoShade: WordBool; safecall;
    procedure Set_NoShade(prop: WordBool); safecall;
    function Get_Alignment: WdHorizontalLineAlignment; safecall;
    procedure Set_Alignment(prop: WdHorizontalLineAlignment); safecall;
    function Get_WidthType: WdHorizontalLineWidthType; safecall;
    procedure Set_WidthType(prop: WdHorizontalLineWidthType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property PercentWidth: Single read Get_PercentWidth write Set_PercentWidth;
    property NoShade: WordBool read Get_NoShade write Set_NoShade;
    property Alignment: WdHorizontalLineAlignment read Get_Alignment write Set_Alignment;
    property WidthType: WdHorizontalLineWidthType read Get_WidthType write Set_WidthType;
  end;

// *********************************************************************//
// DispIntf:  HorizontalLineFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DE-0000-0000-C000-000000000046}
// *********************************************************************//
  HorizontalLineFormatDisp = dispinterface
    ['{000209DE-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property PercentWidth: Single dispid 2;
    property NoShade: WordBool dispid 3;
    property Alignment: WdHorizontalLineAlignment dispid 4;
    property WidthType: WdHorizontalLineWidthType dispid 5;
  end;

// *********************************************************************//
// Interface: Frameset
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E2-0000-0000-C000-000000000046}
// *********************************************************************//
  Frameset = interface(IDispatch)
    ['{000209E2-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_ParentFrameset: Frameset; safecall;
    function Get_type_: WdFramesetType; safecall;
    function Get_WidthType: WdFramesetSizeType; safecall;
    procedure Set_WidthType(prop: WdFramesetSizeType); safecall;
    function Get_HeightType: WdFramesetSizeType; safecall;
    procedure Set_HeightType(prop: WdFramesetSizeType); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(prop: Integer); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(prop: Integer); safecall;
    function Get_ChildFramesetCount: Integer; safecall;
    function Get_ChildFramesetItem(Index: Integer): Frameset; safecall;
    function Get_FramesetBorderWidth: Single; safecall;
    procedure Set_FramesetBorderWidth(prop: Single); safecall;
    function Get_FramesetBorderColor: WdColor; safecall;
    procedure Set_FramesetBorderColor(prop: WdColor); safecall;
    function Get_FrameScrollbarType: WdScrollbarType; safecall;
    procedure Set_FrameScrollbarType(prop: WdScrollbarType); safecall;
    function Get_FrameResizable: WordBool; safecall;
    procedure Set_FrameResizable(prop: WordBool); safecall;
    function Get_FrameName: WideString; safecall;
    procedure Set_FrameName(const prop: WideString); safecall;
    function Get_FrameDisplayBorders: WordBool; safecall;
    procedure Set_FrameDisplayBorders(prop: WordBool); safecall;
    function Get_FrameDefaultURL: WideString; safecall;
    procedure Set_FrameDefaultURL(const prop: WideString); safecall;
    function Get_FrameLinkToFile: WordBool; safecall;
    procedure Set_FrameLinkToFile(prop: WordBool); safecall;
    function AddNewFrame(Where: WdFramesetNewFrameLocation): Frameset; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property ParentFrameset: Frameset read Get_ParentFrameset;
    property type_: WdFramesetType read Get_type_;
    property WidthType: WdFramesetSizeType read Get_WidthType write Set_WidthType;
    property HeightType: WdFramesetSizeType read Get_HeightType write Set_HeightType;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property ChildFramesetCount: Integer read Get_ChildFramesetCount;
    property ChildFramesetItem[Index: Integer]: Frameset read Get_ChildFramesetItem;
    property FramesetBorderWidth: Single read Get_FramesetBorderWidth write Set_FramesetBorderWidth;
    property FramesetBorderColor: WdColor read Get_FramesetBorderColor write Set_FramesetBorderColor;
    property FrameScrollbarType: WdScrollbarType read Get_FrameScrollbarType write Set_FrameScrollbarType;
    property FrameResizable: WordBool read Get_FrameResizable write Set_FrameResizable;
    property FrameName: WideString read Get_FrameName write Set_FrameName;
    property FrameDisplayBorders: WordBool read Get_FrameDisplayBorders write Set_FrameDisplayBorders;
    property FrameDefaultURL: WideString read Get_FrameDefaultURL write Set_FrameDefaultURL;
    property FrameLinkToFile: WordBool read Get_FrameLinkToFile write Set_FrameLinkToFile;
  end;

// *********************************************************************//
// DispIntf:  FramesetDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E2-0000-0000-C000-000000000046}
// *********************************************************************//
  FramesetDisp = dispinterface
    ['{000209E2-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property ParentFrameset: Frameset readonly dispid 1003;
    property type_: WdFramesetType readonly dispid 0;
    property WidthType: WdFramesetSizeType dispid 1;
    property HeightType: WdFramesetSizeType dispid 2;
    property Width: Integer dispid 3;
    property Height: Integer dispid 4;
    property ChildFramesetCount: Integer readonly dispid 5;
    property ChildFramesetItem[Index: Integer]: Frameset readonly dispid 6;
    property FramesetBorderWidth: Single dispid 20;
    property FramesetBorderColor: WdColor dispid 21;
    property FrameScrollbarType: WdScrollbarType dispid 30;
    property FrameResizable: WordBool dispid 31;
    property FrameName: WideString dispid 34;
    property FrameDisplayBorders: WordBool dispid 35;
    property FrameDefaultURL: WideString dispid 36;
    property FrameLinkToFile: WordBool dispid 37;
    function AddNewFrame(Where: WdFramesetNewFrameLocation): Frameset; dispid 50;
    procedure Delete; dispid 51;
  end;

// *********************************************************************//
// Interface: DefaultWebOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E3-0000-0000-C000-000000000046}
// *********************************************************************//
  DefaultWebOptions = interface(IDispatch)
    ['{000209E3-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_OptimizeForBrowser: WordBool; safecall;
    procedure Set_OptimizeForBrowser(prop: WordBool); safecall;
    function Get_BrowserLevel: WdBrowserLevel; safecall;
    procedure Set_BrowserLevel(prop: WdBrowserLevel); safecall;
    function Get_RelyOnCSS: WordBool; safecall;
    procedure Set_RelyOnCSS(prop: WordBool); safecall;
    function Get_OrganizeInFolder: WordBool; safecall;
    procedure Set_OrganizeInFolder(prop: WordBool); safecall;
    function Get_UpdateLinksOnSave: WordBool; safecall;
    procedure Set_UpdateLinksOnSave(prop: WordBool); safecall;
    function Get_UseLongFileNames: WordBool; safecall;
    procedure Set_UseLongFileNames(prop: WordBool); safecall;
    function Get_CheckIfOfficeIsHTMLEditor: WordBool; safecall;
    procedure Set_CheckIfOfficeIsHTMLEditor(prop: WordBool); safecall;
    function Get_CheckIfWordIsDefaultHTMLEditor: WordBool; safecall;
    procedure Set_CheckIfWordIsDefaultHTMLEditor(prop: WordBool); safecall;
    function Get_RelyOnVML: WordBool; safecall;
    procedure Set_RelyOnVML(prop: WordBool); safecall;
    function Get_AllowPNG: WordBool; safecall;
    procedure Set_AllowPNG(prop: WordBool); safecall;
    function Get_ScreenSize: MsoScreenSize; safecall;
    procedure Set_ScreenSize(prop: MsoScreenSize); safecall;
    function Get_PixelsPerInch: Integer; safecall;
    procedure Set_PixelsPerInch(prop: Integer); safecall;
    function Get_Encoding: MsoEncoding; safecall;
    procedure Set_Encoding(prop: MsoEncoding); safecall;
    function Get_AlwaysSaveInDefaultEncoding: WordBool; safecall;
    procedure Set_AlwaysSaveInDefaultEncoding(prop: WordBool); safecall;
    function Get_Fonts: WebPageFonts; safecall;
    function Get_FolderSuffix: WideString; safecall;
    function Get_TargetBrowser: MsoTargetBrowser; safecall;
    procedure Set_TargetBrowser(prop: MsoTargetBrowser); safecall;
    function Get_SaveNewWebPagesAsWebArchives: WordBool; safecall;
    procedure Set_SaveNewWebPagesAsWebArchives(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OptimizeForBrowser: WordBool read Get_OptimizeForBrowser write Set_OptimizeForBrowser;
    property BrowserLevel: WdBrowserLevel read Get_BrowserLevel write Set_BrowserLevel;
    property RelyOnCSS: WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
    property OrganizeInFolder: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UpdateLinksOnSave: WordBool read Get_UpdateLinksOnSave write Set_UpdateLinksOnSave;
    property UseLongFileNames: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property CheckIfOfficeIsHTMLEditor: WordBool read Get_CheckIfOfficeIsHTMLEditor write Set_CheckIfOfficeIsHTMLEditor;
    property CheckIfWordIsDefaultHTMLEditor: WordBool read Get_CheckIfWordIsDefaultHTMLEditor write Set_CheckIfWordIsDefaultHTMLEditor;
    property RelyOnVML: WordBool read Get_RelyOnVML write Set_RelyOnVML;
    property AllowPNG: WordBool read Get_AllowPNG write Set_AllowPNG;
    property ScreenSize: MsoScreenSize read Get_ScreenSize write Set_ScreenSize;
    property PixelsPerInch: Integer read Get_PixelsPerInch write Set_PixelsPerInch;
    property Encoding: MsoEncoding read Get_Encoding write Set_Encoding;
    property AlwaysSaveInDefaultEncoding: WordBool read Get_AlwaysSaveInDefaultEncoding write Set_AlwaysSaveInDefaultEncoding;
    property Fonts: WebPageFonts read Get_Fonts;
    property FolderSuffix: WideString read Get_FolderSuffix;
    property TargetBrowser: MsoTargetBrowser read Get_TargetBrowser write Set_TargetBrowser;
    property SaveNewWebPagesAsWebArchives: WordBool read Get_SaveNewWebPagesAsWebArchives write Set_SaveNewWebPagesAsWebArchives;
  end;

// *********************************************************************//
// DispIntf:  DefaultWebOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E3-0000-0000-C000-000000000046}
// *********************************************************************//
  DefaultWebOptionsDisp = dispinterface
    ['{000209E3-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property OptimizeForBrowser: WordBool dispid 1;
    property BrowserLevel: WdBrowserLevel dispid 2;
    property RelyOnCSS: WordBool dispid 3;
    property OrganizeInFolder: WordBool dispid 4;
    property UpdateLinksOnSave: WordBool dispid 5;
    property UseLongFileNames: WordBool dispid 6;
    property CheckIfOfficeIsHTMLEditor: WordBool dispid 7;
    property CheckIfWordIsDefaultHTMLEditor: WordBool dispid 8;
    property RelyOnVML: WordBool dispid 9;
    property AllowPNG: WordBool dispid 10;
    property ScreenSize: MsoScreenSize dispid 11;
    property PixelsPerInch: Integer dispid 12;
    property Encoding: MsoEncoding dispid 13;
    property AlwaysSaveInDefaultEncoding: WordBool dispid 14;
    property Fonts: WebPageFonts readonly dispid 15;
    property FolderSuffix: WideString readonly dispid 16;
    property TargetBrowser: MsoTargetBrowser dispid 17;
    property SaveNewWebPagesAsWebArchives: WordBool dispid 18;
  end;

// *********************************************************************//
// Interface: WebOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E4-0000-0000-C000-000000000046}
// *********************************************************************//
  WebOptions = interface(IDispatch)
    ['{000209E4-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_OptimizeForBrowser: WordBool; safecall;
    procedure Set_OptimizeForBrowser(prop: WordBool); safecall;
    function Get_BrowserLevel: WdBrowserLevel; safecall;
    procedure Set_BrowserLevel(prop: WdBrowserLevel); safecall;
    function Get_RelyOnCSS: WordBool; safecall;
    procedure Set_RelyOnCSS(prop: WordBool); safecall;
    function Get_OrganizeInFolder: WordBool; safecall;
    procedure Set_OrganizeInFolder(prop: WordBool); safecall;
    function Get_UseLongFileNames: WordBool; safecall;
    procedure Set_UseLongFileNames(prop: WordBool); safecall;
    function Get_RelyOnVML: WordBool; safecall;
    procedure Set_RelyOnVML(prop: WordBool); safecall;
    function Get_AllowPNG: WordBool; safecall;
    procedure Set_AllowPNG(prop: WordBool); safecall;
    function Get_ScreenSize: MsoScreenSize; safecall;
    procedure Set_ScreenSize(prop: MsoScreenSize); safecall;
    function Get_PixelsPerInch: Integer; safecall;
    procedure Set_PixelsPerInch(prop: Integer); safecall;
    function Get_Encoding: MsoEncoding; safecall;
    procedure Set_Encoding(prop: MsoEncoding); safecall;
    function Get_FolderSuffix: WideString; safecall;
    procedure UseDefaultFolderSuffix; safecall;
    function Get_TargetBrowser: MsoTargetBrowser; safecall;
    procedure Set_TargetBrowser(prop: MsoTargetBrowser); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property OptimizeForBrowser: WordBool read Get_OptimizeForBrowser write Set_OptimizeForBrowser;
    property BrowserLevel: WdBrowserLevel read Get_BrowserLevel write Set_BrowserLevel;
    property RelyOnCSS: WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
    property OrganizeInFolder: WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
    property UseLongFileNames: WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
    property RelyOnVML: WordBool read Get_RelyOnVML write Set_RelyOnVML;
    property AllowPNG: WordBool read Get_AllowPNG write Set_AllowPNG;
    property ScreenSize: MsoScreenSize read Get_ScreenSize write Set_ScreenSize;
    property PixelsPerInch: Integer read Get_PixelsPerInch write Set_PixelsPerInch;
    property Encoding: MsoEncoding read Get_Encoding write Set_Encoding;
    property FolderSuffix: WideString read Get_FolderSuffix;
    property TargetBrowser: MsoTargetBrowser read Get_TargetBrowser write Set_TargetBrowser;
  end;

// *********************************************************************//
// DispIntf:  WebOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E4-0000-0000-C000-000000000046}
// *********************************************************************//
  WebOptionsDisp = dispinterface
    ['{000209E4-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property OptimizeForBrowser: WordBool dispid 1;
    property BrowserLevel: WdBrowserLevel dispid 2;
    property RelyOnCSS: WordBool dispid 3;
    property OrganizeInFolder: WordBool dispid 4;
    property UseLongFileNames: WordBool dispid 5;
    property RelyOnVML: WordBool dispid 6;
    property AllowPNG: WordBool dispid 7;
    property ScreenSize: MsoScreenSize dispid 8;
    property PixelsPerInch: Integer dispid 9;
    property Encoding: MsoEncoding dispid 10;
    property FolderSuffix: WideString readonly dispid 11;
    procedure UseDefaultFolderSuffix; dispid 101;
    property TargetBrowser: MsoTargetBrowser dispid 12;
  end;

// *********************************************************************//
// Interface: OtherCorrectionsExceptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DF-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsExceptions = interface(IDispatch)
    ['{000209DF-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): OtherCorrectionsException; safecall;
    function Add(const Name: WideString): OtherCorrectionsException; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OtherCorrectionsExceptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209DF-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsExceptionsDisp = dispinterface
    ['{000209DF-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): OtherCorrectionsException; dispid 0;
    function Add(const Name: WideString): OtherCorrectionsException; dispid 101;
  end;

// *********************************************************************//
// Interface: OtherCorrectionsException
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E1-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsException = interface(IDispatch)
    ['{000209E1-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  OtherCorrectionsExceptionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E1-0000-0000-C000-000000000046}
// *********************************************************************//
  OtherCorrectionsExceptionDisp = dispinterface
    ['{000209E1-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString readonly dispid 2;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: EmailSignatureEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E5-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignatureEntries = interface(IDispatch)
    ['{000209E5-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): EmailSignatureEntry; safecall;
    function Add(const Name: WideString; const Range: WordRange): EmailSignatureEntry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  EmailSignatureEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E5-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignatureEntriesDisp = dispinterface
    ['{000209E5-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): EmailSignatureEntry; dispid 0;
    function Add(const Name: WideString; const Range: WordRange): EmailSignatureEntry; dispid 101;
  end;

// *********************************************************************//
// Interface: EmailSignatureEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E6-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignatureEntry = interface(IDispatch)
    ['{000209E6-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  EmailSignatureEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E6-0000-0000-C000-000000000046}
// *********************************************************************//
  EmailSignatureEntryDisp = dispinterface
    ['{000209E6-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString dispid 2;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: HTMLDivision
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E7-0000-0000-C000-000000000046}
// *********************************************************************//
  HTMLDivision = interface(IDispatch)
    ['{000209E7-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Borders: Borders; safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_RightIndent: Single; safecall;
    procedure Set_RightIndent(prop: Single); safecall;
    function Get_SpaceBefore: Single; safecall;
    procedure Set_SpaceBefore(prop: Single); safecall;
    function Get_SpaceAfter: Single; safecall;
    procedure Set_SpaceAfter(prop: Single); safecall;
    function Get_HTMLDivisions: HTMLDivisions; safecall;
    function HTMLDivisionParent(var LevelsUp: OleVariant): HTMLDivision; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Borders: Borders read Get_Borders;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property RightIndent: Single read Get_RightIndent write Set_RightIndent;
    property SpaceBefore: Single read Get_SpaceBefore write Set_SpaceBefore;
    property SpaceAfter: Single read Get_SpaceAfter write Set_SpaceAfter;
    property HTMLDivisions: HTMLDivisions read Get_HTMLDivisions;
  end;

// *********************************************************************//
// DispIntf:  HTMLDivisionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E7-0000-0000-C000-000000000046}
// *********************************************************************//
  HTMLDivisionDisp = dispinterface
    ['{000209E7-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 1;
    property Borders: Borders readonly dispid 1100;
    property LeftIndent: Single dispid 3;
    property RightIndent: Single dispid 4;
    property SpaceBefore: Single dispid 5;
    property SpaceAfter: Single dispid 6;
    property HTMLDivisions: HTMLDivisions readonly dispid 7;
    function HTMLDivisionParent(var LevelsUp: OleVariant): HTMLDivision; dispid 8;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: HTMLDivisions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E8-0000-0000-C000-000000000046}
// *********************************************************************//
  HTMLDivisions = interface(IDispatch)
    ['{000209E8-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Add(var Range: OleVariant): HTMLDivision; safecall;
    function Item(Index: Integer): HTMLDivision; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property NestingLevel: Integer read Get_NestingLevel;
  end;

// *********************************************************************//
// DispIntf:  HTMLDivisionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E8-0000-0000-C000-000000000046}
// *********************************************************************//
  HTMLDivisionsDisp = dispinterface
    ['{000209E8-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    property NestingLevel: Integer readonly dispid 2;
    function Add(var Range: OleVariant): HTMLDivision; dispid 101;
    function Item(Index: Integer): HTMLDivision; dispid 0;
  end;

// *********************************************************************//
// Interface: DiagramNode
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E9-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramNode = interface(IDispatch)
    ['{000209E9-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Children: DiagramNodeChildren; safecall;
    function Get_Shape: Shape; safecall;
    function Get_Root: DiagramNode; safecall;
    function Get_Diagram: Diagram; safecall;
    function Get_Layout: MsoOrgChartLayoutType; safecall;
    procedure Set_Layout(prop: MsoOrgChartLayoutType); safecall;
    function Get_TextShape: Shape; safecall;
    function AddNode(Pos: MsoRelativeNodePosition; NodeType: MsoDiagramNodeType): DiagramNode; safecall;
    procedure Delete; safecall;
    procedure MoveNode(out TargetNode: DiagramNode; Pos: MsoRelativeNodePosition); safecall;
    procedure ReplaceNode(out TargetNode: DiagramNode); safecall;
    procedure SwapNode(out TargetNode: DiagramNode; Pos: MsoRelativeNodePosition); safecall;
    function CloneNode(copyChildren: WordBool; out TargetNode: DiagramNode; 
                       Pos: MsoRelativeNodePosition): DiagramNode; safecall;
    procedure TransferChildren(out ReceivingNode: DiagramNode); safecall;
    function NextNode: DiagramNode; safecall;
    function PrevNode: DiagramNode; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Children: DiagramNodeChildren read Get_Children;
    property Shape: Shape read Get_Shape;
    property Root: DiagramNode read Get_Root;
    property Diagram: Diagram read Get_Diagram;
    property Layout: MsoOrgChartLayoutType read Get_Layout write Set_Layout;
    property TextShape: Shape read Get_TextShape;
  end;

// *********************************************************************//
// DispIntf:  DiagramNodeDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209E9-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramNodeDisp = dispinterface
    ['{000209E9-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 100;
    property Children: DiagramNodeChildren readonly dispid 101;
    property Shape: Shape readonly dispid 102;
    property Root: DiagramNode readonly dispid 103;
    property Diagram: Diagram readonly dispid 104;
    property Layout: MsoOrgChartLayoutType dispid 105;
    property TextShape: Shape readonly dispid 106;
    function AddNode(Pos: MsoRelativeNodePosition; NodeType: MsoDiagramNodeType): DiagramNode; dispid 10;
    procedure Delete; dispid 11;
    procedure MoveNode(out TargetNode: DiagramNode; Pos: MsoRelativeNodePosition); dispid 12;
    procedure ReplaceNode(out TargetNode: DiagramNode); dispid 13;
    procedure SwapNode(out TargetNode: DiagramNode; Pos: MsoRelativeNodePosition); dispid 14;
    function CloneNode(copyChildren: WordBool; out TargetNode: DiagramNode; 
                       Pos: MsoRelativeNodePosition): DiagramNode; dispid 15;
    procedure TransferChildren(out ReceivingNode: DiagramNode); dispid 16;
    function NextNode: DiagramNode; dispid 17;
    function PrevNode: DiagramNode; dispid 18;
  end;

// *********************************************************************//
// Interface: DiagramNodeChildren
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EA-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramNodeChildren = interface(IDispatch)
    ['{000209EA-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get_FirstChild: DiagramNode; safecall;
    function Get_LastChild: DiagramNode; safecall;
    function Item(var Index: OleVariant): DiagramNode; safecall;
    function AddNode(var Index: OleVariant; NodeType: MsoDiagramNodeType): DiagramNode; safecall;
    procedure SelectAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property FirstChild: DiagramNode read Get_FirstChild;
    property LastChild: DiagramNode read Get_LastChild;
  end;

// *********************************************************************//
// DispIntf:  DiagramNodeChildrenDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EA-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramNodeChildrenDisp = dispinterface
    ['{000209EA-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property _NewEnum: IUnknown readonly dispid -4;
    property Parent: IDispatch readonly dispid 100;
    property Count: Integer readonly dispid 101;
    property FirstChild: DiagramNode readonly dispid 103;
    property LastChild: DiagramNode readonly dispid 104;
    function Item(var Index: OleVariant): DiagramNode; dispid 0;
    function AddNode(var Index: OleVariant; NodeType: MsoDiagramNodeType): DiagramNode; dispid 10;
    procedure SelectAll; dispid 11;
  end;

// *********************************************************************//
// Interface: DiagramNodes
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EB-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramNodes = interface(IDispatch)
    ['{000209EB-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): DiagramNode; safecall;
    procedure SelectAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  DiagramNodesDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EB-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramNodesDisp = dispinterface
    ['{000209EB-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property _NewEnum: IUnknown readonly dispid -4;
    property Parent: IDispatch readonly dispid 100;
    property Count: Integer readonly dispid 101;
    function Item(var Index: OleVariant): DiagramNode; dispid 0;
    procedure SelectAll; dispid 10;
  end;

// *********************************************************************//
// Interface: Diagram
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EC-0000-0000-C000-000000000046}
// *********************************************************************//
  Diagram = interface(IDispatch)
    ['{000209EC-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Nodes: DiagramNodes; safecall;
    function Get_type_: MsoDiagramType; safecall;
    function Get_AutoLayout: MsoTriState; safecall;
    procedure Set_AutoLayout(prop: MsoTriState); safecall;
    function Get_Reverse: MsoTriState; safecall;
    procedure Set_Reverse(prop: MsoTriState); safecall;
    function Get_AutoFormat: MsoTriState; safecall;
    procedure Set_AutoFormat(prop: MsoTriState); safecall;
    procedure Convert(Type_: MsoDiagramType); safecall;
    procedure FitText; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Nodes: DiagramNodes read Get_Nodes;
    property type_: MsoDiagramType read Get_type_;
    property AutoLayout: MsoTriState read Get_AutoLayout write Set_AutoLayout;
    property Reverse: MsoTriState read Get_Reverse write Set_Reverse;
    property AutoFormat: MsoTriState read Get_AutoFormat write Set_AutoFormat;
  end;

// *********************************************************************//
// DispIntf:  DiagramDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EC-0000-0000-C000-000000000046}
// *********************************************************************//
  DiagramDisp = dispinterface
    ['{000209EC-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 100;
    property Nodes: DiagramNodes readonly dispid 101;
    property type_: MsoDiagramType readonly dispid 102;
    property AutoLayout: MsoTriState dispid 103;
    property Reverse: MsoTriState dispid 104;
    property AutoFormat: MsoTriState dispid 105;
    procedure Convert(Type_: MsoDiagramType); dispid 10;
    procedure FitText; dispid 11;
  end;

// *********************************************************************//
// Interface: CustomProperty
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B923FDE0-F08C-11D3-91B0-00105A0A19FD}
// *********************************************************************//
  CustomProperty = interface(IDispatch)
    ['{B923FDE0-F08C-11D3-91B0-00105A0A19FD}']
    function Get_Name: WideString; safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Delete; safecall;
    property Name: WideString read Get_Name;
    property Value: WideString read Get_Value write Set_Value;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  CustomPropertyDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B923FDE0-F08C-11D3-91B0-00105A0A19FD}
// *********************************************************************//
  CustomPropertyDisp = dispinterface
    ['{B923FDE0-F08C-11D3-91B0-00105A0A19FD}']
    property Name: WideString readonly dispid 1;
    property Value: WideString dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure Delete; dispid 11;
  end;

// *********************************************************************//
// Interface: CustomProperties
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B923FDE1-F08C-11D3-91B0-00105A0A19FD}
// *********************************************************************//
  CustomProperties = interface(IDispatch)
    ['{B923FDE1-F08C-11D3-91B0-00105A0A19FD}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): CustomProperty; safecall;
    function Add(const Name: WideString; const Value: WideString): CustomProperty; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  CustomPropertiesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B923FDE1-F08C-11D3-91B0-00105A0A19FD}
// *********************************************************************//
  CustomPropertiesDisp = dispinterface
    ['{B923FDE1-F08C-11D3-91B0-00105A0A19FD}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): CustomProperty; dispid 0;
    function Add(const Name: WideString; const Value: WideString): CustomProperty; dispid 5;
  end;

// *********************************************************************//
// Interface: SmartTag
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209ED-0000-0000-C000-000000000046}
// *********************************************************************//
  SmartTag = interface(IDispatch)
    ['{000209ED-0000-0000-C000-000000000046}']
    function Get_Name: WideString; safecall;
    function Get_XML: WideString; safecall;
    function Get_Range: WordRange; safecall;
    function Get_DownloadURL: WideString; safecall;
    function Get_Properties: CustomProperties; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    function Get_SmartTagActions: SmartTagActions; safecall;
    function Get_XMLNode: XMLNode; safecall;
    property Name: WideString read Get_Name;
    property XML: WideString read Get_XML;
    property Range: WordRange read Get_Range;
    property DownloadURL: WideString read Get_DownloadURL;
    property Properties: CustomProperties read Get_Properties;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property SmartTagActions: SmartTagActions read Get_SmartTagActions;
    property XMLNode: XMLNode read Get_XMLNode;
  end;

// *********************************************************************//
// DispIntf:  SmartTagDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209ED-0000-0000-C000-000000000046}
// *********************************************************************//
  SmartTagDisp = dispinterface
    ['{000209ED-0000-0000-C000-000000000046}']
    property Name: WideString readonly dispid 0;
    property XML: WideString readonly dispid 2;
    property Range: WordRange readonly dispid 3;
    property DownloadURL: WideString readonly dispid 4;
    property Properties: CustomProperties readonly dispid 5;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure Select; dispid 65535;
    procedure Delete; dispid 11;
    property SmartTagActions: SmartTagActions readonly dispid 1003;
    property XMLNode: XMLNode readonly dispid 1004;
  end;

// *********************************************************************//
// Interface: SmartTags
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EE-0000-0000-C000-000000000046}
// *********************************************************************//
  SmartTags = interface(IDispatch)
    ['{000209EE-0000-0000-C000-000000000046}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): SmartTag; safecall;
    function Add(const Name: WideString; var Range: OleVariant; var Properties: OleVariant): SmartTag; safecall;
    function SmartTagsByType(const Name: WideString): SmartTags; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SmartTagsDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EE-0000-0000-C000-000000000046}
// *********************************************************************//
  SmartTagsDisp = dispinterface
    ['{000209EE-0000-0000-C000-000000000046}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): SmartTag; dispid 0;
    function Add(const Name: WideString; var Range: OleVariant; var Properties: OleVariant): SmartTag; dispid 5;
    function SmartTagsByType(const Name: WideString): SmartTags; dispid 1003;
  end;

// *********************************************************************//
// Interface: StyleSheet
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EF-0000-0000-C000-000000000046}
// *********************************************************************//
  StyleSheet = interface(IDispatch)
    ['{000209EF-0000-0000-C000-000000000046}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_FullName: WideString; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    function Get_Path: WideString; safecall;
    function Get_type_: WdStyleSheetLinkType; safecall;
    procedure Set_type_(prop: WdStyleSheetLinkType); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const prop: WideString); safecall;
    procedure Move(Precedence: WdStyleSheetPrecedence); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property FullName: WideString read Get_FullName;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
    property Path: WideString read Get_Path;
    property type_: WdStyleSheetLinkType read Get_type_ write Set_type_;
    property Title: WideString read Get_Title write Set_Title;
  end;

// *********************************************************************//
// DispIntf:  StyleSheetDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {000209EF-0000-0000-C000-000000000046}
// *********************************************************************//
  StyleSheetDisp = dispinterface
    ['{000209EF-0000-0000-C000-000000000046}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 100;
    property FullName: WideString readonly dispid 1;
    property Index: Integer readonly dispid 2;
    property Name: WideString readonly dispid 3;
    property Path: WideString readonly dispid 4;
    property type_: WdStyleSheetLinkType dispid 5;
    property Title: WideString dispid 6;
    procedure Move(Precedence: WdStyleSheetPrecedence); dispid 7;
    procedure Delete; dispid 8;
  end;

// *********************************************************************//
// Interface: StyleSheets
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {07B7CC7E-E66C-11D3-9454-00105AA31A08}
// *********************************************************************//
  StyleSheets = interface(IDispatch)
    ['{07B7CC7E-E66C-11D3-9454-00105AA31A08}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): StyleSheet; safecall;
    function Add(const FileName: WideString; LinkType: WdStyleSheetLinkType; 
                 const Title: WideString; Precedence: WdStyleSheetPrecedence): StyleSheet; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  StyleSheetsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {07B7CC7E-E66C-11D3-9454-00105AA31A08}
// *********************************************************************//
  StyleSheetsDisp = dispinterface
    ['{07B7CC7E-E66C-11D3-9454-00105AA31A08}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): StyleSheet; dispid 0;
    function Add(const FileName: WideString; LinkType: WdStyleSheetLinkType; 
                 const Title: WideString; Precedence: WdStyleSheetPrecedence): StyleSheet; dispid 2;
  end;

// *********************************************************************//
// Interface: MappedDataField
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5D311669-EA51-11D3-87CC-00105AA31A34}
// *********************************************************************//
  MappedDataField = interface(IDispatch)
    ['{5D311669-EA51-11D3-87CC-00105AA31A34}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_DataFieldName: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_Value: WideString; safecall;
    function Get_DataFieldIndex: Integer; safecall;
    procedure Set_DataFieldIndex(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property DataFieldName: WideString read Get_DataFieldName;
    property Name: WideString read Get_Name;
    property Value: WideString read Get_Value;
    property DataFieldIndex: Integer read Get_DataFieldIndex write Set_DataFieldIndex;
  end;

// *********************************************************************//
// DispIntf:  MappedDataFieldDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5D311669-EA51-11D3-87CC-00105AA31A34}
// *********************************************************************//
  MappedDataFieldDisp = dispinterface
    ['{5D311669-EA51-11D3-87CC-00105AA31A34}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property DataFieldName: WideString readonly dispid 2;
    property Name: WideString readonly dispid 0;
    property Value: WideString readonly dispid 4;
    property DataFieldIndex: Integer dispid 5;
  end;

// *********************************************************************//
// Interface: MappedDataFields
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {799A6814-EA41-11D3-87CC-00105AA31A34}
// *********************************************************************//
  MappedDataFields = interface(IDispatch)
    ['{799A6814-EA41-11D3-87CC-00105AA31A34}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(Index: WdMappedDataFields): MappedDataField; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  MappedDataFieldsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {799A6814-EA41-11D3-87CC-00105AA31A34}
// *********************************************************************//
  MappedDataFieldsDisp = dispinterface
    ['{799A6814-EA41-11D3-87CC-00105AA31A34}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(Index: WdMappedDataFields): MappedDataField; dispid 0;
  end;

// *********************************************************************//
// Interface: CanvasShapes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {396F9073-F9FD-11D3-8EA0-0050049A1A01}
// *********************************************************************//
  CanvasShapes = interface(IDispatch)
    ['{396F9073-F9FD-11D3-8EA0-0050049A1A01}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(var Index: OleVariant): Shape; safecall;
    function AddCallout(Type_: MsoCalloutType; Left: Single; Top: Single; Width: Single; 
                        Height: Single): Shape; safecall;
    function AddConnector(Type_: MsoConnectorType; BeginX: Single; BeginY: Single; EndX: Single; 
                          EndY: Single): Shape; safecall;
    function AddCurve(var SafeArrayOfPoints: OleVariant): Shape; safecall;
    function AddLabel(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                      Height: Single): Shape; safecall;
    function AddLine(BeginX: Single; BeginY: Single; EndX: Single; EndY: Single): Shape; safecall;
    function AddPicture(const FileName: WideString; var LinkToFile: OleVariant; 
                        var SaveWithDocument: OleVariant; var Left: OleVariant; 
                        var Top: OleVariant; var Width: OleVariant; var Height: OleVariant): Shape; safecall;
    function AddPolyline(var SafeArrayOfPoints: OleVariant): Shape; safecall;
    function AddShape(Type_: Integer; Left: Single; Top: Single; Width: Single; Height: Single): Shape; safecall;
    function AddTextEffect(PresetTextEffect: MsoPresetTextEffect; const Text: WideString; 
                           const FontName: WideString; FontSize: Single; FontBold: MsoTriState; 
                           FontItalic: MsoTriState; Left: Single; Top: Single): Shape; safecall;
    function AddTextbox(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                        Height: Single): Shape; safecall;
    function BuildFreeform(EditingType: MsoEditingType; X1: Single; Y1: Single): FreeformBuilder; safecall;
    function Range(var Index: OleVariant): ShapeRange; safecall;
    procedure SelectAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  CanvasShapesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {396F9073-F9FD-11D3-8EA0-0050049A1A01}
// *********************************************************************//
  CanvasShapesDisp = dispinterface
    ['{396F9073-F9FD-11D3-8EA0-0050049A1A01}']
    property Application: WordApplication readonly dispid 8000;
    property Creator: Integer readonly dispid 8001;
    property Parent: IDispatch readonly dispid 1;
    property Count: Integer readonly dispid 2;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(var Index: OleVariant): Shape; dispid 0;
    function AddCallout(Type_: MsoCalloutType; Left: Single; Top: Single; Width: Single; 
                        Height: Single): Shape; dispid 10;
    function AddConnector(Type_: MsoConnectorType; BeginX: Single; BeginY: Single; EndX: Single; 
                          EndY: Single): Shape; dispid 11;
    function AddCurve(var SafeArrayOfPoints: OleVariant): Shape; dispid 12;
    function AddLabel(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                      Height: Single): Shape; dispid 13;
    function AddLine(BeginX: Single; BeginY: Single; EndX: Single; EndY: Single): Shape; dispid 14;
    function AddPicture(const FileName: WideString; var LinkToFile: OleVariant; 
                        var SaveWithDocument: OleVariant; var Left: OleVariant; 
                        var Top: OleVariant; var Width: OleVariant; var Height: OleVariant): Shape; dispid 15;
    function AddPolyline(var SafeArrayOfPoints: OleVariant): Shape; dispid 16;
    function AddShape(Type_: Integer; Left: Single; Top: Single; Width: Single; Height: Single): Shape; dispid 17;
    function AddTextEffect(PresetTextEffect: MsoPresetTextEffect; const Text: WideString; 
                           const FontName: WideString; FontSize: Single; FontBold: MsoTriState; 
                           FontItalic: MsoTriState; Left: Single; Top: Single): Shape; dispid 18;
    function AddTextbox(Orientation: MsoTextOrientation; Left: Single; Top: Single; Width: Single; 
                        Height: Single): Shape; dispid 19;
    function BuildFreeform(EditingType: MsoEditingType; X1: Single; Y1: Single): FreeformBuilder; dispid 20;
    function Range(var Index: OleVariant): ShapeRange; dispid 21;
    procedure SelectAll; dispid 22;
  end;

// *********************************************************************//
// Interface: TableStyle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B7564E97-0519-4C68-B400-3803E7C63242}
// *********************************************************************//
  TableStyle = interface(IDispatch)
    ['{B7564E97-0519-4C68-B400-3803E7C63242}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AllowPageBreaks: WordBool; safecall;
    procedure Set_AllowPageBreaks(prop: WordBool); safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_BottomPadding: Single; safecall;
    procedure Set_BottomPadding(prop: Single); safecall;
    function Get_LeftPadding: Single; safecall;
    procedure Set_LeftPadding(prop: Single); safecall;
    function Get_TopPadding: Single; safecall;
    procedure Set_TopPadding(prop: Single); safecall;
    function Get_RightPadding: Single; safecall;
    procedure Set_RightPadding(prop: Single); safecall;
    function Get_Alignment: WdRowAlignment; safecall;
    procedure Set_Alignment(prop: WdRowAlignment); safecall;
    function Get_Spacing: Single; safecall;
    procedure Set_Spacing(prop: Single); safecall;
    function Condition(ConditionCode: WdConditionCode): ConditionalStyle; safecall;
    function Get_TableDirection: WdTableDirection; safecall;
    procedure Set_TableDirection(prop: WdTableDirection); safecall;
    function Get_AllowBreakAcrossPage: Integer; safecall;
    procedure Set_AllowBreakAcrossPage(prop: Integer); safecall;
    function Get_LeftIndent: Single; safecall;
    procedure Set_LeftIndent(prop: Single); safecall;
    function Get_Shading: Shading; safecall;
    function Get_RowStripe: Integer; safecall;
    procedure Set_RowStripe(prop: Integer); safecall;
    function Get_ColumnStripe: Integer; safecall;
    procedure Set_ColumnStripe(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AllowPageBreaks: WordBool read Get_AllowPageBreaks write Set_AllowPageBreaks;
    property Borders: Borders read Get_Borders write Set_Borders;
    property BottomPadding: Single read Get_BottomPadding write Set_BottomPadding;
    property LeftPadding: Single read Get_LeftPadding write Set_LeftPadding;
    property TopPadding: Single read Get_TopPadding write Set_TopPadding;
    property RightPadding: Single read Get_RightPadding write Set_RightPadding;
    property Alignment: WdRowAlignment read Get_Alignment write Set_Alignment;
    property Spacing: Single read Get_Spacing write Set_Spacing;
    property TableDirection: WdTableDirection read Get_TableDirection write Set_TableDirection;
    property AllowBreakAcrossPage: Integer read Get_AllowBreakAcrossPage write Set_AllowBreakAcrossPage;
    property LeftIndent: Single read Get_LeftIndent write Set_LeftIndent;
    property Shading: Shading read Get_Shading;
    property RowStripe: Integer read Get_RowStripe write Set_RowStripe;
    property ColumnStripe: Integer read Get_ColumnStripe write Set_ColumnStripe;
  end;

// *********************************************************************//
// DispIntf:  TableStyleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B7564E97-0519-4C68-B400-3803E7C63242}
// *********************************************************************//
  TableStyleDisp = dispinterface
    ['{B7564E97-0519-4C68-B400-3803E7C63242}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 100;
    property AllowPageBreaks: WordBool dispid 2;
    property Borders: Borders dispid 3;
    property BottomPadding: Single dispid 4;
    property LeftPadding: Single dispid 5;
    property TopPadding: Single dispid 6;
    property RightPadding: Single dispid 7;
    property Alignment: WdRowAlignment dispid 9;
    property Spacing: Single dispid 10;
    function Condition(ConditionCode: WdConditionCode): ConditionalStyle; dispid 16;
    property TableDirection: WdTableDirection dispid 12;
    property AllowBreakAcrossPage: Integer dispid 13;
    property LeftIndent: Single dispid 14;
    property Shading: Shading readonly dispid 15;
    property RowStripe: Integer dispid 17;
    property ColumnStripe: Integer dispid 18;
  end;

// *********************************************************************//
// Interface: ConditionalStyle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1498F56D-ED33-41F9-B37B-EF30E50B08AC}
// *********************************************************************//
  ConditionalStyle = interface(IDispatch)
    ['{1498F56D-ED33-41F9-B37B-EF30E50B08AC}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Shading: Shading; safecall;
    function Get_Borders: Borders; safecall;
    procedure Set_Borders(const prop: Borders); safecall;
    function Get_BottomPadding: Single; safecall;
    procedure Set_BottomPadding(prop: Single); safecall;
    function Get_TopPadding: Single; safecall;
    procedure Set_TopPadding(prop: Single); safecall;
    function Get_LeftPadding: Single; safecall;
    procedure Set_LeftPadding(prop: Single); safecall;
    function Get_RightPadding: Single; safecall;
    procedure Set_RightPadding(prop: Single); safecall;
    function Get_ParagraphFormat: WordParagraphFormat; safecall;
    procedure Set_ParagraphFormat(const prop: WordParagraphFormat); safecall;
    function Get_Font: WordFont; safecall;
    procedure Set_Font(const prop: WordFont); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Shading: Shading read Get_Shading;
    property Borders: Borders read Get_Borders write Set_Borders;
    property BottomPadding: Single read Get_BottomPadding write Set_BottomPadding;
    property TopPadding: Single read Get_TopPadding write Set_TopPadding;
    property LeftPadding: Single read Get_LeftPadding write Set_LeftPadding;
    property RightPadding: Single read Get_RightPadding write Set_RightPadding;
    property ParagraphFormat: WordParagraphFormat read Get_ParagraphFormat write Set_ParagraphFormat;
    property Font: WordFont read Get_Font write Set_Font;
  end;

// *********************************************************************//
// DispIntf:  ConditionalStyleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1498F56D-ED33-41F9-B37B-EF30E50B08AC}
// *********************************************************************//
  ConditionalStyleDisp = dispinterface
    ['{1498F56D-ED33-41F9-B37B-EF30E50B08AC}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 100;
    property Shading: Shading readonly dispid 1;
    property Borders: Borders dispid 2;
    property BottomPadding: Single dispid 3;
    property TopPadding: Single dispid 4;
    property LeftPadding: Single dispid 5;
    property RightPadding: Single dispid 6;
    property ParagraphFormat: WordParagraphFormat dispid 9;
    property Font: WordFont dispid 10;
  end;

// *********************************************************************//
// Interface: FootnoteOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}
// *********************************************************************//
  FootnoteOptions = interface(IDispatch)
    ['{BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Location: WdFootnoteLocation; safecall;
    procedure Set_Location(prop: WdFootnoteLocation); safecall;
    function Get_NumberStyle: WdNoteNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdNoteNumberStyle); safecall;
    function Get_StartingNumber: Integer; safecall;
    procedure Set_StartingNumber(prop: Integer); safecall;
    function Get_NumberingRule: WdNumberingRule; safecall;
    procedure Set_NumberingRule(prop: WdNumberingRule); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Location: WdFootnoteLocation read Get_Location write Set_Location;
    property NumberStyle: WdNoteNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property NumberingRule: WdNumberingRule read Get_NumberingRule write Set_NumberingRule;
  end;

// *********************************************************************//
// DispIntf:  FootnoteOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}
// *********************************************************************//
  FootnoteOptionsDisp = dispinterface
    ['{BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Location: WdFootnoteLocation dispid 100;
    property NumberStyle: WdNoteNumberStyle dispid 101;
    property StartingNumber: Integer dispid 102;
    property NumberingRule: WdNumberingRule dispid 103;
  end;

// *********************************************************************//
// Interface: EndnoteOptions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {BF043168-F4DE-4E7C-B206-741A8B3EF71A}
// *********************************************************************//
  EndnoteOptions = interface(IDispatch)
    ['{BF043168-F4DE-4E7C-B206-741A8B3EF71A}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Location: WdEndnoteLocation; safecall;
    procedure Set_Location(prop: WdEndnoteLocation); safecall;
    function Get_NumberStyle: WdNoteNumberStyle; safecall;
    procedure Set_NumberStyle(prop: WdNoteNumberStyle); safecall;
    function Get_StartingNumber: Integer; safecall;
    procedure Set_StartingNumber(prop: Integer); safecall;
    function Get_NumberingRule: WdNumberingRule; safecall;
    procedure Set_NumberingRule(prop: WdNumberingRule); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Location: WdEndnoteLocation read Get_Location write Set_Location;
    property NumberStyle: WdNoteNumberStyle read Get_NumberStyle write Set_NumberStyle;
    property StartingNumber: Integer read Get_StartingNumber write Set_StartingNumber;
    property NumberingRule: WdNumberingRule read Get_NumberingRule write Set_NumberingRule;
  end;

// *********************************************************************//
// DispIntf:  EndnoteOptionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {BF043168-F4DE-4E7C-B206-741A8B3EF71A}
// *********************************************************************//
  EndnoteOptionsDisp = dispinterface
    ['{BF043168-F4DE-4E7C-B206-741A8B3EF71A}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Location: WdEndnoteLocation dispid 100;
    property NumberStyle: WdNoteNumberStyle dispid 101;
    property StartingNumber: Integer dispid 102;
    property NumberingRule: WdNumberingRule dispid 103;
  end;

// *********************************************************************//
// Interface: Reviewers
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}
// *********************************************************************//
  Reviewers = interface(IDispatch)
    ['{12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): Reviewer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ReviewersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}
// *********************************************************************//
  ReviewersDisp = dispinterface
    ['{12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 2;
    function Item(var Index: OleVariant): Reviewer; dispid 0;
  end;

// *********************************************************************//
// Interface: Reviewer
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}
// *********************************************************************//
  Reviewer = interface(IDispatch)
    ['{47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Visible: WordBool read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  ReviewerDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}
// *********************************************************************//
  ReviewerDisp = dispinterface
    ['{47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Visible: WordBool dispid 0;
  end;

// *********************************************************************//
// Interface: TaskPane
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}
// *********************************************************************//
  TaskPane = interface(IDispatch)
    ['{B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Visible: WordBool read Get_Visible write Set_Visible;
  end;

// *********************************************************************//
// DispIntf:  TaskPaneDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}
// *********************************************************************//
  TaskPaneDisp = dispinterface
    ['{B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Visible: WordBool dispid 1003;
  end;

// *********************************************************************//
// Interface: TaskPanes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E6AAEC05-E543-4085-BA92-9BF7D2474F5C}
// *********************************************************************//
  TaskPanes = interface(IDispatch)
    ['{E6AAEC05-E543-4085-BA92-9BF7D2474F5C}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: WdTaskPanes): TaskPane; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  TaskPanesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E6AAEC05-E543-4085-BA92-9BF7D2474F5C}
// *********************************************************************//
  TaskPanesDisp = dispinterface
    ['{E6AAEC05-E543-4085-BA92-9BF7D2474F5C}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: WdTaskPanes): TaskPane; dispid 0;
  end;

// *********************************************************************//
// Interface: IApplicationEvents3
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020A00-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents3 = interface(IDispatch)
    ['{00020A00-0001-0000-C000-000000000046}']
    procedure Startup; safecall;
    procedure Quit; safecall;
    procedure DocumentChange; safecall;
    procedure DocumentOpen(const Doc: WordDocument); safecall;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); safecall;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); safecall;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); safecall;
    procedure NewDocument(const Doc: WordDocument); safecall;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); safecall;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); safecall;
    procedure WindowSelectionChange(const Sel: WordSelection); safecall;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); safecall;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); safecall;
    procedure EPostagePropertyDialog(const Doc: WordDocument); safecall;
    procedure EPostageInsert(const Doc: WordDocument); safecall;
    procedure MailMergeAfterMerge(const Doc: WordDocument; const DocResult: WordDocument); safecall;
    procedure MailMergeAfterRecordMerge(const Doc: WordDocument); safecall;
    procedure MailMergeBeforeMerge(const Doc: WordDocument; StartRecord: Integer; 
                                   EndRecord: Integer; var Cancel: WordBool); safecall;
    procedure MailMergeBeforeRecordMerge(const Doc: WordDocument; var Cancel: WordBool); safecall;
    procedure MailMergeDataSourceLoad(const Doc: WordDocument); safecall;
    procedure MailMergeDataSourceValidate(const Doc: WordDocument; var Handled: WordBool); safecall;
    procedure MailMergeWizardSendToCustom(const Doc: WordDocument); safecall;
    procedure MailMergeWizardStateChange(const Doc: WordDocument; var FromState: SYSINT; 
                                         var ToState: SYSINT; var Handled: WordBool); safecall;
    procedure WindowSize(const Doc: WordDocument; const Wn: Window); safecall;
  end;

// *********************************************************************//
// DispIntf:  IApplicationEvents3Disp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {00020A00-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents3Disp = dispinterface
    ['{00020A00-0001-0000-C000-000000000046}']
    procedure Startup; dispid 1;
    procedure Quit; dispid 2;
    procedure DocumentChange; dispid 3;
    procedure DocumentOpen(const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); dispid 8;
    procedure NewDocument(const Doc: WordDocument); dispid 9;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); dispid 10;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); dispid 11;
    procedure WindowSelectionChange(const Sel: WordSelection); dispid 12;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); dispid 14;
    procedure EPostagePropertyDialog(const Doc: WordDocument); dispid 15;
    procedure EPostageInsert(const Doc: WordDocument); dispid 16;
    procedure MailMergeAfterMerge(const Doc: WordDocument; const DocResult: WordDocument); dispid 17;
    procedure MailMergeAfterRecordMerge(const Doc: WordDocument); dispid 18;
    procedure MailMergeBeforeMerge(const Doc: WordDocument; StartRecord: Integer; 
                                   EndRecord: Integer; var Cancel: WordBool); dispid 19;
    procedure MailMergeBeforeRecordMerge(const Doc: WordDocument; var Cancel: WordBool); dispid 20;
    procedure MailMergeDataSourceLoad(const Doc: WordDocument); dispid 21;
    procedure MailMergeDataSourceValidate(const Doc: WordDocument; var Handled: WordBool); dispid 22;
    procedure MailMergeWizardSendToCustom(const Doc: WordDocument); dispid 23;
    procedure MailMergeWizardStateChange(const Doc: WordDocument; var FromState: SYSINT; 
                                         var ToState: SYSINT; var Handled: WordBool); dispid 24;
    procedure WindowSize(const Doc: WordDocument; const Wn: Window); dispid 25;
  end;

// *********************************************************************//
// DispIntf:  ApplicationEvents4
// Flags:     (4240) Hidden NonExtensible Dispatchable
// GUID:      {00020A01-0000-0000-C000-000000000046}
// *********************************************************************//
  ApplicationEvents4 = dispinterface
    ['{00020A01-0000-0000-C000-000000000046}']
    procedure Startup; dispid 1;
    procedure Quit; dispid 2;
    procedure DocumentChange; dispid 3;
    procedure DocumentOpen(const Doc: WordDocument); dispid 4;
    procedure DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool); dispid 6;
    procedure DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool); dispid 7;
    procedure DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                 var Cancel: WordBool); dispid 8;
    procedure NewDocument(const Doc: WordDocument); dispid 9;
    procedure WindowActivate(const Doc: WordDocument; const Wn: Window); dispid 10;
    procedure WindowDeactivate(const Doc: WordDocument; const Wn: Window); dispid 11;
    procedure WindowSelectionChange(const Sel: WordSelection); dispid 12;
    procedure WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool); dispid 13;
    procedure WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool); dispid 14;
    procedure EPostagePropertyDialog(const Doc: WordDocument); dispid 15;
    procedure EPostageInsert(const Doc: WordDocument); dispid 16;
    procedure MailMergeAfterMerge(const Doc: WordDocument; const DocResult: WordDocument); dispid 17;
    procedure MailMergeAfterRecordMerge(const Doc: WordDocument); dispid 18;
    procedure MailMergeBeforeMerge(const Doc: WordDocument; StartRecord: Integer; 
                                   EndRecord: Integer; var Cancel: WordBool); dispid 19;
    procedure MailMergeBeforeRecordMerge(const Doc: WordDocument; var Cancel: WordBool); dispid 20;
    procedure MailMergeDataSourceLoad(const Doc: WordDocument); dispid 21;
    procedure MailMergeDataSourceValidate(const Doc: WordDocument; var Handled: WordBool); dispid 22;
    procedure MailMergeWizardSendToCustom(const Doc: WordDocument); dispid 23;
    procedure MailMergeWizardStateChange(const Doc: WordDocument; var FromState: SYSINT; 
                                         var ToState: SYSINT; var Handled: WordBool); dispid 24;
    procedure WindowSize(const Doc: WordDocument; const Wn: Window); dispid 25;
    procedure XMLSelectionChange(const Sel: WordSelection; const OldXMLNode: XMLNode; 
                                 const NewXMLNode: XMLNode; var Reason: Integer); dispid 26;
    procedure XMLValidationError(const XMLNode: XMLNode); dispid 27;
    procedure DocumentSync(const Doc: WordDocument; SyncEventType: MsoSyncEventType); dispid 28;
    procedure EPostageInsertEx(const Doc: WordDocument; cpDeliveryAddrStart: SYSINT; 
                               cpDeliveryAddrEnd: SYSINT; cpReturnAddrStart: SYSINT; 
                               cpReturnAddrEnd: SYSINT; xaWidth: SYSINT; yaHeight: SYSINT; 
                               const bstrPrinterName: WideString; const bstrPaperFeed: WideString; 
                               fPrint: WordBool; var fCancel: WordBool); dispid 29;
    procedure MailMergeDataSourceValidate2(const Doc: WordDocument; var Handled: WordBool); dispid 30;
    procedure ProtectedViewWindowOpen(const PvWindow: ProtectedViewWindow); dispid 31;
    procedure ProtectedViewWindowBeforeEdit(const PvWindow: ProtectedViewWindow; 
                                            var Cancel: WordBool); dispid 32;
    procedure ProtectedViewWindowBeforeClose(const PvWindow: ProtectedViewWindow; 
                                             CloseReason: SYSINT; var Cancel: WordBool); dispid 33;
    procedure ProtectedViewWindowSize(const PvWindow: ProtectedViewWindow); dispid 34;
    procedure ProtectedViewWindowActivate(const PvWindow: ProtectedViewWindow); dispid 35;
    procedure ProtectedViewWindowDeactivate(const PvWindow: ProtectedViewWindow); dispid 36;
  end;

// *********************************************************************//
// Interface: SmartTagAction
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DFB6AA6C-1068-420F-969D-01280FCC1630}
// *********************************************************************//
  SmartTagAction = interface(IDispatch)
    ['{DFB6AA6C-1068-420F-969D-01280FCC1630}']
    function Get_Name: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Execute; safecall;
    function Get_type_: WdSmartTagControlType; safecall;
    function Get_PresentInPane: WordBool; safecall;
    function Get_ExpandHelp: WordBool; safecall;
    procedure Set_ExpandHelp(prop: WordBool); safecall;
    function Get_CheckboxState: WordBool; safecall;
    procedure Set_CheckboxState(prop: WordBool); safecall;
    function Get_TextboxText: WideString; safecall;
    procedure Set_TextboxText(const prop: WideString); safecall;
    function Get_ListSelection: Integer; safecall;
    procedure Set_ListSelection(prop: Integer); safecall;
    function Get_RadioGroupSelection: Integer; safecall;
    procedure Set_RadioGroupSelection(prop: Integer); safecall;
    function Get_ExpandDocumentFragment: WordBool; safecall;
    procedure Set_ExpandDocumentFragment(prop: WordBool); safecall;
    function Get_ActiveXControl: IDispatch; safecall;
    property Name: WideString read Get_Name;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property type_: WdSmartTagControlType read Get_type_;
    property PresentInPane: WordBool read Get_PresentInPane;
    property ExpandHelp: WordBool read Get_ExpandHelp write Set_ExpandHelp;
    property CheckboxState: WordBool read Get_CheckboxState write Set_CheckboxState;
    property TextboxText: WideString read Get_TextboxText write Set_TextboxText;
    property ListSelection: Integer read Get_ListSelection write Set_ListSelection;
    property RadioGroupSelection: Integer read Get_RadioGroupSelection write Set_RadioGroupSelection;
    property ExpandDocumentFragment: WordBool read Get_ExpandDocumentFragment write Set_ExpandDocumentFragment;
    property ActiveXControl: IDispatch read Get_ActiveXControl;
  end;

// *********************************************************************//
// DispIntf:  SmartTagActionDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DFB6AA6C-1068-420F-969D-01280FCC1630}
// *********************************************************************//
  SmartTagActionDisp = dispinterface
    ['{DFB6AA6C-1068-420F-969D-01280FCC1630}']
    property Name: WideString readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure Execute; dispid 1003;
    property type_: WdSmartTagControlType readonly dispid 1004;
    property PresentInPane: WordBool readonly dispid 1005;
    property ExpandHelp: WordBool dispid 1006;
    property CheckboxState: WordBool dispid 1007;
    property TextboxText: WideString dispid 1008;
    property ListSelection: Integer dispid 1009;
    property RadioGroupSelection: Integer dispid 1010;
    property ExpandDocumentFragment: WordBool dispid 1011;
    property ActiveXControl: IDispatch readonly dispid 1012;
  end;

// *********************************************************************//
// Interface: SmartTagActions
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CDE12CD8-767B-4757-8A31-13029A086305}
// *********************************************************************//
  SmartTagActions = interface(IDispatch)
    ['{CDE12CD8-767B-4757-8A31-13029A086305}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): SmartTagAction; safecall;
    procedure ReloadActions; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SmartTagActionsDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CDE12CD8-767B-4757-8A31-13029A086305}
// *********************************************************************//
  SmartTagActionsDisp = dispinterface
    ['{CDE12CD8-767B-4757-8A31-13029A086305}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): SmartTagAction; dispid 0;
    procedure ReloadActions; dispid 1003;
  end;

// *********************************************************************//
// Interface: SmartTagRecognizer
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {15EBE471-0182-4CCE-98D0-B6614D1C32A1}
// *********************************************************************//
  SmartTagRecognizer = interface(IDispatch)
    ['{15EBE471-0182-4CCE-98D0-B6614D1C32A1}']
    function Get_FullName: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Enabled: WordBool; safecall;
    procedure Set_Enabled(prop: WordBool); safecall;
    function Get_ProgID: WideString; safecall;
    function Get_Caption: WideString; safecall;
    property FullName: WideString read Get_FullName;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Enabled: WordBool read Get_Enabled write Set_Enabled;
    property ProgID: WideString read Get_ProgID;
    property Caption: WideString read Get_Caption;
  end;

// *********************************************************************//
// DispIntf:  SmartTagRecognizerDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {15EBE471-0182-4CCE-98D0-B6614D1C32A1}
// *********************************************************************//
  SmartTagRecognizerDisp = dispinterface
    ['{15EBE471-0182-4CCE-98D0-B6614D1C32A1}']
    property FullName: WideString readonly dispid 1;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Enabled: WordBool dispid 1003;
    property ProgID: WideString readonly dispid 0;
    property Caption: WideString readonly dispid 1004;
  end;

// *********************************************************************//
// Interface: SmartTagRecognizers
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F2B60A10-DED5-46FB-A914-3C6F4EBB6451}
// *********************************************************************//
  SmartTagRecognizers = interface(IDispatch)
    ['{F2B60A10-DED5-46FB-A914-3C6F4EBB6451}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): SmartTagRecognizer; safecall;
    procedure ReloadRecognizers; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SmartTagRecognizersDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F2B60A10-DED5-46FB-A914-3C6F4EBB6451}
// *********************************************************************//
  SmartTagRecognizersDisp = dispinterface
    ['{F2B60A10-DED5-46FB-A914-3C6F4EBB6451}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): SmartTagRecognizer; dispid 0;
    procedure ReloadRecognizers; dispid 1003;
  end;

// *********************************************************************//
// Interface: SmartTagType
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}
// *********************************************************************//
  SmartTagType = interface(IDispatch)
    ['{5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}']
    function Get_Name: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_SmartTagActions: SmartTagActions; safecall;
    function Get_SmartTagRecognizers: SmartTagRecognizers; safecall;
    function Get_FriendlyName: WideString; safecall;
    property Name: WideString read Get_Name;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property SmartTagActions: SmartTagActions read Get_SmartTagActions;
    property SmartTagRecognizers: SmartTagRecognizers read Get_SmartTagRecognizers;
    property FriendlyName: WideString read Get_FriendlyName;
  end;

// *********************************************************************//
// DispIntf:  SmartTagTypeDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}
// *********************************************************************//
  SmartTagTypeDisp = dispinterface
    ['{5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}']
    property Name: WideString readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property SmartTagActions: SmartTagActions readonly dispid 1003;
    property SmartTagRecognizers: SmartTagRecognizers readonly dispid 1004;
    property FriendlyName: WideString readonly dispid 1005;
  end;

// *********************************************************************//
// Interface: SmartTagTypes
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DB8E3072-E106-4453-8E7C-53056F1D30DC}
// *********************************************************************//
  SmartTagTypes = interface(IDispatch)
    ['{DB8E3072-E106-4453-8E7C-53056F1D30DC}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): SmartTagType; safecall;
    procedure ReloadAll; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SmartTagTypesDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DB8E3072-E106-4453-8E7C-53056F1D30DC}
// *********************************************************************//
  SmartTagTypesDisp = dispinterface
    ['{DB8E3072-E106-4453-8E7C-53056F1D30DC}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): SmartTagType; dispid 0;
    procedure ReloadAll; dispid 1003;
  end;

// *********************************************************************//
// Interface: Line
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}
// *********************************************************************//
  Line = interface(IDispatch)
    ['{AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_LineType: WdLineType; safecall;
    function Get_Left: Integer; safecall;
    function Get_Top: Integer; safecall;
    function Get_Width: Integer; safecall;
    function Get_Height: Integer; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Rectangles: Rectangles; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property LineType: WdLineType read Get_LineType;
    property Left: Integer read Get_Left;
    property Top: Integer read Get_Top;
    property Width: Integer read Get_Width;
    property Height: Integer read Get_Height;
    property Range: WordRange read Get_Range;
    property Rectangles: Rectangles read Get_Rectangles;
  end;

// *********************************************************************//
// DispIntf:  LineDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}
// *********************************************************************//
  LineDisp = dispinterface
    ['{AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property LineType: WdLineType readonly dispid 2;
    property Left: Integer readonly dispid 3;
    property Top: Integer readonly dispid 4;
    property Width: Integer readonly dispid 5;
    property Height: Integer readonly dispid 6;
    property Range: WordRange readonly dispid 7;
    property Rectangles: Rectangles readonly dispid 8;
  end;

// *********************************************************************//
// Interface: Lines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E2E8A400-0615-427D-ADCC-CAD39FFEBD42}
// *********************************************************************//
  Lines = interface(IDispatch)
    ['{E2E8A400-0615-427D-ADCC-CAD39FFEBD42}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Line; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  LinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E2E8A400-0615-427D-ADCC-CAD39FFEBD42}
// *********************************************************************//
  LinesDisp = dispinterface
    ['{E2E8A400-0615-427D-ADCC-CAD39FFEBD42}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Line; dispid 0;
  end;

// *********************************************************************//
// Interface: Rectangle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}
// *********************************************************************//
  Rectangle = interface(IDispatch)
    ['{ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_RectangleType: WdRectangleType; safecall;
    function Get_Left: Integer; safecall;
    function Get_Top: Integer; safecall;
    function Get_Width: Integer; safecall;
    function Get_Height: Integer; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Lines: Lines; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property RectangleType: WdRectangleType read Get_RectangleType;
    property Left: Integer read Get_Left;
    property Top: Integer read Get_Top;
    property Width: Integer read Get_Width;
    property Height: Integer read Get_Height;
    property Range: WordRange read Get_Range;
    property Lines: Lines read Get_Lines;
  end;

// *********************************************************************//
// DispIntf:  RectangleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}
// *********************************************************************//
  RectangleDisp = dispinterface
    ['{ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property RectangleType: WdRectangleType readonly dispid 2;
    property Left: Integer readonly dispid 3;
    property Top: Integer readonly dispid 4;
    property Width: Integer readonly dispid 5;
    property Height: Integer readonly dispid 6;
    property Range: WordRange readonly dispid 7;
    property Lines: Lines readonly dispid 8;
  end;

// *********************************************************************//
// Interface: Rectangles
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7D0F7985-68D9-4D93-91CB-8109280E76CC}
// *********************************************************************//
  Rectangles = interface(IDispatch)
    ['{7D0F7985-68D9-4D93-91CB-8109280E76CC}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Rectangle; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  RectanglesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7D0F7985-68D9-4D93-91CB-8109280E76CC}
// *********************************************************************//
  RectanglesDisp = dispinterface
    ['{7D0F7985-68D9-4D93-91CB-8109280E76CC}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Rectangle; dispid 0;
  end;

// *********************************************************************//
// Interface: Break
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}
// *********************************************************************//
  Break = interface(IDispatch)
    ['{79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_PageIndex: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property PageIndex: Integer read Get_PageIndex;
  end;

// *********************************************************************//
// DispIntf:  BreakDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}
// *********************************************************************//
  BreakDisp = dispinterface
    ['{79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 2;
    property PageIndex: Integer readonly dispid 3;
  end;

// *********************************************************************//
// Interface: Breaks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {16BE9309-D708-4322-BB1A-B056F58D17EA}
// *********************************************************************//
  Breaks = interface(IDispatch)
    ['{16BE9309-D708-4322-BB1A-B056F58D17EA}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Break; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  BreaksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {16BE9309-D708-4322-BB1A-B056F58D17EA}
// *********************************************************************//
  BreaksDisp = dispinterface
    ['{16BE9309-D708-4322-BB1A-B056F58D17EA}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Break; dispid 0;
  end;

// *********************************************************************//
// Interface: Page
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}
// *********************************************************************//
  Page = interface(IDispatch)
    ['{352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Left: Integer; safecall;
    function Get_Top: Integer; safecall;
    function Get_Width: Integer; safecall;
    function Get_Height: Integer; safecall;
    function Get_Rectangles: Rectangles; safecall;
    function Get_Breaks: Breaks; safecall;
    function Get_EnhMetaFileBits: OleVariant; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Left: Integer read Get_Left;
    property Top: Integer read Get_Top;
    property Width: Integer read Get_Width;
    property Height: Integer read Get_Height;
    property Rectangles: Rectangles read Get_Rectangles;
    property Breaks: Breaks read Get_Breaks;
    property EnhMetaFileBits: OleVariant read Get_EnhMetaFileBits;
  end;

// *********************************************************************//
// DispIntf:  PageDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}
// *********************************************************************//
  PageDisp = dispinterface
    ['{352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Left: Integer readonly dispid 2;
    property Top: Integer readonly dispid 3;
    property Width: Integer readonly dispid 4;
    property Height: Integer readonly dispid 5;
    property Rectangles: Rectangles readonly dispid 6;
    property Breaks: Breaks readonly dispid 7;
    property EnhMetaFileBits: OleVariant readonly dispid 8;
  end;

// *********************************************************************//
// Interface: Pages
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {91807402-6C6F-47CD-B8FA-C42FEE8EE924}
// *********************************************************************//
  Pages = interface(IDispatch)
    ['{91807402-6C6F-47CD-B8FA-C42FEE8EE924}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Page; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  PagesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {91807402-6C6F-47CD-B8FA-C42FEE8EE924}
// *********************************************************************//
  PagesDisp = dispinterface
    ['{91807402-6C6F-47CD-B8FA-C42FEE8EE924}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Page; dispid 0;
  end;

// *********************************************************************//
// Interface: XMLNode
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {09760240-0B89-49F7-A79D-479F24723F56}
// *********************************************************************//
  XMLNode = interface(IDispatch)
    ['{09760240-0B89-49F7-A79D-479F24723F56}']
    function Get_BaseName: WideString; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_NamespaceURI: WideString; safecall;
    function Get_XML(DataOnly: WordBool): WideString; safecall;
    function Get_NextSibling: XMLNode; safecall;
    function Get_PreviousSibling: XMLNode; safecall;
    function Get_ParentNode: XMLNode; safecall;
    function Get_FirstChild: XMLNode; safecall;
    function Get_LastChild: XMLNode; safecall;
    function Get_OwnerDocument: WordDocument; safecall;
    function Get_NodeType: WdXMLNodeType; safecall;
    function Get_ChildNodes: XMLNodes; safecall;
    function Get_Attributes: XMLNodes; safecall;
    function Get_NodeValue: WideString; safecall;
    procedure Set_NodeValue(const prop: WideString); safecall;
    function Get_HasChildNodes: WordBool; safecall;
    function SelectSingleNode(const XPath: WideString; const PrefixMapping: WideString; 
                              FastSearchSkippingTextNodes: WordBool): XMLNode; safecall;
    function SelectNodes(const XPath: WideString; const PrefixMapping: WideString; 
                         FastSearchSkippingTextNodes: WordBool): XMLNodes; safecall;
    function Get_ChildNodeSuggestions: XMLChildNodeSuggestions; safecall;
    function Get_Level: WdXMLNodeLevel; safecall;
    function Get_ValidationStatus: WdXMLValidationStatus; safecall;
    function Get_SmartTag: SmartTag; safecall;
    function Get_ValidationErrorText(Advanced: WordBool): WideString; safecall;
    function Get_PlaceholderText: WideString; safecall;
    procedure Set_PlaceholderText(const prop: WideString); safecall;
    procedure Delete; safecall;
    procedure Copy; safecall;
    procedure RemoveChild(const ChildElement: XMLNode); safecall;
    procedure Cut; safecall;
    procedure Validate; safecall;
    procedure SetValidationError(Status: WdXMLValidationStatus; var ErrorText: OleVariant; 
                                 ClearedAutomatically: WordBool); safecall;
    function Get_WordOpenXML: WideString; safecall;
    property BaseName: WideString read Get_BaseName;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Text: WideString read Get_Text write Set_Text;
    property NamespaceURI: WideString read Get_NamespaceURI;
    property XML[DataOnly: WordBool]: WideString read Get_XML;
    property NextSibling: XMLNode read Get_NextSibling;
    property PreviousSibling: XMLNode read Get_PreviousSibling;
    property ParentNode: XMLNode read Get_ParentNode;
    property FirstChild: XMLNode read Get_FirstChild;
    property LastChild: XMLNode read Get_LastChild;
    property OwnerDocument: WordDocument read Get_OwnerDocument;
    property NodeType: WdXMLNodeType read Get_NodeType;
    property ChildNodes: XMLNodes read Get_ChildNodes;
    property Attributes: XMLNodes read Get_Attributes;
    property NodeValue: WideString read Get_NodeValue write Set_NodeValue;
    property HasChildNodes: WordBool read Get_HasChildNodes;
    property ChildNodeSuggestions: XMLChildNodeSuggestions read Get_ChildNodeSuggestions;
    property Level: WdXMLNodeLevel read Get_Level;
    property ValidationStatus: WdXMLValidationStatus read Get_ValidationStatus;
    property SmartTag: SmartTag read Get_SmartTag;
    property ValidationErrorText[Advanced: WordBool]: WideString read Get_ValidationErrorText;
    property PlaceholderText: WideString read Get_PlaceholderText write Set_PlaceholderText;
    property WordOpenXML: WideString read Get_WordOpenXML;
  end;

// *********************************************************************//
// DispIntf:  XMLNodeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {09760240-0B89-49F7-A79D-479F24723F56}
// *********************************************************************//
  XMLNodeDisp = dispinterface
    ['{09760240-0B89-49F7-A79D-479F24723F56}']
    property BaseName: WideString readonly dispid 0;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 1;
    property Text: WideString dispid 2;
    property NamespaceURI: WideString readonly dispid 4;
    property XML[DataOnly: WordBool]: WideString readonly dispid 5;
    property NextSibling: XMLNode readonly dispid 6;
    property PreviousSibling: XMLNode readonly dispid 7;
    property ParentNode: XMLNode readonly dispid 8;
    property FirstChild: XMLNode readonly dispid 9;
    property LastChild: XMLNode readonly dispid 10;
    property OwnerDocument: WordDocument readonly dispid 11;
    property NodeType: WdXMLNodeType readonly dispid 12;
    property ChildNodes: XMLNodes readonly dispid 13;
    property Attributes: XMLNodes readonly dispid 15;
    property NodeValue: WideString dispid 16;
    property HasChildNodes: WordBool readonly dispid 17;
    function SelectSingleNode(const XPath: WideString; const PrefixMapping: WideString; 
                              FastSearchSkippingTextNodes: WordBool): XMLNode; dispid 18;
    function SelectNodes(const XPath: WideString; const PrefixMapping: WideString; 
                         FastSearchSkippingTextNodes: WordBool): XMLNodes; dispid 19;
    property ChildNodeSuggestions: XMLChildNodeSuggestions readonly dispid 20;
    property Level: WdXMLNodeLevel readonly dispid 21;
    property ValidationStatus: WdXMLValidationStatus readonly dispid 22;
    property SmartTag: SmartTag readonly dispid 23;
    property ValidationErrorText[Advanced: WordBool]: WideString readonly dispid 24;
    property PlaceholderText: WideString dispid 25;
    procedure Delete; dispid 100;
    procedure Copy; dispid 101;
    procedure RemoveChild(const ChildElement: XMLNode); dispid 102;
    procedure Cut; dispid 103;
    procedure Validate; dispid 104;
    procedure SetValidationError(Status: WdXMLValidationStatus; var ErrorText: OleVariant; 
                                 ClearedAutomatically: WordBool); dispid 105;
    property WordOpenXML: WideString readonly dispid 106;
  end;

// *********************************************************************//
// Interface: XMLNodes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D36C1F42-7044-4B9E-9CA3-85919454DB04}
// *********************************************************************//
  XMLNodes = interface(IDispatch)
    ['{D36C1F42-7044-4B9E-9CA3-85919454DB04}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): XMLNode; safecall;
    function Add(const Name: WideString; const Namespace: WideString; var Range: OleVariant): XMLNode; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  XMLNodesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D36C1F42-7044-4B9E-9CA3-85919454DB04}
// *********************************************************************//
  XMLNodesDisp = dispinterface
    ['{D36C1F42-7044-4B9E-9CA3-85919454DB04}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): XMLNode; dispid 0;
    function Add(const Name: WideString; const Namespace: WideString; var Range: OleVariant): XMLNode; dispid 100;
  end;

// *********************************************************************//
// Interface: XMLSchemaReference
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FE0971F0-5E60-4985-BCDA-95CB0B8E0308}
// *********************************************************************//
  XMLSchemaReference = interface(IDispatch)
    ['{FE0971F0-5E60-4985-BCDA-95CB0B8E0308}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_NamespaceURI: WideString; safecall;
    function Get_Location: WideString; safecall;
    procedure Delete; safecall;
    procedure Reload; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property NamespaceURI: WideString read Get_NamespaceURI;
    property Location: WideString read Get_Location;
  end;

// *********************************************************************//
// DispIntf:  XMLSchemaReferenceDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FE0971F0-5E60-4985-BCDA-95CB0B8E0308}
// *********************************************************************//
  XMLSchemaReferenceDisp = dispinterface
    ['{FE0971F0-5E60-4985-BCDA-95CB0B8E0308}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property NamespaceURI: WideString readonly dispid 2;
    property Location: WideString readonly dispid 3;
    procedure Delete; dispid 100;
    procedure Reload; dispid 101;
  end;

// *********************************************************************//
// Interface: XMLSchemaReferences
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {356B06EC-4908-42A4-81FC-4B5A51F3483B}
// *********************************************************************//
  XMLSchemaReferences = interface(IDispatch)
    ['{356B06EC-4908-42A4-81FC-4B5A51F3483B}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AutomaticValidation: WordBool; safecall;
    procedure Set_AutomaticValidation(prop: WordBool); safecall;
    function Get_AllowSaveAsXMLWithoutValidation: WordBool; safecall;
    procedure Set_AllowSaveAsXMLWithoutValidation(prop: WordBool); safecall;
    function Get_HideValidationErrors: WordBool; safecall;
    procedure Set_HideValidationErrors(prop: WordBool); safecall;
    function Get_IgnoreMixedContent: WordBool; safecall;
    procedure Set_IgnoreMixedContent(prop: WordBool); safecall;
    function Get_ShowPlaceholderText: WordBool; safecall;
    procedure Set_ShowPlaceholderText(prop: WordBool); safecall;
    function Item(var Index: OleVariant): XMLSchemaReference; safecall;
    procedure Validate; safecall;
    function Add(var NamespaceURI: OleVariant; var Alias: OleVariant; var FileName: OleVariant; 
                 InstallForAllUsers: WordBool): XMLSchemaReference; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property AutomaticValidation: WordBool read Get_AutomaticValidation write Set_AutomaticValidation;
    property AllowSaveAsXMLWithoutValidation: WordBool read Get_AllowSaveAsXMLWithoutValidation write Set_AllowSaveAsXMLWithoutValidation;
    property HideValidationErrors: WordBool read Get_HideValidationErrors write Set_HideValidationErrors;
    property IgnoreMixedContent: WordBool read Get_IgnoreMixedContent write Set_IgnoreMixedContent;
    property ShowPlaceholderText: WordBool read Get_ShowPlaceholderText write Set_ShowPlaceholderText;
  end;

// *********************************************************************//
// DispIntf:  XMLSchemaReferencesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {356B06EC-4908-42A4-81FC-4B5A51F3483B}
// *********************************************************************//
  XMLSchemaReferencesDisp = dispinterface
    ['{356B06EC-4908-42A4-81FC-4B5A51F3483B}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property AutomaticValidation: WordBool dispid 3;
    property AllowSaveAsXMLWithoutValidation: WordBool dispid 4;
    property HideValidationErrors: WordBool dispid 5;
    property IgnoreMixedContent: WordBool dispid 6;
    property ShowPlaceholderText: WordBool dispid 7;
    function Item(var Index: OleVariant): XMLSchemaReference; dispid 0;
    procedure Validate; dispid 100;
    function Add(var NamespaceURI: OleVariant; var Alias: OleVariant; var FileName: OleVariant; 
                 InstallForAllUsers: WordBool): XMLSchemaReference; dispid 101;
  end;

// *********************************************************************//
// Interface: XMLChildNodeSuggestion
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {A87E00E9-3AC3-4B53-ABE3-7379653D0E82}
// *********************************************************************//
  XMLChildNodeSuggestion = interface(IDispatch)
    ['{A87E00E9-3AC3-4B53-ABE3-7379653D0E82}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_BaseName: WideString; safecall;
    function Get_NamespaceURI: WideString; safecall;
    function Get_XMLSchemaReference: XMLSchemaReference; safecall;
    function Insert(var Range: OleVariant): XMLNode; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property BaseName: WideString read Get_BaseName;
    property NamespaceURI: WideString read Get_NamespaceURI;
    property XMLSchemaReference: XMLSchemaReference read Get_XMLSchemaReference;
  end;

// *********************************************************************//
// DispIntf:  XMLChildNodeSuggestionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {A87E00E9-3AC3-4B53-ABE3-7379653D0E82}
// *********************************************************************//
  XMLChildNodeSuggestionDisp = dispinterface
    ['{A87E00E9-3AC3-4B53-ABE3-7379653D0E82}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property BaseName: WideString readonly dispid 0;
    property NamespaceURI: WideString readonly dispid 3;
    property XMLSchemaReference: XMLSchemaReference readonly dispid 4;
    function Insert(var Range: OleVariant): XMLNode; dispid 100;
  end;

// *********************************************************************//
// Interface: XMLChildNodeSuggestions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}
// *********************************************************************//
  XMLChildNodeSuggestions = interface(IDispatch)
    ['{DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): XMLChildNodeSuggestion; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  XMLChildNodeSuggestionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}
// *********************************************************************//
  XMLChildNodeSuggestionsDisp = dispinterface
    ['{DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): XMLChildNodeSuggestion; dispid 0;
  end;

// *********************************************************************//
// Interface: XMLNamespace
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B140A023-4850-4DA6-BC5F-CC459C4507BC}
// *********************************************************************//
  XMLNamespace = interface(IDispatch)
    ['{B140A023-4850-4DA6-BC5F-CC459C4507BC}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_URI: WideString; safecall;
    function Get_Location(AllUsers: WordBool): WideString; safecall;
    procedure Set_Location(AllUsers: WordBool; const prop: WideString); safecall;
    function Get_Alias(AllUsers: WordBool): WideString; safecall;
    procedure Set_Alias(AllUsers: WordBool; const prop: WideString); safecall;
    function Get_XSLTransforms: XSLTransforms; safecall;
    function Get_DefaultTransform(AllUsers: WordBool): XSLTransform; safecall;
    procedure Set_DefaultTransform(AllUsers: WordBool; const prop: XSLTransform); safecall;
    procedure AttachToDocument(var Document: OleVariant); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property URI: WideString read Get_URI;
    property Location[AllUsers: WordBool]: WideString read Get_Location write Set_Location;
    property Alias[AllUsers: WordBool]: WideString read Get_Alias write Set_Alias;
    property XSLTransforms: XSLTransforms read Get_XSLTransforms;
    property DefaultTransform[AllUsers: WordBool]: XSLTransform read Get_DefaultTransform write Set_DefaultTransform;
  end;

// *********************************************************************//
// DispIntf:  XMLNamespaceDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B140A023-4850-4DA6-BC5F-CC459C4507BC}
// *********************************************************************//
  XMLNamespaceDisp = dispinterface
    ['{B140A023-4850-4DA6-BC5F-CC459C4507BC}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property URI: WideString readonly dispid 2;
    property Location[AllUsers: WordBool]: WideString dispid 3;
    property Alias[AllUsers: WordBool]: WideString dispid 4;
    property XSLTransforms: XSLTransforms readonly dispid 5;
    property DefaultTransform[AllUsers: WordBool]: XSLTransform dispid 6;
    procedure AttachToDocument(var Document: OleVariant); dispid 100;
    procedure Delete; dispid 101;
  end;

// *********************************************************************//
// Interface: XMLNamespaces
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {656BBED7-E82D-4B0A-8F97-EC742BA11FFA}
// *********************************************************************//
  XMLNamespaces = interface(IDispatch)
    ['{656BBED7-E82D-4B0A-8F97-EC742BA11FFA}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): XMLNamespace; safecall;
    function Add(const Path: WideString; var NamespaceURI: OleVariant; var Alias: OleVariant; 
                 InstallForAllUsers: WordBool): XMLNamespace; safecall;
    procedure InstallManifest(const Path: WideString; InstallForAllUsers: WordBool); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  XMLNamespacesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {656BBED7-E82D-4B0A-8F97-EC742BA11FFA}
// *********************************************************************//
  XMLNamespacesDisp = dispinterface
    ['{656BBED7-E82D-4B0A-8F97-EC742BA11FFA}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): XMLNamespace; dispid 0;
    function Add(const Path: WideString; var NamespaceURI: OleVariant; var Alias: OleVariant; 
                 InstallForAllUsers: WordBool): XMLNamespace; dispid 101;
    procedure InstallManifest(const Path: WideString; InstallForAllUsers: WordBool); dispid 102;
  end;

// *********************************************************************//
// Interface: XSLTransform
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E3124493-7D6A-410F-9A48-CC822C033CEC}
// *********************************************************************//
  XSLTransform = interface(IDispatch)
    ['{E3124493-7D6A-410F-9A48-CC822C033CEC}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Alias(AllUsers: WordBool): WideString; safecall;
    procedure Set_Alias(AllUsers: WordBool; const prop: WideString); safecall;
    function Get_Location(AllUsers: WordBool): WideString; safecall;
    procedure Set_Location(AllUsers: WordBool; const prop: WideString); safecall;
    procedure Delete; safecall;
    function Get_ID: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Alias[AllUsers: WordBool]: WideString read Get_Alias write Set_Alias;
    property Location[AllUsers: WordBool]: WideString read Get_Location write Set_Location;
    property ID: WideString read Get_ID;
  end;

// *********************************************************************//
// DispIntf:  XSLTransformDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E3124493-7D6A-410F-9A48-CC822C033CEC}
// *********************************************************************//
  XSLTransformDisp = dispinterface
    ['{E3124493-7D6A-410F-9A48-CC822C033CEC}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Alias[AllUsers: WordBool]: WideString dispid 2;
    property Location[AllUsers: WordBool]: WideString dispid 3;
    procedure Delete; dispid 101;
    property ID: WideString readonly dispid 102;
  end;

// *********************************************************************//
// Interface: XSLTransforms
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C774F5EA-A539-4284-A1BE-30AEC052D899}
// *********************************************************************//
  XSLTransforms = interface(IDispatch)
    ['{C774F5EA-A539-4284-A1BE-30AEC052D899}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(var Index: OleVariant): XSLTransform; safecall;
    function Add(const Location: WideString; var Alias: OleVariant; InstallForAllUsers: WordBool): XSLTransform; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  XSLTransformsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C774F5EA-A539-4284-A1BE-30AEC052D899}
// *********************************************************************//
  XSLTransformsDisp = dispinterface
    ['{C774F5EA-A539-4284-A1BE-30AEC052D899}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(var Index: OleVariant): XSLTransform; dispid 0;
    function Add(const Location: WideString; var Alias: OleVariant; InstallForAllUsers: WordBool): XSLTransform; dispid 101;
  end;

// *********************************************************************//
// Interface: Editors
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AED7E08C-14F0-4F33-921D-4C5353137BF6}
// *********************************************************************//
  Editors = interface(IDispatch)
    ['{AED7E08C-14F0-4F33-921D-4C5353137BF6}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): Editor; safecall;
    function Add(var EditorID: OleVariant): Editor; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  EditorsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AED7E08C-14F0-4F33-921D-4C5353137BF6}
// *********************************************************************//
  EditorsDisp = dispinterface
    ['{AED7E08C-14F0-4F33-921D-4C5353137BF6}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 2;
    function Item(var Index: OleVariant): Editor; dispid 0;
    function Add(var EditorID: OleVariant): Editor; dispid 501;
  end;

// *********************************************************************//
// Interface: Editor
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DD947D72-F33C-4198-9BDF-F86181D05E41}
// *********************************************************************//
  Editor = interface(IDispatch)
    ['{DD947D72-F33C-4198-9BDF-F86181D05E41}']
    function Get_ID: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_Range: WordRange; safecall;
    function Get_NextRange: WordRange; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure Delete; safecall;
    procedure DeleteAll; safecall;
    procedure SelectAll; safecall;
    property ID: WideString read Get_ID;
    property Name: WideString read Get_Name;
    property Range: WordRange read Get_Range;
    property NextRange: WordRange read Get_NextRange;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  EditorDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DD947D72-F33C-4198-9BDF-F86181D05E41}
// *********************************************************************//
  EditorDisp = dispinterface
    ['{DD947D72-F33C-4198-9BDF-F86181D05E41}']
    property ID: WideString readonly dispid 100;
    property Name: WideString readonly dispid 101;
    property Range: WordRange readonly dispid 102;
    property NextRange: WordRange readonly dispid 103;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure Delete; dispid 500;
    procedure DeleteAll; dispid 501;
    procedure SelectAll; dispid 502;
  end;

// *********************************************************************//
// Interface: IApplicationEvents4
// Flags:     (4112) Hidden Dispatchable
// GUID:      {00020A01-0001-0000-C000-000000000046}
// *********************************************************************//
  IApplicationEvents4 = interface(IDispatch)
    ['{00020A01-0001-0000-C000-000000000046}']
    function Startup: HResult; stdcall;
    function Quit: HResult; stdcall;
    function DocumentChange: HResult; stdcall;
    function DocumentOpen(const Doc: WordDocument): HResult; stdcall;
    function DocumentBeforeClose(const Doc: WordDocument; var Cancel: WordBool): HResult; stdcall;
    function DocumentBeforePrint(const Doc: WordDocument; var Cancel: WordBool): HResult; stdcall;
    function DocumentBeforeSave(const Doc: WordDocument; var SaveAsUI: WordBool; 
                                var Cancel: WordBool): HResult; stdcall;
    function NewDocument(const Doc: WordDocument): HResult; stdcall;
    function WindowActivate(const Doc: WordDocument; const Wn: Window): HResult; stdcall;
    function WindowDeactivate(const Doc: WordDocument; const Wn: Window): HResult; stdcall;
    function WindowSelectionChange(const Sel: WordSelection): HResult; stdcall;
    function WindowBeforeRightClick(const Sel: WordSelection; var Cancel: WordBool): HResult; stdcall;
    function WindowBeforeDoubleClick(const Sel: WordSelection; var Cancel: WordBool): HResult; stdcall;
    function EPostagePropertyDialog(const Doc: WordDocument): HResult; stdcall;
    function EPostageInsert(const Doc: WordDocument): HResult; stdcall;
    function MailMergeAfterMerge(const Doc: WordDocument; const DocResult: WordDocument): HResult; stdcall;
    function MailMergeAfterRecordMerge(const Doc: WordDocument): HResult; stdcall;
    function MailMergeBeforeMerge(const Doc: WordDocument; StartRecord: Integer; 
                                  EndRecord: Integer; var Cancel: WordBool): HResult; stdcall;
    function MailMergeBeforeRecordMerge(const Doc: WordDocument; var Cancel: WordBool): HResult; stdcall;
    function MailMergeDataSourceLoad(const Doc: WordDocument): HResult; stdcall;
    function MailMergeDataSourceValidate(const Doc: WordDocument; var Handled: WordBool): HResult; stdcall;
    function MailMergeWizardSendToCustom(const Doc: WordDocument): HResult; stdcall;
    function MailMergeWizardStateChange(const Doc: WordDocument; var FromState: SYSINT; 
                                        var ToState: SYSINT; var Handled: WordBool): HResult; stdcall;
    function WindowSize(const Doc: WordDocument; const Wn: Window): HResult; stdcall;
    function XMLSelectionChange(const Sel: WordSelection; const OldXMLNode: XMLNode; 
                                const NewXMLNode: XMLNode; var Reason: Integer): HResult; stdcall;
    function XMLValidationError(const XMLNode: XMLNode): HResult; stdcall;
    function DocumentSync(const Doc: WordDocument; SyncEventType: MsoSyncEventType): HResult; stdcall;
    function EPostageInsertEx(const Doc: WordDocument; cpDeliveryAddrStart: SYSINT; 
                              cpDeliveryAddrEnd: SYSINT; cpReturnAddrStart: SYSINT; 
                              cpReturnAddrEnd: SYSINT; xaWidth: SYSINT; yaHeight: SYSINT; 
                              const bstrPrinterName: WideString; const bstrPaperFeed: WideString; 
                              fPrint: WordBool; var fCancel: WordBool): HResult; stdcall;
    function MailMergeDataSourceValidate2(const Doc: WordDocument; var Handled: WordBool): HResult; stdcall;
    function ProtectedViewWindowOpen(const PvWindow: ProtectedViewWindow): HResult; stdcall;
    function ProtectedViewWindowBeforeEdit(const PvWindow: ProtectedViewWindow; var Cancel: WordBool): HResult; stdcall;
    function ProtectedViewWindowBeforeClose(const PvWindow: ProtectedViewWindow; 
                                            CloseReason: SYSINT; var Cancel: WordBool): HResult; stdcall;
    function ProtectedViewWindowSize(const PvWindow: ProtectedViewWindow): HResult; stdcall;
    function ProtectedViewWindowActivate(const PvWindow: ProtectedViewWindow): HResult; stdcall;
    function ProtectedViewWindowDeactivate(const PvWindow: ProtectedViewWindow): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: Source
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {4A6AE865-199D-4EA3-9F6B-125BD9C40EDF}
// *********************************************************************//
  Source = interface(IDispatch)
    ['{4A6AE865-199D-4EA3-9F6B-125BD9C40EDF}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Tag: WideString; safecall;
    function Get_Field(const Name: WideString): WideString; safecall;
    procedure Set_Field(const Name: WideString; const prop: WideString); safecall;
    function Get_XML: WideString; safecall;
    function Get_Cited: WordBool; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Tag: WideString read Get_Tag;
    property Field[const Name: WideString]: WideString read Get_Field write Set_Field;
    property XML: WideString read Get_XML;
    property Cited: WordBool read Get_Cited;
  end;

// *********************************************************************//
// DispIntf:  SourceDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {4A6AE865-199D-4EA3-9F6B-125BD9C40EDF}
// *********************************************************************//
  SourceDisp = dispinterface
    ['{4A6AE865-199D-4EA3-9F6B-125BD9C40EDF}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Tag: WideString readonly dispid 103;
    property Field[const Name: WideString]: WideString dispid 104;
    property XML: WideString readonly dispid 105;
    property Cited: WordBool readonly dispid 107;
    procedure Delete; dispid 106;
  end;

// *********************************************************************//
// Interface: Sources
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FA02A26B-6550-45C5-B6F0-80E757CD3482}
// *********************************************************************//
  Sources = interface(IDispatch)
    ['{FA02A26B-6550-45C5-B6F0-80E757CD3482}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Item(Index: Integer): Source; safecall;
    procedure Add(const Data: WideString); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SourcesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FA02A26B-6550-45C5-B6F0-80E757CD3482}
// *********************************************************************//
  SourcesDisp = dispinterface
    ['{FA02A26B-6550-45C5-B6F0-80E757CD3482}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Item(Index: Integer): Source; dispid 0;
    procedure Add(const Data: WideString); dispid 107;
  end;

// *********************************************************************//
// Interface: Bibliography
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3834F60F-EE8C-455D-A441-D766675D6D3B}
// *********************************************************************//
  Bibliography = interface(IDispatch)
    ['{3834F60F-EE8C-455D-A441-D766675D6D3B}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Sources: Sources; safecall;
    function Get_BibliographyStyle: WideString; safecall;
    procedure Set_BibliographyStyle(const prop: WideString); safecall;
    function GenerateUniqueTag: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Sources: Sources read Get_Sources;
    property BibliographyStyle: WideString read Get_BibliographyStyle write Set_BibliographyStyle;
  end;

// *********************************************************************//
// DispIntf:  BibliographyDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3834F60F-EE8C-455D-A441-D766675D6D3B}
// *********************************************************************//
  BibliographyDisp = dispinterface
    ['{3834F60F-EE8C-455D-A441-D766675D6D3B}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Sources: Sources readonly dispid 103;
    property BibliographyStyle: WideString dispid 105;
    function GenerateUniqueTag: WideString; dispid 104;
  end;

// *********************************************************************//
// Interface: OMaths
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {873E774B-926A-4CB1-878D-635A45187595}
// *********************************************************************//
  OMaths = interface(IDispatch)
    ['{873E774B-926A-4CB1-878D-635A45187595}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): OMath; safecall;
    procedure Linearize; safecall;
    procedure BuildUp; safecall;
    function Add(const Range: WordRange): WordRange; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {873E774B-926A-4CB1-878D-635A45187595}
// *********************************************************************//
  OMathsDisp = dispinterface
    ['{873E774B-926A-4CB1-878D-635A45187595}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    function Item(Index: Integer): OMath; dispid 0;
    procedure Linearize; dispid 200;
    procedure BuildUp; dispid 201;
    function Add(const Range: WordRange): WordRange; dispid 202;
  end;

// *********************************************************************//
// Interface: OMath
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E4442A83-F623-459C-8E95-8BFB44DCF23A}
// *********************************************************************//
  OMath = interface(IDispatch)
    ['{E4442A83-F623-459C-8E95-8BFB44DCF23A}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Functions: OMathFunctions; safecall;
    function Get_type_: WdOMathType; safecall;
    procedure Set_type_(prop: WdOMathType); safecall;
    function Get_ParentOMath: OMath; safecall;
    function Get_ParentFunction: OMathFunction; safecall;
    function Get_ParentRow: OMathMatRow; safecall;
    function Get_ParentCol: OMathMatCol; safecall;
    function Get_ParentArg: OMath; safecall;
    function Get_ArgIndex: Integer; safecall;
    function Get_NestingLevel: Integer; safecall;
    function Get_ArgSize: Integer; safecall;
    procedure Set_ArgSize(prop: Integer); safecall;
    function Get_Breaks: OMathBreaks; safecall;
    function Get_Justification: WdOMathJc; safecall;
    procedure Set_Justification(prop: WdOMathJc); safecall;
    function Get_AlignPoint: Integer; safecall;
    procedure Set_AlignPoint(prop: Integer); safecall;
    procedure Linearize; safecall;
    procedure BuildUp; safecall;
    procedure Remove; safecall;
    procedure ConvertToMathText; safecall;
    procedure ConvertToNormalText; safecall;
    procedure ConvertToLiteralText; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Functions: OMathFunctions read Get_Functions;
    property type_: WdOMathType read Get_type_ write Set_type_;
    property ParentOMath: OMath read Get_ParentOMath;
    property ParentFunction: OMathFunction read Get_ParentFunction;
    property ParentRow: OMathMatRow read Get_ParentRow;
    property ParentCol: OMathMatCol read Get_ParentCol;
    property ParentArg: OMath read Get_ParentArg;
    property ArgIndex: Integer read Get_ArgIndex;
    property NestingLevel: Integer read Get_NestingLevel;
    property ArgSize: Integer read Get_ArgSize write Set_ArgSize;
    property Breaks: OMathBreaks read Get_Breaks;
    property Justification: WdOMathJc read Get_Justification write Set_Justification;
    property AlignPoint: Integer read Get_AlignPoint write Set_AlignPoint;
  end;

// *********************************************************************//
// DispIntf:  OMathDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E4442A83-F623-459C-8E95-8BFB44DCF23A}
// *********************************************************************//
  OMathDisp = dispinterface
    ['{E4442A83-F623-459C-8E95-8BFB44DCF23A}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Range: WordRange readonly dispid 103;
    property Functions: OMathFunctions readonly dispid 104;
    property type_: WdOMathType dispid 105;
    property ParentOMath: OMath readonly dispid 106;
    property ParentFunction: OMathFunction readonly dispid 107;
    property ParentRow: OMathMatRow readonly dispid 108;
    property ParentCol: OMathMatCol readonly dispid 109;
    property ParentArg: OMath readonly dispid 110;
    property ArgIndex: Integer readonly dispid 111;
    property NestingLevel: Integer readonly dispid 112;
    property ArgSize: Integer dispid 113;
    property Breaks: OMathBreaks readonly dispid 114;
    property Justification: WdOMathJc dispid 115;
    property AlignPoint: Integer dispid 116;
    procedure Linearize; dispid 200;
    procedure BuildUp; dispid 201;
    procedure Remove; dispid 202;
    procedure ConvertToMathText; dispid 203;
    procedure ConvertToNormalText; dispid 204;
    procedure ConvertToLiteralText; dispid 205;
  end;

// *********************************************************************//
// Interface: OMathFunctions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {497142A4-16FD-42C6-BC58-15D89345FC21}
// *********************************************************************//
  OMathFunctions = interface(IDispatch)
    ['{497142A4-16FD-42C6-BC58-15D89345FC21}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): OMathFunction; safecall;
    function Add(const Range: WordRange; Type_: WdOMathFunctionType; var NumArgs: OleVariant; 
                 var NumCols: OleVariant): OMathFunction; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathFunctionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {497142A4-16FD-42C6-BC58-15D89345FC21}
// *********************************************************************//
  OMathFunctionsDisp = dispinterface
    ['{497142A4-16FD-42C6-BC58-15D89345FC21}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    function Item(Index: Integer): OMathFunction; dispid 0;
    function Add(const Range: WordRange; Type_: WdOMathFunctionType; var NumArgs: OleVariant; 
                 var NumCols: OleVariant): OMathFunction; dispid 104;
  end;

// *********************************************************************//
// Interface: OMathArgs
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8245795B-9AED-4943-A16D-E586ED8180D1}
// *********************************************************************//
  OMathArgs = interface(IDispatch)
    ['{8245795B-9AED-4943-A16D-E586ED8180D1}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): OMath; safecall;
    function Add(var BeforeArg: OleVariant): OMath; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathArgsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8245795B-9AED-4943-A16D-E586ED8180D1}
// *********************************************************************//
  OMathArgsDisp = dispinterface
    ['{8245795B-9AED-4943-A16D-E586ED8180D1}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    function Item(Index: Integer): OMath; dispid 0;
    function Add(var BeforeArg: OleVariant): OMath; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathFunction
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F1F37152-1DB1-4901-AD9A-C740F99464B4}
// *********************************************************************//
  OMathFunction = interface(IDispatch)
    ['{F1F37152-1DB1-4901-AD9A-C740F99464B4}']
    function Get_type_: WdOMathFunctionType; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_Args: OMathArgs; safecall;
    function Get_Acc: OMathAcc; safecall;
    function Get_Bar: OMathBar; safecall;
    function Get_Box: OMathBox; safecall;
    function Get_BorderBox: OMathBorderBox; safecall;
    function Get_Delim: OMathDelim; safecall;
    function Get_EqArray: OMathEqArray; safecall;
    function Get_Frac: OMathFrac; safecall;
    function Get_Func: OMathFunc; safecall;
    function Get_GroupChar: OMathGroupChar; safecall;
    function Get_LimLow: OMathLimLow; safecall;
    function Get_LimUpp: OMathLimUpp; safecall;
    function Get_Mat: OMathMat; safecall;
    function Get_Nary: OMathNary; safecall;
    function Get_Phantom: OMathPhantom; safecall;
    function Get_ScrPre: OMathScrPre; safecall;
    function Get_Rad: OMathRad; safecall;
    function Get_ScrSub: OMathScrSub; safecall;
    function Get_ScrSubSup: OMathScrSubSup; safecall;
    function Get_ScrSup: OMathScrSup; safecall;
    function Get_OMath: OMath; safecall;
    function Remove: OMathFunction; safecall;
    property type_: WdOMathFunctionType read Get_type_;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property Args: OMathArgs read Get_Args;
    property Acc: OMathAcc read Get_Acc;
    property Bar: OMathBar read Get_Bar;
    property Box: OMathBox read Get_Box;
    property BorderBox: OMathBorderBox read Get_BorderBox;
    property Delim: OMathDelim read Get_Delim;
    property EqArray: OMathEqArray read Get_EqArray;
    property Frac: OMathFrac read Get_Frac;
    property Func: OMathFunc read Get_Func;
    property GroupChar: OMathGroupChar read Get_GroupChar;
    property LimLow: OMathLimLow read Get_LimLow;
    property LimUpp: OMathLimUpp read Get_LimUpp;
    property Mat: OMathMat read Get_Mat;
    property Nary: OMathNary read Get_Nary;
    property Phantom: OMathPhantom read Get_Phantom;
    property ScrPre: OMathScrPre read Get_ScrPre;
    property Rad: OMathRad read Get_Rad;
    property ScrSub: OMathScrSub read Get_ScrSub;
    property ScrSubSup: OMathScrSubSup read Get_ScrSubSup;
    property ScrSup: OMathScrSup read Get_ScrSup;
    property OMath: OMath read Get_OMath;
  end;

// *********************************************************************//
// DispIntf:  OMathFunctionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F1F37152-1DB1-4901-AD9A-C740F99464B4}
// *********************************************************************//
  OMathFunctionDisp = dispinterface
    ['{F1F37152-1DB1-4901-AD9A-C740F99464B4}']
    property type_: WdOMathFunctionType readonly dispid 0;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Range: WordRange readonly dispid 103;
    property Args: OMathArgs readonly dispid 104;
    property Acc: OMathAcc readonly dispid 105;
    property Bar: OMathBar readonly dispid 106;
    property Box: OMathBox readonly dispid 107;
    property BorderBox: OMathBorderBox readonly dispid 108;
    property Delim: OMathDelim readonly dispid 109;
    property EqArray: OMathEqArray readonly dispid 110;
    property Frac: OMathFrac readonly dispid 111;
    property Func: OMathFunc readonly dispid 112;
    property GroupChar: OMathGroupChar readonly dispid 113;
    property LimLow: OMathLimLow readonly dispid 114;
    property LimUpp: OMathLimUpp readonly dispid 115;
    property Mat: OMathMat readonly dispid 116;
    property Nary: OMathNary readonly dispid 117;
    property Phantom: OMathPhantom readonly dispid 118;
    property ScrPre: OMathScrPre readonly dispid 119;
    property Rad: OMathRad readonly dispid 120;
    property ScrSub: OMathScrSub readonly dispid 121;
    property ScrSubSup: OMathScrSubSup readonly dispid 122;
    property ScrSup: OMathScrSup readonly dispid 123;
    property OMath: OMath readonly dispid 125;
    function Remove: OMathFunction; dispid 201;
  end;

// *********************************************************************//
// Interface: OMathAcc
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F258DE05-C41B-4C33-A778-F0D3F98CEEB3}
// *********************************************************************//
  OMathAcc = interface(IDispatch)
    ['{F258DE05-C41B-4C33-A778-F0D3F98CEEB3}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Char: Smallint; safecall;
    procedure Set_Char(prop: Smallint); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Char: Smallint read Get_Char write Set_Char;
  end;

// *********************************************************************//
// DispIntf:  OMathAccDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F258DE05-C41B-4C33-A778-F0D3F98CEEB3}
// *********************************************************************//
  OMathAccDisp = dispinterface
    ['{F258DE05-C41B-4C33-A778-F0D3F98CEEB3}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Char: Smallint dispid 104;
  end;

// *********************************************************************//
// Interface: OMathBar
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F08B45F1-8F23-4156-9D63-1820C0ED229A}
// *********************************************************************//
  OMathBar = interface(IDispatch)
    ['{F08B45F1-8F23-4156-9D63-1820C0ED229A}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_BarTop: WordBool; safecall;
    procedure Set_BarTop(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property BarTop: WordBool read Get_BarTop write Set_BarTop;
  end;

// *********************************************************************//
// DispIntf:  OMathBarDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F08B45F1-8F23-4156-9D63-1820C0ED229A}
// *********************************************************************//
  OMathBarDisp = dispinterface
    ['{F08B45F1-8F23-4156-9D63-1820C0ED229A}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property BarTop: WordBool dispid 104;
  end;

// *********************************************************************//
// Interface: OMathBox
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {842C37FE-C76F-4B2B-9B60-C408CB5E838E}
// *********************************************************************//
  OMathBox = interface(IDispatch)
    ['{842C37FE-C76F-4B2B-9B60-C408CB5E838E}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_OpEmu: WordBool; safecall;
    procedure Set_OpEmu(prop: WordBool); safecall;
    function Get_NoBreak: WordBool; safecall;
    procedure Set_NoBreak(prop: WordBool); safecall;
    function Get_Diff: WordBool; safecall;
    procedure Set_Diff(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property OpEmu: WordBool read Get_OpEmu write Set_OpEmu;
    property NoBreak: WordBool read Get_NoBreak write Set_NoBreak;
    property Diff: WordBool read Get_Diff write Set_Diff;
  end;

// *********************************************************************//
// DispIntf:  OMathBoxDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {842C37FE-C76F-4B2B-9B60-C408CB5E838E}
// *********************************************************************//
  OMathBoxDisp = dispinterface
    ['{842C37FE-C76F-4B2B-9B60-C408CB5E838E}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property OpEmu: WordBool dispid 104;
    property NoBreak: WordBool dispid 105;
    property Diff: WordBool dispid 106;
  end;

// *********************************************************************//
// Interface: OMathBorderBox
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {2503B6EE-0889-44DF-B920-6D6F9659DEA3}
// *********************************************************************//
  OMathBorderBox = interface(IDispatch)
    ['{2503B6EE-0889-44DF-B920-6D6F9659DEA3}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_HideTop: WordBool; safecall;
    procedure Set_HideTop(prop: WordBool); safecall;
    function Get_HideBot: WordBool; safecall;
    procedure Set_HideBot(prop: WordBool); safecall;
    function Get_HideLeft: WordBool; safecall;
    procedure Set_HideLeft(prop: WordBool); safecall;
    function Get_HideRight: WordBool; safecall;
    procedure Set_HideRight(prop: WordBool); safecall;
    function Get_StrikeH: WordBool; safecall;
    procedure Set_StrikeH(prop: WordBool); safecall;
    function Get_StrikeV: WordBool; safecall;
    procedure Set_StrikeV(prop: WordBool); safecall;
    function Get_StrikeBLTR: WordBool; safecall;
    procedure Set_StrikeBLTR(prop: WordBool); safecall;
    function Get_StrikeTLBR: WordBool; safecall;
    procedure Set_StrikeTLBR(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property HideTop: WordBool read Get_HideTop write Set_HideTop;
    property HideBot: WordBool read Get_HideBot write Set_HideBot;
    property HideLeft: WordBool read Get_HideLeft write Set_HideLeft;
    property HideRight: WordBool read Get_HideRight write Set_HideRight;
    property StrikeH: WordBool read Get_StrikeH write Set_StrikeH;
    property StrikeV: WordBool read Get_StrikeV write Set_StrikeV;
    property StrikeBLTR: WordBool read Get_StrikeBLTR write Set_StrikeBLTR;
    property StrikeTLBR: WordBool read Get_StrikeTLBR write Set_StrikeTLBR;
  end;

// *********************************************************************//
// DispIntf:  OMathBorderBoxDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {2503B6EE-0889-44DF-B920-6D6F9659DEA3}
// *********************************************************************//
  OMathBorderBoxDisp = dispinterface
    ['{2503B6EE-0889-44DF-B920-6D6F9659DEA3}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property HideTop: WordBool dispid 104;
    property HideBot: WordBool dispid 105;
    property HideLeft: WordBool dispid 106;
    property HideRight: WordBool dispid 107;
    property StrikeH: WordBool dispid 108;
    property StrikeV: WordBool dispid 109;
    property StrikeBLTR: WordBool dispid 110;
    property StrikeTLBR: WordBool dispid 111;
  end;

// *********************************************************************//
// Interface: OMathDelim
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C94688A6-A2A7-4133-A26D-726CD569D5F3}
// *********************************************************************//
  OMathDelim = interface(IDispatch)
    ['{C94688A6-A2A7-4133-A26D-726CD569D5F3}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMathArgs; safecall;
    function Get_BegChar: Smallint; safecall;
    procedure Set_BegChar(prop: Smallint); safecall;
    function Get_SepChar: Smallint; safecall;
    procedure Set_SepChar(prop: Smallint); safecall;
    function Get_EndChar: Smallint; safecall;
    procedure Set_EndChar(prop: Smallint); safecall;
    function Get_Grow: WordBool; safecall;
    procedure Set_Grow(prop: WordBool); safecall;
    function Get_Shape: WdOMathShapeType; safecall;
    procedure Set_Shape(prop: WdOMathShapeType); safecall;
    function Get_NoLeftChar: WordBool; safecall;
    procedure Set_NoLeftChar(prop: WordBool); safecall;
    function Get_NoRightChar: WordBool; safecall;
    procedure Set_NoRightChar(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMathArgs read Get_E;
    property BegChar: Smallint read Get_BegChar write Set_BegChar;
    property SepChar: Smallint read Get_SepChar write Set_SepChar;
    property EndChar: Smallint read Get_EndChar write Set_EndChar;
    property Grow: WordBool read Get_Grow write Set_Grow;
    property Shape: WdOMathShapeType read Get_Shape write Set_Shape;
    property NoLeftChar: WordBool read Get_NoLeftChar write Set_NoLeftChar;
    property NoRightChar: WordBool read Get_NoRightChar write Set_NoRightChar;
  end;

// *********************************************************************//
// DispIntf:  OMathDelimDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C94688A6-A2A7-4133-A26D-726CD569D5F3}
// *********************************************************************//
  OMathDelimDisp = dispinterface
    ['{C94688A6-A2A7-4133-A26D-726CD569D5F3}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMathArgs readonly dispid 103;
    property BegChar: Smallint dispid 104;
    property SepChar: Smallint dispid 105;
    property EndChar: Smallint dispid 106;
    property Grow: WordBool dispid 107;
    property Shape: WdOMathShapeType dispid 108;
    property NoLeftChar: WordBool dispid 109;
    property NoRightChar: WordBool dispid 110;
  end;

// *********************************************************************//
// Interface: OMathEqArray
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1F998A61-71C6-44C2-A0F2-1D66169B47CB}
// *********************************************************************//
  OMathEqArray = interface(IDispatch)
    ['{1F998A61-71C6-44C2-A0F2-1D66169B47CB}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMathArgs; safecall;
    function Get_MaxDist: WordBool; safecall;
    procedure Set_MaxDist(prop: WordBool); safecall;
    function Get_ObjDist: WordBool; safecall;
    procedure Set_ObjDist(prop: WordBool); safecall;
    function Get_Align: WdOMathVertAlignType; safecall;
    procedure Set_Align(prop: WdOMathVertAlignType); safecall;
    function Get_RowSpacingRule: WdOMathSpacingRule; safecall;
    procedure Set_RowSpacingRule(prop: WdOMathSpacingRule); safecall;
    function Get_RowSpacing: Integer; safecall;
    procedure Set_RowSpacing(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMathArgs read Get_E;
    property MaxDist: WordBool read Get_MaxDist write Set_MaxDist;
    property ObjDist: WordBool read Get_ObjDist write Set_ObjDist;
    property Align: WdOMathVertAlignType read Get_Align write Set_Align;
    property RowSpacingRule: WdOMathSpacingRule read Get_RowSpacingRule write Set_RowSpacingRule;
    property RowSpacing: Integer read Get_RowSpacing write Set_RowSpacing;
  end;

// *********************************************************************//
// DispIntf:  OMathEqArrayDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1F998A61-71C6-44C2-A0F2-1D66169B47CB}
// *********************************************************************//
  OMathEqArrayDisp = dispinterface
    ['{1F998A61-71C6-44C2-A0F2-1D66169B47CB}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMathArgs readonly dispid 103;
    property MaxDist: WordBool dispid 104;
    property ObjDist: WordBool dispid 105;
    property Align: WdOMathVertAlignType dispid 106;
    property RowSpacingRule: WdOMathSpacingRule dispid 107;
    property RowSpacing: Integer dispid 108;
  end;

// *********************************************************************//
// Interface: OMathFrac
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {50209974-BA32-4A03-8FA6-BAC56CC056FD}
// *********************************************************************//
  OMathFrac = interface(IDispatch)
    ['{50209974-BA32-4A03-8FA6-BAC56CC056FD}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Num: OMath; safecall;
    function Get_Den: OMath; safecall;
    function Get_type_: WdOMathFracType; safecall;
    procedure Set_type_(prop: WdOMathFracType); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Num: OMath read Get_Num;
    property Den: OMath read Get_Den;
    property type_: WdOMathFracType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  OMathFracDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {50209974-BA32-4A03-8FA6-BAC56CC056FD}
// *********************************************************************//
  OMathFracDisp = dispinterface
    ['{50209974-BA32-4A03-8FA6-BAC56CC056FD}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Num: OMath readonly dispid 103;
    property Den: OMath readonly dispid 104;
    property type_: WdOMathFracType dispid 105;
  end;

// *********************************************************************//
// Interface: OMathFunc
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0D951ADF-10A6-4C9B-BCD9-0FB8CBAD9A87}
// *********************************************************************//
  OMathFunc = interface(IDispatch)
    ['{0D951ADF-10A6-4C9B-BCD9-0FB8CBAD9A87}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_FName: OMath; safecall;
    function Get_E: OMath; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property FName: OMath read Get_FName;
    property E: OMath read Get_E;
  end;

// *********************************************************************//
// DispIntf:  OMathFuncDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0D951ADF-10A6-4C9B-BCD9-0FB8CBAD9A87}
// *********************************************************************//
  OMathFuncDisp = dispinterface
    ['{0D951ADF-10A6-4C9B-BCD9-0FB8CBAD9A87}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property FName: OMath readonly dispid 103;
    property E: OMath readonly dispid 104;
  end;

// *********************************************************************//
// Interface: OMathGroupChar
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {02B17CB4-7D55-4B34-B38B-10381433441F}
// *********************************************************************//
  OMathGroupChar = interface(IDispatch)
    ['{02B17CB4-7D55-4B34-B38B-10381433441F}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Char: Smallint; safecall;
    procedure Set_Char(prop: Smallint); safecall;
    function Get_CharTop: WordBool; safecall;
    procedure Set_CharTop(prop: WordBool); safecall;
    function Get_AlignTop: WordBool; safecall;
    procedure Set_AlignTop(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Char: Smallint read Get_Char write Set_Char;
    property CharTop: WordBool read Get_CharTop write Set_CharTop;
    property AlignTop: WordBool read Get_AlignTop write Set_AlignTop;
  end;

// *********************************************************************//
// DispIntf:  OMathGroupCharDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {02B17CB4-7D55-4B34-B38B-10381433441F}
// *********************************************************************//
  OMathGroupCharDisp = dispinterface
    ['{02B17CB4-7D55-4B34-B38B-10381433441F}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Char: Smallint dispid 104;
    property CharTop: WordBool dispid 105;
    property AlignTop: WordBool dispid 106;
  end;

// *********************************************************************//
// Interface: OMathLimLow
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {74DE9576-8E99-4E28-912B-CB30747C60CE}
// *********************************************************************//
  OMathLimLow = interface(IDispatch)
    ['{74DE9576-8E99-4E28-912B-CB30747C60CE}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Lim: OMath; safecall;
    function ToLimUpp: OMathFunction; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Lim: OMath read Get_Lim;
  end;

// *********************************************************************//
// DispIntf:  OMathLimLowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {74DE9576-8E99-4E28-912B-CB30747C60CE}
// *********************************************************************//
  OMathLimLowDisp = dispinterface
    ['{74DE9576-8E99-4E28-912B-CB30747C60CE}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Lim: OMath readonly dispid 104;
    function ToLimUpp: OMathFunction; dispid 201;
  end;

// *********************************************************************//
// Interface: OMathLimUpp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FC9086C6-0287-4997-B2E1-816C334A22F8}
// *********************************************************************//
  OMathLimUpp = interface(IDispatch)
    ['{FC9086C6-0287-4997-B2E1-816C334A22F8}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Lim: OMath; safecall;
    function ToLimLow: OMathFunction; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Lim: OMath read Get_Lim;
  end;

// *********************************************************************//
// DispIntf:  OMathLimUppDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FC9086C6-0287-4997-B2E1-816C334A22F8}
// *********************************************************************//
  OMathLimUppDisp = dispinterface
    ['{FC9086C6-0287-4997-B2E1-816C334A22F8}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Lim: OMath readonly dispid 104;
    function ToLimLow: OMathFunction; dispid 201;
  end;

// *********************************************************************//
// Interface: OMathMat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3E061A7E-67AD-4EAA-BC1E-55057D5E596F}
// *********************************************************************//
  OMathMat = interface(IDispatch)
    ['{3E061A7E-67AD-4EAA-BC1E-55057D5E596F}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Rows: OMathMatRows; safecall;
    function Get_Cols: OMathMatCols; safecall;
    function Get_Cell(Row: Integer; Col: Integer): OMath; safecall;
    function Get_Align: WdOMathVertAlignType; safecall;
    procedure Set_Align(prop: WdOMathVertAlignType); safecall;
    function Get_PlcHoldHidden: WordBool; safecall;
    procedure Set_PlcHoldHidden(prop: WordBool); safecall;
    function Get_RowSpacingRule: WdOMathSpacingRule; safecall;
    procedure Set_RowSpacingRule(prop: WdOMathSpacingRule); safecall;
    function Get_RowSpacing: Integer; safecall;
    procedure Set_RowSpacing(prop: Integer); safecall;
    function Get_ColSpacing: Integer; safecall;
    procedure Set_ColSpacing(prop: Integer); safecall;
    function Get_ColGapRule: WdOMathSpacingRule; safecall;
    procedure Set_ColGapRule(prop: WdOMathSpacingRule); safecall;
    function Get_ColGap: Integer; safecall;
    procedure Set_ColGap(prop: Integer); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Rows: OMathMatRows read Get_Rows;
    property Cols: OMathMatCols read Get_Cols;
    property Cell[Row: Integer; Col: Integer]: OMath read Get_Cell;
    property Align: WdOMathVertAlignType read Get_Align write Set_Align;
    property PlcHoldHidden: WordBool read Get_PlcHoldHidden write Set_PlcHoldHidden;
    property RowSpacingRule: WdOMathSpacingRule read Get_RowSpacingRule write Set_RowSpacingRule;
    property RowSpacing: Integer read Get_RowSpacing write Set_RowSpacing;
    property ColSpacing: Integer read Get_ColSpacing write Set_ColSpacing;
    property ColGapRule: WdOMathSpacingRule read Get_ColGapRule write Set_ColGapRule;
    property ColGap: Integer read Get_ColGap write Set_ColGap;
  end;

// *********************************************************************//
// DispIntf:  OMathMatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {3E061A7E-67AD-4EAA-BC1E-55057D5E596F}
// *********************************************************************//
  OMathMatDisp = dispinterface
    ['{3E061A7E-67AD-4EAA-BC1E-55057D5E596F}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Rows: OMathMatRows readonly dispid 103;
    property Cols: OMathMatCols readonly dispid 104;
    property Cell[Row: Integer; Col: Integer]: OMath readonly dispid 105;
    property Align: WdOMathVertAlignType dispid 106;
    property PlcHoldHidden: WordBool dispid 107;
    property RowSpacingRule: WdOMathSpacingRule dispid 108;
    property RowSpacing: Integer dispid 109;
    property ColSpacing: Integer dispid 110;
    property ColGapRule: WdOMathSpacingRule dispid 111;
    property ColGap: Integer dispid 112;
  end;

// *********************************************************************//
// Interface: OMathMatRows
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1B426348-607D-433C-9216-C5D2BF0EF31F}
// *********************************************************************//
  OMathMatRows = interface(IDispatch)
    ['{1B426348-607D-433C-9216-C5D2BF0EF31F}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): OMathMatRow; safecall;
    function Add(var BeforeRow: OleVariant): OMathMatRow; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathMatRowsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1B426348-607D-433C-9216-C5D2BF0EF31F}
// *********************************************************************//
  OMathMatRowsDisp = dispinterface
    ['{1B426348-607D-433C-9216-C5D2BF0EF31F}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    function Item(Index: Integer): OMathMatRow; dispid 0;
    function Add(var BeforeRow: OleVariant): OMathMatRow; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathMatCols
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EFC71F9C-7F42-4CD4-A7A7-970D7A48CD27}
// *********************************************************************//
  OMathMatCols = interface(IDispatch)
    ['{EFC71F9C-7F42-4CD4-A7A7-970D7A48CD27}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): OMathMatCol; safecall;
    function Add(var BeforeCol: OleVariant): OMathMatCol; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathMatColsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EFC71F9C-7F42-4CD4-A7A7-970D7A48CD27}
// *********************************************************************//
  OMathMatColsDisp = dispinterface
    ['{EFC71F9C-7F42-4CD4-A7A7-970D7A48CD27}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    function Item(Index: Integer): OMathMatCol; dispid 0;
    function Add(var BeforeCol: OleVariant): OMathMatCol; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathMatRow
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5DAA8BB6-054E-48F6-BEAC-EAAD02BE0CC7}
// *********************************************************************//
  OMathMatRow = interface(IDispatch)
    ['{5DAA8BB6-054E-48F6-BEAC-EAAD02BE0CC7}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Args: OMathArgs; safecall;
    function Get_RowIndex: Integer; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Args: OMathArgs read Get_Args;
    property RowIndex: Integer read Get_RowIndex;
  end;

// *********************************************************************//
// DispIntf:  OMathMatRowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5DAA8BB6-054E-48F6-BEAC-EAAD02BE0CC7}
// *********************************************************************//
  OMathMatRowDisp = dispinterface
    ['{5DAA8BB6-054E-48F6-BEAC-EAAD02BE0CC7}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Args: OMathArgs readonly dispid 103;
    property RowIndex: Integer readonly dispid 104;
    procedure Delete; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathMatCol
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CAE36175-3818-4C60-BCBF-0645D51EB33B}
// *********************************************************************//
  OMathMatCol = interface(IDispatch)
    ['{CAE36175-3818-4C60-BCBF-0645D51EB33B}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Args: OMathArgs; safecall;
    function Get_ColIndex: Integer; safecall;
    function Get_Align: WdOMathHorizAlignType; safecall;
    procedure Set_Align(prop: WdOMathHorizAlignType); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Args: OMathArgs read Get_Args;
    property ColIndex: Integer read Get_ColIndex;
    property Align: WdOMathHorizAlignType read Get_Align write Set_Align;
  end;

// *********************************************************************//
// DispIntf:  OMathMatColDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CAE36175-3818-4C60-BCBF-0645D51EB33B}
// *********************************************************************//
  OMathMatColDisp = dispinterface
    ['{CAE36175-3818-4C60-BCBF-0645D51EB33B}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Args: OMathArgs readonly dispid 103;
    property ColIndex: Integer readonly dispid 104;
    property Align: WdOMathHorizAlignType dispid 105;
    procedure Delete; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathNary
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CEBD4184-4E6D-4FC6-A42D-2142B1B76AF5}
// *********************************************************************//
  OMathNary = interface(IDispatch)
    ['{CEBD4184-4E6D-4FC6-A42D-2142B1B76AF5}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Sub: OMath; safecall;
    function Get_Sup: OMath; safecall;
    function Get_E: OMath; safecall;
    function Get_Char: Smallint; safecall;
    procedure Set_Char(prop: Smallint); safecall;
    function Get_Grow: WordBool; safecall;
    procedure Set_Grow(prop: WordBool); safecall;
    function Get_SubSupLim: WordBool; safecall;
    procedure Set_SubSupLim(prop: WordBool); safecall;
    function Get_HideSub: WordBool; safecall;
    procedure Set_HideSub(prop: WordBool); safecall;
    function Get_HideSup: WordBool; safecall;
    procedure Set_HideSup(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Sub: OMath read Get_Sub;
    property Sup: OMath read Get_Sup;
    property E: OMath read Get_E;
    property Char: Smallint read Get_Char write Set_Char;
    property Grow: WordBool read Get_Grow write Set_Grow;
    property SubSupLim: WordBool read Get_SubSupLim write Set_SubSupLim;
    property HideSub: WordBool read Get_HideSub write Set_HideSub;
    property HideSup: WordBool read Get_HideSup write Set_HideSup;
  end;

// *********************************************************************//
// DispIntf:  OMathNaryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CEBD4184-4E6D-4FC6-A42D-2142B1B76AF5}
// *********************************************************************//
  OMathNaryDisp = dispinterface
    ['{CEBD4184-4E6D-4FC6-A42D-2142B1B76AF5}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Sub: OMath readonly dispid 103;
    property Sup: OMath readonly dispid 104;
    property E: OMath readonly dispid 105;
    property Char: Smallint dispid 106;
    property Grow: WordBool dispid 107;
    property SubSupLim: WordBool dispid 108;
    property HideSub: WordBool dispid 109;
    property HideSup: WordBool dispid 110;
  end;

// *********************************************************************//
// Interface: OMathPhantom
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DB77D541-85C3-42E8-8649-AFBD7CF87866}
// *********************************************************************//
  OMathPhantom = interface(IDispatch)
    ['{DB77D541-85C3-42E8-8649-AFBD7CF87866}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Show: WordBool; safecall;
    procedure Set_Show(prop: WordBool); safecall;
    function Get_ZeroWid: WordBool; safecall;
    procedure Set_ZeroWid(prop: WordBool); safecall;
    function Get_ZeroAsc: WordBool; safecall;
    procedure Set_ZeroAsc(prop: WordBool); safecall;
    function Get_ZeroDesc: WordBool; safecall;
    procedure Set_ZeroDesc(prop: WordBool); safecall;
    function Get_Transp: WordBool; safecall;
    procedure Set_Transp(prop: WordBool); safecall;
    function Get_Smash: WordBool; safecall;
    procedure Set_Smash(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Show: WordBool read Get_Show write Set_Show;
    property ZeroWid: WordBool read Get_ZeroWid write Set_ZeroWid;
    property ZeroAsc: WordBool read Get_ZeroAsc write Set_ZeroAsc;
    property ZeroDesc: WordBool read Get_ZeroDesc write Set_ZeroDesc;
    property Transp: WordBool read Get_Transp write Set_Transp;
    property Smash: WordBool read Get_Smash write Set_Smash;
  end;

// *********************************************************************//
// DispIntf:  OMathPhantomDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DB77D541-85C3-42E8-8649-AFBD7CF87866}
// *********************************************************************//
  OMathPhantomDisp = dispinterface
    ['{DB77D541-85C3-42E8-8649-AFBD7CF87866}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Show: WordBool dispid 104;
    property ZeroWid: WordBool dispid 105;
    property ZeroAsc: WordBool dispid 106;
    property ZeroDesc: WordBool dispid 107;
    property Transp: WordBool dispid 108;
    property Smash: WordBool dispid 109;
  end;

// *********************************************************************//
// Interface: OMathScrPre
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AFAF0C0E-8603-40F6-8FD1-42726CAC21E3}
// *********************************************************************//
  OMathScrPre = interface(IDispatch)
    ['{AFAF0C0E-8603-40F6-8FD1-42726CAC21E3}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Sub: OMath; safecall;
    function Get_Sup: OMath; safecall;
    function Get_E: OMath; safecall;
    function ToScrSubSup: OMathFunction; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Sub: OMath read Get_Sub;
    property Sup: OMath read Get_Sup;
    property E: OMath read Get_E;
  end;

// *********************************************************************//
// DispIntf:  OMathScrPreDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AFAF0C0E-8603-40F6-8FD1-42726CAC21E3}
// *********************************************************************//
  OMathScrPreDisp = dispinterface
    ['{AFAF0C0E-8603-40F6-8FD1-42726CAC21E3}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Sub: OMath readonly dispid 103;
    property Sup: OMath readonly dispid 104;
    property E: OMath readonly dispid 105;
    function ToScrSubSup: OMathFunction; dispid 201;
  end;

// *********************************************************************//
// Interface: OMathRad
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {67A7EEC5-285D-4024-B071-BD6B33B88547}
// *********************************************************************//
  OMathRad = interface(IDispatch)
    ['{67A7EEC5-285D-4024-B071-BD6B33B88547}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Deg: OMath; safecall;
    function Get_E: OMath; safecall;
    function Get_HideDeg: WordBool; safecall;
    procedure Set_HideDeg(prop: WordBool); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Deg: OMath read Get_Deg;
    property E: OMath read Get_E;
    property HideDeg: WordBool read Get_HideDeg write Set_HideDeg;
  end;

// *********************************************************************//
// DispIntf:  OMathRadDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {67A7EEC5-285D-4024-B071-BD6B33B88547}
// *********************************************************************//
  OMathRadDisp = dispinterface
    ['{67A7EEC5-285D-4024-B071-BD6B33B88547}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Deg: OMath readonly dispid 103;
    property E: OMath readonly dispid 104;
    property HideDeg: WordBool dispid 105;
  end;

// *********************************************************************//
// Interface: OMathScrSub
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {98DFBD12-96CB-4F07-90EA-749FF1D6B89D}
// *********************************************************************//
  OMathScrSub = interface(IDispatch)
    ['{98DFBD12-96CB-4F07-90EA-749FF1D6B89D}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Sub: OMath; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Sub: OMath read Get_Sub;
  end;

// *********************************************************************//
// DispIntf:  OMathScrSubDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {98DFBD12-96CB-4F07-90EA-749FF1D6B89D}
// *********************************************************************//
  OMathScrSubDisp = dispinterface
    ['{98DFBD12-96CB-4F07-90EA-749FF1D6B89D}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Sub: OMath readonly dispid 104;
  end;

// *********************************************************************//
// Interface: OMathScrSubSup
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DC489AD4-23C4-4F4B-990F-45A51C7C0C4F}
// *********************************************************************//
  OMathScrSubSup = interface(IDispatch)
    ['{DC489AD4-23C4-4F4B-990F-45A51C7C0C4F}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Sub: OMath; safecall;
    function Get_Sup: OMath; safecall;
    function Get_AlignScripts: WordBool; safecall;
    procedure Set_AlignScripts(prop: WordBool); safecall;
    function RemoveSub: OMathFunction; safecall;
    function RemoveSup: OMathFunction; safecall;
    function ToScrPre: OMathFunction; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Sub: OMath read Get_Sub;
    property Sup: OMath read Get_Sup;
    property AlignScripts: WordBool read Get_AlignScripts write Set_AlignScripts;
  end;

// *********************************************************************//
// DispIntf:  OMathScrSubSupDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DC489AD4-23C4-4F4B-990F-45A51C7C0C4F}
// *********************************************************************//
  OMathScrSubSupDisp = dispinterface
    ['{DC489AD4-23C4-4F4B-990F-45A51C7C0C4F}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Sub: OMath readonly dispid 104;
    property Sup: OMath readonly dispid 105;
    property AlignScripts: WordBool dispid 106;
    function RemoveSub: OMathFunction; dispid 200;
    function RemoveSup: OMathFunction; dispid 201;
    function ToScrPre: OMathFunction; dispid 202;
  end;

// *********************************************************************//
// Interface: OMathScrSup
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D0A95726-678A-4B9D-8103-1E2B86735AE7}
// *********************************************************************//
  OMathScrSup = interface(IDispatch)
    ['{D0A95726-678A-4B9D-8103-1E2B86735AE7}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_E: OMath; safecall;
    function Get_Sup: OMath; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property E: OMath read Get_E;
    property Sup: OMath read Get_Sup;
  end;

// *********************************************************************//
// DispIntf:  OMathScrSupDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D0A95726-678A-4B9D-8103-1E2B86735AE7}
// *********************************************************************//
  OMathScrSupDisp = dispinterface
    ['{D0A95726-678A-4B9D-8103-1E2B86735AE7}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property E: OMath readonly dispid 103;
    property Sup: OMath readonly dispid 104;
  end;

// *********************************************************************//
// Interface: OMathAutoCorrect
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6F9D1F68-06F7-49EF-8902-185E54EB5E87}
// *********************************************************************//
  OMathAutoCorrect = interface(IDispatch)
    ['{6F9D1F68-06F7-49EF-8902-185E54EB5E87}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ReplaceText: WordBool; safecall;
    procedure Set_ReplaceText(prop: WordBool); safecall;
    function Get_UseOutsideOMath: WordBool; safecall;
    procedure Set_UseOutsideOMath(prop: WordBool); safecall;
    function Get_Entries: OMathAutoCorrectEntries; safecall;
    function Get_Functions: OMathRecognizedFunctions; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ReplaceText: WordBool read Get_ReplaceText write Set_ReplaceText;
    property UseOutsideOMath: WordBool read Get_UseOutsideOMath write Set_UseOutsideOMath;
    property Entries: OMathAutoCorrectEntries read Get_Entries;
    property Functions: OMathRecognizedFunctions read Get_Functions;
  end;

// *********************************************************************//
// DispIntf:  OMathAutoCorrectDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6F9D1F68-06F7-49EF-8902-185E54EB5E87}
// *********************************************************************//
  OMathAutoCorrectDisp = dispinterface
    ['{6F9D1F68-06F7-49EF-8902-185E54EB5E87}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property ReplaceText: WordBool dispid 103;
    property UseOutsideOMath: WordBool dispid 104;
    property Entries: OMathAutoCorrectEntries readonly dispid 105;
    property Functions: OMathRecognizedFunctions readonly dispid 106;
  end;

// *********************************************************************//
// Interface: OMathAutoCorrectEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {18CD5EC8-8B7B-42C8-992A-2A407468642C}
// *********************************************************************//
  OMathAutoCorrectEntries = interface(IDispatch)
    ['{18CD5EC8-8B7B-42C8-992A-2A407468642C}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): OMathAutoCorrectEntry; safecall;
    function Add(const Name: WideString; const Value: WideString): OMathAutoCorrectEntry; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathAutoCorrectEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {18CD5EC8-8B7B-42C8-992A-2A407468642C}
// *********************************************************************//
  OMathAutoCorrectEntriesDisp = dispinterface
    ['{18CD5EC8-8B7B-42C8-992A-2A407468642C}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 103;
    function Item(var Index: OleVariant): OMathAutoCorrectEntry; dispid 0;
    function Add(const Name: WideString; const Value: WideString): OMathAutoCorrectEntry; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathAutoCorrectEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D8779F01-4869-4403-B334-D60C5F9C9175}
// *********************************************************************//
  OMathAutoCorrectEntry = interface(IDispatch)
    ['{D8779F01-4869-4403-B334-D60C5F9C9175}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property Value: WideString read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  OMathAutoCorrectEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D8779F01-4869-4403-B334-D60C5F9C9175}
// *********************************************************************//
  OMathAutoCorrectEntryDisp = dispinterface
    ['{D8779F01-4869-4403-B334-D60C5F9C9175}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Index: Integer readonly dispid 103;
    property Name: WideString dispid 104;
    property Value: WideString dispid 105;
    procedure Delete; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathRecognizedFunctions
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {44FEE887-6600-41AB-95A5-DE33C605116C}
// *********************************************************************//
  OMathRecognizedFunctions = interface(IDispatch)
    ['{44FEE887-6600-41AB-95A5-DE33C605116C}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): OMathRecognizedFunction; safecall;
    function Add(const Name: WideString): OMathRecognizedFunction; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathRecognizedFunctionsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {44FEE887-6600-41AB-95A5-DE33C605116C}
// *********************************************************************//
  OMathRecognizedFunctionsDisp = dispinterface
    ['{44FEE887-6600-41AB-95A5-DE33C605116C}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 103;
    function Item(var Index: OleVariant): OMathRecognizedFunction; dispid 0;
    function Add(const Name: WideString): OMathRecognizedFunction; dispid 200;
  end;

// *********************************************************************//
// Interface: OMathRecognizedFunction
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5C04BD93-2F3F-4668-918D-9738EC901039}
// *********************************************************************//
  OMathRecognizedFunction = interface(IDispatch)
    ['{5C04BD93-2F3F-4668-918D-9738EC901039}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  OMathRecognizedFunctionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5C04BD93-2F3F-4668-918D-9738EC901039}
// *********************************************************************//
  OMathRecognizedFunctionDisp = dispinterface
    ['{5C04BD93-2F3F-4668-918D-9738EC901039}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Index: Integer readonly dispid 103;
    property Name: WideString readonly dispid 104;
    procedure Delete; dispid 200;
  end;

// *********************************************************************//
// Interface: ContentControls
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {804CD967-F83B-432D-9446-C61A45CFEFF0}
// *********************************************************************//
  ContentControls = interface(IDispatch)
    ['{804CD967-F83B-432D-9446-C61A45CFEFF0}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): ContentControl; safecall;
    function Add(Type_: WdContentControlType; var Range: OleVariant): ContentControl; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ContentControlsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {804CD967-F83B-432D-9446-C61A45CFEFF0}
// *********************************************************************//
  ContentControlsDisp = dispinterface
    ['{804CD967-F83B-432D-9446-C61A45CFEFF0}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    function Item(var Index: OleVariant): ContentControl; dispid 0;
    function Add(Type_: WdContentControlType; var Range: OleVariant): ContentControl; dispid 1;
  end;

// *********************************************************************//
// Interface: ContentControl
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EE95AFE3-3026-4172-B078-0E79DAB5CC3D}
// *********************************************************************//
  ContentControl = interface(IDispatch)
    ['{EE95AFE3-3026-4172-B078-0E79DAB5CC3D}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_LockContentControl: WordBool; safecall;
    procedure Set_LockContentControl(prop: WordBool); safecall;
    function Get_LockContents: WordBool; safecall;
    procedure Set_LockContents(prop: WordBool); safecall;
    function Get_XMLMapping: XMLMapping; safecall;
    function Get_type_: WdContentControlType; safecall;
    procedure Set_type_(prop: WdContentControlType); safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Delete(DeleteContents: WordBool); safecall;
    function Get_DropdownListEntries: ContentControlListEntries; safecall;
    function Get_PlaceholderText: BuildingBlock; safecall;
    procedure SetPlaceholderText(const BuildingBlock: BuildingBlock; const Range: WordRange; 
                                 const Text: WideString); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const prop: WideString); safecall;
    function Get_DateDisplayFormat: WideString; safecall;
    procedure Set_DateDisplayFormat(const prop: WideString); safecall;
    function Get_MultiLine: WordBool; safecall;
    procedure Set_MultiLine(prop: WordBool); safecall;
    function Get_ParentContentControl: ContentControl; safecall;
    function Get_Temporary: WordBool; safecall;
    procedure Set_Temporary(prop: WordBool); safecall;
    function Get_ID: WideString; safecall;
    function Get_ShowingPlaceholderText: WordBool; safecall;
    function Get_DateStorageFormat: WdContentControlDateStorageFormat; safecall;
    procedure Set_DateStorageFormat(prop: WdContentControlDateStorageFormat); safecall;
    function Get_BuildingBlockType: WdBuildingBlockTypes; safecall;
    procedure Set_BuildingBlockType(prop: WdBuildingBlockTypes); safecall;
    function Get_BuildingBlockCategory: WideString; safecall;
    procedure Set_BuildingBlockCategory(const prop: WideString); safecall;
    function Get_DateDisplayLocale: WdLanguageID; safecall;
    procedure Set_DateDisplayLocale(prop: WdLanguageID); safecall;
    procedure Ungroup; safecall;
    function Get_DefaultTextStyle: OleVariant; safecall;
    procedure Set_DefaultTextStyle(var prop: OleVariant); safecall;
    function Get_DateCalendarType: WdCalendarType; safecall;
    procedure Set_DateCalendarType(prop: WdCalendarType); safecall;
    function Get_Tag: WideString; safecall;
    procedure Set_Tag(const prop: WideString); safecall;
    function Get_Checked: WordBool; safecall;
    procedure Set_Checked(prop: WordBool); safecall;
    procedure SetCheckedSymbol(CharacterNumber: Integer; const Font: WideString); safecall;
    procedure SetUncheckedSymbol(CharacterNumber: Integer; const Font: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property LockContentControl: WordBool read Get_LockContentControl write Set_LockContentControl;
    property LockContents: WordBool read Get_LockContents write Set_LockContents;
    property XMLMapping: XMLMapping read Get_XMLMapping;
    property type_: WdContentControlType read Get_type_ write Set_type_;
    property DropdownListEntries: ContentControlListEntries read Get_DropdownListEntries;
    property PlaceholderText: BuildingBlock read Get_PlaceholderText;
    property Title: WideString read Get_Title write Set_Title;
    property DateDisplayFormat: WideString read Get_DateDisplayFormat write Set_DateDisplayFormat;
    property MultiLine: WordBool read Get_MultiLine write Set_MultiLine;
    property ParentContentControl: ContentControl read Get_ParentContentControl;
    property Temporary: WordBool read Get_Temporary write Set_Temporary;
    property ID: WideString read Get_ID;
    property ShowingPlaceholderText: WordBool read Get_ShowingPlaceholderText;
    property DateStorageFormat: WdContentControlDateStorageFormat read Get_DateStorageFormat write Set_DateStorageFormat;
    property BuildingBlockType: WdBuildingBlockTypes read Get_BuildingBlockType write Set_BuildingBlockType;
    property BuildingBlockCategory: WideString read Get_BuildingBlockCategory write Set_BuildingBlockCategory;
    property DateDisplayLocale: WdLanguageID read Get_DateDisplayLocale write Set_DateDisplayLocale;
    property DateCalendarType: WdCalendarType read Get_DateCalendarType write Set_DateCalendarType;
    property Tag: WideString read Get_Tag write Set_Tag;
    property Checked: WordBool read Get_Checked write Set_Checked;
  end;

// *********************************************************************//
// DispIntf:  ContentControlDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {EE95AFE3-3026-4172-B078-0E79DAB5CC3D}
// *********************************************************************//
  ContentControlDisp = dispinterface
    ['{EE95AFE3-3026-4172-B078-0E79DAB5CC3D}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 1;
    property LockContentControl: WordBool dispid 2;
    property LockContents: WordBool dispid 3;
    property XMLMapping: XMLMapping readonly dispid 4;
    property type_: WdContentControlType dispid 5;
    procedure Copy; dispid 6;
    procedure Cut; dispid 7;
    procedure Delete(DeleteContents: WordBool); dispid 8;
    property DropdownListEntries: ContentControlListEntries readonly dispid 9;
    property PlaceholderText: BuildingBlock readonly dispid 10;
    procedure SetPlaceholderText(const BuildingBlock: BuildingBlock; const Range: WordRange; 
                                 const Text: WideString); dispid 11;
    property Title: WideString dispid 12;
    property DateDisplayFormat: WideString dispid 13;
    property MultiLine: WordBool dispid 15;
    property ParentContentControl: ContentControl readonly dispid 16;
    property Temporary: WordBool dispid 17;
    property ID: WideString readonly dispid 18;
    property ShowingPlaceholderText: WordBool readonly dispid 19;
    property DateStorageFormat: WdContentControlDateStorageFormat dispid 20;
    property BuildingBlockType: WdBuildingBlockTypes dispid 21;
    property BuildingBlockCategory: WideString dispid 22;
    property DateDisplayLocale: WdLanguageID dispid 23;
    procedure Ungroup; dispid 24;
    function DefaultTextStyle: OleVariant; dispid 25;
    property DateCalendarType: WdCalendarType dispid 26;
    property Tag: WideString dispid 27;
    property Checked: WordBool dispid 28;
    procedure SetCheckedSymbol(CharacterNumber: Integer; const Font: WideString); dispid 29;
    procedure SetUncheckedSymbol(CharacterNumber: Integer; const Font: WideString); dispid 30;
  end;

// *********************************************************************//
// Interface: XMLMapping
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0C1FABE7-F737-406F-9CA3-B07661F9D1A2}
// *********************************************************************//
  XMLMapping = interface(IDispatch)
    ['{0C1FABE7-F737-406F-9CA3-B07661F9D1A2}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_IsMapped: WordBool; safecall;
    function Get_CustomXMLPart: CustomXMLPart; safecall;
    function Get_CustomXMLNode: CustomXMLNode; safecall;
    function SetMapping(const XPath: WideString; const PrefixMapping: WideString; 
                        const Source: CustomXMLPart): WordBool; safecall;
    procedure Delete; safecall;
    function SetMappingByNode(const Node: CustomXMLNode): WordBool; safecall;
    function Get_XPath: WideString; safecall;
    function Get_PrefixMappings: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property IsMapped: WordBool read Get_IsMapped;
    property CustomXMLPart: CustomXMLPart read Get_CustomXMLPart;
    property CustomXMLNode: CustomXMLNode read Get_CustomXMLNode;
    property XPath: WideString read Get_XPath;
    property PrefixMappings: WideString read Get_PrefixMappings;
  end;

// *********************************************************************//
// DispIntf:  XMLMappingDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0C1FABE7-F737-406F-9CA3-B07661F9D1A2}
// *********************************************************************//
  XMLMappingDisp = dispinterface
    ['{0C1FABE7-F737-406F-9CA3-B07661F9D1A2}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property IsMapped: WordBool readonly dispid 0;
    property CustomXMLPart: CustomXMLPart readonly dispid 1;
    property CustomXMLNode: CustomXMLNode readonly dispid 2;
    function SetMapping(const XPath: WideString; const PrefixMapping: WideString; 
                        const Source: CustomXMLPart): WordBool; dispid 3;
    procedure Delete; dispid 4;
    function SetMappingByNode(const Node: CustomXMLNode): WordBool; dispid 5;
    property XPath: WideString readonly dispid 6;
    property PrefixMappings: WideString readonly dispid 7;
  end;

// *********************************************************************//
// Interface: ContentControlListEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {54F46DC4-F6A6-48CC-BD66-46C1DDEADD22}
// *********************************************************************//
  ContentControlListEntries = interface(IDispatch)
    ['{54F46DC4-F6A6-48CC-BD66-46C1DDEADD22}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    procedure Clear; safecall;
    function Item(Index: Integer): ContentControlListEntry; safecall;
    function Add(const Text: WideString; const Value: WideString; Index: Integer): ContentControlListEntry; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ContentControlListEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {54F46DC4-F6A6-48CC-BD66-46C1DDEADD22}
// *********************************************************************//
  ContentControlListEntriesDisp = dispinterface
    ['{54F46DC4-F6A6-48CC-BD66-46C1DDEADD22}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Count: Integer readonly dispid 103;
    procedure Clear; dispid 104;
    function Item(Index: Integer): ContentControlListEntry; dispid 0;
    function Add(const Text: WideString; const Value: WideString; Index: Integer): ContentControlListEntry; dispid 106;
  end;

// *********************************************************************//
// Interface: ContentControlListEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0C6FA8CA-E65F-4FC7-AB8F-20729EECBB14}
// *********************************************************************//
  ContentControlListEntry = interface(IDispatch)
    ['{0C6FA8CA-E65F-4FC7-AB8F-20729EECBB14}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    function Get_Index: Integer; safecall;
    procedure Set_Index(prop: Integer); safecall;
    procedure Delete; safecall;
    procedure MoveUp; safecall;
    procedure MoveDown; safecall;
    procedure Select; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Text: WideString read Get_Text write Set_Text;
    property Value: WideString read Get_Value write Set_Value;
    property Index: Integer read Get_Index write Set_Index;
  end;

// *********************************************************************//
// DispIntf:  ContentControlListEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {0C6FA8CA-E65F-4FC7-AB8F-20729EECBB14}
// *********************************************************************//
  ContentControlListEntryDisp = dispinterface
    ['{0C6FA8CA-E65F-4FC7-AB8F-20729EECBB14}']
    property Application: WordApplication readonly dispid 100;
    property Creator: Integer readonly dispid 101;
    property Parent: IDispatch readonly dispid 102;
    property Text: WideString dispid 0;
    property Value: WideString dispid 104;
    property Index: Integer dispid 105;
    procedure Delete; dispid 106;
    procedure MoveUp; dispid 107;
    procedure MoveDown; dispid 108;
    procedure Select; dispid 109;
  end;

// *********************************************************************//
// Interface: BuildingBlockTypes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B5828B50-0E3D-448A-962D-A40702A5868D}
// *********************************************************************//
  BuildingBlockTypes = interface(IDispatch)
    ['{B5828B50-0E3D-448A-962D-A40702A5868D}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: WdBuildingBlockTypes): BuildingBlockType; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  BuildingBlockTypesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B5828B50-0E3D-448A-962D-A40702A5868D}
// *********************************************************************//
  BuildingBlockTypesDisp = dispinterface
    ['{B5828B50-0E3D-448A-962D-A40702A5868D}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    function Item(Index: WdBuildingBlockTypes): BuildingBlockType; dispid 0;
  end;

// *********************************************************************//
// Interface: BuildingBlockType
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {817F99FA-CCC4-4971-8E9D-1238F735AAFF}
// *********************************************************************//
  BuildingBlockType = interface(IDispatch)
    ['{817F99FA-CCC4-4971-8E9D-1238F735AAFF}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    function Get_Categories: Categories; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
    property Categories: Categories read Get_Categories;
  end;

// *********************************************************************//
// DispIntf:  BuildingBlockTypeDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {817F99FA-CCC4-4971-8E9D-1238F735AAFF}
// *********************************************************************//
  BuildingBlockTypeDisp = dispinterface
    ['{817F99FA-CCC4-4971-8E9D-1238F735AAFF}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString readonly dispid 2;
    property Categories: Categories readonly dispid 20;
  end;

// *********************************************************************//
// Interface: Categories
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6E47678B-A879-4E56-8698-3B7CF169FAD4}
// *********************************************************************//
  Categories = interface(IDispatch)
    ['{6E47678B-A879-4E56-8698-3B7CF169FAD4}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): Category; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  CategoriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6E47678B-A879-4E56-8698-3B7CF169FAD4}
// *********************************************************************//
  CategoriesDisp = dispinterface
    ['{6E47678B-A879-4E56-8698-3B7CF169FAD4}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): Category; dispid 0;
  end;

// *********************************************************************//
// Interface: Category
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {ECFBDB5E-ACD2-4530-AD79-4560B7FF055C}
// *********************************************************************//
  Category = interface(IDispatch)
    ['{ECFBDB5E-ACD2-4530-AD79-4560B7FF055C}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    function Get_BuildingBlocks: BuildingBlocks; safecall;
    function Get_type_: BuildingBlockType; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name;
    property BuildingBlocks: BuildingBlocks read Get_BuildingBlocks;
    property type_: BuildingBlockType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  CategoryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {ECFBDB5E-ACD2-4530-AD79-4560B7FF055C}
// *********************************************************************//
  CategoryDisp = dispinterface
    ['{ECFBDB5E-ACD2-4530-AD79-4560B7FF055C}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString readonly dispid 2;
    property BuildingBlocks: BuildingBlocks readonly dispid 3;
    property type_: BuildingBlockType readonly dispid 4;
  end;

// *********************************************************************//
// Interface: BuildingBlocks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C6D50987-25D7-408A-BFF2-90BF86A24E93}
// *********************************************************************//
  BuildingBlocks = interface(IDispatch)
    ['{C6D50987-25D7-408A-BFF2-90BF86A24E93}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): BuildingBlock; safecall;
    function Add(const Name: WideString; const Range: WordRange; var Description: OleVariant; 
                 InsertOptions: WdDocPartInsertOptions): BuildingBlock; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  BuildingBlocksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C6D50987-25D7-408A-BFF2-90BF86A24E93}
// *********************************************************************//
  BuildingBlocksDisp = dispinterface
    ['{C6D50987-25D7-408A-BFF2-90BF86A24E93}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): BuildingBlock; dispid 0;
    function Add(const Name: WideString; const Range: WordRange; var Description: OleVariant; 
                 InsertOptions: WdDocPartInsertOptions): BuildingBlock; dispid 101;
  end;

// *********************************************************************//
// Interface: BuildingBlock
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {BFD3FC23-F763-4FF8-826E-1AFBF598A4E7}
// *********************************************************************//
  BuildingBlock = interface(IDispatch)
    ['{BFD3FC23-F763-4FF8-826E-1AFBF598A4E7}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Index: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_type_: BuildingBlockType; safecall;
    function Get_Description: WideString; safecall;
    procedure Set_Description(const prop: WideString); safecall;
    function Get_ID: WideString; safecall;
    function Get_Category: Category; safecall;
    function Get_Value: WideString; safecall;
    procedure Set_Value(const prop: WideString); safecall;
    function Get_InsertOptions: Integer; safecall;
    procedure Set_InsertOptions(prop: Integer); safecall;
    procedure Delete; safecall;
    function Insert(const Where: WordRange; var RichText: OleVariant): WordRange; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Index: Integer read Get_Index;
    property Name: WideString read Get_Name write Set_Name;
    property type_: BuildingBlockType read Get_type_;
    property Description: WideString read Get_Description write Set_Description;
    property ID: WideString read Get_ID;
    property Category: Category read Get_Category;
    property Value: WideString read Get_Value write Set_Value;
    property InsertOptions: Integer read Get_InsertOptions write Set_InsertOptions;
  end;

// *********************************************************************//
// DispIntf:  BuildingBlockDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {BFD3FC23-F763-4FF8-826E-1AFBF598A4E7}
// *********************************************************************//
  BuildingBlockDisp = dispinterface
    ['{BFD3FC23-F763-4FF8-826E-1AFBF598A4E7}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Index: Integer readonly dispid 1;
    property Name: WideString dispid 2;
    property type_: BuildingBlockType readonly dispid 3;
    property Description: WideString dispid 4;
    property ID: WideString readonly dispid 5;
    property Category: Category readonly dispid 6;
    property Value: WideString dispid 0;
    property InsertOptions: Integer dispid 7;
    procedure Delete; dispid 101;
    function Insert(const Where: WordRange; var RichText: OleVariant): WordRange; dispid 102;
  end;

// *********************************************************************//
// Interface: BuildingBlockEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {39709229-56A0-4E29-9112-B31DD067EBFD}
// *********************************************************************//
  BuildingBlockEntries = interface(IDispatch)
    ['{39709229-56A0-4E29-9112-B31DD067EBFD}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): BuildingBlock; safecall;
    function Add(const Name: WideString; Type_: WdBuildingBlockTypes; const Category: WideString; 
                 const Range: WordRange; var Description: OleVariant; 
                 InsertOptions: WdDocPartInsertOptions): BuildingBlock; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  BuildingBlockEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {39709229-56A0-4E29-9112-B31DD067EBFD}
// *********************************************************************//
  BuildingBlockEntriesDisp = dispinterface
    ['{39709229-56A0-4E29-9112-B31DD067EBFD}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): BuildingBlock; dispid 0;
    function Add(const Name: WideString; Type_: WdBuildingBlockTypes; const Category: WideString; 
                 const Range: WordRange; var Description: OleVariant; 
                 InsertOptions: WdDocPartInsertOptions): BuildingBlock; dispid 101;
  end;

// *********************************************************************//
// Interface: OMathBreaks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E2E0F3A7-204C-40C5-BAA5-290F374FDF5A}
// *********************************************************************//
  OMathBreaks = interface(IDispatch)
    ['{E2E0F3A7-204C-40C5-BAA5-290F374FDF5A}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): OMathBreak; safecall;
    function Add(const Range: WordRange): OMathBreak; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  OMathBreaksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E2E0F3A7-204C-40C5-BAA5-290F374FDF5A}
// *********************************************************************//
  OMathBreaksDisp = dispinterface
    ['{E2E0F3A7-204C-40C5-BAA5-290F374FDF5A}']
    property Application: WordApplication readonly dispid 101;
    property Creator: Integer readonly dispid 102;
    property Parent: IDispatch readonly dispid 103;
    property Count: Integer readonly dispid 104;
    function Item(Index: Integer): OMathBreak; dispid 0;
    function Add(const Range: WordRange): OMathBreak; dispid 105;
  end;

// *********************************************************************//
// Interface: OMathBreak
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {65E515D5-F50B-4951-8F38-FA6AC8707387}
// *********************************************************************//
  OMathBreak = interface(IDispatch)
    ['{65E515D5-F50B-4951-8F38-FA6AC8707387}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_AlignAt: Integer; safecall;
    procedure Set_AlignAt(prop: Integer); safecall;
    procedure Delete; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property AlignAt: Integer read Get_AlignAt write Set_AlignAt;
  end;

// *********************************************************************//
// DispIntf:  OMathBreakDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {65E515D5-F50B-4951-8F38-FA6AC8707387}
// *********************************************************************//
  OMathBreakDisp = dispinterface
    ['{65E515D5-F50B-4951-8F38-FA6AC8707387}']
    property Application: WordApplication readonly dispid 101;
    property Creator: Integer readonly dispid 102;
    property Parent: IDispatch readonly dispid 103;
    property Range: WordRange readonly dispid 104;
    property AlignAt: Integer dispid 105;
    procedure Delete; dispid 106;
  end;

// *********************************************************************//
// Interface: Research
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E6AAEC05-E543-4085-BA92-9BF7D2474F51}
// *********************************************************************//
  Research = interface(IDispatch)
    ['{E6AAEC05-E543-4085-BA92-9BF7D2474F51}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Query(const ServiceID: WideString; const QueryString: WideString; 
                   QueryLanguage: WdLanguageID; UseSelection: WordBool; LaunchQuery: WordBool): OleVariant; safecall;
    function SetLanguagePair(LanguageFrom: WdLanguageID; LanguageTo: WdLanguageID): OleVariant; safecall;
    function IsResearchService(const ServiceID: WideString): WordBool; safecall;
    function Get_FavoriteService: WideString; safecall;
    procedure Set_FavoriteService(const prop: WideString); safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property FavoriteService: WideString read Get_FavoriteService write Set_FavoriteService;
  end;

// *********************************************************************//
// DispIntf:  ResearchDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E6AAEC05-E543-4085-BA92-9BF7D2474F51}
// *********************************************************************//
  ResearchDisp = dispinterface
    ['{E6AAEC05-E543-4085-BA92-9BF7D2474F51}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    function Query(const ServiceID: WideString; const QueryString: WideString; 
                   QueryLanguage: WdLanguageID; UseSelection: WordBool; LaunchQuery: WordBool): OleVariant; dispid 500;
    function SetLanguagePair(LanguageFrom: WdLanguageID; LanguageTo: WdLanguageID): OleVariant; dispid 501;
    function IsResearchService(const ServiceID: WideString): WordBool; dispid 502;
    property FavoriteService: WideString dispid 1003;
  end;

// *********************************************************************//
// Interface: SoftEdgeFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D040DAF9-6CE4-4BE8-839D-F4538A4301CF}
// *********************************************************************//
  SoftEdgeFormat = interface(IDispatch)
    ['{D040DAF9-6CE4-4BE8-839D-F4538A4301CF}']
    function Get_type_: MsoSoftEdgeType; safecall;
    procedure Set_type_(prop: MsoSoftEdgeType); safecall;
    function Get_Radius: Single; safecall;
    procedure Set_Radius(prop: Single); safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property type_: MsoSoftEdgeType read Get_type_ write Set_type_;
    property Radius: Single read Get_Radius write Set_Radius;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  SoftEdgeFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D040DAF9-6CE4-4BE8-839D-F4538A4301CF}
// *********************************************************************//
  SoftEdgeFormatDisp = dispinterface
    ['{D040DAF9-6CE4-4BE8-839D-F4538A4301CF}']
    property type_: MsoSoftEdgeType dispid 1;
    property Radius: Single dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: GlowFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F1B14F40-5C32-4C8C-B5B2-DE537BB6B89D}
// *********************************************************************//
  GlowFormat = interface(IDispatch)
    ['{F1B14F40-5C32-4C8C-B5B2-DE537BB6B89D}']
    function Get_Radius: Single; safecall;
    procedure Set_Radius(prop: Single); safecall;
    function Get_Color: ColorFormat; safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Transparency: Single; safecall;
    procedure Set_Transparency(prop: Single); safecall;
    property Radius: Single read Get_Radius write Set_Radius;
    property Color: ColorFormat read Get_Color;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Transparency: Single read Get_Transparency write Set_Transparency;
  end;

// *********************************************************************//
// DispIntf:  GlowFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F1B14F40-5C32-4C8C-B5B2-DE537BB6B89D}
// *********************************************************************//
  GlowFormatDisp = dispinterface
    ['{F1B14F40-5C32-4C8C-B5B2-DE537BB6B89D}']
    property Radius: Single dispid 1;
    property Color: ColorFormat readonly dispid 2;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Transparency: Single dispid 3;
  end;

// *********************************************************************//
// Interface: ReflectionFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F01943FF-1985-445E-8602-8FB8F39CCA75}
// *********************************************************************//
  ReflectionFormat = interface(IDispatch)
    ['{F01943FF-1985-445E-8602-8FB8F39CCA75}']
    function Get_type_: MsoReflectionType; safecall;
    procedure Set_type_(prop: MsoReflectionType); safecall;
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Transparency: Single; safecall;
    procedure Set_Transparency(prop: Single); safecall;
    function Get_Size: Single; safecall;
    procedure Set_Size(prop: Single); safecall;
    function Get_Offset: Single; safecall;
    procedure Set_Offset(prop: Single); safecall;
    function Get_Blur: Single; safecall;
    procedure Set_Blur(prop: Single); safecall;
    property type_: MsoReflectionType read Get_type_ write Set_type_;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Transparency: Single read Get_Transparency write Set_Transparency;
    property Size: Single read Get_Size write Set_Size;
    property Offset: Single read Get_Offset write Set_Offset;
    property Blur: Single read Get_Blur write Set_Blur;
  end;

// *********************************************************************//
// DispIntf:  ReflectionFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F01943FF-1985-445E-8602-8FB8F39CCA75}
// *********************************************************************//
  ReflectionFormatDisp = dispinterface
    ['{F01943FF-1985-445E-8602-8FB8F39CCA75}']
    property type_: MsoReflectionType dispid 1;
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Transparency: Single dispid 2;
    property Size: Single dispid 3;
    property Offset: Single dispid 4;
    property Blur: Single dispid 5;
  end;

// *********************************************************************//
// Interface: ChartData
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {4A304B59-31FF-42DD-B436-7FC9C5DB7559}
// *********************************************************************//
  ChartData = interface(IDispatch)
    ['{4A304B59-31FF-42DD-B436-7FC9C5DB7559}']
    function Get_Workbook: IDispatch; safecall;
    procedure Activate; safecall;
    function Get_IsLinked: WordBool; safecall;
    procedure BreakLink; safecall;
    property Workbook: IDispatch read Get_Workbook;
    property IsLinked: WordBool read Get_IsLinked;
  end;

// *********************************************************************//
// DispIntf:  ChartDataDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {4A304B59-31FF-42DD-B436-7FC9C5DB7559}
// *********************************************************************//
  ChartDataDisp = dispinterface
    ['{4A304B59-31FF-42DD-B436-7FC9C5DB7559}']
    property Workbook: IDispatch readonly dispid 1610743808;
    procedure Activate; dispid 1610743809;
    property IsLinked: WordBool readonly dispid 1610743810;
    procedure BreakLink; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: Chart
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6FFA84BB-A350-4442-BB53-A43653459A84}
// *********************************************************************//
  Chart = interface(IDispatch)
    ['{6FFA84BB-A350-4442-BB53-A43653459A84}']
    function Get_Parent: IDispatch; safecall;
    function Get_HasTitle(lcid: Integer): WordBool; safecall;
    procedure Set_HasTitle(lcid: Integer; prop: WordBool); safecall;
    function Get_ChartTitle(lcid: Integer): ChartTitle; safecall;
    function Get_DepthPercent(lcid: Integer): Integer; safecall;
    procedure Set_DepthPercent(lcid: Integer; prop: Integer); safecall;
    function Get_Elevation(lcid: Integer): Integer; safecall;
    procedure Set_Elevation(lcid: Integer; prop: Integer); safecall;
    function Get_GapDepth(lcid: Integer): Integer; safecall;
    procedure Set_GapDepth(lcid: Integer; prop: Integer); safecall;
    function Get_HeightPercent(lcid: Integer): Integer; safecall;
    procedure Set_HeightPercent(lcid: Integer; prop: Integer); safecall;
    function Get_Perspective(lcid: Integer): Integer; safecall;
    procedure Set_Perspective(lcid: Integer; prop: Integer); safecall;
    function Get_RightAngleAxes(lcid: Integer): OleVariant; safecall;
    procedure Set_RightAngleAxes(lcid: Integer; prop: OleVariant); safecall;
    function Get_Rotation(lcid: Integer): OleVariant; safecall;
    procedure Set_Rotation(lcid: Integer; prop: OleVariant); safecall;
    function Get_DisplayBlanksAs(lcid: Integer): XlDisplayBlanksAs; safecall;
    procedure Set_DisplayBlanksAs(lcid: Integer; prop: XlDisplayBlanksAs); safecall;
    function Get_ChartGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function SeriesCollection(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Get_SubType(lcid: Integer): Integer; safecall;
    procedure Set_SubType(lcid: Integer; prop: Integer); safecall;
    function Get_type_(lcid: Integer): Integer; safecall;
    procedure Set_type_(lcid: Integer; prop: Integer); safecall;
    function Get_Corners(lcid: Integer): Corners; safecall;
    procedure ApplyDataLabels(Type_: XlDataLabelsType; LegendKey: OleVariant; AutoText: OleVariant; 
                              HasLeaderLines: OleVariant; ShowSeriesName: OleVariant; 
                              ShowCategoryName: OleVariant; ShowValue: OleVariant; 
                              ShowPercentage: OleVariant; ShowBubbleSize: OleVariant; 
                              Separator: OleVariant; lcid: Integer); safecall;
    function Get_ChartType: XlChartType; safecall;
    procedure Set_ChartType(prop: XlChartType); safecall;
    function Get_HasDataTable: WordBool; safecall;
    procedure Set_HasDataTable(prop: WordBool); safecall;
    procedure ApplyCustomType(ChartType: XlChartType; TypeName: OleVariant); safecall;
    procedure GetChartElement(x: Integer; y: Integer; out ElementID: Integer; out Arg1: Integer; 
                              out Arg2: Integer); safecall;
    procedure SetSourceData(const Source: WideString; PlotBy: OleVariant); safecall;
    function Get_PlotBy: XlRowCol; safecall;
    procedure Set_PlotBy(prop: XlRowCol); safecall;
    function Get_HasLegend(lcid: Integer): WordBool; safecall;
    procedure Set_HasLegend(lcid: Integer; prop: WordBool); safecall;
    function Get_Legend(lcid: Integer): Legend; safecall;
    function Axes(Type_: OleVariant; AxisGroup: XlAxisGroup; lcid: Integer): IDispatch; safecall;
    function Get_HasAxis(Index1: OleVariant; Index2: OleVariant; lcid: Integer): OleVariant; safecall;
    procedure Set_HasAxis(Index1: OleVariant; Index2: OleVariant; lcid: Integer; prop: OleVariant); safecall;
    function Get_Walls(lcid: Integer): Walls; safecall;
    function Get_Floor(lcid: Integer): Floor; safecall;
    function Get_PlotArea(lcid: Integer): PlotArea; safecall;
    function Get_PlotVisibleOnly(lcid: Integer): WordBool; safecall;
    procedure Set_PlotVisibleOnly(lcid: Integer; prop: WordBool); safecall;
    function Get_ChartArea(lcid: Integer): ChartArea; safecall;
    procedure AutoFormat(Gallery: Integer; Format: OleVariant); safecall;
    function Get_AutoScaling(lcid: Integer): WordBool; safecall;
    procedure Set_AutoScaling(lcid: Integer; prop: WordBool); safecall;
    procedure SetBackgroundPicture(const FileName: WideString); safecall;
    procedure ChartWizard(Source: OleVariant; Gallery: OleVariant; Format: OleVariant; 
                          PlotBy: OleVariant; CategoryLabels: OleVariant; SeriesLabels: OleVariant; 
                          HasLegend: OleVariant; Title: OleVariant; CategoryTitle: OleVariant; 
                          ValueTitle: OleVariant; ExtraTitle: OleVariant; lcid: Integer); safecall;
    procedure CopyPicture(Appearance: XlPictureAppearance; Format: XlCopyPictureFormat; 
                          Size: XlPictureAppearance; lcid: Integer); safecall;
    function Get_DataTable: DataTable; safecall;
    procedure Paste(Type_: OleVariant; lcid: Integer); safecall;
    function Get_BarShape: XlBarShape; safecall;
    procedure Set_BarShape(prop: XlBarShape); safecall;
    function Export(const FileName: WideString; FilterName: OleVariant; Interactive: OleVariant): WordBool; safecall;
    procedure SetDefaultChart(Name: OleVariant); safecall;
    procedure ApplyChartTemplate(const FileName: WideString); safecall;
    procedure SaveChartTemplate(const FileName: WideString); safecall;
    function Get_SideWall: Walls; safecall;
    function Get_BackWall: Walls; safecall;
    function Get_ChartStyle: OleVariant; safecall;
    procedure Set_ChartStyle(prop: OleVariant); safecall;
    procedure ClearToMatchStyle; safecall;
    function Get_PivotLayout: IDispatch; safecall;
    function Get_HasPivotFields: WordBool; safecall;
    procedure Set_HasPivotFields(prop: WordBool); safecall;
    function Get_ShowDataLabelsOverMaximum: WordBool; safecall;
    procedure Set_ShowDataLabelsOverMaximum(prop: WordBool); safecall;
    procedure ApplyLayout(Layout: Integer; ChartType: OleVariant); safecall;
    procedure Refresh; safecall;
    procedure SetElement(Element: MsoChartElementType); safecall;
    function Get_ChartData: ChartData; safecall;
    function Get_Shapes: IDispatch; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Area3DGroup(lcid: Integer): ChartGroup; safecall;
    function AreaGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Get_Bar3DGroup(lcid: Integer): ChartGroup; safecall;
    function BarGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Get_Column3DGroup(lcid: Integer): ChartGroup; safecall;
    function ColumnGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Get_Line3DGroup(lcid: Integer): ChartGroup; safecall;
    function LineGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Get_Pie3DGroup(lcid: Integer): ChartGroup; safecall;
    function PieGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function DoughnutGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function RadarGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Get_SurfaceGroup(lcid: Integer): ChartGroup; safecall;
    function XYGroups(Index: OleVariant; lcid: Integer): IDispatch; safecall;
    function Delete(lcid: Integer): OleVariant; safecall;
    procedure Copy(Before: OleVariant; After: OleVariant; lcid: Integer); safecall;
    function Select(Replace: OleVariant; lcid: Integer): OleVariant; safecall;
    function Get_ShowReportFilterFieldButtons: WordBool; safecall;
    procedure Set_ShowReportFilterFieldButtons(prop: WordBool); safecall;
    function Get_ShowLegendFieldButtons: WordBool; safecall;
    procedure Set_ShowLegendFieldButtons(prop: WordBool); safecall;
    function Get_ShowAxisFieldButtons: WordBool; safecall;
    procedure Set_ShowAxisFieldButtons(prop: WordBool); safecall;
    function Get_ShowValueFieldButtons: WordBool; safecall;
    procedure Set_ShowValueFieldButtons(prop: WordBool); safecall;
    function Get_ShowAllFieldButtons: WordBool; safecall;
    procedure Set_ShowAllFieldButtons(prop: WordBool); safecall;
    property Parent: IDispatch read Get_Parent;
    property HasTitle[lcid: Integer]: WordBool read Get_HasTitle write Set_HasTitle;
    property ChartTitle[lcid: Integer]: ChartTitle read Get_ChartTitle;
    property DepthPercent[lcid: Integer]: Integer read Get_DepthPercent write Set_DepthPercent;
    property Elevation[lcid: Integer]: Integer read Get_Elevation write Set_Elevation;
    property GapDepth[lcid: Integer]: Integer read Get_GapDepth write Set_GapDepth;
    property HeightPercent[lcid: Integer]: Integer read Get_HeightPercent write Set_HeightPercent;
    property Perspective[lcid: Integer]: Integer read Get_Perspective write Set_Perspective;
    property RightAngleAxes[lcid: Integer]: OleVariant read Get_RightAngleAxes write Set_RightAngleAxes;
    property Rotation[lcid: Integer]: OleVariant read Get_Rotation write Set_Rotation;
    property DisplayBlanksAs[lcid: Integer]: XlDisplayBlanksAs read Get_DisplayBlanksAs write Set_DisplayBlanksAs;
    property ChartGroups[Index: OleVariant; lcid: Integer]: IDispatch read Get_ChartGroups;
    property SubType[lcid: Integer]: Integer read Get_SubType write Set_SubType;
    property type_[lcid: Integer]: Integer read Get_type_ write Set_type_;
    property Corners[lcid: Integer]: Corners read Get_Corners;
    property ChartType: XlChartType read Get_ChartType write Set_ChartType;
    property HasDataTable: WordBool read Get_HasDataTable write Set_HasDataTable;
    property PlotBy: XlRowCol read Get_PlotBy write Set_PlotBy;
    property HasLegend[lcid: Integer]: WordBool read Get_HasLegend write Set_HasLegend;
    property Legend[lcid: Integer]: Legend read Get_Legend;
    property HasAxis[Index1: OleVariant; Index2: OleVariant; lcid: Integer]: OleVariant read Get_HasAxis write Set_HasAxis;
    property Walls[lcid: Integer]: Walls read Get_Walls;
    property Floor[lcid: Integer]: Floor read Get_Floor;
    property PlotArea[lcid: Integer]: PlotArea read Get_PlotArea;
    property PlotVisibleOnly[lcid: Integer]: WordBool read Get_PlotVisibleOnly write Set_PlotVisibleOnly;
    property ChartArea[lcid: Integer]: ChartArea read Get_ChartArea;
    property AutoScaling[lcid: Integer]: WordBool read Get_AutoScaling write Set_AutoScaling;
    property DataTable: DataTable read Get_DataTable;
    property BarShape: XlBarShape read Get_BarShape write Set_BarShape;
    property SideWall: Walls read Get_SideWall;
    property BackWall: Walls read Get_BackWall;
    property ChartStyle: OleVariant read Get_ChartStyle write Set_ChartStyle;
    property PivotLayout: IDispatch read Get_PivotLayout;
    property HasPivotFields: WordBool read Get_HasPivotFields write Set_HasPivotFields;
    property ShowDataLabelsOverMaximum: WordBool read Get_ShowDataLabelsOverMaximum write Set_ShowDataLabelsOverMaximum;
    property ChartData: ChartData read Get_ChartData;
    property Shapes: IDispatch read Get_Shapes;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Area3DGroup[lcid: Integer]: ChartGroup read Get_Area3DGroup;
    property Bar3DGroup[lcid: Integer]: ChartGroup read Get_Bar3DGroup;
    property Column3DGroup[lcid: Integer]: ChartGroup read Get_Column3DGroup;
    property Line3DGroup[lcid: Integer]: ChartGroup read Get_Line3DGroup;
    property Pie3DGroup[lcid: Integer]: ChartGroup read Get_Pie3DGroup;
    property SurfaceGroup[lcid: Integer]: ChartGroup read Get_SurfaceGroup;
    property ShowReportFilterFieldButtons: WordBool read Get_ShowReportFilterFieldButtons write Set_ShowReportFilterFieldButtons;
    property ShowLegendFieldButtons: WordBool read Get_ShowLegendFieldButtons write Set_ShowLegendFieldButtons;
    property ShowAxisFieldButtons: WordBool read Get_ShowAxisFieldButtons write Set_ShowAxisFieldButtons;
    property ShowValueFieldButtons: WordBool read Get_ShowValueFieldButtons write Set_ShowValueFieldButtons;
    property ShowAllFieldButtons: WordBool read Get_ShowAllFieldButtons write Set_ShowAllFieldButtons;
  end;

// *********************************************************************//
// DispIntf:  ChartDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6FFA84BB-A350-4442-BB53-A43653459A84}
// *********************************************************************//
  ChartDisp = dispinterface
    ['{6FFA84BB-A350-4442-BB53-A43653459A84}']
    property Parent: IDispatch readonly dispid 150;
    property HasTitle[lcid: Integer]: WordBool dispid 1610743809;
    property ChartTitle[lcid: Integer]: ChartTitle readonly dispid 1610743811;
    property DepthPercent[lcid: Integer]: Integer dispid 1610743812;
    property Elevation[lcid: Integer]: Integer dispid 1610743814;
    property GapDepth[lcid: Integer]: Integer dispid 1610743816;
    property HeightPercent[lcid: Integer]: Integer dispid 1610743818;
    property Perspective[lcid: Integer]: Integer dispid 1610743820;
    property RightAngleAxes[lcid: Integer]: OleVariant dispid 1610743822;
    property Rotation[lcid: Integer]: OleVariant dispid 1610743824;
    property DisplayBlanksAs[lcid: Integer]: XlDisplayBlanksAs dispid 1610743826;
    property ChartGroups[Index: OleVariant; lcid: Integer]: IDispatch readonly dispid 8;
    function SeriesCollection(Index: OleVariant; lcid: Integer): IDispatch; dispid 68;
    property SubType[lcid: Integer]: Integer dispid 109;
    property type_[lcid: Integer]: Integer dispid 108;
    property Corners[lcid: Integer]: Corners readonly dispid 79;
    procedure ApplyDataLabels(Type_: XlDataLabelsType; LegendKey: OleVariant; AutoText: OleVariant; 
                              HasLeaderLines: OleVariant; ShowSeriesName: OleVariant; 
                              ShowCategoryName: OleVariant; ShowValue: OleVariant; 
                              ShowPercentage: OleVariant; ShowBubbleSize: OleVariant; 
                              Separator: OleVariant; lcid: Integer); dispid 1922;
    property ChartType: XlChartType dispid 1400;
    property HasDataTable: WordBool dispid 1396;
    procedure ApplyCustomType(ChartType: XlChartType; TypeName: OleVariant); dispid 1401;
    procedure GetChartElement(x: Integer; y: Integer; out ElementID: Integer; out Arg1: Integer; 
                              out Arg2: Integer); dispid 1409;
    procedure SetSourceData(const Source: WideString; PlotBy: OleVariant); dispid 1413;
    property PlotBy: XlRowCol dispid 202;
    property HasLegend[lcid: Integer]: WordBool dispid 53;
    property Legend[lcid: Integer]: Legend readonly dispid 84;
    function Axes(Type_: OleVariant; AxisGroup: XlAxisGroup; lcid: Integer): IDispatch; dispid 1610743861;
    property HasAxis[Index1: OleVariant; Index2: OleVariant; lcid: Integer]: OleVariant dispid 1610743862;
    property Walls[lcid: Integer]: Walls readonly dispid 1610743864;
    property Floor[lcid: Integer]: Floor readonly dispid 1610743865;
    property PlotArea[lcid: Integer]: PlotArea readonly dispid 1610743866;
    property PlotVisibleOnly[lcid: Integer]: WordBool dispid 92;
    property ChartArea[lcid: Integer]: ChartArea readonly dispid 1610743869;
    procedure AutoFormat(Gallery: Integer; Format: OleVariant); dispid 1610743870;
    property AutoScaling[lcid: Integer]: WordBool dispid 1610743871;
    procedure SetBackgroundPicture(const FileName: WideString); dispid 1610743873;
    procedure ChartWizard(Source: OleVariant; Gallery: OleVariant; Format: OleVariant; 
                          PlotBy: OleVariant; CategoryLabels: OleVariant; SeriesLabels: OleVariant; 
                          HasLegend: OleVariant; Title: OleVariant; CategoryTitle: OleVariant; 
                          ValueTitle: OleVariant; ExtraTitle: OleVariant; lcid: Integer); dispid 1610743874;
    procedure CopyPicture(Appearance: XlPictureAppearance; Format: XlCopyPictureFormat; 
                          Size: XlPictureAppearance; lcid: Integer); dispid 1610743875;
    property DataTable: DataTable readonly dispid 1610743876;
    procedure Paste(Type_: OleVariant; lcid: Integer); dispid 1610743879;
    property BarShape: XlBarShape dispid 1610743880;
    function Export(const FileName: WideString; FilterName: OleVariant; Interactive: OleVariant): WordBool; dispid 1610743882;
    procedure SetDefaultChart(Name: OleVariant); dispid 1610743883;
    procedure ApplyChartTemplate(const FileName: WideString); dispid 1610743884;
    procedure SaveChartTemplate(const FileName: WideString); dispid 1610743885;
    property SideWall: Walls readonly dispid 2377;
    property BackWall: Walls readonly dispid 2378;
    property ChartStyle: OleVariant dispid 2465;
    procedure ClearToMatchStyle; dispid 2466;
    property PivotLayout: IDispatch readonly dispid 1814;
    property HasPivotFields: WordBool dispid 1815;
    property ShowDataLabelsOverMaximum: WordBool dispid 1610743895;
    procedure ApplyLayout(Layout: Integer; ChartType: OleVariant); dispid 2468;
    procedure Refresh; dispid 1610743899;
    procedure SetElement(Element: MsoChartElementType); dispid 1610743900;
    property ChartData: ChartData readonly dispid 1610743901;
    property Shapes: IDispatch readonly dispid 1610743903;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Area3DGroup[lcid: Integer]: ChartGroup readonly dispid 17;
    function AreaGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 9;
    property Bar3DGroup[lcid: Integer]: ChartGroup readonly dispid 18;
    function BarGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 10;
    property Column3DGroup[lcid: Integer]: ChartGroup readonly dispid 19;
    function ColumnGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 11;
    property Line3DGroup[lcid: Integer]: ChartGroup readonly dispid 20;
    function LineGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 12;
    property Pie3DGroup[lcid: Integer]: ChartGroup readonly dispid 21;
    function PieGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 13;
    function DoughnutGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 14;
    function RadarGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 15;
    property SurfaceGroup[lcid: Integer]: ChartGroup readonly dispid 22;
    function XYGroups(Index: OleVariant; lcid: Integer): IDispatch; dispid 16;
    function Delete(lcid: Integer): OleVariant; dispid 117;
    procedure Copy(Before: OleVariant; After: OleVariant; lcid: Integer); dispid 551;
    function Select(Replace: OleVariant; lcid: Integer): OleVariant; dispid 235;
    property ShowReportFilterFieldButtons: WordBool dispid 2844;
    property ShowLegendFieldButtons: WordBool dispid 2845;
    property ShowAxisFieldButtons: WordBool dispid 2846;
    property ShowValueFieldButtons: WordBool dispid 2847;
    property ShowAllFieldButtons: WordBool dispid 2848;
  end;

// *********************************************************************//
// Interface: Corners
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AE6D45E5-981E-4547-8752-674BB55420A5}
// *********************************************************************//
  Corners = interface(IDispatch)
    ['{AE6D45E5-981E-4547-8752-674BB55420A5}']
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  CornersDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AE6D45E5-981E-4547-8752-674BB55420A5}
// *********************************************************************//
  CornersDisp = dispinterface
    ['{AE6D45E5-981E-4547-8752-674BB55420A5}']
    property Parent: IDispatch readonly dispid 150;
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: Legend
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B3A1E8C6-E1CE-4A46-8D12-E017157B03D7}
// *********************************************************************//
  Legend = interface(IDispatch)
    ['{B3A1E8C6-E1CE-4A46-8D12-E017157B03D7}']
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Font: ChartFont; safecall;
    function LegendEntries(Index: OleVariant): IDispatch; safecall;
    function Get_Position: XlLegendPosition; safecall;
    procedure Set_Position(prop: XlLegendPosition); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Clear: OleVariant; safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(prop: Double); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(prop: Double); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_IncludeInLayout: WordBool; safecall;
    procedure Set_IncludeInLayout(prop: WordBool); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Border: ChartBorder read Get_Border;
    property Font: ChartFont read Get_Font;
    property Position: XlLegendPosition read Get_Position write Set_Position;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Height: Double read Get_Height write Set_Height;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Left: Double read Get_Left write Set_Left;
    property Top: Double read Get_Top write Set_Top;
    property Width: Double read Get_Width write Set_Width;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property IncludeInLayout: WordBool read Get_IncludeInLayout write Set_IncludeInLayout;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  LegendDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B3A1E8C6-E1CE-4A46-8D12-E017157B03D7}
// *********************************************************************//
  LegendDisp = dispinterface
    ['{B3A1E8C6-E1CE-4A46-8D12-E017157B03D7}']
    property Parent: IDispatch readonly dispid 150;
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Font: ChartFont readonly dispid 146;
    function LegendEntries(Index: OleVariant): IDispatch; dispid 173;
    property Position: XlLegendPosition dispid 133;
    property Shadow: WordBool dispid 103;
    function Clear: OleVariant; dispid 111;
    property Height: Double dispid 123;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Left: Double dispid 127;
    property Top: Double dispid 126;
    property Width: Double dispid 122;
    property AutoScaleFont: OleVariant dispid 1525;
    property IncludeInLayout: WordBool dispid 2418;
    property Format: ChartFormat readonly dispid 1610743834;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: ChartBorder
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AB0D33A3-C9EA-485B-9443-4C1BB3656CEA}
// *********************************************************************//
  ChartBorder = interface(IDispatch)
    ['{AB0D33A3-C9EA-485B-9443-4C1BB3656CEA}']
    function Get_Color: OleVariant; safecall;
    procedure Set_Color(prop: OleVariant); safecall;
    function Get_ColorIndex: OleVariant; safecall;
    procedure Set_ColorIndex(prop: OleVariant); safecall;
    function Get_LineStyle: OleVariant; safecall;
    procedure Set_LineStyle(prop: OleVariant); safecall;
    function Get_Weight: OleVariant; safecall;
    procedure Set_Weight(prop: OleVariant); safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property Color: OleVariant read Get_Color write Set_Color;
    property ColorIndex: OleVariant read Get_ColorIndex write Set_ColorIndex;
    property LineStyle: OleVariant read Get_LineStyle write Set_LineStyle;
    property Weight: OleVariant read Get_Weight write Set_Weight;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ChartBorderDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {AB0D33A3-C9EA-485B-9443-4C1BB3656CEA}
// *********************************************************************//
  ChartBorderDisp = dispinterface
    ['{AB0D33A3-C9EA-485B-9443-4C1BB3656CEA}']
    property Color: OleVariant dispid 1610743808;
    property ColorIndex: OleVariant dispid 1610743810;
    property LineStyle: OleVariant dispid 1610743812;
    property Weight: OleVariant dispid 1610743814;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: Walls
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {A2E94180-7564-4D97-806B-BBC0D0A1350C}
// *********************************************************************//
  Walls = interface(IDispatch)
    ['{A2E94180-7564-4D97-806B-BBC0D0A1350C}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_PictureType: OleVariant; safecall;
    procedure Set_PictureType(prop: OleVariant); safecall;
    procedure Paste; safecall;
    function Get_PictureUnit: OleVariant; safecall;
    procedure Set_PictureUnit(prop: OleVariant); safecall;
    function Get_Thickness: Integer; safecall;
    procedure Set_Thickness(prop: Integer); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property PictureType: OleVariant read Get_PictureType write Set_PictureType;
    property PictureUnit: OleVariant read Get_PictureUnit write Set_PictureUnit;
    property Thickness: Integer read Get_Thickness write Set_Thickness;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  WallsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {A2E94180-7564-4D97-806B-BBC0D0A1350C}
// *********************************************************************//
  WallsDisp = dispinterface
    ['{A2E94180-7564-4D97-806B-BBC0D0A1350C}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property PictureType: OleVariant dispid 161;
    procedure Paste; dispid 211;
    property PictureUnit: OleVariant dispid 162;
    property Thickness: Integer dispid 2419;
    property Format: ChartFormat readonly dispid 1610743822;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: Floor
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7E64D2BE-2818-48CB-8F8A-CC7B61D9E860}
// *********************************************************************//
  Floor = interface(IDispatch)
    ['{7E64D2BE-2818-48CB-8F8A-CC7B61D9E860}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_PictureType: OleVariant; safecall;
    procedure Set_PictureType(prop: OleVariant); safecall;
    procedure Paste; safecall;
    function Get_Thickness: Integer; safecall;
    procedure Set_Thickness(prop: Integer); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property PictureType: OleVariant read Get_PictureType write Set_PictureType;
    property Thickness: Integer read Get_Thickness write Set_Thickness;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  FloorDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7E64D2BE-2818-48CB-8F8A-CC7B61D9E860}
// *********************************************************************//
  FloorDisp = dispinterface
    ['{7E64D2BE-2818-48CB-8F8A-CC7B61D9E860}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property PictureType: OleVariant dispid 161;
    procedure Paste; dispid 211;
    property Thickness: Integer dispid 2419;
    property Format: ChartFormat readonly dispid 1610743820;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: PlotArea
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {56AFD330-440C-4F4C-A39C-ED306D084D5F}
// *********************************************************************//
  PlotArea = interface(IDispatch)
    ['{56AFD330-440C-4F4C-A39C-ED306D084D5F}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(prop: Double); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(prop: Double); safecall;
    function Get_InsideLeft: Double; safecall;
    procedure Set_InsideLeft(prop: Double); safecall;
    function Get_InsideTop: Double; safecall;
    procedure Set_InsideTop(prop: Double); safecall;
    function Get_InsideWidth: Double; safecall;
    procedure Set_InsideWidth(prop: Double); safecall;
    function Get_InsideHeight: Double; safecall;
    procedure Set_InsideHeight(prop: Double); safecall;
    function Get_Position: XlChartElementPosition; safecall;
    procedure Set_Position(prop: XlChartElementPosition); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Height: Double read Get_Height write Set_Height;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Left: Double read Get_Left write Set_Left;
    property Top: Double read Get_Top write Set_Top;
    property Width: Double read Get_Width write Set_Width;
    property InsideLeft: Double read Get_InsideLeft write Set_InsideLeft;
    property InsideTop: Double read Get_InsideTop write Set_InsideTop;
    property InsideWidth: Double read Get_InsideWidth write Set_InsideWidth;
    property InsideHeight: Double read Get_InsideHeight write Set_InsideHeight;
    property Position: XlChartElementPosition read Get_Position write Set_Position;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  PlotAreaDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {56AFD330-440C-4F4C-A39C-ED306D084D5F}
// *********************************************************************//
  PlotAreaDisp = dispinterface
    ['{56AFD330-440C-4F4C-A39C-ED306D084D5F}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    property Height: Double dispid 123;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Left: Double dispid 127;
    property Top: Double dispid 126;
    property Width: Double dispid 122;
    property InsideLeft: Double dispid 1667;
    property InsideTop: Double dispid 1668;
    property InsideWidth: Double dispid 1669;
    property InsideHeight: Double dispid 1670;
    property Position: XlChartElementPosition dispid 1671;
    property Format: ChartFormat readonly dispid 1610743833;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: ChartArea
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C75AD98A-74E9-49FE-8BF1-544839CC08A5}
// *********************************************************************//
  ChartArea = interface(IDispatch)
    ['{C75AD98A-74E9-49FE-8BF1-544839CC08A5}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function Clear: OleVariant; safecall;
    function ClearContents: OleVariant; safecall;
    function Copy: OleVariant; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function ClearFormats: OleVariant; safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(prop: Double); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(prop: Double); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Font: ChartFont read Get_Font;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Height: Double read Get_Height write Set_Height;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Left: Double read Get_Left write Set_Left;
    property Top: Double read Get_Top write Set_Top;
    property Width: Double read Get_Width write Set_Width;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  ChartAreaDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C75AD98A-74E9-49FE-8BF1-544839CC08A5}
// *********************************************************************//
  ChartAreaDisp = dispinterface
    ['{C75AD98A-74E9-49FE-8BF1-544839CC08A5}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function Clear: OleVariant; dispid 111;
    function ClearContents: OleVariant; dispid 113;
    function Copy: OleVariant; dispid 551;
    property Font: ChartFont readonly dispid 146;
    property Shadow: WordBool dispid 103;
    function ClearFormats: OleVariant; dispid 112;
    property Height: Double dispid 123;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Left: Double dispid 127;
    property Top: Double dispid 126;
    property Width: Double dispid 122;
    property AutoScaleFont: OleVariant dispid 1525;
    property Format: ChartFormat readonly dispid 1610743831;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: SeriesLines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5D7F6C15-36CE-44CC-9692-5A1F8B8C906D}
// *********************************************************************//
  SeriesLines = interface(IDispatch)
    ['{5D7F6C15-36CE-44CC-9692-5A1F8B8C906D}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  SeriesLinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {5D7F6C15-36CE-44CC-9692-5A1F8B8C906D}
// *********************************************************************//
  SeriesLinesDisp = dispinterface
    ['{5D7F6C15-36CE-44CC-9692-5A1F8B8C906D}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Format: ChartFormat readonly dispid 1610743813;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: LeaderLines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {36162C62-B59A-4278-AF3D-F2AC1EB999D9}
// *********************************************************************//
  LeaderLines = interface(IDispatch)
    ['{36162C62-B59A-4278-AF3D-F2AC1EB999D9}']
    procedure Select; safecall;
    function Get_Border: ChartBorder; safecall;
    procedure Delete; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property Border: ChartBorder read Get_Border;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  LeaderLinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {36162C62-B59A-4278-AF3D-F2AC1EB999D9}
// *********************************************************************//
  LeaderLinesDisp = dispinterface
    ['{36162C62-B59A-4278-AF3D-F2AC1EB999D9}']
    procedure Select; dispid 235;
    property Border: ChartBorder readonly dispid 128;
    procedure Delete; dispid 117;
    property Format: ChartFormat readonly dispid 1610743811;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: Gridlines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FC9090AF-0DDB-4EC1-86E8-8751F2199F2C}
// *********************************************************************//
  Gridlines = interface(IDispatch)
    ['{FC9090AF-0DDB-4EC1-86E8-8751F2199F2C}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  GridlinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FC9090AF-0DDB-4EC1-86E8-8751F2199F2C}
// *********************************************************************//
  GridlinesDisp = dispinterface
    ['{FC9090AF-0DDB-4EC1-86E8-8751F2199F2C}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Format: ChartFormat readonly dispid 1610743813;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: UpBars
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {86905AC9-33F3-4A88-96C8-B289B0390BCA}
// *********************************************************************//
  UpBars = interface(IDispatch)
    ['{86905AC9-33F3-4A88-96C8-B289B0390BCA}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  UpBarsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {86905AC9-33F3-4A88-96C8-B289B0390BCA}
// *********************************************************************//
  UpBarsDisp = dispinterface
    ['{86905AC9-33F3-4A88-96C8-B289B0390BCA}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Format: ChartFormat readonly dispid 1610743815;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: DownBars
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {84A6A663-AEF4-4FCD-83FD-9BB707F157CA}
// *********************************************************************//
  DownBars = interface(IDispatch)
    ['{84A6A663-AEF4-4FCD-83FD-9BB707F157CA}']
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  DownBarsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {84A6A663-AEF4-4FCD-83FD-9BB707F157CA}
// *********************************************************************//
  DownBarsDisp = dispinterface
    ['{84A6A663-AEF4-4FCD-83FD-9BB707F157CA}']
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Format: ChartFormat readonly dispid 1610743815;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: Interior
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B184502B-587A-4C6A-8DC4-ECE4354883C6}
// *********************************************************************//
  Interior = interface(IDispatch)
    ['{B184502B-587A-4C6A-8DC4-ECE4354883C6}']
    function Get_Color: OleVariant; safecall;
    procedure Set_Color(prop: OleVariant); safecall;
    function Get_ColorIndex: OleVariant; safecall;
    procedure Set_ColorIndex(prop: OleVariant); safecall;
    function Get_InvertIfNegative: OleVariant; safecall;
    procedure Set_InvertIfNegative(prop: OleVariant); safecall;
    function Get_Pattern: OleVariant; safecall;
    procedure Set_Pattern(prop: OleVariant); safecall;
    function Get_PatternColor: OleVariant; safecall;
    procedure Set_PatternColor(prop: OleVariant); safecall;
    function Get_PatternColorIndex: OleVariant; safecall;
    procedure Set_PatternColorIndex(prop: OleVariant); safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property Color: OleVariant read Get_Color write Set_Color;
    property ColorIndex: OleVariant read Get_ColorIndex write Set_ColorIndex;
    property InvertIfNegative: OleVariant read Get_InvertIfNegative write Set_InvertIfNegative;
    property Pattern: OleVariant read Get_Pattern write Set_Pattern;
    property PatternColor: OleVariant read Get_PatternColor write Set_PatternColor;
    property PatternColorIndex: OleVariant read Get_PatternColorIndex write Set_PatternColorIndex;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  InteriorDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B184502B-587A-4C6A-8DC4-ECE4354883C6}
// *********************************************************************//
  InteriorDisp = dispinterface
    ['{B184502B-587A-4C6A-8DC4-ECE4354883C6}']
    property Color: OleVariant dispid 1610743808;
    property ColorIndex: OleVariant dispid 1610743810;
    property InvertIfNegative: OleVariant dispid 1610743812;
    property Pattern: OleVariant dispid 1610743814;
    property PatternColor: OleVariant dispid 1610743816;
    property PatternColorIndex: OleVariant dispid 1610743818;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: ChartFillFormat
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F152D349-7D20-4C01-A42B-2D6DE4F3891C}
// *********************************************************************//
  ChartFillFormat = interface(IDispatch)
    ['{F152D349-7D20-4C01-A42B-2D6DE4F3891C}']
    procedure OneColorGradient(Style: MsoGradientStyle; Variant: Integer; Degree: Single); safecall;
    procedure TwoColorGradient(Style: MsoGradientStyle; Variant: Integer); safecall;
    procedure PresetTextured(PresetTexture: MsoPresetTexture); safecall;
    procedure Solid; safecall;
    procedure Patterned(Pattern: MsoPatternType); safecall;
    procedure UserPicture(PictureFile: OleVariant; PictureFormat: OleVariant; 
                          PictureStackUnit: OleVariant; PicturePlacement: OleVariant); safecall;
    procedure UserTextured(const TextureFile: WideString); safecall;
    procedure PresetGradient(Style: MsoGradientStyle; Variant: Integer; 
                             PresetGradientType: MsoPresetGradientType); safecall;
    function Get_BackColor: ChartColorFormat; safecall;
    function Get_ForeColor: ChartColorFormat; safecall;
    function Get_GradientColorType: MsoGradientColorType; safecall;
    function Get_GradientDegree: Single; safecall;
    function Get_GradientStyle: MsoGradientStyle; safecall;
    function Get_GradientVariant: Integer; safecall;
    function Get_Pattern: MsoPatternType; safecall;
    function Get_PresetGradientType: MsoPresetGradientType; safecall;
    function Get_PresetTexture: MsoPresetTexture; safecall;
    function Get_TextureName: WideString; safecall;
    function Get_TextureType: MsoTextureType; safecall;
    function Get_type_: MsoFillType; safecall;
    function Get_Visible: MsoTriState; safecall;
    procedure Set_Visible(prop: MsoTriState); safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property BackColor: ChartColorFormat read Get_BackColor;
    property ForeColor: ChartColorFormat read Get_ForeColor;
    property GradientColorType: MsoGradientColorType read Get_GradientColorType;
    property GradientDegree: Single read Get_GradientDegree;
    property GradientStyle: MsoGradientStyle read Get_GradientStyle;
    property GradientVariant: Integer read Get_GradientVariant;
    property Pattern: MsoPatternType read Get_Pattern;
    property PresetGradientType: MsoPresetGradientType read Get_PresetGradientType;
    property PresetTexture: MsoPresetTexture read Get_PresetTexture;
    property TextureName: WideString read Get_TextureName;
    property TextureType: MsoTextureType read Get_TextureType;
    property type_: MsoFillType read Get_type_;
    property Visible: MsoTriState read Get_Visible write Set_Visible;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ChartFillFormatDisp
// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F152D349-7D20-4C01-A42B-2D6DE4F3891C}
// *********************************************************************//
  ChartFillFormatDisp = dispinterface
    ['{F152D349-7D20-4C01-A42B-2D6DE4F3891C}']
    procedure OneColorGradient(Style: MsoGradientStyle; Variant: Integer; Degree: Single); dispid 1610743808;
    procedure TwoColorGradient(Style: MsoGradientStyle; Variant: Integer); dispid 1610743809;
    procedure PresetTextured(PresetTexture: MsoPresetTexture); dispid 1610743810;
    procedure Solid; dispid 1610743811;
    procedure Patterned(Pattern: MsoPatternType); dispid 1610743812;
    procedure UserPicture(PictureFile: OleVariant; PictureFormat: OleVariant; 
                          PictureStackUnit: OleVariant; PicturePlacement: OleVariant); dispid 1610743813;
    procedure UserTextured(const TextureFile: WideString); dispid 1610743814;
    procedure PresetGradient(Style: MsoGradientStyle; Variant: Integer; 
                             PresetGradientType: MsoPresetGradientType); dispid 1610743815;
    property BackColor: ChartColorFormat readonly dispid 1610743816;
    property ForeColor: ChartColorFormat readonly dispid 1610743817;
    property GradientColorType: MsoGradientColorType readonly dispid 1610743818;
    property GradientDegree: Single readonly dispid 1610743819;
    property GradientStyle: MsoGradientStyle readonly dispid 1610743820;
    property GradientVariant: Integer readonly dispid 1610743821;
    property Pattern: MsoPatternType readonly dispid 1610743822;
    property PresetGradientType: MsoPresetGradientType readonly dispid 1610743823;
    property PresetTexture: MsoPresetTexture readonly dispid 1610743824;
    property TextureName: WideString readonly dispid 1610743825;
    property TextureType: MsoTextureType readonly dispid 1610743826;
    property type_: MsoFillType readonly dispid 1610743827;
    property Visible: MsoTriState dispid 1610743828;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: LegendEntries
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B6511068-70BF-4751-A741-55C1D41AD96F}
// *********************************************************************//
  LegendEntries = interface(IDispatch)
    ['{B6511068-70BF-4751-A741-55C1D41AD96F}']
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): LegendEntry; safecall;
    function _NewEnum: IUnknown; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function _Default(Index: OleVariant): LegendEntry; safecall;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  LegendEntriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B6511068-70BF-4751-A741-55C1D41AD96F}
// *********************************************************************//
  LegendEntriesDisp = dispinterface
    ['{B6511068-70BF-4751-A741-55C1D41AD96F}']
    property Parent: IDispatch readonly dispid 150;
    property Count: Integer readonly dispid 118;
    function Item(Index: OleVariant): LegendEntry; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    function _Default(Index: OleVariant): LegendEntry; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: ChartFont
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CDB0FF41-E862-47BB-AE77-3FA7B1AE3189}
// *********************************************************************//
  ChartFont = interface(IDispatch)
    ['{CDB0FF41-E862-47BB-AE77-3FA7B1AE3189}']
    function Get_Background: OleVariant; safecall;
    procedure Set_Background(prop: OleVariant); safecall;
    function Get_Bold: OleVariant; safecall;
    procedure Set_Bold(prop: OleVariant); safecall;
    function Get_Color: OleVariant; safecall;
    procedure Set_Color(prop: OleVariant); safecall;
    function Get_ColorIndex: OleVariant; safecall;
    procedure Set_ColorIndex(prop: OleVariant); safecall;
    function Get_FontStyle: OleVariant; safecall;
    procedure Set_FontStyle(prop: OleVariant); safecall;
    function Get_Italic: OleVariant; safecall;
    procedure Set_Italic(prop: OleVariant); safecall;
    function Get_Name: OleVariant; safecall;
    procedure Set_Name(prop: OleVariant); safecall;
    function Get_OutlineFont: OleVariant; safecall;
    procedure Set_OutlineFont(prop: OleVariant); safecall;
    function Get_Shadow: OleVariant; safecall;
    procedure Set_Shadow(prop: OleVariant); safecall;
    function Get_Size: OleVariant; safecall;
    procedure Set_Size(prop: OleVariant); safecall;
    function Get_StrikeThrough: OleVariant; safecall;
    procedure Set_StrikeThrough(prop: OleVariant); safecall;
    function Get_Subscript: OleVariant; safecall;
    procedure Set_Subscript(prop: OleVariant); safecall;
    function Get_Superscript: OleVariant; safecall;
    procedure Set_Superscript(prop: OleVariant); safecall;
    function Get_Underline: OleVariant; safecall;
    procedure Set_Underline(prop: OleVariant); safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property Background: OleVariant read Get_Background write Set_Background;
    property Bold: OleVariant read Get_Bold write Set_Bold;
    property Color: OleVariant read Get_Color write Set_Color;
    property ColorIndex: OleVariant read Get_ColorIndex write Set_ColorIndex;
    property FontStyle: OleVariant read Get_FontStyle write Set_FontStyle;
    property Italic: OleVariant read Get_Italic write Set_Italic;
    property Name: OleVariant read Get_Name write Set_Name;
    property OutlineFont: OleVariant read Get_OutlineFont write Set_OutlineFont;
    property Shadow: OleVariant read Get_Shadow write Set_Shadow;
    property Size: OleVariant read Get_Size write Set_Size;
    property StrikeThrough: OleVariant read Get_StrikeThrough write Set_StrikeThrough;
    property Subscript: OleVariant read Get_Subscript write Set_Subscript;
    property Superscript: OleVariant read Get_Superscript write Set_Superscript;
    property Underline: OleVariant read Get_Underline write Set_Underline;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ChartFontDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {CDB0FF41-E862-47BB-AE77-3FA7B1AE3189}
// *********************************************************************//
  ChartFontDisp = dispinterface
    ['{CDB0FF41-E862-47BB-AE77-3FA7B1AE3189}']
    property Background: OleVariant dispid 1610743808;
    property Bold: OleVariant dispid 1610743810;
    property Color: OleVariant dispid 1610743812;
    property ColorIndex: OleVariant dispid 1610743814;
    property FontStyle: OleVariant dispid 1610743816;
    property Italic: OleVariant dispid 1610743818;
    property Name: OleVariant dispid 1610743820;
    property OutlineFont: OleVariant dispid 1610743822;
    property Shadow: OleVariant dispid 1610743824;
    property Size: OleVariant dispid 1610743826;
    property StrikeThrough: OleVariant dispid 1610743828;
    property Subscript: OleVariant dispid 1610743830;
    property Superscript: OleVariant dispid 1610743832;
    property Underline: OleVariant dispid 1610743834;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: ChartColorFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DD8F80B8-9B80-4E89-9BEC-F12DF35E43B3}
// *********************************************************************//
  ChartColorFormat = interface(IDispatch)
    ['{DD8F80B8-9B80-4E89-9BEC-F12DF35E43B3}']
    function Get_Parent: IDispatch; safecall;
    function Get_SchemeColor: Integer; safecall;
    procedure Set_SchemeColor(prop: Integer); safecall;
    function Get_RGB: Integer; safecall;
    function Get__Default: Integer; safecall;
    function Get_type_: Integer; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property SchemeColor: Integer read Get_SchemeColor write Set_SchemeColor;
    property RGB: Integer read Get_RGB;
    property _Default: Integer read Get__Default;
    property type_: Integer read Get_type_;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  ChartColorFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DD8F80B8-9B80-4E89-9BEC-F12DF35E43B3}
// *********************************************************************//
  ChartColorFormatDisp = dispinterface
    ['{DD8F80B8-9B80-4E89-9BEC-F12DF35E43B3}']
    property Parent: IDispatch readonly dispid 150;
    property SchemeColor: Integer dispid 1646;
    property RGB: Integer readonly dispid 1055;
    property _Default: Integer readonly dispid 1610743813;
    property type_: Integer readonly dispid 108;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: LegendEntry
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C4A02049-024C-4273-8934-E48CC21479A9}
// *********************************************************************//
  LegendEntry = interface(IDispatch)
    ['{C4A02049-024C-4273-8934-E48CC21479A9}']
    function Get_Parent: IDispatch; safecall;
    function Delete: OleVariant; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_Index: Integer; safecall;
    function Get_LegendKey: LegendKey; safecall;
    function Select: OleVariant; safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Left: Double; safecall;
    function Get_Top: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Height: Double; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Font: ChartFont read Get_Font;
    property Index: Integer read Get_Index;
    property LegendKey: LegendKey read Get_LegendKey;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Left: Double read Get_Left;
    property Top: Double read Get_Top;
    property Width: Double read Get_Width;
    property Height: Double read Get_Height;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  LegendEntryDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C4A02049-024C-4273-8934-E48CC21479A9}
// *********************************************************************//
  LegendEntryDisp = dispinterface
    ['{C4A02049-024C-4273-8934-E48CC21479A9}']
    property Parent: IDispatch readonly dispid 150;
    function Delete: OleVariant; dispid 117;
    property Font: ChartFont readonly dispid 146;
    property Index: Integer readonly dispid 486;
    property LegendKey: LegendKey readonly dispid 174;
    function Select: OleVariant; dispid 235;
    property AutoScaleFont: OleVariant dispid 1525;
    property Left: Double readonly dispid 127;
    property Top: Double readonly dispid 126;
    property Width: Double readonly dispid 122;
    property Height: Double readonly dispid 123;
    property Format: ChartFormat readonly dispid 1610743820;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: LegendKey
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DF076FDE-8781-4051-A5BC-99F6B7DC04D4}
// *********************************************************************//
  LegendKey = interface(IDispatch)
    ['{DF076FDE-8781-4051-A5BC-99F6B7DC04D4}']
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Delete: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_InvertIfNegative: WordBool; safecall;
    procedure Set_InvertIfNegative(prop: WordBool); safecall;
    function Get_MarkerBackgroundColor: Integer; safecall;
    procedure Set_MarkerBackgroundColor(prop: Integer); safecall;
    function Get_MarkerBackgroundColorIndex: XlColorIndex; safecall;
    procedure Set_MarkerBackgroundColorIndex(prop: XlColorIndex); safecall;
    function Get_MarkerForegroundColor: Integer; safecall;
    procedure Set_MarkerForegroundColor(prop: Integer); safecall;
    function Get_MarkerForegroundColorIndex: XlColorIndex; safecall;
    procedure Set_MarkerForegroundColorIndex(prop: XlColorIndex); safecall;
    function Get_MarkerSize: Integer; safecall;
    procedure Set_MarkerSize(prop: Integer); safecall;
    function Get_MarkerStyle: XlMarkerStyle; safecall;
    procedure Set_MarkerStyle(prop: XlMarkerStyle); safecall;
    function Get_PictureType: Integer; safecall;
    procedure Set_PictureType(prop: Integer); safecall;
    function Get_PictureUnit: Double; safecall;
    procedure Set_PictureUnit(prop: Double); safecall;
    function Select: OleVariant; safecall;
    function Get_Smooth: WordBool; safecall;
    procedure Set_Smooth(prop: WordBool); safecall;
    function Get_Left: Double; safecall;
    function Get_Top: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Height: Double; safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_PictureUnit2: Double; safecall;
    procedure Set_PictureUnit2(prop: Double); safecall;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property InvertIfNegative: WordBool read Get_InvertIfNegative write Set_InvertIfNegative;
    property MarkerBackgroundColor: Integer read Get_MarkerBackgroundColor write Set_MarkerBackgroundColor;
    property MarkerBackgroundColorIndex: XlColorIndex read Get_MarkerBackgroundColorIndex write Set_MarkerBackgroundColorIndex;
    property MarkerForegroundColor: Integer read Get_MarkerForegroundColor write Set_MarkerForegroundColor;
    property MarkerForegroundColorIndex: XlColorIndex read Get_MarkerForegroundColorIndex write Set_MarkerForegroundColorIndex;
    property MarkerSize: Integer read Get_MarkerSize write Set_MarkerSize;
    property MarkerStyle: XlMarkerStyle read Get_MarkerStyle write Set_MarkerStyle;
    property PictureType: Integer read Get_PictureType write Set_PictureType;
    property PictureUnit: Double read Get_PictureUnit write Set_PictureUnit;
    property Smooth: WordBool read Get_Smooth write Set_Smooth;
    property Left: Double read Get_Left;
    property Top: Double read Get_Top;
    property Width: Double read Get_Width;
    property Height: Double read Get_Height;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property PictureUnit2: Double read Get_PictureUnit2 write Set_PictureUnit2;
  end;

// *********************************************************************//
// DispIntf:  LegendKeyDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DF076FDE-8781-4051-A5BC-99F6B7DC04D4}
// *********************************************************************//
  LegendKeyDisp = dispinterface
    ['{DF076FDE-8781-4051-A5BC-99F6B7DC04D4}']
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    function Delete: OleVariant; dispid 117;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property InvertIfNegative: WordBool dispid 132;
    property MarkerBackgroundColor: Integer dispid 73;
    property MarkerBackgroundColorIndex: XlColorIndex dispid 74;
    property MarkerForegroundColor: Integer dispid 75;
    property MarkerForegroundColorIndex: XlColorIndex dispid 76;
    property MarkerSize: Integer dispid 231;
    property MarkerStyle: XlMarkerStyle dispid 72;
    property PictureType: Integer dispid 161;
    property PictureUnit: Double dispid 162;
    function Select: OleVariant; dispid 235;
    property Smooth: WordBool dispid 163;
    property Left: Double readonly dispid 127;
    property Top: Double readonly dispid 126;
    property Width: Double readonly dispid 122;
    property Height: Double readonly dispid 123;
    property Shadow: WordBool dispid 103;
    property Format: ChartFormat readonly dispid 1610743841;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property PictureUnit2: Double dispid 2649;
  end;

// *********************************************************************//
// Interface: SeriesCollection
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8FEB78F7-35C6-4871-918C-193C3CDD886D}
// *********************************************************************//
  SeriesCollection = interface(IDispatch)
    ['{8FEB78F7-35C6-4871-918C-193C3CDD886D}']
    function Get_Parent: IDispatch; safecall;
    function Add(Source: OleVariant; Rowcol: XlRowCol; SeriesLabels: OleVariant; 
                 CategoryLabels: OleVariant; Replace: OleVariant): Series; safecall;
    function Get_Count: Integer; safecall;
    function Extend(Source: OleVariant; Rowcol: OleVariant; CategoryLabels: OleVariant): OleVariant; safecall;
    function Item(Index: OleVariant): Series; safecall;
    function _NewEnum: IUnknown; safecall;
    function NewSeries: Series; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function _Default(Index: OleVariant): Series; safecall;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  SeriesCollectionDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8FEB78F7-35C6-4871-918C-193C3CDD886D}
// *********************************************************************//
  SeriesCollectionDisp = dispinterface
    ['{8FEB78F7-35C6-4871-918C-193C3CDD886D}']
    property Parent: IDispatch readonly dispid 150;
    function Add(Source: OleVariant; Rowcol: XlRowCol; SeriesLabels: OleVariant; 
                 CategoryLabels: OleVariant; Replace: OleVariant): Series; dispid 181;
    property Count: Integer readonly dispid 118;
    function Extend(Source: OleVariant; Rowcol: OleVariant; CategoryLabels: OleVariant): OleVariant; dispid 227;
    function Item(Index: OleVariant): Series; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    function NewSeries: Series; dispid 1117;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    function _Default(Index: OleVariant): Series; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: Series
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {40810760-068A-4486-BEC9-8EA58C7029F5}
// *********************************************************************//
  Series = interface(IDispatch)
    ['{40810760-068A-4486-BEC9-8EA58C7029F5}']
    function Get_Parent: IDispatch; safecall;
    function Get_AxisGroup: XlAxisGroup; safecall;
    procedure Set_AxisGroup(prop: XlAxisGroup); safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Copy: OleVariant; safecall;
    function DataLabels(Index: OleVariant): IDispatch; safecall;
    function Delete: OleVariant; safecall;
    function ErrorBar(Direction: XlErrorBarDirection; Include: XlErrorBarInclude; 
                      Type_: XlErrorBarType; Amount: OleVariant; MinusValues: OleVariant): OleVariant; safecall;
    function Get_ErrorBars: ErrorBars; safecall;
    function Get_Explosion: Integer; safecall;
    procedure Set_Explosion(prop: Integer); safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const prop: WideString); safecall;
    function Get_FormulaLocal: WideString; safecall;
    procedure Set_FormulaLocal(const prop: WideString); safecall;
    function Get_FormulaR1C1: WideString; safecall;
    procedure Set_FormulaR1C1(const prop: WideString); safecall;
    function Get_FormulaR1C1Local: WideString; safecall;
    procedure Set_FormulaR1C1Local(const prop: WideString); safecall;
    function Get_HasDataLabels: WordBool; safecall;
    procedure Set_HasDataLabels(prop: WordBool); safecall;
    function Get_HasErrorBars: WordBool; safecall;
    procedure Set_HasErrorBars(prop: WordBool); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_InvertIfNegative: WordBool; safecall;
    procedure Set_InvertIfNegative(prop: WordBool); safecall;
    function Get_MarkerBackgroundColor: Integer; safecall;
    procedure Set_MarkerBackgroundColor(prop: Integer); safecall;
    function Get_MarkerBackgroundColorIndex: XlColorIndex; safecall;
    procedure Set_MarkerBackgroundColorIndex(prop: XlColorIndex); safecall;
    function Get_MarkerForegroundColor: Integer; safecall;
    procedure Set_MarkerForegroundColor(prop: Integer); safecall;
    function Get_MarkerForegroundColorIndex: XlColorIndex; safecall;
    procedure Set_MarkerForegroundColorIndex(prop: XlColorIndex); safecall;
    function Get_MarkerSize: Integer; safecall;
    procedure Set_MarkerSize(prop: Integer); safecall;
    function Get_MarkerStyle: XlMarkerStyle; safecall;
    procedure Set_MarkerStyle(prop: XlMarkerStyle); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Paste: OleVariant; safecall;
    function Get_PictureType: XlChartPictureType; safecall;
    procedure Set_PictureType(prop: XlChartPictureType); safecall;
    function Get_PictureUnit: Double; safecall;
    procedure Set_PictureUnit(prop: Double); safecall;
    function Get_PlotOrder: Integer; safecall;
    procedure Set_PlotOrder(prop: Integer); safecall;
    function Points(Index: OleVariant): IDispatch; safecall;
    function Select: OleVariant; safecall;
    function Get_Smooth: WordBool; safecall;
    procedure Set_Smooth(prop: WordBool); safecall;
    function Trendlines(Index: OleVariant): IDispatch; safecall;
    function Get_type_: Integer; safecall;
    procedure Set_type_(prop: Integer); safecall;
    function Get_ChartType: XlChartType; safecall;
    procedure Set_ChartType(prop: XlChartType); safecall;
    procedure ApplyCustomType(ChartType: XlChartType); safecall;
    function Get_Values: OleVariant; safecall;
    procedure Set_Values(prop: OleVariant); safecall;
    function Get_XValues: OleVariant; safecall;
    procedure Set_XValues(prop: OleVariant); safecall;
    function Get_BubbleSizes: OleVariant; safecall;
    procedure Set_BubbleSizes(prop: OleVariant); safecall;
    function Get_BarShape: XlBarShape; safecall;
    procedure Set_BarShape(prop: XlBarShape); safecall;
    function Get_ApplyPictToSides: WordBool; safecall;
    procedure Set_ApplyPictToSides(prop: WordBool); safecall;
    function Get_ApplyPictToFront: WordBool; safecall;
    procedure Set_ApplyPictToFront(prop: WordBool); safecall;
    function Get_ApplyPictToEnd: WordBool; safecall;
    procedure Set_ApplyPictToEnd(prop: WordBool); safecall;
    function Get_Has3DEffect: WordBool; safecall;
    procedure Set_Has3DEffect(prop: WordBool); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_HasLeaderLines: WordBool; safecall;
    procedure Set_HasLeaderLines(prop: WordBool); safecall;
    function Get_LeaderLines: LeaderLines; safecall;
    function ApplyDataLabels(Type_: XlDataLabelsType; LegendKey: OleVariant; AutoText: OleVariant; 
                             HasLeaderLines: OleVariant; ShowSeriesName: OleVariant; 
                             ShowCategoryName: OleVariant; ShowValue: OleVariant; 
                             ShowPercentage: OleVariant; ShowBubbleSize: OleVariant; 
                             Separator: OleVariant): OleVariant; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_PictureUnit2: Double; safecall;
    procedure Set_PictureUnit2(prop: Double); safecall;
    function Get_PlotColorIndex: Integer; safecall;
    function Get_InvertColor: Integer; safecall;
    procedure Set_InvertColor(prop: Integer); safecall;
    function Get_InvertColorIndex: XlColorIndex; safecall;
    procedure Set_InvertColorIndex(prop: XlColorIndex); safecall;
    property Parent: IDispatch read Get_Parent;
    property AxisGroup: XlAxisGroup read Get_AxisGroup write Set_AxisGroup;
    property Border: ChartBorder read Get_Border;
    property ErrorBars: ErrorBars read Get_ErrorBars;
    property Explosion: Integer read Get_Explosion write Set_Explosion;
    property Formula: WideString read Get_Formula write Set_Formula;
    property FormulaLocal: WideString read Get_FormulaLocal write Set_FormulaLocal;
    property FormulaR1C1: WideString read Get_FormulaR1C1 write Set_FormulaR1C1;
    property FormulaR1C1Local: WideString read Get_FormulaR1C1Local write Set_FormulaR1C1Local;
    property HasDataLabels: WordBool read Get_HasDataLabels write Set_HasDataLabels;
    property HasErrorBars: WordBool read Get_HasErrorBars write Set_HasErrorBars;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property InvertIfNegative: WordBool read Get_InvertIfNegative write Set_InvertIfNegative;
    property MarkerBackgroundColor: Integer read Get_MarkerBackgroundColor write Set_MarkerBackgroundColor;
    property MarkerBackgroundColorIndex: XlColorIndex read Get_MarkerBackgroundColorIndex write Set_MarkerBackgroundColorIndex;
    property MarkerForegroundColor: Integer read Get_MarkerForegroundColor write Set_MarkerForegroundColor;
    property MarkerForegroundColorIndex: XlColorIndex read Get_MarkerForegroundColorIndex write Set_MarkerForegroundColorIndex;
    property MarkerSize: Integer read Get_MarkerSize write Set_MarkerSize;
    property MarkerStyle: XlMarkerStyle read Get_MarkerStyle write Set_MarkerStyle;
    property Name: WideString read Get_Name write Set_Name;
    property PictureType: XlChartPictureType read Get_PictureType write Set_PictureType;
    property PictureUnit: Double read Get_PictureUnit write Set_PictureUnit;
    property PlotOrder: Integer read Get_PlotOrder write Set_PlotOrder;
    property Smooth: WordBool read Get_Smooth write Set_Smooth;
    property type_: Integer read Get_type_ write Set_type_;
    property ChartType: XlChartType read Get_ChartType write Set_ChartType;
    property Values: OleVariant read Get_Values write Set_Values;
    property XValues: OleVariant read Get_XValues write Set_XValues;
    property BubbleSizes: OleVariant read Get_BubbleSizes write Set_BubbleSizes;
    property BarShape: XlBarShape read Get_BarShape write Set_BarShape;
    property ApplyPictToSides: WordBool read Get_ApplyPictToSides write Set_ApplyPictToSides;
    property ApplyPictToFront: WordBool read Get_ApplyPictToFront write Set_ApplyPictToFront;
    property ApplyPictToEnd: WordBool read Get_ApplyPictToEnd write Set_ApplyPictToEnd;
    property Has3DEffect: WordBool read Get_Has3DEffect write Set_Has3DEffect;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property HasLeaderLines: WordBool read Get_HasLeaderLines write Set_HasLeaderLines;
    property LeaderLines: LeaderLines read Get_LeaderLines;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property PictureUnit2: Double read Get_PictureUnit2 write Set_PictureUnit2;
    property PlotColorIndex: Integer read Get_PlotColorIndex;
    property InvertColor: Integer read Get_InvertColor write Set_InvertColor;
    property InvertColorIndex: XlColorIndex read Get_InvertColorIndex write Set_InvertColorIndex;
  end;

// *********************************************************************//
// DispIntf:  SeriesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {40810760-068A-4486-BEC9-8EA58C7029F5}
// *********************************************************************//
  SeriesDisp = dispinterface
    ['{40810760-068A-4486-BEC9-8EA58C7029F5}']
    property Parent: IDispatch readonly dispid 150;
    property AxisGroup: XlAxisGroup dispid 47;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    function Copy: OleVariant; dispid 551;
    function DataLabels(Index: OleVariant): IDispatch; dispid 157;
    function Delete: OleVariant; dispid 117;
    function ErrorBar(Direction: XlErrorBarDirection; Include: XlErrorBarInclude; 
                      Type_: XlErrorBarType; Amount: OleVariant; MinusValues: OleVariant): OleVariant; dispid 152;
    property ErrorBars: ErrorBars readonly dispid 159;
    property Explosion: Integer dispid 182;
    property Formula: WideString dispid 261;
    property FormulaLocal: WideString dispid 263;
    property FormulaR1C1: WideString dispid 264;
    property FormulaR1C1Local: WideString dispid 265;
    property HasDataLabels: WordBool dispid 78;
    property HasErrorBars: WordBool dispid 160;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property InvertIfNegative: WordBool dispid 132;
    property MarkerBackgroundColor: Integer dispid 73;
    property MarkerBackgroundColorIndex: XlColorIndex dispid 74;
    property MarkerForegroundColor: Integer dispid 75;
    property MarkerForegroundColorIndex: XlColorIndex dispid 76;
    property MarkerSize: Integer dispid 231;
    property MarkerStyle: XlMarkerStyle dispid 72;
    property Name: WideString dispid 110;
    function Paste: OleVariant; dispid 211;
    property PictureType: XlChartPictureType dispid 161;
    property PictureUnit: Double dispid 162;
    property PlotOrder: Integer dispid 228;
    function Points(Index: OleVariant): IDispatch; dispid 70;
    function Select: OleVariant; dispid 235;
    property Smooth: WordBool dispid 163;
    function Trendlines(Index: OleVariant): IDispatch; dispid 154;
    property type_: Integer dispid 108;
    property ChartType: XlChartType dispid 1400;
    procedure ApplyCustomType(ChartType: XlChartType); dispid 1401;
    property Values: OleVariant dispid 164;
    property XValues: OleVariant dispid 1111;
    property BubbleSizes: OleVariant dispid 1664;
    property BarShape: XlBarShape dispid 1403;
    property ApplyPictToSides: WordBool dispid 1659;
    property ApplyPictToFront: WordBool dispid 1660;
    property ApplyPictToEnd: WordBool dispid 1661;
    property Has3DEffect: WordBool dispid 1665;
    property Shadow: WordBool dispid 103;
    property HasLeaderLines: WordBool dispid 1394;
    property LeaderLines: LeaderLines readonly dispid 1666;
    function ApplyDataLabels(Type_: XlDataLabelsType; LegendKey: OleVariant; AutoText: OleVariant; 
                             HasLeaderLines: OleVariant; ShowSeriesName: OleVariant; 
                             ShowCategoryName: OleVariant; ShowValue: OleVariant; 
                             ShowPercentage: OleVariant; ShowBubbleSize: OleVariant; 
                             Separator: OleVariant): OleVariant; dispid 1922;
    property Format: ChartFormat readonly dispid 1610743890;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property PictureUnit2: Double dispid 2649;
    property PlotColorIndex: Integer readonly dispid 1924;
    property InvertColor: Integer dispid 2884;
    property InvertColorIndex: XlColorIndex dispid 2885;
  end;

// *********************************************************************//
// Interface: ErrorBars
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {194F8476-B79D-4572-A609-294207DE77C1}
// *********************************************************************//
  ErrorBars = interface(IDispatch)
    ['{194F8476-B79D-4572-A609-294207DE77C1}']
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function ClearFormats: OleVariant; safecall;
    function Get_EndStyle: XlEndStyleCap; safecall;
    procedure Set_EndStyle(prop: XlEndStyleCap); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Border: ChartBorder read Get_Border;
    property EndStyle: XlEndStyleCap read Get_EndStyle write Set_EndStyle;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  ErrorBarsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {194F8476-B79D-4572-A609-294207DE77C1}
// *********************************************************************//
  ErrorBarsDisp = dispinterface
    ['{194F8476-B79D-4572-A609-294207DE77C1}']
    property Parent: IDispatch readonly dispid 150;
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    function ClearFormats: OleVariant; dispid 112;
    property EndStyle: XlEndStyleCap dispid 1124;
    property Format: ChartFormat readonly dispid 1610743816;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: Trendline
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {91C46192-3124-4346-A815-10B8873F5A06}
// *********************************************************************//
  Trendline = interface(IDispatch)
    ['{91C46192-3124-4346-A815-10B8873F5A06}']
    function Get_Parent: IDispatch; safecall;
    function Get_Backward: Double; safecall;
    procedure Set_Backward(prop: Double); safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Get_DataLabel: DataLabel; safecall;
    function Delete: OleVariant; safecall;
    function Get_DisplayEquation: WordBool; safecall;
    procedure Set_DisplayEquation(prop: WordBool); safecall;
    function Get_DisplayRSquared: WordBool; safecall;
    procedure Set_DisplayRSquared(prop: WordBool); safecall;
    function Get_Forward: Double; safecall;
    procedure Set_Forward(prop: Double); safecall;
    function Get_Index: Integer; safecall;
    function Get_Intercept: Double; safecall;
    procedure Set_Intercept(prop: Double); safecall;
    function Get_InterceptIsAuto: WordBool; safecall;
    procedure Set_InterceptIsAuto(prop: WordBool); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const prop: WideString); safecall;
    function Get_NameIsAuto: WordBool; safecall;
    procedure Set_NameIsAuto(prop: WordBool); safecall;
    function Get_Order: Integer; safecall;
    procedure Set_Order(prop: Integer); safecall;
    function Get_Period: Integer; safecall;
    procedure Set_Period(prop: Integer); safecall;
    function Select: OleVariant; safecall;
    function Get_type_: XlTrendlineType; safecall;
    procedure Set_type_(prop: XlTrendlineType); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Backward2: Double; safecall;
    procedure Set_Backward2(prop: Double); safecall;
    function Get_Forward2: Double; safecall;
    procedure Set_Forward2(prop: Double); safecall;
    property Parent: IDispatch read Get_Parent;
    property Backward: Double read Get_Backward write Set_Backward;
    property Border: ChartBorder read Get_Border;
    property DataLabel: DataLabel read Get_DataLabel;
    property DisplayEquation: WordBool read Get_DisplayEquation write Set_DisplayEquation;
    property DisplayRSquared: WordBool read Get_DisplayRSquared write Set_DisplayRSquared;
    property Forward: Double read Get_Forward write Set_Forward;
    property Index: Integer read Get_Index;
    property Intercept: Double read Get_Intercept write Set_Intercept;
    property InterceptIsAuto: WordBool read Get_InterceptIsAuto write Set_InterceptIsAuto;
    property Name: WideString read Get_Name write Set_Name;
    property NameIsAuto: WordBool read Get_NameIsAuto write Set_NameIsAuto;
    property Order: Integer read Get_Order write Set_Order;
    property Period: Integer read Get_Period write Set_Period;
    property type_: XlTrendlineType read Get_type_ write Set_type_;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Backward2: Double read Get_Backward2 write Set_Backward2;
    property Forward2: Double read Get_Forward2 write Set_Forward2;
  end;

// *********************************************************************//
// DispIntf:  TrendlineDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {91C46192-3124-4346-A815-10B8873F5A06}
// *********************************************************************//
  TrendlineDisp = dispinterface
    ['{91C46192-3124-4346-A815-10B8873F5A06}']
    property Parent: IDispatch readonly dispid 150;
    property Backward: Double dispid 185;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    property DataLabel: DataLabel readonly dispid 158;
    function Delete: OleVariant; dispid 117;
    property DisplayEquation: WordBool dispid 190;
    property DisplayRSquared: WordBool dispid 189;
    property Forward: Double dispid 191;
    property Index: Integer readonly dispid 486;
    property Intercept: Double dispid 186;
    property InterceptIsAuto: WordBool dispid 187;
    property Name: WideString dispid 110;
    property NameIsAuto: WordBool dispid 188;
    property Order: Integer dispid 192;
    property Period: Integer dispid 184;
    function Select: OleVariant; dispid 235;
    property type_: XlTrendlineType dispid 108;
    property Format: ChartFormat readonly dispid 1610743837;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Backward2: Double dispid 2650;
    property Forward2: Double dispid 2651;
  end;

// *********************************************************************//
// Interface: Trendlines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {54B7061A-D56C-40E5-B85B-58146446C782}
// *********************************************************************//
  Trendlines = interface(IDispatch)
    ['{54B7061A-D56C-40E5-B85B-58146446C782}']
    function Get_Parent: IDispatch; safecall;
    function Add(Type_: XlTrendlineType; Order: OleVariant; Period: OleVariant; 
                 Forward: OleVariant; Backward: OleVariant; Intercept: OleVariant; 
                 DisplayEquation: OleVariant; DisplayRSquared: OleVariant; Name: OleVariant): Trendline; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): Trendline; safecall;
    function _NewEnum: IUnknown; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function _Default(Index: OleVariant): Trendline; safecall;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  TrendlinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {54B7061A-D56C-40E5-B85B-58146446C782}
// *********************************************************************//
  TrendlinesDisp = dispinterface
    ['{54B7061A-D56C-40E5-B85B-58146446C782}']
    property Parent: IDispatch readonly dispid 150;
    function Add(Type_: XlTrendlineType; Order: OleVariant; Period: OleVariant; 
                 Forward: OleVariant; Backward: OleVariant; Intercept: OleVariant; 
                 DisplayEquation: OleVariant; DisplayRSquared: OleVariant; Name: OleVariant): Trendline; dispid 181;
    property Count: Integer readonly dispid 118;
    function Item(Index: OleVariant): Trendline; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    function _Default(Index: OleVariant): Trendline; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: DataLabels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D8252C5E-EB9F-4D74-AA72-C178B128FAC4}
// *********************************************************************//
  DataLabels = interface(IDispatch)
    ['{D8252C5E-EB9F-4D74-AA72-C178B128FAC4}']
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_HorizontalAlignment: OleVariant; safecall;
    procedure Set_HorizontalAlignment(prop: OleVariant); safecall;
    function Get_Orientation: OleVariant; safecall;
    procedure Set_Orientation(prop: OleVariant); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_VerticalAlignment: OleVariant; safecall;
    procedure Set_VerticalAlignment(prop: OleVariant); safecall;
    function Get_ReadingOrder: Integer; safecall;
    procedure Set_ReadingOrder(prop: Integer); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_AutoText: WordBool; safecall;
    procedure Set_AutoText(prop: WordBool); safecall;
    function Get_NumberFormat: WideString; safecall;
    procedure Set_NumberFormat(const prop: WideString); safecall;
    function Get_NumberFormatLinked: WordBool; safecall;
    procedure Set_NumberFormatLinked(prop: WordBool); safecall;
    function Get_NumberFormatLocal: OleVariant; safecall;
    procedure Set_NumberFormatLocal(prop: OleVariant); safecall;
    function Get_ShowLegendKey: WordBool; safecall;
    procedure Set_ShowLegendKey(prop: WordBool); safecall;
    function Get_type_: OleVariant; safecall;
    procedure Set_type_(prop: OleVariant); safecall;
    function Get_Position: XlDataLabelPosition; safecall;
    procedure Set_Position(prop: XlDataLabelPosition); safecall;
    function Get_ShowSeriesName: WordBool; safecall;
    procedure Set_ShowSeriesName(prop: WordBool); safecall;
    function Get_ShowCategoryName: WordBool; safecall;
    procedure Set_ShowCategoryName(prop: WordBool); safecall;
    function Get_ShowValue: WordBool; safecall;
    procedure Set_ShowValue(prop: WordBool); safecall;
    function Get_ShowPercentage: WordBool; safecall;
    procedure Set_ShowPercentage(prop: WordBool); safecall;
    function Get_ShowBubbleSize: WordBool; safecall;
    procedure Set_ShowBubbleSize(prop: WordBool); safecall;
    function Get_Separator: OleVariant; safecall;
    procedure Set_Separator(prop: OleVariant); safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): DataLabel; safecall;
    function _NewEnum: IUnknown; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function _Default(Index: OleVariant): DataLabel; safecall;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Font: ChartFont read Get_Font;
    property HorizontalAlignment: OleVariant read Get_HorizontalAlignment write Set_HorizontalAlignment;
    property Orientation: OleVariant read Get_Orientation write Set_Orientation;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property VerticalAlignment: OleVariant read Get_VerticalAlignment write Set_VerticalAlignment;
    property ReadingOrder: Integer read Get_ReadingOrder write Set_ReadingOrder;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property AutoText: WordBool read Get_AutoText write Set_AutoText;
    property NumberFormat: WideString read Get_NumberFormat write Set_NumberFormat;
    property NumberFormatLinked: WordBool read Get_NumberFormatLinked write Set_NumberFormatLinked;
    property NumberFormatLocal: OleVariant read Get_NumberFormatLocal write Set_NumberFormatLocal;
    property ShowLegendKey: WordBool read Get_ShowLegendKey write Set_ShowLegendKey;
    property type_: OleVariant read Get_type_ write Set_type_;
    property Position: XlDataLabelPosition read Get_Position write Set_Position;
    property ShowSeriesName: WordBool read Get_ShowSeriesName write Set_ShowSeriesName;
    property ShowCategoryName: WordBool read Get_ShowCategoryName write Set_ShowCategoryName;
    property ShowValue: WordBool read Get_ShowValue write Set_ShowValue;
    property ShowPercentage: WordBool read Get_ShowPercentage write Set_ShowPercentage;
    property ShowBubbleSize: WordBool read Get_ShowBubbleSize write Set_ShowBubbleSize;
    property Separator: OleVariant read Get_Separator write Set_Separator;
    property Count: Integer read Get_Count;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  DataLabelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {D8252C5E-EB9F-4D74-AA72-C178B128FAC4}
// *********************************************************************//
  DataLabelsDisp = dispinterface
    ['{D8252C5E-EB9F-4D74-AA72-C178B128FAC4}']
    property Parent: IDispatch readonly dispid 150;
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Font: ChartFont readonly dispid 146;
    property HorizontalAlignment: OleVariant dispid 136;
    property Orientation: OleVariant dispid 134;
    property Shadow: WordBool dispid 103;
    property VerticalAlignment: OleVariant dispid 137;
    property ReadingOrder: Integer dispid 975;
    property AutoScaleFont: OleVariant dispid 1525;
    property AutoText: WordBool dispid 135;
    property NumberFormat: WideString dispid 193;
    property NumberFormatLinked: WordBool dispid 194;
    property NumberFormatLocal: OleVariant dispid 1097;
    property ShowLegendKey: WordBool dispid 171;
    property type_: OleVariant dispid 108;
    property Position: XlDataLabelPosition dispid 133;
    property ShowSeriesName: WordBool dispid 2022;
    property ShowCategoryName: WordBool dispid 2023;
    property ShowValue: WordBool dispid 2024;
    property ShowPercentage: WordBool dispid 2025;
    property ShowBubbleSize: WordBool dispid 2026;
    property Separator: OleVariant dispid 2027;
    property Count: Integer readonly dispid 118;
    function Item(Index: OleVariant): DataLabel; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    property Format: ChartFormat readonly dispid 1610743858;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    function _Default(Index: OleVariant): DataLabel; dispid 1610743861;
  end;

// *********************************************************************//
// Interface: DataLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1FD94DF1-3569-4465-94FF-E8B22D28EEB0}
// *********************************************************************//
  DataLabel = interface(IDispatch)
    ['{1FD94DF1-3569-4465-94FF-E8B22D28EEB0}']
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    function Select: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Delete: OleVariant; safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Characters(Start: OleVariant; Length: OleVariant): ChartCharacters; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_HorizontalAlignment: OleVariant; safecall;
    procedure Set_HorizontalAlignment(prop: OleVariant); safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Orientation: OleVariant; safecall;
    procedure Set_Orientation(prop: OleVariant); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_VerticalAlignment: OleVariant; safecall;
    procedure Set_VerticalAlignment(prop: OleVariant); safecall;
    function Get_ReadingOrder: Integer; safecall;
    procedure Set_ReadingOrder(prop: Integer); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_AutoText: WordBool; safecall;
    procedure Set_AutoText(prop: WordBool); safecall;
    function Get_NumberFormat: WideString; safecall;
    procedure Set_NumberFormat(const prop: WideString); safecall;
    function Get_NumberFormatLinked: WordBool; safecall;
    procedure Set_NumberFormatLinked(prop: WordBool); safecall;
    function Get_NumberFormatLocal: OleVariant; safecall;
    procedure Set_NumberFormatLocal(prop: OleVariant); safecall;
    function Get_ShowLegendKey: WordBool; safecall;
    procedure Set_ShowLegendKey(prop: WordBool); safecall;
    function Get_type_: OleVariant; safecall;
    procedure Set_type_(prop: OleVariant); safecall;
    function Get_Position: XlDataLabelPosition; safecall;
    procedure Set_Position(prop: XlDataLabelPosition); safecall;
    function Get_ShowSeriesName: WordBool; safecall;
    procedure Set_ShowSeriesName(prop: WordBool); safecall;
    function Get_ShowCategoryName: WordBool; safecall;
    procedure Set_ShowCategoryName(prop: WordBool); safecall;
    function Get_ShowValue: WordBool; safecall;
    procedure Set_ShowValue(prop: WordBool); safecall;
    function Get_ShowPercentage: WordBool; safecall;
    procedure Set_ShowPercentage(prop: WordBool); safecall;
    function Get_ShowBubbleSize: WordBool; safecall;
    procedure Set_ShowBubbleSize(prop: WordBool); safecall;
    function Get_Separator: OleVariant; safecall;
    procedure Set_Separator(prop: OleVariant); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Height: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const prop: WideString); safecall;
    function Get_FormulaR1C1: WideString; safecall;
    procedure Set_FormulaR1C1(const prop: WideString); safecall;
    function Get_FormulaLocal: WideString; safecall;
    procedure Set_FormulaLocal(const prop: WideString); safecall;
    function Get_FormulaR1C1Local: WideString; safecall;
    procedure Set_FormulaR1C1Local(const prop: WideString); safecall;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Border: ChartBorder read Get_Border;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters read Get_Characters;
    property Font: ChartFont read Get_Font;
    property HorizontalAlignment: OleVariant read Get_HorizontalAlignment write Set_HorizontalAlignment;
    property Left: Double read Get_Left write Set_Left;
    property Orientation: OleVariant read Get_Orientation write Set_Orientation;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Text: WideString read Get_Text write Set_Text;
    property Top: Double read Get_Top write Set_Top;
    property VerticalAlignment: OleVariant read Get_VerticalAlignment write Set_VerticalAlignment;
    property ReadingOrder: Integer read Get_ReadingOrder write Set_ReadingOrder;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property AutoText: WordBool read Get_AutoText write Set_AutoText;
    property NumberFormat: WideString read Get_NumberFormat write Set_NumberFormat;
    property NumberFormatLinked: WordBool read Get_NumberFormatLinked write Set_NumberFormatLinked;
    property NumberFormatLocal: OleVariant read Get_NumberFormatLocal write Set_NumberFormatLocal;
    property ShowLegendKey: WordBool read Get_ShowLegendKey write Set_ShowLegendKey;
    property type_: OleVariant read Get_type_ write Set_type_;
    property Position: XlDataLabelPosition read Get_Position write Set_Position;
    property ShowSeriesName: WordBool read Get_ShowSeriesName write Set_ShowSeriesName;
    property ShowCategoryName: WordBool read Get_ShowCategoryName write Set_ShowCategoryName;
    property ShowValue: WordBool read Get_ShowValue write Set_ShowValue;
    property ShowPercentage: WordBool read Get_ShowPercentage write Set_ShowPercentage;
    property ShowBubbleSize: WordBool read Get_ShowBubbleSize write Set_ShowBubbleSize;
    property Separator: OleVariant read Get_Separator write Set_Separator;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Height: Double read Get_Height;
    property Width: Double read Get_Width;
    property Formula: WideString read Get_Formula write Set_Formula;
    property FormulaR1C1: WideString read Get_FormulaR1C1 write Set_FormulaR1C1;
    property FormulaLocal: WideString read Get_FormulaLocal write Set_FormulaLocal;
    property FormulaR1C1Local: WideString read Get_FormulaR1C1Local write Set_FormulaR1C1Local;
  end;

// *********************************************************************//
// DispIntf:  DataLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {1FD94DF1-3569-4465-94FF-E8B22D28EEB0}
// *********************************************************************//
  DataLabelDisp = dispinterface
    ['{1FD94DF1-3569-4465-94FF-E8B22D28EEB0}']
    property Parent: IDispatch readonly dispid 150;
    property Name: WideString readonly dispid 110;
    function Select: OleVariant; dispid 235;
    property Border: ChartBorder readonly dispid 128;
    function Delete: OleVariant; dispid 117;
    property Interior: Interior readonly dispid 129;
    property Fill: ChartFillFormat readonly dispid 1663;
    property Caption: WideString dispid 139;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters readonly dispid 603;
    property Font: ChartFont readonly dispid 146;
    property HorizontalAlignment: OleVariant dispid 136;
    property Left: Double dispid 127;
    property Orientation: OleVariant dispid 134;
    property Shadow: WordBool dispid 103;
    property Text: WideString dispid 138;
    property Top: Double dispid 126;
    property VerticalAlignment: OleVariant dispid 137;
    property ReadingOrder: Integer dispid 975;
    property AutoScaleFont: OleVariant dispid 1525;
    property AutoText: WordBool dispid 135;
    property NumberFormat: WideString dispid 193;
    property NumberFormatLinked: WordBool dispid 194;
    property NumberFormatLocal: OleVariant dispid 1097;
    property ShowLegendKey: WordBool dispid 171;
    property type_: OleVariant dispid 108;
    property Position: XlDataLabelPosition dispid 133;
    property ShowSeriesName: WordBool dispid 2022;
    property ShowCategoryName: WordBool dispid 2023;
    property ShowValue: WordBool dispid 2024;
    property ShowPercentage: WordBool dispid 2025;
    property ShowBubbleSize: WordBool dispid 2026;
    property Separator: OleVariant dispid 2027;
    property Format: ChartFormat readonly dispid 1610743863;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Height: Double readonly dispid 1610743864;
    property Width: Double readonly dispid 2030;
    property Formula: WideString dispid 2031;
    property FormulaR1C1: WideString dispid 2032;
    property FormulaLocal: WideString dispid 2033;
    property FormulaR1C1Local: WideString dispid 2034;
  end;

// *********************************************************************//
// Interface: Points
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C1A870A0-850E-4D38-98A7-741CB8C3BCA4}
// *********************************************************************//
  Points = interface(IDispatch)
    ['{C1A870A0-850E-4D38-98A7-741CB8C3BCA4}']
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): Point; safecall;
    function _NewEnum: IUnknown; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function _Default(Index: Integer): Point; safecall;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  PointsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C1A870A0-850E-4D38-98A7-741CB8C3BCA4}
// *********************************************************************//
  PointsDisp = dispinterface
    ['{C1A870A0-850E-4D38-98A7-741CB8C3BCA4}']
    property Parent: IDispatch readonly dispid 150;
    property Count: Integer readonly dispid 118;
    function Item(Index: Integer): Point; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    function _Default(Index: Integer): Point; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: Point
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8A342FA0-5831-4B5E-82E1-003D0A0C635D}
// *********************************************************************//
  Point = interface(IDispatch)
    ['{8A342FA0-5831-4B5E-82E1-003D0A0C635D}']
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    function ClearFormats: OleVariant; safecall;
    function Copy: OleVariant; safecall;
    function Get_DataLabel: DataLabel; safecall;
    function Delete: OleVariant; safecall;
    function Get_Explosion: Integer; safecall;
    procedure Set_Explosion(prop: Integer); safecall;
    function Get_HasDataLabel: WordBool; safecall;
    procedure Set_HasDataLabel(prop: WordBool); safecall;
    function Get_Interior: Interior; safecall;
    function Get_InvertIfNegative: WordBool; safecall;
    procedure Set_InvertIfNegative(prop: WordBool); safecall;
    function Get_MarkerBackgroundColor: Integer; safecall;
    procedure Set_MarkerBackgroundColor(prop: Integer); safecall;
    function Get_MarkerBackgroundColorIndex: XlColorIndex; safecall;
    procedure Set_MarkerBackgroundColorIndex(prop: XlColorIndex); safecall;
    function Get_MarkerForegroundColor: Integer; safecall;
    procedure Set_MarkerForegroundColor(prop: Integer); safecall;
    function Get_MarkerForegroundColorIndex: XlColorIndex; safecall;
    procedure Set_MarkerForegroundColorIndex(prop: XlColorIndex); safecall;
    function Get_MarkerSize: Integer; safecall;
    procedure Set_MarkerSize(prop: Integer); safecall;
    function Get_MarkerStyle: XlMarkerStyle; safecall;
    procedure Set_MarkerStyle(prop: XlMarkerStyle); safecall;
    function Paste: OleVariant; safecall;
    function Get_PictureType: XlChartPictureType; safecall;
    procedure Set_PictureType(prop: XlChartPictureType); safecall;
    function Get_PictureUnit: Double; safecall;
    procedure Set_PictureUnit(prop: Double); safecall;
    function Select: OleVariant; safecall;
    function Get_ApplyPictToSides: WordBool; safecall;
    procedure Set_ApplyPictToSides(prop: WordBool); safecall;
    function Get_ApplyPictToFront: WordBool; safecall;
    procedure Set_ApplyPictToFront(prop: WordBool); safecall;
    function Get_ApplyPictToEnd: WordBool; safecall;
    procedure Set_ApplyPictToEnd(prop: WordBool); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_SecondaryPlot: WordBool; safecall;
    procedure Set_SecondaryPlot(prop: WordBool); safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function ApplyDataLabels(Type_: XlDataLabelsType; LegendKey: OleVariant; AutoText: OleVariant; 
                             HasLeaderLines: OleVariant; ShowSeriesName: OleVariant; 
                             ShowCategoryName: OleVariant; ShowValue: OleVariant; 
                             ShowPercentage: OleVariant; ShowBubbleSize: OleVariant; 
                             Separator: OleVariant): OleVariant; safecall;
    function Get_Has3DEffect: WordBool; safecall;
    procedure Set_Has3DEffect(prop: WordBool); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_PictureUnit2: Double; safecall;
    procedure Set_PictureUnit2(prop: Double); safecall;
    function Get_Height: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Top: Double; safecall;
    function Get_Left: Double; safecall;
    function Get_Name: WideString; safecall;
    function PieSliceLocation(loc: XlPieSliceLocation; Index: XlPieSliceIndex): Double; safecall;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property DataLabel: DataLabel read Get_DataLabel;
    property Explosion: Integer read Get_Explosion write Set_Explosion;
    property HasDataLabel: WordBool read Get_HasDataLabel write Set_HasDataLabel;
    property Interior: Interior read Get_Interior;
    property InvertIfNegative: WordBool read Get_InvertIfNegative write Set_InvertIfNegative;
    property MarkerBackgroundColor: Integer read Get_MarkerBackgroundColor write Set_MarkerBackgroundColor;
    property MarkerBackgroundColorIndex: XlColorIndex read Get_MarkerBackgroundColorIndex write Set_MarkerBackgroundColorIndex;
    property MarkerForegroundColor: Integer read Get_MarkerForegroundColor write Set_MarkerForegroundColor;
    property MarkerForegroundColorIndex: XlColorIndex read Get_MarkerForegroundColorIndex write Set_MarkerForegroundColorIndex;
    property MarkerSize: Integer read Get_MarkerSize write Set_MarkerSize;
    property MarkerStyle: XlMarkerStyle read Get_MarkerStyle write Set_MarkerStyle;
    property PictureType: XlChartPictureType read Get_PictureType write Set_PictureType;
    property PictureUnit: Double read Get_PictureUnit write Set_PictureUnit;
    property ApplyPictToSides: WordBool read Get_ApplyPictToSides write Set_ApplyPictToSides;
    property ApplyPictToFront: WordBool read Get_ApplyPictToFront write Set_ApplyPictToFront;
    property ApplyPictToEnd: WordBool read Get_ApplyPictToEnd write Set_ApplyPictToEnd;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property SecondaryPlot: WordBool read Get_SecondaryPlot write Set_SecondaryPlot;
    property Fill: ChartFillFormat read Get_Fill;
    property Has3DEffect: WordBool read Get_Has3DEffect write Set_Has3DEffect;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property PictureUnit2: Double read Get_PictureUnit2 write Set_PictureUnit2;
    property Height: Double read Get_Height;
    property Width: Double read Get_Width;
    property Top: Double read Get_Top;
    property Left: Double read Get_Left;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  PointDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8A342FA0-5831-4B5E-82E1-003D0A0C635D}
// *********************************************************************//
  PointDisp = dispinterface
    ['{8A342FA0-5831-4B5E-82E1-003D0A0C635D}']
    property Parent: IDispatch readonly dispid 150;
    property Border: ChartBorder readonly dispid 128;
    function ClearFormats: OleVariant; dispid 112;
    function Copy: OleVariant; dispid 551;
    property DataLabel: DataLabel readonly dispid 158;
    function Delete: OleVariant; dispid 117;
    property Explosion: Integer dispid 182;
    property HasDataLabel: WordBool dispid 77;
    property Interior: Interior readonly dispid 129;
    property InvertIfNegative: WordBool dispid 132;
    property MarkerBackgroundColor: Integer dispid 73;
    property MarkerBackgroundColorIndex: XlColorIndex dispid 74;
    property MarkerForegroundColor: Integer dispid 75;
    property MarkerForegroundColorIndex: XlColorIndex dispid 76;
    property MarkerSize: Integer dispid 231;
    property MarkerStyle: XlMarkerStyle dispid 72;
    function Paste: OleVariant; dispid 211;
    property PictureType: XlChartPictureType dispid 161;
    property PictureUnit: Double dispid 162;
    function Select: OleVariant; dispid 235;
    property ApplyPictToSides: WordBool dispid 1659;
    property ApplyPictToFront: WordBool dispid 1660;
    property ApplyPictToEnd: WordBool dispid 1661;
    property Shadow: WordBool dispid 103;
    property SecondaryPlot: WordBool dispid 1662;
    property Fill: ChartFillFormat readonly dispid 1663;
    function ApplyDataLabels(Type_: XlDataLabelsType; LegendKey: OleVariant; AutoText: OleVariant; 
                             HasLeaderLines: OleVariant; ShowSeriesName: OleVariant; 
                             ShowCategoryName: OleVariant; ShowValue: OleVariant; 
                             ShowPercentage: OleVariant; ShowBubbleSize: OleVariant; 
                             Separator: OleVariant): OleVariant; dispid 1922;
    property Has3DEffect: WordBool dispid 1665;
    property Format: ChartFormat readonly dispid 1610743854;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property PictureUnit2: Double dispid 2649;
    property Height: Double readonly dispid 2652;
    property Width: Double readonly dispid 2653;
    property Top: Double readonly dispid 2655;
    property Left: Double readonly dispid 2654;
    property Name: WideString readonly dispid 2651;
    function PieSliceLocation(loc: XlPieSliceLocation; Index: XlPieSliceIndex): Double; dispid 2656;
  end;

// *********************************************************************//
// Interface: Axes
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {354AB591-A217-48B4-99E4-14F58F15667D}
// *********************************************************************//
  Axes = interface(IDispatch)
    ['{354AB591-A217-48B4-99E4-14F58F15667D}']
    function Get_Count: Integer; safecall;
    function Item(Type_: XlAxisType; AxisGroup: XlAxisGroup): Axis; safecall;
    function _NewEnum: IUnknown; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function _Default(Type_: XlAxisType; AxisGroup: XlAxisGroup): Axis; safecall;
    function Get_Parent: IDispatch; safecall;
    property Count: Integer read Get_Count;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  AxesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {354AB591-A217-48B4-99E4-14F58F15667D}
// *********************************************************************//
  AxesDisp = dispinterface
    ['{354AB591-A217-48B4-99E4-14F58F15667D}']
    property Count: Integer readonly dispid 1610743808;
    function Item(Type_: XlAxisType; AxisGroup: XlAxisGroup): Axis; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    function _Default(Type_: XlAxisType; AxisGroup: XlAxisGroup): Axis; dispid 1610743813;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: Axis
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7EBC66BD-F788-42C3-91F4-E8C841A69005}
// *********************************************************************//
  Axis = interface(IDispatch)
    ['{7EBC66BD-F788-42C3-91F4-E8C841A69005}']
    function Get_AxisBetweenCategories: WordBool; safecall;
    procedure Set_AxisBetweenCategories(prop: WordBool); safecall;
    function Get_AxisGroup: XlAxisGroup; safecall;
    function Get_AxisTitle: AxisTitle; safecall;
    function Get_CategoryNames: OleVariant; safecall;
    procedure Set_CategoryNames(prop: OleVariant); safecall;
    function Get_Crosses: XlAxisCrosses; safecall;
    procedure Set_Crosses(prop: XlAxisCrosses); safecall;
    function Get_CrossesAt: Double; safecall;
    procedure Set_CrossesAt(prop: Double); safecall;
    function Delete: OleVariant; safecall;
    function Get_HasMajorGridlines: WordBool; safecall;
    procedure Set_HasMajorGridlines(prop: WordBool); safecall;
    function Get_HasMinorGridlines: WordBool; safecall;
    procedure Set_HasMinorGridlines(prop: WordBool); safecall;
    function Get_HasTitle: WordBool; safecall;
    procedure Set_HasTitle(prop: WordBool); safecall;
    function Get_MajorGridlines: Gridlines; safecall;
    function Get_MajorTickMark: XlTickMark; safecall;
    procedure Set_MajorTickMark(prop: XlTickMark); safecall;
    function Get_MajorUnit: Double; safecall;
    procedure Set_MajorUnit(prop: Double); safecall;
    function Get_LogBase: Double; safecall;
    procedure Set_LogBase(prop: Double); safecall;
    function Get_TickLabelSpacingIsAuto: WordBool; safecall;
    procedure Set_TickLabelSpacingIsAuto(prop: WordBool); safecall;
    function Get_MajorUnitIsAuto: WordBool; safecall;
    procedure Set_MajorUnitIsAuto(prop: WordBool); safecall;
    function Get_MaximumScale: Double; safecall;
    procedure Set_MaximumScale(prop: Double); safecall;
    function Get_MaximumScaleIsAuto: WordBool; safecall;
    procedure Set_MaximumScaleIsAuto(prop: WordBool); safecall;
    function Get_MinimumScale: Double; safecall;
    procedure Set_MinimumScale(prop: Double); safecall;
    function Get_MinimumScaleIsAuto: WordBool; safecall;
    procedure Set_MinimumScaleIsAuto(prop: WordBool); safecall;
    function Get_MinorGridlines: Gridlines; safecall;
    function Get_MinorTickMark: XlTickMark; safecall;
    procedure Set_MinorTickMark(prop: XlTickMark); safecall;
    function Get_MinorUnit: Double; safecall;
    procedure Set_MinorUnit(prop: Double); safecall;
    function Get_MinorUnitIsAuto: WordBool; safecall;
    procedure Set_MinorUnitIsAuto(prop: WordBool); safecall;
    function Get_ReversePlotOrder: WordBool; safecall;
    procedure Set_ReversePlotOrder(prop: WordBool); safecall;
    function Get_ScaleType: XlScaleType; safecall;
    procedure Set_ScaleType(prop: XlScaleType); safecall;
    function Select: OleVariant; safecall;
    function Get_TickLabelPosition: XlTickLabelPosition; safecall;
    procedure Set_TickLabelPosition(prop: XlTickLabelPosition); safecall;
    function Get_TickLabels: TickLabels; safecall;
    function Get_TickLabelSpacing: Integer; safecall;
    procedure Set_TickLabelSpacing(prop: Integer); safecall;
    function Get_TickMarkSpacing: Integer; safecall;
    procedure Set_TickMarkSpacing(prop: Integer); safecall;
    function Get_type_: XlAxisType; safecall;
    procedure Set_type_(prop: XlAxisType); safecall;
    function Get_BaseUnit: XlTimeUnit; safecall;
    procedure Set_BaseUnit(prop: XlTimeUnit); safecall;
    function Get_BaseUnitIsAuto: WordBool; safecall;
    procedure Set_BaseUnitIsAuto(prop: WordBool); safecall;
    function Get_MajorUnitScale: XlTimeUnit; safecall;
    procedure Set_MajorUnitScale(prop: XlTimeUnit); safecall;
    function Get_MinorUnitScale: XlTimeUnit; safecall;
    procedure Set_MinorUnitScale(prop: XlTimeUnit); safecall;
    function Get_CategoryType: XlCategoryType; safecall;
    procedure Set_CategoryType(prop: XlCategoryType); safecall;
    function Get_Left: Double; safecall;
    function Get_Top: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Height: Double; safecall;
    function Get_DisplayUnit: XlDisplayUnit; safecall;
    procedure Set_DisplayUnit(prop: XlDisplayUnit); safecall;
    function Get_DisplayUnitCustom: Double; safecall;
    procedure Set_DisplayUnitCustom(prop: Double); safecall;
    function Get_HasDisplayUnitLabel: WordBool; safecall;
    procedure Set_HasDisplayUnitLabel(prop: WordBool); safecall;
    function Get_DisplayUnitLabel: DisplayUnitLabel; safecall;
    function Get_Border: ChartBorder; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property AxisBetweenCategories: WordBool read Get_AxisBetweenCategories write Set_AxisBetweenCategories;
    property AxisGroup: XlAxisGroup read Get_AxisGroup;
    property AxisTitle: AxisTitle read Get_AxisTitle;
    property CategoryNames: OleVariant read Get_CategoryNames write Set_CategoryNames;
    property Crosses: XlAxisCrosses read Get_Crosses write Set_Crosses;
    property CrossesAt: Double read Get_CrossesAt write Set_CrossesAt;
    property HasMajorGridlines: WordBool read Get_HasMajorGridlines write Set_HasMajorGridlines;
    property HasMinorGridlines: WordBool read Get_HasMinorGridlines write Set_HasMinorGridlines;
    property HasTitle: WordBool read Get_HasTitle write Set_HasTitle;
    property MajorGridlines: Gridlines read Get_MajorGridlines;
    property MajorTickMark: XlTickMark read Get_MajorTickMark write Set_MajorTickMark;
    property MajorUnit: Double read Get_MajorUnit write Set_MajorUnit;
    property LogBase: Double read Get_LogBase write Set_LogBase;
    property TickLabelSpacingIsAuto: WordBool read Get_TickLabelSpacingIsAuto write Set_TickLabelSpacingIsAuto;
    property MajorUnitIsAuto: WordBool read Get_MajorUnitIsAuto write Set_MajorUnitIsAuto;
    property MaximumScale: Double read Get_MaximumScale write Set_MaximumScale;
    property MaximumScaleIsAuto: WordBool read Get_MaximumScaleIsAuto write Set_MaximumScaleIsAuto;
    property MinimumScale: Double read Get_MinimumScale write Set_MinimumScale;
    property MinimumScaleIsAuto: WordBool read Get_MinimumScaleIsAuto write Set_MinimumScaleIsAuto;
    property MinorGridlines: Gridlines read Get_MinorGridlines;
    property MinorTickMark: XlTickMark read Get_MinorTickMark write Set_MinorTickMark;
    property MinorUnit: Double read Get_MinorUnit write Set_MinorUnit;
    property MinorUnitIsAuto: WordBool read Get_MinorUnitIsAuto write Set_MinorUnitIsAuto;
    property ReversePlotOrder: WordBool read Get_ReversePlotOrder write Set_ReversePlotOrder;
    property ScaleType: XlScaleType read Get_ScaleType write Set_ScaleType;
    property TickLabelPosition: XlTickLabelPosition read Get_TickLabelPosition write Set_TickLabelPosition;
    property TickLabels: TickLabels read Get_TickLabels;
    property TickLabelSpacing: Integer read Get_TickLabelSpacing write Set_TickLabelSpacing;
    property TickMarkSpacing: Integer read Get_TickMarkSpacing write Set_TickMarkSpacing;
    property type_: XlAxisType read Get_type_ write Set_type_;
    property BaseUnit: XlTimeUnit read Get_BaseUnit write Set_BaseUnit;
    property BaseUnitIsAuto: WordBool read Get_BaseUnitIsAuto write Set_BaseUnitIsAuto;
    property MajorUnitScale: XlTimeUnit read Get_MajorUnitScale write Set_MajorUnitScale;
    property MinorUnitScale: XlTimeUnit read Get_MinorUnitScale write Set_MinorUnitScale;
    property CategoryType: XlCategoryType read Get_CategoryType write Set_CategoryType;
    property Left: Double read Get_Left;
    property Top: Double read Get_Top;
    property Width: Double read Get_Width;
    property Height: Double read Get_Height;
    property DisplayUnit: XlDisplayUnit read Get_DisplayUnit write Set_DisplayUnit;
    property DisplayUnitCustom: Double read Get_DisplayUnitCustom write Set_DisplayUnitCustom;
    property HasDisplayUnitLabel: WordBool read Get_HasDisplayUnitLabel write Set_HasDisplayUnitLabel;
    property DisplayUnitLabel: DisplayUnitLabel read Get_DisplayUnitLabel;
    property Border: ChartBorder read Get_Border;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  AxisDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7EBC66BD-F788-42C3-91F4-E8C841A69005}
// *********************************************************************//
  AxisDisp = dispinterface
    ['{7EBC66BD-F788-42C3-91F4-E8C841A69005}']
    property AxisBetweenCategories: WordBool dispid 1610743808;
    property AxisGroup: XlAxisGroup readonly dispid 1610743810;
    property AxisTitle: AxisTitle readonly dispid 1610743811;
    property CategoryNames: OleVariant dispid 1610743812;
    property Crosses: XlAxisCrosses dispid 1610743814;
    property CrossesAt: Double dispid 1610743816;
    function Delete: OleVariant; dispid 1610743818;
    property HasMajorGridlines: WordBool dispid 1610743819;
    property HasMinorGridlines: WordBool dispid 1610743821;
    property HasTitle: WordBool dispid 1610743823;
    property MajorGridlines: Gridlines readonly dispid 1610743825;
    property MajorTickMark: XlTickMark dispid 1610743826;
    property MajorUnit: Double dispid 1610743828;
    property LogBase: Double dispid 1610743830;
    property TickLabelSpacingIsAuto: WordBool dispid 1610743832;
    property MajorUnitIsAuto: WordBool dispid 1610743834;
    property MaximumScale: Double dispid 1610743836;
    property MaximumScaleIsAuto: WordBool dispid 1610743838;
    property MinimumScale: Double dispid 1610743840;
    property MinimumScaleIsAuto: WordBool dispid 1610743842;
    property MinorGridlines: Gridlines readonly dispid 1610743844;
    property MinorTickMark: XlTickMark dispid 1610743845;
    property MinorUnit: Double dispid 1610743847;
    property MinorUnitIsAuto: WordBool dispid 1610743849;
    property ReversePlotOrder: WordBool dispid 1610743851;
    property ScaleType: XlScaleType dispid 1610743853;
    function Select: OleVariant; dispid 1610743855;
    property TickLabelPosition: XlTickLabelPosition dispid 1610743856;
    property TickLabels: TickLabels readonly dispid 1610743858;
    property TickLabelSpacing: Integer dispid 1610743859;
    property TickMarkSpacing: Integer dispid 1610743861;
    property type_: XlAxisType dispid 1610743863;
    property BaseUnit: XlTimeUnit dispid 1610743865;
    property BaseUnitIsAuto: WordBool dispid 1610743867;
    property MajorUnitScale: XlTimeUnit dispid 1610743869;
    property MinorUnitScale: XlTimeUnit dispid 1610743871;
    property CategoryType: XlCategoryType dispid 1610743873;
    property Left: Double readonly dispid 1610743875;
    property Top: Double readonly dispid 1610743876;
    property Width: Double readonly dispid 1610743877;
    property Height: Double readonly dispid 1610743878;
    property DisplayUnit: XlDisplayUnit dispid 1610743879;
    property DisplayUnitCustom: Double dispid 1610743881;
    property HasDisplayUnitLabel: WordBool dispid 1610743883;
    property DisplayUnitLabel: DisplayUnitLabel readonly dispid 1610743885;
    property Border: ChartBorder readonly dispid 1610743886;
    property Format: ChartFormat readonly dispid 1610743888;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: DataTable
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DCE9F2C4-4C02-43BA-840E-B4276550EF79}
// *********************************************************************//
  DataTable = interface(IDispatch)
    ['{DCE9F2C4-4C02-43BA-840E-B4276550EF79}']
    function Get_ShowLegendKey: WordBool; safecall;
    procedure Set_ShowLegendKey(prop: WordBool); safecall;
    function Get_HasBorderHorizontal: WordBool; safecall;
    procedure Set_HasBorderHorizontal(prop: WordBool); safecall;
    function Get_HasBorderVertical: WordBool; safecall;
    procedure Set_HasBorderVertical(prop: WordBool); safecall;
    function Get_HasBorderOutline: WordBool; safecall;
    procedure Set_HasBorderOutline(prop: WordBool); safecall;
    function Get_Border: ChartBorder; safecall;
    function Get_Font: ChartFont; safecall;
    procedure Select; safecall;
    procedure Delete; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property ShowLegendKey: WordBool read Get_ShowLegendKey write Set_ShowLegendKey;
    property HasBorderHorizontal: WordBool read Get_HasBorderHorizontal write Set_HasBorderHorizontal;
    property HasBorderVertical: WordBool read Get_HasBorderVertical write Set_HasBorderVertical;
    property HasBorderOutline: WordBool read Get_HasBorderOutline write Set_HasBorderOutline;
    property Border: ChartBorder read Get_Border;
    property Font: ChartFont read Get_Font;
    property Parent: IDispatch read Get_Parent;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  DataTableDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DCE9F2C4-4C02-43BA-840E-B4276550EF79}
// *********************************************************************//
  DataTableDisp = dispinterface
    ['{DCE9F2C4-4C02-43BA-840E-B4276550EF79}']
    property ShowLegendKey: WordBool dispid 1610743808;
    property HasBorderHorizontal: WordBool dispid 1610743810;
    property HasBorderVertical: WordBool dispid 1610743812;
    property HasBorderOutline: WordBool dispid 1610743814;
    property Border: ChartBorder readonly dispid 1610743816;
    property Font: ChartFont readonly dispid 1610743817;
    procedure Select; dispid 1610743818;
    procedure Delete; dispid 1610743819;
    property Parent: IDispatch readonly dispid 1610743820;
    property AutoScaleFont: OleVariant dispid 1610743821;
    property Format: ChartFormat readonly dispid 1610743823;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: ChartTitle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C1AD33E4-F088-40A9-9D2F-D94017D115C4}
// *********************************************************************//
  ChartTitle = interface(IDispatch)
    ['{C1AD33E4-F088-40A9-9D2F-D94017D115C4}']
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Characters(Start: OleVariant; Length: OleVariant): ChartCharacters; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_HorizontalAlignment: OleVariant; safecall;
    procedure Set_HorizontalAlignment(prop: OleVariant); safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Orientation: OleVariant; safecall;
    procedure Set_Orientation(prop: OleVariant); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_VerticalAlignment: OleVariant; safecall;
    procedure Set_VerticalAlignment(prop: OleVariant); safecall;
    function Get_ReadingOrder: Integer; safecall;
    procedure Set_ReadingOrder(prop: Integer); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Delete: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Get_Name: WideString; safecall;
    function Get_Parent: IDispatch; safecall;
    function Select: OleVariant; safecall;
    function Get_IncludeInLayout: WordBool; safecall;
    procedure Set_IncludeInLayout(prop: WordBool); safecall;
    function Get_Position: XlChartElementPosition; safecall;
    procedure Set_Position(prop: XlChartElementPosition); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Height: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const prop: WideString); safecall;
    function Get_FormulaR1C1: WideString; safecall;
    procedure Set_FormulaR1C1(const prop: WideString); safecall;
    function Get_FormulaLocal: WideString; safecall;
    procedure Set_FormulaLocal(const prop: WideString); safecall;
    function Get_FormulaR1C1Local: WideString; safecall;
    procedure Set_FormulaR1C1Local(const prop: WideString); safecall;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters read Get_Characters;
    property Font: ChartFont read Get_Font;
    property HorizontalAlignment: OleVariant read Get_HorizontalAlignment write Set_HorizontalAlignment;
    property Left: Double read Get_Left write Set_Left;
    property Orientation: OleVariant read Get_Orientation write Set_Orientation;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Text: WideString read Get_Text write Set_Text;
    property Top: Double read Get_Top write Set_Top;
    property VerticalAlignment: OleVariant read Get_VerticalAlignment write Set_VerticalAlignment;
    property ReadingOrder: Integer read Get_ReadingOrder write Set_ReadingOrder;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Border: ChartBorder read Get_Border;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property IncludeInLayout: WordBool read Get_IncludeInLayout write Set_IncludeInLayout;
    property Position: XlChartElementPosition read Get_Position write Set_Position;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Height: Double read Get_Height;
    property Width: Double read Get_Width;
    property Formula: WideString read Get_Formula write Set_Formula;
    property FormulaR1C1: WideString read Get_FormulaR1C1 write Set_FormulaR1C1;
    property FormulaLocal: WideString read Get_FormulaLocal write Set_FormulaLocal;
    property FormulaR1C1Local: WideString read Get_FormulaR1C1Local write Set_FormulaR1C1Local;
  end;

// *********************************************************************//
// DispIntf:  ChartTitleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C1AD33E4-F088-40A9-9D2F-D94017D115C4}
// *********************************************************************//
  ChartTitleDisp = dispinterface
    ['{C1AD33E4-F088-40A9-9D2F-D94017D115C4}']
    property Caption: WideString dispid 1610743808;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters readonly dispid 1610743810;
    property Font: ChartFont readonly dispid 1610743811;
    property HorizontalAlignment: OleVariant dispid 1610743812;
    property Left: Double dispid 1610743814;
    property Orientation: OleVariant dispid 1610743816;
    property Shadow: WordBool dispid 1610743818;
    property Text: WideString dispid 1610743820;
    property Top: Double dispid 1610743822;
    property VerticalAlignment: OleVariant dispid 1610743824;
    property ReadingOrder: Integer dispid 1610743826;
    property AutoScaleFont: OleVariant dispid 1610743828;
    property Interior: Interior readonly dispid 1610743830;
    property Fill: ChartFillFormat readonly dispid 1610743831;
    function Delete: OleVariant; dispid 1610743832;
    property Border: ChartBorder readonly dispid 1610743833;
    property Name: WideString readonly dispid 1610743834;
    property Parent: IDispatch readonly dispid 1610743835;
    function Select: OleVariant; dispid 1610743836;
    property IncludeInLayout: WordBool dispid 2418;
    property Position: XlChartElementPosition dispid 1671;
    property Format: ChartFormat readonly dispid 1610743841;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Height: Double readonly dispid 1610743842;
    property Width: Double readonly dispid 1610743845;
    property Formula: WideString dispid 1610743846;
    property FormulaR1C1: WideString dispid 1610743848;
    property FormulaLocal: WideString dispid 1610743850;
    property FormulaR1C1Local: WideString dispid 1610743852;
  end;

// *********************************************************************//
// Interface: AxisTitle
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8B0E45DB-3A7B-42EE-9D17-A92AF69B79C1}
// *********************************************************************//
  AxisTitle = interface(IDispatch)
    ['{8B0E45DB-3A7B-42EE-9D17-A92AF69B79C1}']
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Characters(Start: OleVariant; Length: OleVariant): ChartCharacters; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_HorizontalAlignment: OleVariant; safecall;
    procedure Set_HorizontalAlignment(prop: OleVariant); safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Orientation: OleVariant; safecall;
    procedure Set_Orientation(prop: OleVariant); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_VerticalAlignment: OleVariant; safecall;
    procedure Set_VerticalAlignment(prop: OleVariant); safecall;
    function Get_ReadingOrder: Integer; safecall;
    procedure Set_ReadingOrder(prop: Integer); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Delete: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Get_Name: WideString; safecall;
    function Get_Parent: IDispatch; safecall;
    function Select: OleVariant; safecall;
    function Get_IncludeInLayout: WordBool; safecall;
    procedure Set_IncludeInLayout(prop: WordBool); safecall;
    function Get_Position: XlChartElementPosition; safecall;
    procedure Set_Position(prop: XlChartElementPosition); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Height: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const prop: WideString); safecall;
    function Get_FormulaR1C1: WideString; safecall;
    procedure Set_FormulaR1C1(const prop: WideString); safecall;
    function Get_FormulaLocal: WideString; safecall;
    procedure Set_FormulaLocal(const prop: WideString); safecall;
    function Get_FormulaR1C1Local: WideString; safecall;
    procedure Set_FormulaR1C1Local(const prop: WideString); safecall;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters read Get_Characters;
    property Font: ChartFont read Get_Font;
    property HorizontalAlignment: OleVariant read Get_HorizontalAlignment write Set_HorizontalAlignment;
    property Left: Double read Get_Left write Set_Left;
    property Orientation: OleVariant read Get_Orientation write Set_Orientation;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Text: WideString read Get_Text write Set_Text;
    property Top: Double read Get_Top write Set_Top;
    property VerticalAlignment: OleVariant read Get_VerticalAlignment write Set_VerticalAlignment;
    property ReadingOrder: Integer read Get_ReadingOrder write Set_ReadingOrder;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Border: ChartBorder read Get_Border;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property IncludeInLayout: WordBool read Get_IncludeInLayout write Set_IncludeInLayout;
    property Position: XlChartElementPosition read Get_Position write Set_Position;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Height: Double read Get_Height;
    property Width: Double read Get_Width;
    property Formula: WideString read Get_Formula write Set_Formula;
    property FormulaR1C1: WideString read Get_FormulaR1C1 write Set_FormulaR1C1;
    property FormulaLocal: WideString read Get_FormulaLocal write Set_FormulaLocal;
    property FormulaR1C1Local: WideString read Get_FormulaR1C1Local write Set_FormulaR1C1Local;
  end;

// *********************************************************************//
// DispIntf:  AxisTitleDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {8B0E45DB-3A7B-42EE-9D17-A92AF69B79C1}
// *********************************************************************//
  AxisTitleDisp = dispinterface
    ['{8B0E45DB-3A7B-42EE-9D17-A92AF69B79C1}']
    property Caption: WideString dispid 1610743808;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters readonly dispid 1610743810;
    property Font: ChartFont readonly dispid 1610743811;
    property HorizontalAlignment: OleVariant dispid 1610743812;
    property Left: Double dispid 1610743814;
    property Orientation: OleVariant dispid 1610743816;
    property Shadow: WordBool dispid 1610743818;
    property Text: WideString dispid 1610743820;
    property Top: Double dispid 1610743822;
    property VerticalAlignment: OleVariant dispid 1610743824;
    property ReadingOrder: Integer dispid 1610743826;
    property AutoScaleFont: OleVariant dispid 1610743828;
    property Interior: Interior readonly dispid 1610743830;
    property Fill: ChartFillFormat readonly dispid 1610743831;
    function Delete: OleVariant; dispid 1610743832;
    property Border: ChartBorder readonly dispid 1610743833;
    property Name: WideString readonly dispid 1610743834;
    property Parent: IDispatch readonly dispid 1610743835;
    function Select: OleVariant; dispid 1610743836;
    property IncludeInLayout: WordBool dispid 2418;
    property Position: XlChartElementPosition dispid 1671;
    property Format: ChartFormat readonly dispid 1610743841;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Height: Double readonly dispid 1610743842;
    property Width: Double readonly dispid 1610743845;
    property Formula: WideString dispid 1610743846;
    property FormulaR1C1: WideString dispid 1610743848;
    property FormulaLocal: WideString dispid 1610743850;
    property FormulaR1C1Local: WideString dispid 1610743852;
  end;

// *********************************************************************//
// Interface: DisplayUnitLabel
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C04865A3-9F8A-486C-BB58-B4C3E6563136}
// *********************************************************************//
  DisplayUnitLabel = interface(IDispatch)
    ['{C04865A3-9F8A-486C-BB58-B4C3E6563136}']
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Characters(Start: OleVariant; Length: OleVariant): ChartCharacters; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_HorizontalAlignment: OleVariant; safecall;
    procedure Set_HorizontalAlignment(prop: OleVariant); safecall;
    function Get_Left: Double; safecall;
    procedure Set_Left(prop: Double); safecall;
    function Get_Orientation: OleVariant; safecall;
    procedure Set_Orientation(prop: OleVariant); safecall;
    function Get_Shadow: WordBool; safecall;
    procedure Set_Shadow(prop: WordBool); safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_Top: Double; safecall;
    procedure Set_Top(prop: Double); safecall;
    function Get_VerticalAlignment: OleVariant; safecall;
    procedure Set_VerticalAlignment(prop: OleVariant); safecall;
    function Get_ReadingOrder: Integer; safecall;
    procedure Set_ReadingOrder(prop: Integer); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Interior: Interior; safecall;
    function Get_Fill: ChartFillFormat; safecall;
    function Delete: OleVariant; safecall;
    function Get_Border: ChartBorder; safecall;
    function Get_Name: WideString; safecall;
    function Get_Parent: IDispatch; safecall;
    function Select: OleVariant; safecall;
    function Get_IncludeInLayout: WordBool; safecall;
    procedure Set_IncludeInLayout(prop: WordBool); safecall;
    function Get_Position: XlChartElementPosition; safecall;
    procedure Set_Position(prop: XlChartElementPosition); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Height: Double; safecall;
    function Get_Width: Double; safecall;
    function Get_Formula: WideString; safecall;
    procedure Set_Formula(const prop: WideString); safecall;
    function Get_FormulaR1C1: WideString; safecall;
    procedure Set_FormulaR1C1(const prop: WideString); safecall;
    function Get_FormulaLocal: WideString; safecall;
    procedure Set_FormulaLocal(const prop: WideString); safecall;
    function Get_FormulaR1C1Local: WideString; safecall;
    procedure Set_FormulaR1C1Local(const prop: WideString); safecall;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters read Get_Characters;
    property Font: ChartFont read Get_Font;
    property HorizontalAlignment: OleVariant read Get_HorizontalAlignment write Set_HorizontalAlignment;
    property Left: Double read Get_Left write Set_Left;
    property Orientation: OleVariant read Get_Orientation write Set_Orientation;
    property Shadow: WordBool read Get_Shadow write Set_Shadow;
    property Text: WideString read Get_Text write Set_Text;
    property Top: Double read Get_Top write Set_Top;
    property VerticalAlignment: OleVariant read Get_VerticalAlignment write Set_VerticalAlignment;
    property ReadingOrder: Integer read Get_ReadingOrder write Set_ReadingOrder;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Interior: Interior read Get_Interior;
    property Fill: ChartFillFormat read Get_Fill;
    property Border: ChartBorder read Get_Border;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property IncludeInLayout: WordBool read Get_IncludeInLayout write Set_IncludeInLayout;
    property Position: XlChartElementPosition read Get_Position write Set_Position;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Height: Double read Get_Height;
    property Width: Double read Get_Width;
    property Formula: WideString read Get_Formula write Set_Formula;
    property FormulaR1C1: WideString read Get_FormulaR1C1 write Set_FormulaR1C1;
    property FormulaLocal: WideString read Get_FormulaLocal write Set_FormulaLocal;
    property FormulaR1C1Local: WideString read Get_FormulaR1C1Local write Set_FormulaR1C1Local;
  end;

// *********************************************************************//
// DispIntf:  DisplayUnitLabelDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C04865A3-9F8A-486C-BB58-B4C3E6563136}
// *********************************************************************//
  DisplayUnitLabelDisp = dispinterface
    ['{C04865A3-9F8A-486C-BB58-B4C3E6563136}']
    property Caption: WideString dispid 1610743808;
    property Characters[Start: OleVariant; Length: OleVariant]: ChartCharacters readonly dispid 1610743810;
    property Font: ChartFont readonly dispid 1610743811;
    property HorizontalAlignment: OleVariant dispid 1610743812;
    property Left: Double dispid 1610743814;
    property Orientation: OleVariant dispid 1610743816;
    property Shadow: WordBool dispid 1610743818;
    property Text: WideString dispid 1610743820;
    property Top: Double dispid 1610743822;
    property VerticalAlignment: OleVariant dispid 1610743824;
    property ReadingOrder: Integer dispid 1610743826;
    property AutoScaleFont: OleVariant dispid 1610743828;
    property Interior: Interior readonly dispid 1610743830;
    property Fill: ChartFillFormat readonly dispid 1610743831;
    function Delete: OleVariant; dispid 1610743832;
    property Border: ChartBorder readonly dispid 1610743833;
    property Name: WideString readonly dispid 1610743834;
    property Parent: IDispatch readonly dispid 1610743835;
    function Select: OleVariant; dispid 1610743836;
    property IncludeInLayout: WordBool dispid 2418;
    property Position: XlChartElementPosition dispid 1671;
    property Format: ChartFormat readonly dispid 1610743841;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Height: Double readonly dispid 1610743842;
    property Width: Double readonly dispid 1610743845;
    property Formula: WideString dispid 1610743846;
    property FormulaR1C1: WideString dispid 1610743848;
    property FormulaLocal: WideString dispid 1610743850;
    property FormulaR1C1Local: WideString dispid 1610743852;
  end;

// *********************************************************************//
// Interface: TickLabels
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {935D59F5-E365-4F92-B7F5-1C499A63ECA8}
// *********************************************************************//
  TickLabels = interface(IDispatch)
    ['{935D59F5-E365-4F92-B7F5-1C499A63ECA8}']
    function Get_Parent: IDispatch; safecall;
    function Delete: OleVariant; safecall;
    function Get_Font: ChartFont; safecall;
    function Get_Name: WideString; safecall;
    function Get_NumberFormat: WideString; safecall;
    procedure Set_NumberFormat(const prop: WideString); safecall;
    function Get_NumberFormatLinked: WordBool; safecall;
    procedure Set_NumberFormatLinked(prop: WordBool); safecall;
    function Get_NumberFormatLocal: OleVariant; safecall;
    procedure Set_NumberFormatLocal(prop: OleVariant); safecall;
    function Get_Orientation: XlTickLabelOrientation; safecall;
    procedure Set_Orientation(prop: XlTickLabelOrientation); safecall;
    function Select: OleVariant; safecall;
    function Get_ReadingOrder: Integer; safecall;
    procedure Set_ReadingOrder(prop: Integer); safecall;
    function Get_AutoScaleFont: OleVariant; safecall;
    procedure Set_AutoScaleFont(prop: OleVariant); safecall;
    function Get_Depth: Integer; safecall;
    function Get_Offset: Integer; safecall;
    procedure Set_Offset(prop: Integer); safecall;
    function Get_Alignment: Integer; safecall;
    procedure Set_Alignment(prop: Integer); safecall;
    function Get_MultiLevel: WordBool; safecall;
    procedure Set_MultiLevel(prop: WordBool); safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Font: ChartFont read Get_Font;
    property Name: WideString read Get_Name;
    property NumberFormat: WideString read Get_NumberFormat write Set_NumberFormat;
    property NumberFormatLinked: WordBool read Get_NumberFormatLinked write Set_NumberFormatLinked;
    property NumberFormatLocal: OleVariant read Get_NumberFormatLocal write Set_NumberFormatLocal;
    property Orientation: XlTickLabelOrientation read Get_Orientation write Set_Orientation;
    property ReadingOrder: Integer read Get_ReadingOrder write Set_ReadingOrder;
    property AutoScaleFont: OleVariant read Get_AutoScaleFont write Set_AutoScaleFont;
    property Depth: Integer read Get_Depth;
    property Offset: Integer read Get_Offset write Set_Offset;
    property Alignment: Integer read Get_Alignment write Set_Alignment;
    property MultiLevel: WordBool read Get_MultiLevel write Set_MultiLevel;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  TickLabelsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {935D59F5-E365-4F92-B7F5-1C499A63ECA8}
// *********************************************************************//
  TickLabelsDisp = dispinterface
    ['{935D59F5-E365-4F92-B7F5-1C499A63ECA8}']
    property Parent: IDispatch readonly dispid 1610743808;
    function Delete: OleVariant; dispid 1610743809;
    property Font: ChartFont readonly dispid 1610743810;
    property Name: WideString readonly dispid 1610743811;
    property NumberFormat: WideString dispid 1610743812;
    property NumberFormatLinked: WordBool dispid 1610743814;
    property NumberFormatLocal: OleVariant dispid 1610743816;
    property Orientation: XlTickLabelOrientation dispid 1610743818;
    function Select: OleVariant; dispid 1610743820;
    property ReadingOrder: Integer dispid 1610743821;
    property AutoScaleFont: OleVariant dispid 1610743823;
    property Depth: Integer readonly dispid 1610743825;
    property Offset: Integer dispid 1610743826;
    property Alignment: Integer dispid 1610743828;
    property MultiLevel: WordBool dispid 1610743830;
    property Format: ChartFormat readonly dispid 1610743832;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: DropLines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {9F1DF642-3CCE-4D83-A770-D2634A05D278}
// *********************************************************************//
  DropLines = interface(IDispatch)
    ['{9F1DF642-3CCE-4D83-A770-D2634A05D278}']
    function Get_Name: WideString; safecall;
    procedure Select; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Border: ChartBorder; safecall;
    procedure Delete; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Name: WideString read Get_Name;
    property Parent: IDispatch read Get_Parent;
    property Border: ChartBorder read Get_Border;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  DropLinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {9F1DF642-3CCE-4D83-A770-D2634A05D278}
// *********************************************************************//
  DropLinesDisp = dispinterface
    ['{9F1DF642-3CCE-4D83-A770-D2634A05D278}']
    property Name: WideString readonly dispid 1610743808;
    procedure Select; dispid 1610743809;
    property Parent: IDispatch readonly dispid 1610743810;
    property Border: ChartBorder readonly dispid 1610743811;
    procedure Delete; dispid 1610743812;
    property Format: ChartFormat readonly dispid 1610743813;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: HiLoLines
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7A1BCE11-5783-4C7D-BD02-F3D84AB40E7F}
// *********************************************************************//
  HiLoLines = interface(IDispatch)
    ['{7A1BCE11-5783-4C7D-BD02-F3D84AB40E7F}']
    function Get_Parent: IDispatch; safecall;
    function Get_Name: WideString; safecall;
    procedure Select; safecall;
    function Get_Border: ChartBorder; safecall;
    procedure Delete; safecall;
    function Get_Format: ChartFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Name: WideString read Get_Name;
    property Border: ChartBorder read Get_Border;
    property Format: ChartFormat read Get_Format;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  HiLoLinesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {7A1BCE11-5783-4C7D-BD02-F3D84AB40E7F}
// *********************************************************************//
  HiLoLinesDisp = dispinterface
    ['{7A1BCE11-5783-4C7D-BD02-F3D84AB40E7F}']
    property Parent: IDispatch readonly dispid 1610743808;
    property Name: WideString readonly dispid 1610743809;
    procedure Select; dispid 1610743810;
    property Border: ChartBorder readonly dispid 1610743811;
    procedure Delete; dispid 1610743812;
    property Format: ChartFormat readonly dispid 1610743813;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: ChartGroup
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {86488FB4-9633-4C93-8057-FC1FA7A847AE}
// *********************************************************************//
  ChartGroup = interface(IDispatch)
    ['{86488FB4-9633-4C93-8057-FC1FA7A847AE}']
    function Get_AxisGroup: XlAxisGroup; safecall;
    procedure Set_AxisGroup(prop: XlAxisGroup); safecall;
    function Get_DoughnutHoleSize: Integer; safecall;
    procedure Set_DoughnutHoleSize(prop: Integer); safecall;
    function Get_DownBars: DownBars; safecall;
    function Get_DropLines: DropLines; safecall;
    function Get_FirstSliceAngle: Integer; safecall;
    procedure Set_FirstSliceAngle(prop: Integer); safecall;
    function Get_GapWidth: Integer; safecall;
    procedure Set_GapWidth(prop: Integer); safecall;
    function Get_HasDropLines: WordBool; safecall;
    procedure Set_HasDropLines(prop: WordBool); safecall;
    function Get_HasHiLoLines: WordBool; safecall;
    procedure Set_HasHiLoLines(prop: WordBool); safecall;
    function Get_HasRadarAxisLabels: WordBool; safecall;
    procedure Set_HasRadarAxisLabels(prop: WordBool); safecall;
    function Get_HasSeriesLines: WordBool; safecall;
    procedure Set_HasSeriesLines(prop: WordBool); safecall;
    function Get_HasUpDownBars: WordBool; safecall;
    procedure Set_HasUpDownBars(prop: WordBool); safecall;
    function Get_HiLoLines: HiLoLines; safecall;
    function Get_Index: Integer; safecall;
    function Get_Overlap: Integer; safecall;
    procedure Set_Overlap(prop: Integer); safecall;
    function Get_RadarAxisLabels: TickLabels; safecall;
    function SeriesCollection(Index: OleVariant): IDispatch; safecall;
    function Get_SeriesLines: SeriesLines; safecall;
    function Get_SubType: Integer; safecall;
    procedure Set_SubType(prop: Integer); safecall;
    function Get_type_: Integer; safecall;
    procedure Set_type_(prop: Integer); safecall;
    function Get_UpBars: UpBars; safecall;
    function Get_VaryByCategories: WordBool; safecall;
    procedure Set_VaryByCategories(prop: WordBool); safecall;
    function Get_SizeRepresents: XlSizeRepresents; safecall;
    procedure Set_SizeRepresents(prop: XlSizeRepresents); safecall;
    function Get_BubbleScale: Integer; safecall;
    procedure Set_BubbleScale(prop: Integer); safecall;
    function Get_ShowNegativeBubbles: WordBool; safecall;
    procedure Set_ShowNegativeBubbles(prop: WordBool); safecall;
    function Get_SplitType: XlChartSplitType; safecall;
    procedure Set_SplitType(prop: XlChartSplitType); safecall;
    function Get_SplitValue: OleVariant; safecall;
    procedure Set_SplitValue(prop: OleVariant); safecall;
    function Get_SecondPlotSize: Integer; safecall;
    procedure Set_SecondPlotSize(prop: Integer); safecall;
    function Get_Has3DShading: WordBool; safecall;
    procedure Set_Has3DShading(prop: WordBool); safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    property AxisGroup: XlAxisGroup read Get_AxisGroup write Set_AxisGroup;
    property DoughnutHoleSize: Integer read Get_DoughnutHoleSize write Set_DoughnutHoleSize;
    property DownBars: DownBars read Get_DownBars;
    property DropLines: DropLines read Get_DropLines;
    property FirstSliceAngle: Integer read Get_FirstSliceAngle write Set_FirstSliceAngle;
    property GapWidth: Integer read Get_GapWidth write Set_GapWidth;
    property HasDropLines: WordBool read Get_HasDropLines write Set_HasDropLines;
    property HasHiLoLines: WordBool read Get_HasHiLoLines write Set_HasHiLoLines;
    property HasRadarAxisLabels: WordBool read Get_HasRadarAxisLabels write Set_HasRadarAxisLabels;
    property HasSeriesLines: WordBool read Get_HasSeriesLines write Set_HasSeriesLines;
    property HasUpDownBars: WordBool read Get_HasUpDownBars write Set_HasUpDownBars;
    property HiLoLines: HiLoLines read Get_HiLoLines;
    property Index: Integer read Get_Index;
    property Overlap: Integer read Get_Overlap write Set_Overlap;
    property RadarAxisLabels: TickLabels read Get_RadarAxisLabels;
    property SeriesLines: SeriesLines read Get_SeriesLines;
    property SubType: Integer read Get_SubType write Set_SubType;
    property type_: Integer read Get_type_ write Set_type_;
    property UpBars: UpBars read Get_UpBars;
    property VaryByCategories: WordBool read Get_VaryByCategories write Set_VaryByCategories;
    property SizeRepresents: XlSizeRepresents read Get_SizeRepresents write Set_SizeRepresents;
    property BubbleScale: Integer read Get_BubbleScale write Set_BubbleScale;
    property ShowNegativeBubbles: WordBool read Get_ShowNegativeBubbles write Set_ShowNegativeBubbles;
    property SplitType: XlChartSplitType read Get_SplitType write Set_SplitType;
    property SplitValue: OleVariant read Get_SplitValue write Set_SplitValue;
    property SecondPlotSize: Integer read Get_SecondPlotSize write Set_SecondPlotSize;
    property Has3DShading: WordBool read Get_Has3DShading write Set_Has3DShading;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
  end;

// *********************************************************************//
// DispIntf:  ChartGroupDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {86488FB4-9633-4C93-8057-FC1FA7A847AE}
// *********************************************************************//
  ChartGroupDisp = dispinterface
    ['{86488FB4-9633-4C93-8057-FC1FA7A847AE}']
    property AxisGroup: XlAxisGroup dispid 1610743808;
    property DoughnutHoleSize: Integer dispid 1610743810;
    property DownBars: DownBars readonly dispid 1610743812;
    property DropLines: DropLines readonly dispid 1610743813;
    property FirstSliceAngle: Integer dispid 1610743814;
    property GapWidth: Integer dispid 1610743816;
    property HasDropLines: WordBool dispid 1610743818;
    property HasHiLoLines: WordBool dispid 1610743820;
    property HasRadarAxisLabels: WordBool dispid 1610743822;
    property HasSeriesLines: WordBool dispid 1610743824;
    property HasUpDownBars: WordBool dispid 1610743826;
    property HiLoLines: HiLoLines readonly dispid 1610743828;
    property Index: Integer readonly dispid 1610743829;
    property Overlap: Integer dispid 1610743830;
    property RadarAxisLabels: TickLabels readonly dispid 1610743832;
    function SeriesCollection(Index: OleVariant): IDispatch; dispid 1610743833;
    property SeriesLines: SeriesLines readonly dispid 1610743834;
    property SubType: Integer dispid 1610743835;
    property type_: Integer dispid 1610743837;
    property UpBars: UpBars readonly dispid 1610743839;
    property VaryByCategories: WordBool dispid 1610743840;
    property SizeRepresents: XlSizeRepresents dispid 1610743842;
    property BubbleScale: Integer dispid 1610743844;
    property ShowNegativeBubbles: WordBool dispid 1610743846;
    property SplitType: XlChartSplitType dispid 1610743848;
    property SplitValue: OleVariant dispid 1610743850;
    property SecondPlotSize: Integer dispid 1610743852;
    property Has3DShading: WordBool dispid 1610743854;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
    property Parent: IDispatch readonly dispid 150;
  end;

// *********************************************************************//
// Interface: ChartGroups
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F8DDB497-CA6C-4711-9BA4-2718FA3BB6FE}
// *********************************************************************//
  ChartGroups = interface(IDispatch)
    ['{F8DDB497-CA6C-4711-9BA4-2718FA3BB6FE}']
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: OleVariant): ChartGroup; safecall;
    function _NewEnum: IUnknown; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  ChartGroupsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F8DDB497-CA6C-4711-9BA4-2718FA3BB6FE}
// *********************************************************************//
  ChartGroupsDisp = dispinterface
    ['{F8DDB497-CA6C-4711-9BA4-2718FA3BB6FE}']
    property Parent: IDispatch readonly dispid 150;
    property Count: Integer readonly dispid 118;
    function Item(Index: OleVariant): ChartGroup; dispid 0;
    function _NewEnum: IUnknown; dispid -4;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: ChartCharacters
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FF06FEF2-DA89-41C0-A0A8-5CD434E210AD}
// *********************************************************************//
  ChartCharacters = interface(IDispatch)
    ['{FF06FEF2-DA89-41C0-A0A8-5CD434E210AD}']
    function Get_Parent: IDispatch; safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Count: Integer; safecall;
    function Delete: OleVariant; safecall;
    function Get_Font: ChartFont; safecall;
    function Insert(const String_: WideString): OleVariant; safecall;
    function Get_Text: WideString; safecall;
    procedure Set_Text(const prop: WideString); safecall;
    function Get_PhoneticCharacters: WideString; safecall;
    procedure Set_PhoneticCharacters(const prop: WideString); safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Parent: IDispatch read Get_Parent;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Count: Integer read Get_Count;
    property Font: ChartFont read Get_Font;
    property Text: WideString read Get_Text write Set_Text;
    property PhoneticCharacters: WideString read Get_PhoneticCharacters write Set_PhoneticCharacters;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  ChartCharactersDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FF06FEF2-DA89-41C0-A0A8-5CD434E210AD}
// *********************************************************************//
  ChartCharactersDisp = dispinterface
    ['{FF06FEF2-DA89-41C0-A0A8-5CD434E210AD}']
    property Parent: IDispatch readonly dispid 150;
    property Caption: WideString dispid 139;
    property Count: Integer readonly dispid 118;
    function Delete: OleVariant; dispid 117;
    property Font: ChartFont readonly dispid 146;
    function Insert(const String_: WideString): OleVariant; dispid 252;
    property Text: WideString dispid 138;
    property PhoneticCharacters: WideString dispid 1522;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: ChartFormat
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B66D3C1A-4541-4961-B35B-A353C03F6A99}
// *********************************************************************//
  ChartFormat = interface(IDispatch)
    ['{B66D3C1A-4541-4961-B35B-A353C03F6A99}']
    function Get_Fill: FillFormat; safecall;
    function Get_Glow: GlowFormat; safecall;
    function Get_Line: LineFormat; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_PictureFormat: PictureFormat; safecall;
    function Get_Shadow: ShadowFormat; safecall;
    function Get_SoftEdge: SoftEdgeFormat; safecall;
    function Get_TextFrame2: TextFrame2; safecall;
    function Get_ThreeD: ThreeDFormat; safecall;
    function Get_Application: IDispatch; safecall;
    function Get_Creator: Integer; safecall;
    property Fill: FillFormat read Get_Fill;
    property Glow: GlowFormat read Get_Glow;
    property Line: LineFormat read Get_Line;
    property Parent: IDispatch read Get_Parent;
    property PictureFormat: PictureFormat read Get_PictureFormat;
    property Shadow: ShadowFormat read Get_Shadow;
    property SoftEdge: SoftEdgeFormat read Get_SoftEdge;
    property TextFrame2: TextFrame2 read Get_TextFrame2;
    property ThreeD: ThreeDFormat read Get_ThreeD;
    property Application: IDispatch read Get_Application;
    property Creator: Integer read Get_Creator;
  end;

// *********************************************************************//
// DispIntf:  ChartFormatDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {B66D3C1A-4541-4961-B35B-A353C03F6A99}
// *********************************************************************//
  ChartFormatDisp = dispinterface
    ['{B66D3C1A-4541-4961-B35B-A353C03F6A99}']
    property Fill: FillFormat readonly dispid 1610743808;
    property Glow: GlowFormat readonly dispid 1610743809;
    property Line: LineFormat readonly dispid 1610743810;
    property Parent: IDispatch readonly dispid 1610743811;
    property PictureFormat: PictureFormat readonly dispid 1610743812;
    property Shadow: ShadowFormat readonly dispid 1610743813;
    property SoftEdge: SoftEdgeFormat readonly dispid 1610743814;
    property TextFrame2: TextFrame2 readonly dispid 1610743815;
    property ThreeD: ThreeDFormat readonly dispid 1610743816;
    property Application: IDispatch readonly dispid 148;
    property Creator: Integer readonly dispid 149;
  end;

// *********************************************************************//
// Interface: UndoRecord
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E598E358-2852-42D4-8775-160BD91B7244}
// *********************************************************************//
  UndoRecord = interface(IDispatch)
    ['{E598E358-2852-42D4-8775-160BD91B7244}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    procedure StartCustomRecord(const Name: WideString); safecall;
    procedure EndCustomRecord; safecall;
    function Get_IsRecordingCustomRecord: WordBool; safecall;
    function Get_CustomRecordName: WideString; safecall;
    function Get_CustomRecordLevel: Integer; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property IsRecordingCustomRecord: WordBool read Get_IsRecordingCustomRecord;
    property CustomRecordName: WideString read Get_CustomRecordName;
    property CustomRecordLevel: Integer read Get_CustomRecordLevel;
  end;

// *********************************************************************//
// DispIntf:  UndoRecordDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E598E358-2852-42D4-8775-160BD91B7244}
// *********************************************************************//
  UndoRecordDisp = dispinterface
    ['{E598E358-2852-42D4-8775-160BD91B7244}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    procedure StartCustomRecord(const Name: WideString); dispid 1;
    procedure EndCustomRecord; dispid 2;
    property IsRecordingCustomRecord: WordBool readonly dispid 3;
    property CustomRecordName: WideString readonly dispid 4;
    property CustomRecordLevel: Integer readonly dispid 5;
  end;

// *********************************************************************//
// Interface: CoAuthLock
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {99755F80-FE96-4F7D-B636-B8E800E54F44}
// *********************************************************************//
  CoAuthLock = interface(IDispatch)
    ['{99755F80-FE96-4F7D-B636-B8E800E54F44}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_type_: WdLockType; safecall;
    function Get_Owner: CoAuthor; safecall;
    function Get_Range: WordRange; safecall;
    function Get_HeaderFooter: WordBool; safecall;
    procedure Unlock; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property type_: WdLockType read Get_type_;
    property Owner: CoAuthor read Get_Owner;
    property Range: WordRange read Get_Range;
    property HeaderFooter: WordBool read Get_HeaderFooter;
  end;

// *********************************************************************//
// DispIntf:  CoAuthLockDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {99755F80-FE96-4F7D-B636-B8E800E54F44}
// *********************************************************************//
  CoAuthLockDisp = dispinterface
    ['{99755F80-FE96-4F7D-B636-B8E800E54F44}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property type_: WdLockType readonly dispid 1;
    property Owner: CoAuthor readonly dispid 2;
    property Range: WordRange readonly dispid 3;
    property HeaderFooter: WordBool readonly dispid 4;
    procedure Unlock; dispid 6;
  end;

// *********************************************************************//
// Interface: CoAuthLocks
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DFF99AC2-CD2A-43AD-91B1-A2BE40BC7146}
// *********************************************************************//
  CoAuthLocks = interface(IDispatch)
    ['{DFF99AC2-CD2A-43AD-91B1-A2BE40BC7146}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(Index: Integer): CoAuthLock; safecall;
    function Add(Range: OleVariant; Type_: WdLockType): CoAuthLock; safecall;
    procedure RemoveEphemeralLocks; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  CoAuthLocksDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {DFF99AC2-CD2A-43AD-91B1-A2BE40BC7146}
// *********************************************************************//
  CoAuthLocksDisp = dispinterface
    ['{DFF99AC2-CD2A-43AD-91B1-A2BE40BC7146}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(Index: Integer): CoAuthLock; dispid 0;
    function Add(Range: OleVariant; Type_: WdLockType): CoAuthLock; dispid 2;
    procedure RemoveEphemeralLocks; dispid 3;
  end;

// *********************************************************************//
// Interface: CoAuthUpdate
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {9E6B5EC5-E8E4-40AF-9540-6203F71E2823}
// *********************************************************************//
  CoAuthUpdate = interface(IDispatch)
    ['{9E6B5EC5-E8E4-40AF-9540-6203F71E2823}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
  end;

// *********************************************************************//
// DispIntf:  CoAuthUpdateDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {9E6B5EC5-E8E4-40AF-9540-6203F71E2823}
// *********************************************************************//
  CoAuthUpdateDisp = dispinterface
    ['{9E6B5EC5-E8E4-40AF-9540-6203F71E2823}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 1;
  end;

// *********************************************************************//
// Interface: CoAuthUpdates
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {30225CFC-5A71-4FE6-B527-90A52C54AE77}
// *********************************************************************//
  CoAuthUpdates = interface(IDispatch)
    ['{30225CFC-5A71-4FE6-B527-90A52C54AE77}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(Index: Integer): CoAuthUpdate; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  CoAuthUpdatesDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {30225CFC-5A71-4FE6-B527-90A52C54AE77}
// *********************************************************************//
  CoAuthUpdatesDisp = dispinterface
    ['{30225CFC-5A71-4FE6-B527-90A52C54AE77}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(Index: Integer): CoAuthUpdate; dispid 0;
  end;

// *********************************************************************//
// Interface: CoAuthor
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E59544D5-C299-46A0-84C1-C51AB38F9759}
// *********************************************************************//
  CoAuthor = interface(IDispatch)
    ['{E59544D5-C299-46A0-84C1-C51AB38F9759}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_ID: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_IsMe: WordBool; safecall;
    function Get_Locks: CoAuthLocks; safecall;
    function Get_EmailAddress: WideString; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property ID: WideString read Get_ID;
    property Name: WideString read Get_Name;
    property IsMe: WordBool read Get_IsMe;
    property Locks: CoAuthLocks read Get_Locks;
    property EmailAddress: WideString read Get_EmailAddress;
  end;

// *********************************************************************//
// DispIntf:  CoAuthorDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {E59544D5-C299-46A0-84C1-C51AB38F9759}
// *********************************************************************//
  CoAuthorDisp = dispinterface
    ['{E59544D5-C299-46A0-84C1-C51AB38F9759}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property ID: WideString readonly dispid 1;
    property Name: WideString readonly dispid 0;
    property IsMe: WordBool readonly dispid 3;
    property Locks: CoAuthLocks readonly dispid 4;
    property EmailAddress: WideString readonly dispid 5;
  end;

// *********************************************************************//
// Interface: CoAuthors
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {256B6ABA-6A38-4D39-971C-91FDA9922814}
// *********************************************************************//
  CoAuthors = interface(IDispatch)
    ['{256B6ABA-6A38-4D39-971C-91FDA9922814}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Item(Index: OleVariant): CoAuthor; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf:  CoAuthorsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {256B6ABA-6A38-4D39-971C-91FDA9922814}
// *********************************************************************//
  CoAuthorsDisp = dispinterface
    ['{256B6ABA-6A38-4D39-971C-91FDA9922814}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
    function Item(Index: OleVariant): CoAuthor; dispid 0;
  end;

// *********************************************************************//
// Interface: CoAuthoring
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {65DF9F31-B1E3-4651-87E8-51D55F302161}
// *********************************************************************//
  CoAuthoring = interface(IDispatch)
    ['{65DF9F31-B1E3-4651-87E8-51D55F302161}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Authors: CoAuthors; safecall;
    function Get_Me: CoAuthor; safecall;
    function Get_PendingUpdates: WordBool; safecall;
    function Get_Locks: CoAuthLocks; safecall;
    function Get_Updates: CoAuthUpdates; safecall;
    function Get_Conflicts: Conflicts; safecall;
    function Get_CanShare: WordBool; safecall;
    function Get_CanMerge: WordBool; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Authors: CoAuthors read Get_Authors;
    property Me: CoAuthor read Get_Me;
    property PendingUpdates: WordBool read Get_PendingUpdates;
    property Locks: CoAuthLocks read Get_Locks;
    property Updates: CoAuthUpdates read Get_Updates;
    property Conflicts: Conflicts read Get_Conflicts;
    property CanShare: WordBool read Get_CanShare;
    property CanMerge: WordBool read Get_CanMerge;
  end;

// *********************************************************************//
// DispIntf:  CoAuthoringDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {65DF9F31-B1E3-4651-87E8-51D55F302161}
// *********************************************************************//
  CoAuthoringDisp = dispinterface
    ['{65DF9F31-B1E3-4651-87E8-51D55F302161}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Authors: CoAuthors readonly dispid 1;
    property Me: CoAuthor readonly dispid 2;
    property PendingUpdates: WordBool readonly dispid 3;
    property Locks: CoAuthLocks readonly dispid 5;
    property Updates: CoAuthUpdates readonly dispid 6;
    property Conflicts: Conflicts readonly dispid 7;
    property CanShare: WordBool readonly dispid 8;
    property CanMerge: WordBool readonly dispid 9;
  end;

// *********************************************************************//
// Interface: Conflicts
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C2B83A65-B061-4469-83B6-8877437CB8A0}
// *********************************************************************//
  Conflicts = interface(IDispatch)
    ['{C2B83A65-B061-4469-83B6-8877437CB8A0}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(Index: Integer): Conflict; safecall;
    procedure AcceptAll; safecall;
    procedure RejectAll; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ConflictsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {C2B83A65-B061-4469-83B6-8877437CB8A0}
// *********************************************************************//
  ConflictsDisp = dispinterface
    ['{C2B83A65-B061-4469-83B6-8877437CB8A0}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 5;
    function Item(Index: Integer): Conflict; dispid 0;
    procedure AcceptAll; dispid 101;
    procedure RejectAll; dispid 102;
  end;

// *********************************************************************//
// Interface: Conflict
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6215E4B1-545A-406E-9824-0A5B5AC8AD21}
// *********************************************************************//
  Conflict = interface(IDispatch)
    ['{6215E4B1-545A-406E-9824-0A5B5AC8AD21}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Range: WordRange; safecall;
    function Get_type_: WdRevisionType; safecall;
    function Get_Index: Integer; safecall;
    procedure Accept; safecall;
    procedure Reject; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Range: WordRange read Get_Range;
    property type_: WdRevisionType read Get_type_;
    property Index: Integer read Get_Index;
  end;

// *********************************************************************//
// DispIntf:  ConflictDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {6215E4B1-545A-406E-9824-0A5B5AC8AD21}
// *********************************************************************//
  ConflictDisp = dispinterface
    ['{6215E4B1-545A-406E-9824-0A5B5AC8AD21}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Range: WordRange readonly dispid 3;
    property type_: WdRevisionType readonly dispid 4;
    property Index: Integer readonly dispid 5;
    procedure Accept; dispid 101;
    procedure Reject; dispid 102;
  end;

// *********************************************************************//
// Interface: ProtectedViewWindows
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FD0A74E8-C719-49F6-BA1B-F6D9839D1AB9}
// *********************************************************************//
  ProtectedViewWindows = interface(IDispatch)
    ['{FD0A74E8-C719-49F6-BA1B-F6D9839D1AB9}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_Count: Integer; safecall;
    function Item(var Index: OleVariant): ProtectedViewWindow; safecall;
    function Open(var FileName: OleVariant; var AddToRecentFiles: OleVariant; 
                  var PasswordDocument: OleVariant; var Visible: OleVariant; 
                  var OpenAndRepair: OleVariant): ProtectedViewWindow; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  ProtectedViewWindowsDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {FD0A74E8-C719-49F6-BA1B-F6D9839D1AB9}
// *********************************************************************//
  ProtectedViewWindowsDisp = dispinterface
    ['{FD0A74E8-C719-49F6-BA1B-F6D9839D1AB9}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property _NewEnum: IUnknown readonly dispid -4;
    property Count: Integer readonly dispid 1;
    function Item(var Index: OleVariant): ProtectedViewWindow; dispid 0;
    function Open(var FileName: OleVariant; var AddToRecentFiles: OleVariant; 
                  var PasswordDocument: OleVariant; var Visible: OleVariant; 
                  var OpenAndRepair: OleVariant): ProtectedViewWindow; dispid 2;
  end;

// *********************************************************************//
// Interface: ProtectedViewWindow
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F743EDD0-9B97-4B09-89CC-77BE19B51481}
// *********************************************************************//
  ProtectedViewWindow = interface(IDispatch)
    ['{F743EDD0-9B97-4B09-89CC-77BE19B51481}']
    function Get_Application: WordApplication; safecall;
    function Get_Creator: Integer; safecall;
    function Get_Parent: IDispatch; safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const prop: WideString); safecall;
    function Get_Document: WordDocument; safecall;
    function Get_Left: Integer; safecall;
    procedure Set_Left(prop: Integer); safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(prop: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(prop: Integer); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(prop: Integer); safecall;
    function Get_WindowState: WdWindowState; safecall;
    procedure Set_WindowState(prop: WdWindowState); safecall;
    function Get_Active: WordBool; safecall;
    function Get_Index: Integer; safecall;
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(prop: WordBool); safecall;
    function Get_SourceName: WideString; safecall;
    function Get_SourcePath: WideString; safecall;
    procedure Activate; safecall;
    function Edit(var PasswordTemplate: OleVariant; var WritePasswordDocument: OleVariant; 
                  var WritePasswordTemplate: OleVariant): WordDocument; safecall;
    procedure Close; safecall;
    procedure ToggleRibbon; safecall;
    property Application: WordApplication read Get_Application;
    property Creator: Integer read Get_Creator;
    property Parent: IDispatch read Get_Parent;
    property Caption: WideString read Get_Caption write Set_Caption;
    property Document: WordDocument read Get_Document;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property WindowState: WdWindowState read Get_WindowState write Set_WindowState;
    property Active: WordBool read Get_Active;
    property Index: Integer read Get_Index;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property SourceName: WideString read Get_SourceName;
    property SourcePath: WideString read Get_SourcePath;
  end;

// *********************************************************************//
// DispIntf:  ProtectedViewWindowDisp
// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID:      {F743EDD0-9B97-4B09-89CC-77BE19B51481}
// *********************************************************************//
  ProtectedViewWindowDisp = dispinterface
    ['{F743EDD0-9B97-4B09-89CC-77BE19B51481}']
    property Application: WordApplication readonly dispid 1000;
    property Creator: Integer readonly dispid 1001;
    property Parent: IDispatch readonly dispid 1002;
    property Caption: WideString dispid 0;
    property Document: WordDocument readonly dispid 1;
    property Left: Integer dispid 2;
    property Top: Integer dispid 3;
    property Width: Integer dispid 4;
    property Height: Integer dispid 5;
    property WindowState: WdWindowState dispid 6;
    property Active: WordBool readonly dispid 7;
    property Index: Integer readonly dispid 8;
    property Visible: WordBool dispid 9;
    property SourceName: WideString readonly dispid 10;
    property SourcePath: WideString readonly dispid 11;
    procedure Activate; dispid 100;
    function Edit(var PasswordTemplate: OleVariant; var WritePasswordDocument: OleVariant; 
                  var WritePasswordTemplate: OleVariant): WordDocument; dispid 101;
    procedure Close; dispid 102;
    procedure ToggleRibbon; dispid 103;
  end;

// *********************************************************************//
// The Class CoWordGlobal provides a Create and CreateRemote method to          
// create instances of the default interface _Global exposed by              
// the CoClass WordGlobal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordGlobal = class
    class function Create: _Global;
    class function CreateRemote(const MachineName: string): _Global;
  end;

// *********************************************************************//
// The Class CoWordFont provides a Create and CreateRemote method to          
// create instances of the default interface _Font exposed by              
// the CoClass WordFont. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordFont = class
    class function Create: _Font;
    class function CreateRemote(const MachineName: string): _Font;
  end;

// *********************************************************************//
// The Class CoWordParagraphFormat provides a Create and CreateRemote method to          
// create instances of the default interface _ParagraphFormat exposed by              
// the CoClass WordParagraphFormat. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordParagraphFormat = class
    class function Create: _ParagraphFormat;
    class function CreateRemote(const MachineName: string): _ParagraphFormat;
  end;

// *********************************************************************//
// The Class CoWordOLEControl provides a Create and CreateRemote method to          
// create instances of the default interface _OLEControl exposed by              
// the CoClass WordOLEControl. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordOLEControl = class
    class function Create: _OLEControl;
    class function CreateRemote(const MachineName: string): _OLEControl;
  end;

// *********************************************************************//
// The Class CoWordLetterContent provides a Create and CreateRemote method to          
// create instances of the default interface _LetterContent exposed by              
// the CoClass WordLetterContent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordLetterContent = class
    class function Create: _LetterContent;
    class function CreateRemote(const MachineName: string): _LetterContent;
  end;

// *********************************************************************//
// The Class CoWordApplication provides a Create and CreateRemote method to          
// create instances of the default interface _Application exposed by              
// the CoClass WordApplication. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordApplication = class
    class function Create: _Application;
    class function CreateRemote(const MachineName: string): _Application;
  end;

// *********************************************************************//
// The Class CoWordDocument provides a Create and CreateRemote method to          
// create instances of the default interface _Document exposed by              
// the CoClass WordDocument. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWordDocument = class
    class function Create: _Document;
    class function CreateRemote(const MachineName: string): _Document;
  end;

implementation

uses ComObj;

class function CoWordGlobal.Create: _Global;
begin
  Result := CreateComObject(CLASS_WordGlobal) as _Global;
end;

class function CoWordGlobal.CreateRemote(const MachineName: string): _Global;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordGlobal) as _Global;
end;

class function CoWordFont.Create: _Font;
begin
  Result := CreateComObject(CLASS_WordFont) as _Font;
end;

class function CoWordFont.CreateRemote(const MachineName: string): _Font;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordFont) as _Font;
end;

class function CoWordParagraphFormat.Create: _ParagraphFormat;
begin
  Result := CreateComObject(CLASS_WordParagraphFormat) as _ParagraphFormat;
end;

class function CoWordParagraphFormat.CreateRemote(const MachineName: string): _ParagraphFormat;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordParagraphFormat) as _ParagraphFormat;
end;

class function CoWordOLEControl.Create: _OLEControl;
begin
  Result := CreateComObject(CLASS_WordOLEControl) as _OLEControl;
end;

class function CoWordOLEControl.CreateRemote(const MachineName: string): _OLEControl;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordOLEControl) as _OLEControl;
end;

class function CoWordLetterContent.Create: _LetterContent;
begin
  Result := CreateComObject(CLASS_WordLetterContent) as _LetterContent;
end;

class function CoWordLetterContent.CreateRemote(const MachineName: string): _LetterContent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordLetterContent) as _LetterContent;
end;

class function CoWordApplication.Create: _Application;
begin
  Result := CreateComObject(CLASS_WordApplication) as _Application;
end;

class function CoWordApplication.CreateRemote(const MachineName: string): _Application;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordApplication) as _Application;
end;

class function CoWordDocument.Create: _Document;
begin
  Result := CreateComObject(CLASS_WordDocument) as _Document;
end;

class function CoWordDocument.CreateRemote(const MachineName: string): _Document;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WordDocument) as _Document;
end;

end.
