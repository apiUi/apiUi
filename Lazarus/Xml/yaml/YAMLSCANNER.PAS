
unit yamlScanner;

interface
uses CustScanner, Classes, yamlParser;

type TyamlScanner = class (TCustScanner)
published
  property OnNeedData: TOnNeedDataEvent read FOnNeedData write FOnNeedData;
  property OnOutput: TNotifyEvent read FOnOutput write FOnOutput;
  property OnEcho: TNotifyEvent read FOnEcho write FOnEcho;
  property OnDefaultAction: TNotifyEvent read FOnDefaultAction write FOnDefaultAction;
  property OnError: TOnScannerErrorEvent read FOnError write FOnError;
public
  function yylex: Integer; override;
end;

implementation
  uses SysUtils;

const InitState = 2;
const MidlState = 4;
const RighState = 6;



function TyamlScanner.yylex : Integer;

procedure yyaction ( yyruleno : Integer );
  (* local definitions: *)

begin
  (* actions: *)
  case yyruleno of
  1:
                              return (_COMMENT);
  2:
{LineCont}                    return (_LINECONT);
  3:
                              begin
                                Start (InitState);
                                return (_NEWLINE);
                              end;
  4:
                              return (_WHITESPACE);
  5:
                              begin
                                Start (InitState);
                                return (_COMMENT);
                              end;
  6:
                              return (_VALUE);
  7:
                              begin
                                Start (MidlState);
                                return (_NAME);
                              end;
  8:
                              return (_INDENT);
  9:
                              return (_HYPHENINDENT);
  10:
                              return (_VALUE);
  11:
                              return (_REPLCRANDSTRIP);
  12:
                              return (_REPLCRANDKEEP);
  13:
                              return (_REPLCRANDCLIP);
  14:
                              return (_KEEPCRANDSTRIP);
  15:
                              return (_KEEPCRANDKEEP);
  16:
                              return (_KEEPCRANDCLIP);
  17:
                              return (_WHITESPACE);
  18:
                              begin
                                Start (InitState);
                                return (_NEWLINE);
                              end;
  19:
                              begin
                                Start (RighState);
                                return (_WHITESPACE);
                              end;
  20:
                              begin
                                Start (RighState);
                                return (_REPLCRANDSTRIP);
                              end;
  21:
                              begin
                                Start (RighState);
                                return (_REPLCRANDKEEP);
                              end;
  22:
                              begin
                                Start (RighState);
                                return (_REPLCRANDCLIP);
                              end;
  23:
                              begin
                                Start (RighState);
                                return (_KEEPCRANDSTRIP);
                              end;
  24:
                              begin
                                Start (RighState);
                                return (_KEEPCRANDKEEP);
                              end;
  25:
                              begin
                                Start (RighState);
                                return (_KEEPCRANDCLIP);
                              end;
  26:
                              begin
                                Start (InitState);
                                return (_WHITESPACE);
                              end;
  27:
                              return (_VALUE);
  28:
                              begin
                                Start (InitState);
                                return (_NEWLINE);
                              end;
  29:
                              return (_REPLCRANDSTRIP);
  30:
                              return (_REPLCRANDKEEP);
  31:
                              return (_REPLCRANDCLIP);
  32:
                              return (_KEEPCRANDSTRIP);
  33:
                              return (_KEEPCRANDKEEP);
  34:
                              return (_KEEPCRANDCLIP);
  35:
                              return (_WHITESPACE);
  36:
                              return (_VALUE);
  37:
                              return (_VALUE);

  end;
end(*yyaction*);

(* DFA table: *)

type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 162;
yynmatches = 162;
yyntrans   = 322;
yynstates  = 134;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  { 1: }
  { 2: }
  { 3: }
  { 4: }
  { 5: }
  { 6: }
  { 7: }
  { 8: }
  { 9: }
  { 10: }
  3,
  { 11: }
  4,
  { 12: }
  5,
  { 13: }
  9,
  17,
  { 14: }
  10,
  17,
  { 15: }
  4,
  10,
  17,
  { 16: }
  5,
  10,
  17,
  { 17: }
  10,
  17,
  { 18: }
  10,
  17,
  { 19: }
  10,
  17,
  { 20: }
  8,
  { 21: }
  10,
  13,
  17,
  { 22: }
  10,
  16,
  17,
  { 23: }
  17,
  { 24: }
  26,
  { 25: }
  26,
  { 26: }
  3,
  18,
  { 27: }
  4,
  26,
  { 28: }
  5,
  26,
  { 29: }
  19,
  { 30: }
  22,
  26,
  { 31: }
  25,
  26,
  { 32: }
  26,
  { 33: }
  26,
  { 34: }
  26,
  { 35: }
  36,
  { 36: }
  3,
  28,
  { 37: }
  4,
  36,
  { 38: }
  5,
  36,
  { 39: }
  31,
  36,
  { 40: }
  34,
  { 41: }
  35,
  36,
  { 42: }
  36,
  { 43: }
  36,
  { 44: }
  36,
  { 45: }
  { 46: }
  { 47: }
  10,
  { 48: }
  10,
  { 49: }
  7,
  { 50: }
  5,
  7,
  { 51: }
  5,
  10,
  { 52: }
  10,
  { 53: }
  7,
  { 54: }
  6,
  10,
  { 55: }
  10,
  { 56: }
  10,
  { 57: }
  7,
  { 58: }
  10,
  { 59: }
  9,
  { 60: }
  10,
  11,
  { 61: }
  10,
  12,
  { 62: }
  10,
  13,
  { 63: }
  10,
  14,
  { 64: }
  10,
  15,
  { 65: }
  10,
  16,
  { 66: }
  20,
  { 67: }
  21,
  { 68: }
  22,
  { 69: }
  23,
  { 70: }
  24,
  { 71: }
  25,
  { 72: }
  { 73: }
  { 74: }
  27,
  { 75: }
  { 76: }
  { 77: }
  36,
  { 78: }
  29,
  36,
  { 79: }
  30,
  36,
  { 80: }
  31,
  36,
  { 81: }
  32,
  { 82: }
  33,
  { 83: }
  34,
  { 84: }
  36,
  37,
  { 85: }
  { 86: }
  { 87: }
  { 88: }
  { 89: }
  1,
  { 90: }
  2,
  { 91: }
  2,
  10,
  { 92: }
  6,
  10,
  { 93: }
  { 94: }
  { 95: }
  6,
  { 96: }
  6,
  10,
  { 97: }
  { 98: }
  { 99: }
  10,
  11,
  { 100: }
  10,
  12,
  { 101: }
  7,
  13,
  { 102: }
  10,
  14,
  { 103: }
  10,
  15,
  { 104: }
  7,
  16,
  { 105: }
  20,
  { 106: }
  21,
  { 107: }
  23,
  { 108: }
  24,
  { 109: }
  27,
  { 110: }
  27,
  { 111: }
  1,
  36,
  { 112: }
  29,
  36,
  { 113: }
  30,
  36,
  { 114: }
  31,
  { 115: }
  32,
  { 116: }
  33,
  { 117: }
  37,
  { 118: }
  37,
  { 119: }
  37,
  { 120: }
  6,
  { 121: }
  6,
  { 122: }
  7,
  11,
  { 123: }
  7,
  12,
  { 124: }
  13,
  { 125: }
  7,
  14,
  { 126: }
  7,
  15,
  { 127: }
  16,
  { 128: }
  29,
  { 129: }
  30,
  { 130: }
  11,
  { 131: }
  12,
  { 132: }
  14,
  { 133: }
  15
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
{ 1: }
{ 2: }
{ 3: }
{ 4: }
{ 5: }
{ 6: }
{ 7: }
{ 8: }
{ 9: }
{ 10: }
  3,
{ 11: }
  4,
{ 12: }
  5,
{ 13: }
  9,
  17,
{ 14: }
  10,
  17,
{ 15: }
  4,
  10,
  17,
{ 16: }
  5,
  10,
  17,
{ 17: }
  10,
  17,
{ 18: }
  10,
  17,
{ 19: }
  10,
  17,
{ 20: }
  8,
{ 21: }
  10,
  13,
  17,
{ 22: }
  10,
  16,
  17,
{ 23: }
  17,
{ 24: }
  26,
{ 25: }
  26,
{ 26: }
  3,
  18,
{ 27: }
  4,
  26,
{ 28: }
  5,
  26,
{ 29: }
  19,
{ 30: }
  22,
  26,
{ 31: }
  25,
  26,
{ 32: }
  26,
{ 33: }
  26,
{ 34: }
  26,
{ 35: }
  36,
{ 36: }
  3,
  28,
{ 37: }
  4,
  36,
{ 38: }
  5,
  36,
{ 39: }
  31,
  36,
{ 40: }
  34,
{ 41: }
  35,
  36,
{ 42: }
  36,
{ 43: }
  36,
{ 44: }
  36,
{ 45: }
{ 46: }
{ 47: }
  10,
{ 48: }
  10,
{ 49: }
  7,
{ 50: }
  5,
  7,
{ 51: }
  5,
  10,
{ 52: }
  10,
{ 53: }
  7,
{ 54: }
  6,
  10,
{ 55: }
  10,
{ 56: }
  10,
{ 57: }
  7,
{ 58: }
  10,
{ 59: }
  9,
{ 60: }
  10,
  11,
{ 61: }
  10,
  12,
{ 62: }
  10,
  13,
{ 63: }
  10,
  14,
{ 64: }
  10,
  15,
{ 65: }
  10,
  16,
{ 66: }
  20,
{ 67: }
  21,
{ 68: }
  22,
{ 69: }
  23,
{ 70: }
  24,
{ 71: }
  25,
{ 72: }
{ 73: }
{ 74: }
  27,
{ 75: }
{ 76: }
{ 77: }
  36,
{ 78: }
  29,
  36,
{ 79: }
  30,
  36,
{ 80: }
  31,
  36,
{ 81: }
  32,
{ 82: }
  33,
{ 83: }
  34,
{ 84: }
  36,
  37,
{ 85: }
{ 86: }
{ 87: }
{ 88: }
{ 89: }
  1,
{ 90: }
  2,
{ 91: }
  2,
  10,
{ 92: }
  6,
  10,
{ 93: }
{ 94: }
{ 95: }
  6,
{ 96: }
  6,
  10,
{ 97: }
{ 98: }
{ 99: }
  10,
  11,
{ 100: }
  10,
  12,
{ 101: }
  7,
  13,
{ 102: }
  10,
  14,
{ 103: }
  10,
  15,
{ 104: }
  7,
  16,
{ 105: }
  20,
{ 106: }
  21,
{ 107: }
  23,
{ 108: }
  24,
{ 109: }
  27,
{ 110: }
  27,
{ 111: }
  1,
  36,
{ 112: }
  29,
  36,
{ 113: }
  30,
  36,
{ 114: }
  31,
{ 115: }
  32,
{ 116: }
  33,
{ 117: }
  37,
{ 118: }
  37,
{ 119: }
  37,
{ 120: }
  6,
{ 121: }
  6,
{ 122: }
  7,
  11,
{ 123: }
  7,
  12,
{ 124: }
  13,
{ 125: }
  7,
  14,
{ 126: }
  7,
  15,
{ 127: }
  16,
{ 128: }
  29,
{ 129: }
  30,
{ 130: }
  11,
{ 131: }
  12,
{ 132: }
  14,
{ 133: }
  15
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
  ( cc: [ #10 ]; s: 10),
  ( cc: [ #13 ]; s: 11),
  ( cc: [ '#' ]; s: 12),
  ( cc: [ '-' ]; s: 8),
  ( cc: [ '\' ]; s: 9),
{ 1: }
  ( cc: [ #10 ]; s: 10),
  ( cc: [ #13 ]; s: 11),
  ( cc: [ '#' ]; s: 12),
  ( cc: [ '-' ]; s: 8),
  ( cc: [ '\' ]; s: 9),
{ 2: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!','$'..'&','('..',',
            '.'..'9',';'..'=','?'..'[',']'..'{','}'..#255 ]; s: 19),
  ( cc: [ #10 ]; s: 10),
  ( cc: [ #13 ]; s: 15),
  ( cc: [ ' ' ]; s: 20),
  ( cc: [ '"' ]; s: 17),
  ( cc: [ '#' ]; s: 16),
  ( cc: [ '''' ]; s: 18),
  ( cc: [ '-' ]; s: 13),
  ( cc: [ ':' ]; s: 23),
  ( cc: [ '>' ]; s: 21),
  ( cc: [ '\' ]; s: 14),
  ( cc: [ '|' ]; s: 22),
{ 3: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!','$'..'&','('..',',
            '.'..'9',';'..'=','?'..'[',']'..'{','}'..#255 ]; s: 19),
  ( cc: [ #10 ]; s: 10),
  ( cc: [ #13 ]; s: 15),
  ( cc: [ ' ' ]; s: 20),
  ( cc: [ '"' ]; s: 17),
  ( cc: [ '#' ]; s: 16),
  ( cc: [ '''' ]; s: 18),
  ( cc: [ '-' ]; s: 13),
  ( cc: [ ':' ]; s: 23),
  ( cc: [ '>' ]; s: 21),
  ( cc: [ '\' ]; s: 14),
  ( cc: [ '|' ]; s: 22),
{ 4: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!','$'..'&','('..',',
            '.'..'=','?'..'[',']'..'{','}'..#255 ]; s: 32),
  ( cc: [ #10 ]; s: 26),
  ( cc: [ #13 ]; s: 27),
  ( cc: [ ' ' ]; s: 29),
  ( cc: [ '"' ]; s: 33),
  ( cc: [ '#' ]; s: 28),
  ( cc: [ '''' ]; s: 34),
  ( cc: [ '-' ]; s: 24),
  ( cc: [ '>' ]; s: 30),
  ( cc: [ '\' ]; s: 25),
  ( cc: [ '|' ]; s: 31),
{ 5: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!','$'..'&','('..',',
            '.'..'=','?'..'[',']'..'{','}'..#255 ]; s: 32),
  ( cc: [ #10 ]; s: 26),
  ( cc: [ #13 ]; s: 27),
  ( cc: [ ' ' ]; s: 29),
  ( cc: [ '"' ]; s: 33),
  ( cc: [ '#' ]; s: 28),
  ( cc: [ '''' ]; s: 34),
  ( cc: [ '-' ]; s: 24),
  ( cc: [ '>' ]; s: 30),
  ( cc: [ '\' ]; s: 25),
  ( cc: [ '|' ]; s: 31),
{ 6: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!','$'..'&','('..',',
            '.'..'=','?'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ #10 ]; s: 36),
  ( cc: [ #13 ]; s: 37),
  ( cc: [ ' ' ]; s: 41),
  ( cc: [ '"' ]; s: 43),
  ( cc: [ '#' ]; s: 38),
  ( cc: [ '''' ]; s: 44),
  ( cc: [ '-' ]; s: 35),
  ( cc: [ '>' ]; s: 39),
  ( cc: [ '\' ]; s: 9),
  ( cc: [ '|' ]; s: 40),
{ 7: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!','$'..'&','('..',',
            '.'..'=','?'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ #10 ]; s: 36),
  ( cc: [ #13 ]; s: 37),
  ( cc: [ ' ' ]; s: 41),
  ( cc: [ '"' ]; s: 43),
  ( cc: [ '#' ]; s: 38),
  ( cc: [ '''' ]; s: 44),
  ( cc: [ '-' ]; s: 35),
  ( cc: [ '>' ]; s: 39),
  ( cc: [ '\' ]; s: 9),
  ( cc: [ '|' ]; s: 40),
{ 8: }
  ( cc: [ '-' ]; s: 45),
{ 9: }
  ( cc: [ #10,#13,' ' ]; s: 46),
{ 10: }
{ 11: }
{ 12: }
  ( cc: [ #1..#9,#11..#255 ]; s: 12),
{ 13: }
  ( cc: [ '-' ]; s: 45),
{ 14: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!'..'9',';'..#255 ]; s: 48),
  ( cc: [ #10 ]; s: 46),
  ( cc: [ #13,' ' ]; s: 47),
  ( cc: [ ':' ]; s: 49),
{ 15: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 48),
  ( cc: [ ':' ]; s: 49),
{ 16: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 51),
  ( cc: [ ':' ]; s: 50),
{ 17: }
  ( cc: [ #1..#9,#11..'!','#'..'9',';'..'[',']'..#255 ]; s: 55),
  ( cc: [ '"' ]; s: 54),
  ( cc: [ ':' ]; s: 53),
  ( cc: [ '\' ]; s: 52),
{ 18: }
  ( cc: [ #1..#9,#11..'&','('..'9',';'..'[',']'..#255 ]; s: 58),
  ( cc: [ '''' ]; s: 54),
  ( cc: [ ':' ]; s: 57),
  ( cc: [ '\' ]; s: 56),
{ 19: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 48),
  ( cc: [ ':' ]; s: 49),
{ 20: }
  ( cc: [ ' ' ]; s: 20),
  ( cc: [ '-' ]; s: 59),
{ 21: }
  ( cc: [ #1..#9,#11..'"','$'..'*',',','.'..'9',';'..#255 ]; s: 48),
  ( cc: [ '#' ]; s: 62),
  ( cc: [ '+' ]; s: 61),
  ( cc: [ '-' ]; s: 60),
  ( cc: [ ':' ]; s: 49),
{ 22: }
  ( cc: [ #1..#9,#11..'"','$'..'*',',','.'..'9',';'..#255 ]; s: 48),
  ( cc: [ '#' ]; s: 65),
  ( cc: [ '+' ]; s: 64),
  ( cc: [ '-' ]; s: 63),
  ( cc: [ ':' ]; s: 49),
{ 23: }
{ 24: }
  ( cc: [ '-' ]; s: 45),
{ 25: }
  ( cc: [ #10,#13,' ' ]; s: 46),
{ 26: }
{ 27: }
{ 28: }
  ( cc: [ #1..#9,#11..#255 ]; s: 12),
{ 29: }
  ( cc: [ ' ' ]; s: 29),
{ 30: }
  ( cc: [ '#' ]; s: 68),
  ( cc: [ '+' ]; s: 67),
  ( cc: [ '-' ]; s: 66),
{ 31: }
  ( cc: [ '#' ]; s: 71),
  ( cc: [ '+' ]; s: 70),
  ( cc: [ '-' ]; s: 69),
{ 32: }
{ 33: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 73),
  ( cc: [ '"' ]; s: 74),
  ( cc: [ '\' ]; s: 72),
{ 34: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 76),
  ( cc: [ '''' ]; s: 74),
  ( cc: [ '\' ]; s: 75),
{ 35: }
  ( cc: [ #1..#9,#11..',','.'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ '-' ]; s: 77),
{ 36: }
{ 37: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 42),
{ 38: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 38),
  ( cc: [ '\','|' ]; s: 12),
{ 39: }
  ( cc: [ #1..#9,#11..'"','$'..'*',',','.'..'[',']'..'{',
            '}'..#255 ]; s: 42),
  ( cc: [ '#' ]; s: 80),
  ( cc: [ '+' ]; s: 79),
  ( cc: [ '-' ]; s: 78),
{ 40: }
  ( cc: [ '#' ]; s: 83),
  ( cc: [ '+' ]; s: 82),
  ( cc: [ '-' ]; s: 81),
{ 41: }
  ( cc: [ #1..#9,#11..#31,'!'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ ' ' ]; s: 41),
{ 42: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 42),
{ 43: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..'{','}'..#255 ]; s: 43),
  ( cc: [ '"' ]; s: 84),
  ( cc: [ '\' ]; s: 85),
  ( cc: [ '|' ]; s: 86),
{ 44: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..'{','}'..#255 ]; s: 44),
  ( cc: [ '''' ]; s: 84),
  ( cc: [ '\' ]; s: 87),
  ( cc: [ '|' ]; s: 88),
{ 45: }
  ( cc: [ '-' ]; s: 89),
{ 46: }
  ( cc: [ #10,#13,' ' ]; s: 46),
  ( cc: [ '\' ]; s: 90),
{ 47: }
  ( cc: [ #1..#9,#11,#12,#14..#31,'!'..'9',';'..'[',
            ']'..#255 ]; s: 48),
  ( cc: [ #10 ]; s: 46),
  ( cc: [ #13,' ' ]; s: 47),
  ( cc: [ ':' ]; s: 49),
  ( cc: [ '\' ]; s: 91),
{ 48: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 48),
  ( cc: [ ':' ]; s: 49),
{ 49: }
{ 50: }
  ( cc: [ #1..#9,#11..#255 ]; s: 12),
{ 51: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 51),
  ( cc: [ ':' ]; s: 50),
{ 52: }
  ( cc: [ #1..#9,#11..'!','#'..'9',';'..'[',']'..#255 ]; s: 55),
  ( cc: [ '"' ]; s: 92),
  ( cc: [ ':' ]; s: 53),
  ( cc: [ '\' ]; s: 52),
{ 53: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 94),
  ( cc: [ '"' ]; s: 95),
  ( cc: [ '\' ]; s: 93),
{ 54: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 48),
  ( cc: [ ':' ]; s: 49),
{ 55: }
  ( cc: [ #1..#9,#11..'!','#'..'9',';'..'[',']'..#255 ]; s: 55),
  ( cc: [ '"' ]; s: 54),
  ( cc: [ ':' ]; s: 53),
  ( cc: [ '\' ]; s: 52),
{ 56: }
  ( cc: [ #1..#9,#11..'&','('..'9',';'..'[',']'..#255 ]; s: 58),
  ( cc: [ '''' ]; s: 96),
  ( cc: [ ':' ]; s: 57),
  ( cc: [ '\' ]; s: 56),
{ 57: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 98),
  ( cc: [ '''' ]; s: 95),
  ( cc: [ '\' ]; s: 97),
{ 58: }
  ( cc: [ #1..#9,#11..'&','('..'9',';'..'[',']'..#255 ]; s: 58),
  ( cc: [ '''' ]; s: 54),
  ( cc: [ ':' ]; s: 57),
  ( cc: [ '\' ]; s: 56),
{ 59: }
{ 60: }
  ( cc: [ #1..#9,#11..'"','$'..'9',';'..#255 ]; s: 48),
  ( cc: [ '#' ]; s: 99),
  ( cc: [ ':' ]; s: 49),
{ 61: }
  ( cc: [ #1..#9,#11..'"','$'..'9',';'..#255 ]; s: 48),
  ( cc: [ '#' ]; s: 100),
  ( cc: [ ':' ]; s: 49),
{ 62: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 62),
  ( cc: [ ':' ]; s: 101),
{ 63: }
  ( cc: [ #1..#9,#11..'"','$'..'9',';'..#255 ]; s: 48),
  ( cc: [ '#' ]; s: 102),
  ( cc: [ ':' ]; s: 49),
{ 64: }
  ( cc: [ #1..#9,#11..'"','$'..'9',';'..#255 ]; s: 48),
  ( cc: [ '#' ]; s: 103),
  ( cc: [ ':' ]; s: 49),
{ 65: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 65),
  ( cc: [ ':' ]; s: 104),
{ 66: }
  ( cc: [ '#' ]; s: 105),
{ 67: }
  ( cc: [ '#' ]; s: 106),
{ 68: }
  ( cc: [ #1..#9,#11..#255 ]; s: 68),
{ 69: }
  ( cc: [ '#' ]; s: 107),
{ 70: }
  ( cc: [ '#' ]; s: 108),
{ 71: }
  ( cc: [ #1..#9,#11..#255 ]; s: 71),
{ 72: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 73),
  ( cc: [ '"' ]; s: 109),
  ( cc: [ '\' ]; s: 72),
{ 73: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 73),
  ( cc: [ '"' ]; s: 74),
  ( cc: [ '\' ]; s: 72),
{ 74: }
{ 75: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 76),
  ( cc: [ '''' ]; s: 110),
  ( cc: [ '\' ]; s: 75),
{ 76: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 76),
  ( cc: [ '''' ]; s: 74),
  ( cc: [ '\' ]; s: 75),
{ 77: }
  ( cc: [ #1..#9,#11..',','.'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ '-' ]; s: 111),
{ 78: }
  ( cc: [ #1..#9,#11..'"','$'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ '#' ]; s: 112),
{ 79: }
  ( cc: [ #1..#9,#11..'"','$'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ '#' ]; s: 113),
{ 80: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 80),
  ( cc: [ '\','|' ]; s: 114),
{ 81: }
  ( cc: [ '#' ]; s: 115),
{ 82: }
  ( cc: [ '#' ]; s: 116),
{ 83: }
  ( cc: [ #1..#9,#11..#255 ]; s: 83),
{ 84: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 42),
{ 85: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 86),
  ( cc: [ '"' ]; s: 117),
  ( cc: [ '\' ]; s: 85),
{ 86: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 86),
  ( cc: [ '"' ]; s: 118),
  ( cc: [ '\' ]; s: 85),
{ 87: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 88),
  ( cc: [ '''' ]; s: 119),
  ( cc: [ '\' ]; s: 87),
{ 88: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 88),
  ( cc: [ '''' ]; s: 118),
  ( cc: [ '\' ]; s: 87),
{ 89: }
  ( cc: [ ' ' ]; s: 89),
{ 90: }
{ 91: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 48),
  ( cc: [ ':' ]; s: 49),
{ 92: }
  ( cc: [ #1..#9,#11..'!','#'..'9',';'..'[',']'..#255 ]; s: 55),
  ( cc: [ '"' ]; s: 54),
  ( cc: [ ':' ]; s: 53),
  ( cc: [ '\' ]; s: 52),
{ 93: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 94),
  ( cc: [ '"' ]; s: 120),
  ( cc: [ '\' ]; s: 93),
{ 94: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 94),
  ( cc: [ '"' ]; s: 95),
  ( cc: [ '\' ]; s: 93),
{ 95: }
{ 96: }
  ( cc: [ #1..#9,#11..'&','('..'9',';'..'[',']'..#255 ]; s: 58),
  ( cc: [ '''' ]; s: 54),
  ( cc: [ ':' ]; s: 57),
  ( cc: [ '\' ]; s: 56),
{ 97: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 98),
  ( cc: [ '''' ]; s: 121),
  ( cc: [ '\' ]; s: 97),
{ 98: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 98),
  ( cc: [ '''' ]; s: 95),
  ( cc: [ '\' ]; s: 97),
{ 99: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 99),
  ( cc: [ ':' ]; s: 122),
{ 100: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 100),
  ( cc: [ ':' ]; s: 123),
{ 101: }
  ( cc: [ #1..#9,#11..#255 ]; s: 124),
{ 102: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 102),
  ( cc: [ ':' ]; s: 125),
{ 103: }
  ( cc: [ #1..#9,#11..'9',';'..#255 ]; s: 103),
  ( cc: [ ':' ]; s: 126),
{ 104: }
  ( cc: [ #1..#9,#11..#255 ]; s: 127),
{ 105: }
  ( cc: [ #1..#9,#11..#255 ]; s: 105),
{ 106: }
  ( cc: [ #1..#9,#11..#255 ]; s: 106),
{ 107: }
  ( cc: [ #1..#9,#11..#255 ]; s: 107),
{ 108: }
  ( cc: [ #1..#9,#11..#255 ]; s: 108),
{ 109: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 73),
  ( cc: [ '"' ]; s: 74),
  ( cc: [ '\' ]; s: 72),
{ 110: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 76),
  ( cc: [ '''' ]; s: 74),
  ( cc: [ '\' ]; s: 75),
{ 111: }
  ( cc: [ #1..#9,#11..#31,'!'..'[',']'..'{','}'..#255 ]; s: 42),
  ( cc: [ ' ' ]; s: 111),
{ 112: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 112),
  ( cc: [ '\','|' ]; s: 128),
{ 113: }
  ( cc: [ #1..#9,#11..'[',']'..'{','}'..#255 ]; s: 113),
  ( cc: [ '\','|' ]; s: 129),
{ 114: }
  ( cc: [ #1..#9,#11..#255 ]; s: 114),
{ 115: }
  ( cc: [ #1..#9,#11..#255 ]; s: 115),
{ 116: }
  ( cc: [ #1..#9,#11..#255 ]; s: 116),
{ 117: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 86),
  ( cc: [ '"' ]; s: 118),
  ( cc: [ '\' ]; s: 85),
{ 118: }
{ 119: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 88),
  ( cc: [ '''' ]; s: 118),
  ( cc: [ '\' ]; s: 87),
{ 120: }
  ( cc: [ #1..#9,#11..'!','#'..'[',']'..#255 ]; s: 94),
  ( cc: [ '"' ]; s: 95),
  ( cc: [ '\' ]; s: 93),
{ 121: }
  ( cc: [ #1..#9,#11..'&','('..'[',']'..#255 ]; s: 98),
  ( cc: [ '''' ]; s: 95),
  ( cc: [ '\' ]; s: 97),
{ 122: }
  ( cc: [ #1..#9,#11..#255 ]; s: 130),
{ 123: }
  ( cc: [ #1..#9,#11..#255 ]; s: 131),
{ 124: }
  ( cc: [ #1..#9,#11..#255 ]; s: 124),
{ 125: }
  ( cc: [ #1..#9,#11..#255 ]; s: 132),
{ 126: }
  ( cc: [ #1..#9,#11..#255 ]; s: 133),
{ 127: }
  ( cc: [ #1..#9,#11..#255 ]; s: 127),
{ 128: }
  ( cc: [ #1..#9,#11..#255 ]; s: 128),
{ 129: }
  ( cc: [ #1..#9,#11..#255 ]; s: 129),
{ 130: }
  ( cc: [ #1..#9,#11..#255 ]; s: 130),
{ 131: }
  ( cc: [ #1..#9,#11..#255 ]; s: 131),
{ 132: }
  ( cc: [ #1..#9,#11..#255 ]; s: 132),
{ 133: }
  ( cc: [ #1..#9,#11..#255 ]; s: 133)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 1,
{ 4: } 1,
{ 5: } 1,
{ 6: } 1,
{ 7: } 1,
{ 8: } 1,
{ 9: } 1,
{ 10: } 1,
{ 11: } 2,
{ 12: } 3,
{ 13: } 4,
{ 14: } 6,
{ 15: } 8,
{ 16: } 11,
{ 17: } 14,
{ 18: } 16,
{ 19: } 18,
{ 20: } 20,
{ 21: } 21,
{ 22: } 24,
{ 23: } 27,
{ 24: } 28,
{ 25: } 29,
{ 26: } 30,
{ 27: } 32,
{ 28: } 34,
{ 29: } 36,
{ 30: } 37,
{ 31: } 39,
{ 32: } 41,
{ 33: } 42,
{ 34: } 43,
{ 35: } 44,
{ 36: } 45,
{ 37: } 47,
{ 38: } 49,
{ 39: } 51,
{ 40: } 53,
{ 41: } 54,
{ 42: } 56,
{ 43: } 57,
{ 44: } 58,
{ 45: } 59,
{ 46: } 59,
{ 47: } 59,
{ 48: } 60,
{ 49: } 61,
{ 50: } 62,
{ 51: } 64,
{ 52: } 66,
{ 53: } 67,
{ 54: } 68,
{ 55: } 70,
{ 56: } 71,
{ 57: } 72,
{ 58: } 73,
{ 59: } 74,
{ 60: } 75,
{ 61: } 77,
{ 62: } 79,
{ 63: } 81,
{ 64: } 83,
{ 65: } 85,
{ 66: } 87,
{ 67: } 88,
{ 68: } 89,
{ 69: } 90,
{ 70: } 91,
{ 71: } 92,
{ 72: } 93,
{ 73: } 93,
{ 74: } 93,
{ 75: } 94,
{ 76: } 94,
{ 77: } 94,
{ 78: } 95,
{ 79: } 97,
{ 80: } 99,
{ 81: } 101,
{ 82: } 102,
{ 83: } 103,
{ 84: } 104,
{ 85: } 106,
{ 86: } 106,
{ 87: } 106,
{ 88: } 106,
{ 89: } 106,
{ 90: } 107,
{ 91: } 108,
{ 92: } 110,
{ 93: } 112,
{ 94: } 112,
{ 95: } 112,
{ 96: } 113,
{ 97: } 115,
{ 98: } 115,
{ 99: } 115,
{ 100: } 117,
{ 101: } 119,
{ 102: } 121,
{ 103: } 123,
{ 104: } 125,
{ 105: } 127,
{ 106: } 128,
{ 107: } 129,
{ 108: } 130,
{ 109: } 131,
{ 110: } 132,
{ 111: } 133,
{ 112: } 135,
{ 113: } 137,
{ 114: } 139,
{ 115: } 140,
{ 116: } 141,
{ 117: } 142,
{ 118: } 143,
{ 119: } 144,
{ 120: } 145,
{ 121: } 146,
{ 122: } 147,
{ 123: } 149,
{ 124: } 151,
{ 125: } 152,
{ 126: } 154,
{ 127: } 156,
{ 128: } 157,
{ 129: } 158,
{ 130: } 159,
{ 131: } 160,
{ 132: } 161,
{ 133: } 162
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 0,
{ 3: } 0,
{ 4: } 0,
{ 5: } 0,
{ 6: } 0,
{ 7: } 0,
{ 8: } 0,
{ 9: } 0,
{ 10: } 1,
{ 11: } 2,
{ 12: } 3,
{ 13: } 5,
{ 14: } 7,
{ 15: } 10,
{ 16: } 13,
{ 17: } 15,
{ 18: } 17,
{ 19: } 19,
{ 20: } 20,
{ 21: } 23,
{ 22: } 26,
{ 23: } 27,
{ 24: } 28,
{ 25: } 29,
{ 26: } 31,
{ 27: } 33,
{ 28: } 35,
{ 29: } 36,
{ 30: } 38,
{ 31: } 40,
{ 32: } 41,
{ 33: } 42,
{ 34: } 43,
{ 35: } 44,
{ 36: } 46,
{ 37: } 48,
{ 38: } 50,
{ 39: } 52,
{ 40: } 53,
{ 41: } 55,
{ 42: } 56,
{ 43: } 57,
{ 44: } 58,
{ 45: } 58,
{ 46: } 58,
{ 47: } 59,
{ 48: } 60,
{ 49: } 61,
{ 50: } 63,
{ 51: } 65,
{ 52: } 66,
{ 53: } 67,
{ 54: } 69,
{ 55: } 70,
{ 56: } 71,
{ 57: } 72,
{ 58: } 73,
{ 59: } 74,
{ 60: } 76,
{ 61: } 78,
{ 62: } 80,
{ 63: } 82,
{ 64: } 84,
{ 65: } 86,
{ 66: } 87,
{ 67: } 88,
{ 68: } 89,
{ 69: } 90,
{ 70: } 91,
{ 71: } 92,
{ 72: } 92,
{ 73: } 92,
{ 74: } 93,
{ 75: } 93,
{ 76: } 93,
{ 77: } 94,
{ 78: } 96,
{ 79: } 98,
{ 80: } 100,
{ 81: } 101,
{ 82: } 102,
{ 83: } 103,
{ 84: } 105,
{ 85: } 105,
{ 86: } 105,
{ 87: } 105,
{ 88: } 105,
{ 89: } 106,
{ 90: } 107,
{ 91: } 109,
{ 92: } 111,
{ 93: } 111,
{ 94: } 111,
{ 95: } 112,
{ 96: } 114,
{ 97: } 114,
{ 98: } 114,
{ 99: } 116,
{ 100: } 118,
{ 101: } 120,
{ 102: } 122,
{ 103: } 124,
{ 104: } 126,
{ 105: } 127,
{ 106: } 128,
{ 107: } 129,
{ 108: } 130,
{ 109: } 131,
{ 110: } 132,
{ 111: } 134,
{ 112: } 136,
{ 113: } 138,
{ 114: } 139,
{ 115: } 140,
{ 116: } 141,
{ 117: } 142,
{ 118: } 143,
{ 119: } 144,
{ 120: } 145,
{ 121: } 146,
{ 122: } 148,
{ 123: } 150,
{ 124: } 151,
{ 125: } 153,
{ 126: } 155,
{ 127: } 156,
{ 128: } 157,
{ 129: } 158,
{ 130: } 159,
{ 131: } 160,
{ 132: } 161,
{ 133: } 162
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 1,
{ 4: } 1,
{ 5: } 1,
{ 6: } 1,
{ 7: } 1,
{ 8: } 1,
{ 9: } 1,
{ 10: } 1,
{ 11: } 2,
{ 12: } 3,
{ 13: } 4,
{ 14: } 6,
{ 15: } 8,
{ 16: } 11,
{ 17: } 14,
{ 18: } 16,
{ 19: } 18,
{ 20: } 20,
{ 21: } 21,
{ 22: } 24,
{ 23: } 27,
{ 24: } 28,
{ 25: } 29,
{ 26: } 30,
{ 27: } 32,
{ 28: } 34,
{ 29: } 36,
{ 30: } 37,
{ 31: } 39,
{ 32: } 41,
{ 33: } 42,
{ 34: } 43,
{ 35: } 44,
{ 36: } 45,
{ 37: } 47,
{ 38: } 49,
{ 39: } 51,
{ 40: } 53,
{ 41: } 54,
{ 42: } 56,
{ 43: } 57,
{ 44: } 58,
{ 45: } 59,
{ 46: } 59,
{ 47: } 59,
{ 48: } 60,
{ 49: } 61,
{ 50: } 62,
{ 51: } 64,
{ 52: } 66,
{ 53: } 67,
{ 54: } 68,
{ 55: } 70,
{ 56: } 71,
{ 57: } 72,
{ 58: } 73,
{ 59: } 74,
{ 60: } 75,
{ 61: } 77,
{ 62: } 79,
{ 63: } 81,
{ 64: } 83,
{ 65: } 85,
{ 66: } 87,
{ 67: } 88,
{ 68: } 89,
{ 69: } 90,
{ 70: } 91,
{ 71: } 92,
{ 72: } 93,
{ 73: } 93,
{ 74: } 93,
{ 75: } 94,
{ 76: } 94,
{ 77: } 94,
{ 78: } 95,
{ 79: } 97,
{ 80: } 99,
{ 81: } 101,
{ 82: } 102,
{ 83: } 103,
{ 84: } 104,
{ 85: } 106,
{ 86: } 106,
{ 87: } 106,
{ 88: } 106,
{ 89: } 106,
{ 90: } 107,
{ 91: } 108,
{ 92: } 110,
{ 93: } 112,
{ 94: } 112,
{ 95: } 112,
{ 96: } 113,
{ 97: } 115,
{ 98: } 115,
{ 99: } 115,
{ 100: } 117,
{ 101: } 119,
{ 102: } 121,
{ 103: } 123,
{ 104: } 125,
{ 105: } 127,
{ 106: } 128,
{ 107: } 129,
{ 108: } 130,
{ 109: } 131,
{ 110: } 132,
{ 111: } 133,
{ 112: } 135,
{ 113: } 137,
{ 114: } 139,
{ 115: } 140,
{ 116: } 141,
{ 117: } 142,
{ 118: } 143,
{ 119: } 144,
{ 120: } 145,
{ 121: } 146,
{ 122: } 147,
{ 123: } 149,
{ 124: } 151,
{ 125: } 152,
{ 126: } 154,
{ 127: } 156,
{ 128: } 157,
{ 129: } 158,
{ 130: } 159,
{ 131: } 160,
{ 132: } 161,
{ 133: } 162
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 0,
{ 3: } 0,
{ 4: } 0,
{ 5: } 0,
{ 6: } 0,
{ 7: } 0,
{ 8: } 0,
{ 9: } 0,
{ 10: } 1,
{ 11: } 2,
{ 12: } 3,
{ 13: } 5,
{ 14: } 7,
{ 15: } 10,
{ 16: } 13,
{ 17: } 15,
{ 18: } 17,
{ 19: } 19,
{ 20: } 20,
{ 21: } 23,
{ 22: } 26,
{ 23: } 27,
{ 24: } 28,
{ 25: } 29,
{ 26: } 31,
{ 27: } 33,
{ 28: } 35,
{ 29: } 36,
{ 30: } 38,
{ 31: } 40,
{ 32: } 41,
{ 33: } 42,
{ 34: } 43,
{ 35: } 44,
{ 36: } 46,
{ 37: } 48,
{ 38: } 50,
{ 39: } 52,
{ 40: } 53,
{ 41: } 55,
{ 42: } 56,
{ 43: } 57,
{ 44: } 58,
{ 45: } 58,
{ 46: } 58,
{ 47: } 59,
{ 48: } 60,
{ 49: } 61,
{ 50: } 63,
{ 51: } 65,
{ 52: } 66,
{ 53: } 67,
{ 54: } 69,
{ 55: } 70,
{ 56: } 71,
{ 57: } 72,
{ 58: } 73,
{ 59: } 74,
{ 60: } 76,
{ 61: } 78,
{ 62: } 80,
{ 63: } 82,
{ 64: } 84,
{ 65: } 86,
{ 66: } 87,
{ 67: } 88,
{ 68: } 89,
{ 69: } 90,
{ 70: } 91,
{ 71: } 92,
{ 72: } 92,
{ 73: } 92,
{ 74: } 93,
{ 75: } 93,
{ 76: } 93,
{ 77: } 94,
{ 78: } 96,
{ 79: } 98,
{ 80: } 100,
{ 81: } 101,
{ 82: } 102,
{ 83: } 103,
{ 84: } 105,
{ 85: } 105,
{ 86: } 105,
{ 87: } 105,
{ 88: } 105,
{ 89: } 106,
{ 90: } 107,
{ 91: } 109,
{ 92: } 111,
{ 93: } 111,
{ 94: } 111,
{ 95: } 112,
{ 96: } 114,
{ 97: } 114,
{ 98: } 114,
{ 99: } 116,
{ 100: } 118,
{ 101: } 120,
{ 102: } 122,
{ 103: } 124,
{ 104: } 126,
{ 105: } 127,
{ 106: } 128,
{ 107: } 129,
{ 108: } 130,
{ 109: } 131,
{ 110: } 132,
{ 111: } 134,
{ 112: } 136,
{ 113: } 138,
{ 114: } 139,
{ 115: } 140,
{ 116: } 141,
{ 117: } 142,
{ 118: } 143,
{ 119: } 144,
{ 120: } 145,
{ 121: } 146,
{ 122: } 148,
{ 123: } 150,
{ 124: } 151,
{ 125: } 153,
{ 126: } 155,
{ 127: } 156,
{ 128: } 157,
{ 129: } 158,
{ 130: } 159,
{ 131: } 160,
{ 132: } 161,
{ 133: } 162
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 6,
{ 2: } 11,
{ 3: } 23,
{ 4: } 35,
{ 5: } 46,
{ 6: } 57,
{ 7: } 68,
{ 8: } 79,
{ 9: } 80,
{ 10: } 81,
{ 11: } 81,
{ 12: } 81,
{ 13: } 82,
{ 14: } 83,
{ 15: } 87,
{ 16: } 89,
{ 17: } 91,
{ 18: } 95,
{ 19: } 99,
{ 20: } 101,
{ 21: } 103,
{ 22: } 108,
{ 23: } 113,
{ 24: } 113,
{ 25: } 114,
{ 26: } 115,
{ 27: } 115,
{ 28: } 115,
{ 29: } 116,
{ 30: } 117,
{ 31: } 120,
{ 32: } 123,
{ 33: } 123,
{ 34: } 126,
{ 35: } 129,
{ 36: } 131,
{ 37: } 131,
{ 38: } 132,
{ 39: } 134,
{ 40: } 138,
{ 41: } 141,
{ 42: } 143,
{ 43: } 144,
{ 44: } 148,
{ 45: } 152,
{ 46: } 153,
{ 47: } 155,
{ 48: } 160,
{ 49: } 162,
{ 50: } 162,
{ 51: } 163,
{ 52: } 165,
{ 53: } 169,
{ 54: } 172,
{ 55: } 174,
{ 56: } 178,
{ 57: } 182,
{ 58: } 185,
{ 59: } 189,
{ 60: } 189,
{ 61: } 192,
{ 62: } 195,
{ 63: } 197,
{ 64: } 200,
{ 65: } 203,
{ 66: } 205,
{ 67: } 206,
{ 68: } 207,
{ 69: } 208,
{ 70: } 209,
{ 71: } 210,
{ 72: } 211,
{ 73: } 214,
{ 74: } 217,
{ 75: } 217,
{ 76: } 220,
{ 77: } 223,
{ 78: } 225,
{ 79: } 227,
{ 80: } 229,
{ 81: } 231,
{ 82: } 232,
{ 83: } 233,
{ 84: } 234,
{ 85: } 235,
{ 86: } 238,
{ 87: } 241,
{ 88: } 244,
{ 89: } 247,
{ 90: } 248,
{ 91: } 248,
{ 92: } 250,
{ 93: } 254,
{ 94: } 257,
{ 95: } 260,
{ 96: } 260,
{ 97: } 264,
{ 98: } 267,
{ 99: } 270,
{ 100: } 272,
{ 101: } 274,
{ 102: } 275,
{ 103: } 277,
{ 104: } 279,
{ 105: } 280,
{ 106: } 281,
{ 107: } 282,
{ 108: } 283,
{ 109: } 284,
{ 110: } 287,
{ 111: } 290,
{ 112: } 292,
{ 113: } 294,
{ 114: } 296,
{ 115: } 297,
{ 116: } 298,
{ 117: } 299,
{ 118: } 302,
{ 119: } 302,
{ 120: } 305,
{ 121: } 308,
{ 122: } 311,
{ 123: } 312,
{ 124: } 313,
{ 125: } 314,
{ 126: } 315,
{ 127: } 316,
{ 128: } 317,
{ 129: } 318,
{ 130: } 319,
{ 131: } 320,
{ 132: } 321,
{ 133: } 322
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 5,
{ 1: } 10,
{ 2: } 22,
{ 3: } 34,
{ 4: } 45,
{ 5: } 56,
{ 6: } 67,
{ 7: } 78,
{ 8: } 79,
{ 9: } 80,
{ 10: } 80,
{ 11: } 80,
{ 12: } 81,
{ 13: } 82,
{ 14: } 86,
{ 15: } 88,
{ 16: } 90,
{ 17: } 94,
{ 18: } 98,
{ 19: } 100,
{ 20: } 102,
{ 21: } 107,
{ 22: } 112,
{ 23: } 112,
{ 24: } 113,
{ 25: } 114,
{ 26: } 114,
{ 27: } 114,
{ 28: } 115,
{ 29: } 116,
{ 30: } 119,
{ 31: } 122,
{ 32: } 122,
{ 33: } 125,
{ 34: } 128,
{ 35: } 130,
{ 36: } 130,
{ 37: } 131,
{ 38: } 133,
{ 39: } 137,
{ 40: } 140,
{ 41: } 142,
{ 42: } 143,
{ 43: } 147,
{ 44: } 151,
{ 45: } 152,
{ 46: } 154,
{ 47: } 159,
{ 48: } 161,
{ 49: } 161,
{ 50: } 162,
{ 51: } 164,
{ 52: } 168,
{ 53: } 171,
{ 54: } 173,
{ 55: } 177,
{ 56: } 181,
{ 57: } 184,
{ 58: } 188,
{ 59: } 188,
{ 60: } 191,
{ 61: } 194,
{ 62: } 196,
{ 63: } 199,
{ 64: } 202,
{ 65: } 204,
{ 66: } 205,
{ 67: } 206,
{ 68: } 207,
{ 69: } 208,
{ 70: } 209,
{ 71: } 210,
{ 72: } 213,
{ 73: } 216,
{ 74: } 216,
{ 75: } 219,
{ 76: } 222,
{ 77: } 224,
{ 78: } 226,
{ 79: } 228,
{ 80: } 230,
{ 81: } 231,
{ 82: } 232,
{ 83: } 233,
{ 84: } 234,
{ 85: } 237,
{ 86: } 240,
{ 87: } 243,
{ 88: } 246,
{ 89: } 247,
{ 90: } 247,
{ 91: } 249,
{ 92: } 253,
{ 93: } 256,
{ 94: } 259,
{ 95: } 259,
{ 96: } 263,
{ 97: } 266,
{ 98: } 269,
{ 99: } 271,
{ 100: } 273,
{ 101: } 274,
{ 102: } 276,
{ 103: } 278,
{ 104: } 279,
{ 105: } 280,
{ 106: } 281,
{ 107: } 282,
{ 108: } 283,
{ 109: } 286,
{ 110: } 289,
{ 111: } 291,
{ 112: } 293,
{ 113: } 295,
{ 114: } 296,
{ 115: } 297,
{ 116: } 298,
{ 117: } 301,
{ 118: } 301,
{ 119: } 304,
{ 120: } 307,
{ 121: } 310,
{ 122: } 311,
{ 123: } 312,
{ 124: } 313,
{ 125: } 314,
{ 126: } 315,
{ 127: } 316,
{ 128: } 317,
{ 129: } 318,
{ 130: } 319,
{ 131: } 320,
{ 132: } 321,
{ 133: } 322
);


var yyn : Integer;

label start_, scan, action;

begin

start_:

  (* initialize: *)

  yynew;

scan:

  (* mark positions and matches: *)

  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);
  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);

  if yytl[yystate]>yyth[yystate] then goto action; (* dead state *)

  (* get next character: *)

  yyscan;

  (* determine action: *)

  yyn := yytl[yystate];
  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);
  if yyn>yyth[yystate] then goto action;
    (* no transition on yyactchar in this state *)

  (* switch to new state: *)

  yystate := yyt[yyn].s;

  goto scan;

action:

  (* execute action: *)

  if yyfind(yyrule) then
    begin
      yyaction(yyrule);
      if yyreject then goto action;
    end
  else if not yydefault and yywrap then
    begin
      yyclear;
      return (0);
    end;

  if not yydone then goto start_;

  yylex := FToken;

end(*yylex*);


end.
